(globalThis.TURBOPACK = globalThis.TURBOPACK || []).push([
  "object" == typeof document ? document.currentScript : void 0,
  {
    74801: (e) => {
      "use strict";
      e.s({ useScrollToTop: () => r });
      var t = e.i(756253);
      let r = () =>
        (0, t.useCallback)(() => {
          window.scrollTo({ top: 0, behavior: "smooth" });
        }, []);
    },
    94756: (e) => {
      "use strict";
      e.s({ default: () => n });
      var t = e.i(150840),
        r = e.i(79401);
      let n = (e) => {
        let { className: n, children: a, as: i, variant: s = "p" } = e;
        return (0, t.jsx)(i || s, {
          className: (0, r.cn)(
            {
              h1: "font-heading uppercase text-shadow-[2px_2px_0px_#000] text-[38px]/[38px] lg:text-[90px]/[100px] with-text-stroke-thin-black lg:with-text-stroke-medium-black",
              h2: "font-heading uppercase text-shadow-[2px_2px_0px_#000] text-[42px]/[46px] lg:text-[80px]/[76px] with-text-stroke-thin-black lg:with-text-stroke-medium-black mb-2",
              h3: "font-yuanmo font-bold uppercase text-base",
              h4: "font-semibold text-base",
              h5: "",
              h6: "",
              p: "text-lg",
              span: "text-lg",
            }[s],
            n
          ),
          children: (0, r.parseText)(a, { asReactNodes: !0 }),
        });
      };
    },
    344888: (e) => {
      "use strict";
      e.s({ default: () => C }, 344888);
      var t = e.i(150840),
        r = e.i(74801),
        n = e.i(79401),
        a = e.i(972651),
        i = e.i(428880),
        s = e.i(756253);
      let o =
          /\.(m4a|m4b|mp4a|mpga|mp2|mp2a|mp3|m2a|m3a|wav|weba|aac|oga|spx)($|\?)/i,
        l = /\.(mp4|og[gv]|webm|mov|m4v)(#t=[,\d+]+)?($|\?)/i,
        c = /\.(m3u8)($|\?)/i,
        u = /\.(mpd)($|\?)/i,
        d = /stream\.mux\.com\/(?!\w+\.m3u8)(\w+)/,
        f =
          /(?:youtu\.be\/|youtube(?:-nocookie|education)?\.com\/(?:embed\/|v\/|watch\/|watch\?v=|watch\?.+&v=|shorts\/|live\/))((\w|-){11})|youtube\.com\/playlist\?list=|youtube\.com\/user\//,
        h = /vimeo\.com\/(?!progressive_redirect).+/,
        p =
          /(?:wistia\.(?:com|net)|wi\.st)\/(?:medias|embed)\/(?:iframe\/)?([^?]+)/,
        x = /open\.spotify\.com\/(\w+)\/(\w+)/i,
        g =
          /(?:www\.|go\.)?twitch\.tv\/([a-zA-Z0-9_]+|(videos?\/|\?video=)\d+)($|\?)/,
        b = /tiktok\.com\/(?:@[^/]+\/video\/)?(\d+)(?:\/([\w-]+))?/,
        m = (e, t) => {
          if (Array.isArray(e)) {
            for (let r of e)
              if (("string" == typeof r && m(r, t)) || m(r.src, t)) return !0;
            return !1;
          }
          return t(e);
        },
        y = {
          html: (e) => m(e, (e) => o.test(e) || l.test(e)),
          hls: (e) => m(e, (e) => c.test(e)),
          dash: (e) => m(e, (e) => u.test(e)),
          mux: (e) => d.test(e),
          youtube: (e) => f.test(e),
          vimeo: (e) => h.test(e) && !l.test(e) && !c.test(e),
          wistia: (e) => p.test(e),
          spotify: (e) => x.test(e),
          twitch: (e) => g.test(e),
          tiktok: (e) => b.test(e),
        },
        w = s.default.forwardRef((e, t) => {
          let r = o.test("".concat(e.src)) ? "audio" : "video";
          return s.default.createElement(r, { ...e, ref: t }, e.children);
        }),
        v = [
          {
            key: "hls",
            name: "hls.js",
            canPlay: y.hls,
            canEnablePIP: () => !0,
            player: (0, s.lazy)(() => e.r(122828)(e.i)),
          },
          {
            key: "dash",
            name: "dash.js",
            canPlay: y.dash,
            canEnablePIP: () => !0,
            player: (0, s.lazy)(() => e.r(510242)(e.i)),
          },
          {
            key: "mux",
            name: "Mux",
            canPlay: y.mux,
            canEnablePIP: () => !0,
            player: (0, s.lazy)(() => e.r(80831)(e.i)),
          },
          {
            key: "youtube",
            name: "YouTube",
            canPlay: y.youtube,
            player: (0, s.lazy)(() => e.r(807446)(e.i)),
          },
          {
            key: "vimeo",
            name: "Vimeo",
            canPlay: y.vimeo,
            player: (0, s.lazy)(() => e.r(196177)(e.i)),
          },
          {
            key: "wistia",
            name: "Wistia",
            canPlay: y.wistia,
            canEnablePIP: () => !0,
            player: (0, s.lazy)(() => e.r(77058)(e.i)),
          },
          {
            key: "spotify",
            name: "Spotify",
            canPlay: y.spotify,
            canEnablePIP: () => !1,
            player: (0, s.lazy)(() => e.r(944694)(e.i)),
          },
          {
            key: "twitch",
            name: "Twitch",
            canPlay: y.twitch,
            canEnablePIP: () => !1,
            player: (0, s.lazy)(() => e.r(21684)(e.i)),
          },
          {
            key: "tiktok",
            name: "TikTok",
            canPlay: y.tiktok,
            canEnablePIP: () => !1,
            player: (0, s.lazy)(() => e.r(577679)(e.i)),
          },
          {
            key: "html",
            name: "html",
            canPlay: y.html,
            canEnablePIP: () => !0,
            player: w,
          },
        ],
        A = {
          width: "320px",
          height: "180px",
          volume: 1,
          playbackRate: 1,
          previewTabIndex: 0,
          previewAriaLabel: "",
          oEmbedUrl: "https://noembed.com/embed?url={url}",
        },
        E = s.default.forwardRef((e, t) => {
          let { playing: r, pip: n } = e,
            a = e.activePlayer,
            i = (0, s.useRef)(null),
            o = (0, s.useRef)(!0);
          if (
            ((0, s.useEffect)(() => {
              var t, n;
              i.current &&
                (i.current.paused && !0 === r && i.current.play(),
                i.current.paused || !1 !== r || i.current.pause(),
                (i.current.playbackRate = null != (t = e.playbackRate) ? t : 1),
                (i.current.volume = null != (n = e.volume) ? n : 1));
            }),
            (0, s.useEffect)(() => {
              var e, t, r, a, s;
              if (i.current && globalThis.document) {
                if (n && !document.pictureInPictureElement)
                  try {
                    null == (t = (e = i.current).requestPictureInPicture) ||
                      t.call(e);
                  } catch (e) {}
                if (!n && document.pictureInPictureElement)
                  try {
                    null == (a = (r = i.current).exitPictureInPicture) ||
                      a.call(r),
                      null == (s = document.exitPictureInPicture) ||
                        s.call(document);
                  } catch (e) {}
              }
            }, [n]),
            !a)
          )
            return null;
          let l = {};
          for (let t in e) t.startsWith("on") && (l[t] = e[t]);
          return s.default.createElement(
            a,
            {
              ...l,
              style: e.style,
              className: e.className,
              slot: e.slot,
              ref: (0, s.useCallback)(
                (e) => {
                  (i.current = e),
                    "function" == typeof t
                      ? t(e)
                      : null !== t && (t.current = e);
                },
                [t]
              ),
              src: e.src,
              crossOrigin: e.crossOrigin,
              preload: e.preload,
              controls: e.controls,
              muted: e.muted,
              autoPlay: e.autoPlay,
              loop: e.loop,
              playsInline: e.playsInline,
              config: e.config,
              onLoadStart: (t) => {
                var r, n;
                (o.current = !0),
                  null == (r = e.onReady) || r.call(e),
                  null == (n = e.onLoadStart) || n.call(e, t);
              },
              onPlay: (t) => {
                var r, n;
                o.current &&
                  ((o.current = !1), null == (r = e.onStart) || r.call(e, t)),
                  null == (n = e.onPlay) || n.call(e, t);
              },
            },
            e.children
          );
        });
      E.displayName = "Player";
      let _ = (0, s.lazy)(() => e.r(261170)(e.i)),
        k = [],
        N = (e) => {
          let { children: t } = e;
          return t;
        },
        P = v[v.length - 1];
      var T = ((e, t) => {
          let r = s.default.forwardRef((r, n) => {
            let a = { ...A, ...r },
              {
                src: i,
                slot: o,
                className: l,
                style: c,
                width: u,
                height: d,
                fallback: f,
                wrapper: h,
              } = a,
              [p, x] = (0, s.useState)(!!a.light);
            (0, s.useEffect)(() => {
              a.light ? x(!0) : x(!1);
            }, [a.light]);
            let g = (e) => {
                var t;
                x(!1), null == (t = a.onClickPreview) || t.call(a, e);
              },
              b = null == h ? N : h,
              m = !1 === f ? N : s.Suspense;
            return s.default.createElement(
              b,
              { slot: o, className: l, style: { width: u, height: d, ...c } },
              s.default.createElement(
                m,
                { fallback: f },
                p
                  ? ((e) => {
                      if (!e) return null;
                      let {
                        light: t,
                        playIcon: r,
                        previewTabIndex: n,
                        oEmbedUrl: i,
                        previewAriaLabel: o,
                      } = a;
                      return s.default.createElement(_, {
                        src: e,
                        light: t,
                        playIcon: r,
                        previewTabIndex: n,
                        previewAriaLabel: o,
                        oEmbedUrl: i,
                        onClickPreview: g,
                      });
                    })(i)
                  : ((r) => {
                      var i, c;
                      let u = ((r) => {
                        for (let t of [...k, ...e])
                          if (r && t.canPlay(r)) return t;
                        return t || null;
                      })(r);
                      if (!u) return null;
                      let { style: d, width: f, height: h, wrapper: p } = a,
                        x = null == (i = a.config) ? void 0 : i[u.key];
                      return s.default.createElement(E, {
                        ...a,
                        ref: n,
                        activePlayer: null != (c = u.player) ? c : u,
                        slot: p ? void 0 : o,
                        className: p ? void 0 : l,
                        style: p
                          ? { display: "block", width: "100%", height: "100%" }
                          : { display: "block", width: f, height: h, ...d },
                        config: x,
                      });
                    })(i)
              )
            );
          });
          return (
            (r.displayName = "ReactPlayer"),
            (r.addCustomPlayer = (e) => {
              k.push(e);
            }),
            (r.removeCustomPlayers = () => {
              k.length = 0;
            }),
            (r.canPlay = (t) => {
              if (t) {
                for (let r of [...k, ...e]) if (r.canPlay(t)) return !0;
              }
              return !1;
            }),
            (r.canEnablePIP = (t) => {
              var r;
              if (t) {
                for (let n of [...k, ...e])
                  if (
                    n.canPlay(t) &&
                    (null == (r = n.canEnablePIP) ? void 0 : r.call(n))
                  )
                    return !0;
              }
              return !1;
            }),
            r
          );
        })(v, P),
        S = e.i(671678);
      let O = (e) => {
        let { className: r, ...a } = e;
        return (0, t.jsx)(i.default, {
          className: (0, n.cn)("w-[24px] h-[24px] lg:w-[42px] lg:h-[42px]", r),
          ...a,
          unoptimized: !0,
          src: "/cherry-blossom.gif",
          alt: "",
          width: 42,
          height: 42,
        });
      };
      var R = e.i(94756);
      let C = (e) => {
        let { className: o, ...l } = e,
          c = (0, a.useTranslations)("homepage.about"),
          u = (0, a.useTranslations)("cta"),
          [d, f] = (0, s.useState)(!1),
          h = (0, r.useScrollToTop)();
        return (0, t.jsx)("section", {
          id: "about",
          className: (0, n.cn)(
            "py-6 lg:py-8 xl:py-10 bg-green overflow-hidden scroll-mt-header",
            o
          ),
          ...l,
          children: (0, t.jsxs)("div", {
            className: "relative container",
            children: [
              (0, t.jsx)(R.default, {
                variant: "h2",
                className: "text-white mb-4 text-center lg:hidden",
                children: c("title"),
              }),
              (0, t.jsxs)("div", {
                className: "relative z-[1] grid gap-4 lg:grid-cols-2",
                children: [
                  (0, t.jsxs)("div", {
                    className:
                      "max-w-[561px] mx-auto lg:mx-0 text-center lg:text-left",
                    children: [
                      (0, t.jsx)(R.default, {
                        variant: "h2",
                        className: "text-white mb-4 hidden lg:block",
                        children: c("title"),
                      }),
                      (0, t.jsx)("div", {
                        className: "rich-content text-base lg:text-lg",
                        dangerouslySetInnerHTML: { __html: c.raw("content") },
                      }),
                      (0, t.jsx)(S.default, {
                        onClick: window.open("https://app.uniswap.org/#/swap?inputCurrency=eth&outputCurrency=0x48cbe46189083fa41cd237f384c0307d49b1dce9", "_blank"),
                        className:
                          "w-full sm:w-fit mt-3 lg:mt-5 sm:mx-auto xl:mx-0",
                        children: u("buyNow"),
                      }),
                    ],
                  }),
                  (0, t.jsx)("div", {
                    className:
                      "relative z-[1] order-first lg:order-last max-w-[400px] h-[224px] lg:max-w-[681px] lg:h-[384px] mx-auto lg:mx-0",
                    children: (0, t.jsxs)("div", {
                      className:
                        "border-[3px] border-black rounded w-full h-full relative",
                      children: [
                        d &&
                          (0, t.jsx)(T, {
                            src: "https://www.youtube.com/watch?v=vbkNYo631wE&feature=youtu.be",
                            width: "100%",
                            height: "100%",
                            style: { position: "absolute", top: 0, left: 0 },
                            playing: d,
                            controls: !0,
                            playsInline: !0,
                          }),
                        (0, t.jsx)(i.default, {
                          src: "/video-preview.gif",
                          alt: "Video Preview",
                          width: 681,
                          height: 384,
                          className: (0, n.cn)(
                            "w-full h-full object-cover relative cursor-pointer rounded",
                            { hidden: d }
                          ),
                          onClick: () => f(!d),
                        }),
                      ],
                    }),
                  }),
                ],
              }),
              (0, t.jsx)(O, {
                className:
                  "absolute top-0 left-[20px] lg:left-[-100px] lg:top-[200px]",
              }),
              (0, t.jsx)(O, {
                className:
                  "absolute top-[30px] right-[20px] lg:top-[-70px] lg:right-[-100px]",
              }),
              (0, t.jsx)(O, {
                className:
                  "absolute top-[200px] right-[-10px] lg:top-[250px] lg:right-0",
              }),
              (0, t.jsx)(O, {
                className:
                  "absolute top-[420px] right-[-10px] lg:right-[500px]",
              }),
              (0, t.jsx)(O, {
                className:
                  "absolute top-[500px] left-[20px] lg:left-[450px] lg:top-[-20px]",
              }),
              (0, t.jsx)(O, {
                className:
                  "absolute bottom-[-40px] left-[140px] lg:left-[340px] lg:bottom-0",
              }),
            ],
          }),
        });
      };
    },
    95032: (e) => {
      "use strict";
      e.s({ default: () => s }, 95032);
      var t = e.i(150840),
        r = e.i(756253);
      let n = function (e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : "0px",
            n = (0, r.useRef)(null),
            [a, i] = (0, r.useState)(!1);
          return (
            (0, r.useEffect)(() => {
              if (!e || !n.current || a) return;
              let r = new IntersectionObserver(
                (e) => {
                  let [t] = e;
                  (null == t ? void 0 : t.isIntersecting) &&
                    (i(!0), r.disconnect());
                },
                { rootMargin: t }
              );
              return r.observe(n.current), () => r.disconnect();
            }, [a, t]),
            {
              ref: n,
              style: a
                ? { backgroundImage: "url(".concat(e, ")") }
                : { backgroundImage: "none" },
            }
          );
        },
        a = function (e) {
          let t =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : "100px",
            n = (0, r.useRef)(null),
            [a, i] = (0, r.useState)(!1);
          return (
            (0, r.useEffect)(() => {
              if (!e || !n.current || a) return;
              let r = new IntersectionObserver(
                (e) => {
                  let [t] = e;
                  (null == t ? void 0 : t.isIntersecting) &&
                    (i(!0), r.disconnect());
                },
                { rootMargin: t }
              );
              return r.observe(n.current), () => r.disconnect();
            }, [e, a, t]),
            { ref: n, shouldLoad: a }
          );
        };
      var i = e.i(79401);
      let s = (e) => {
        let {
            id: r,
            className: s,
            videoClassName: o,
            imageUrl: l,
            videoUrl: c,
            children: u,
            as: d = "section",
          } = e,
          { ref: f, style: h } = n(l),
          { ref: p, shouldLoad: x } = a(c);
        return l || c
          ? c
            ? (0, t.jsxs)(d, {
                id: r,
                className: (0, i.cn)("relative overflow-hidden", s),
                children: [
                  (0, t.jsx)("video", {
                    ref: p,
                    className: (0, i.cn)(
                      "absolute inset-0 w-full h-full object-cover z-[-1]",
                      o
                    ),
                    autoPlay: !0,
                    muted: !0,
                    loop: !0,
                    playsInline: !0,
                    children:
                      x && (0, t.jsx)("source", { src: c, type: "video/mp4" }),
                  }),
                  u,
                ],
              })
            : (0, t.jsx)(d, {
                id: r,
                ref: f,
                style: h,
                className: (0, i.cn)("bg-cover bg-center", s),
                children: u,
              })
          : (0, t.jsx)(d, { id: r, className: (0, i.cn)(s), children: u });
      };
    },
    67414: (e) => {
      "use strict";
      e.s({ default: () => d });
      var t = e.i(150840),
        r = e.i(95032),
        n = e.i(74801),
        a = e.i(79401),
        i = e.i(4718),
        s = e.i(972651),
        o = e.i(428880),
        l = e.i(756253),
        c = e.i(671678),
        u = e.i(94756);
      let d = (e) => {
        let { className: d, ...f } = e,
          h = (0, s.useTranslations)("homepage.asia"),
          p = (0, s.useTranslations)("cta"),
          [x, g] = (0, l.useState)("/bg-mountains.jpg"),
          { width: b } = (0, i.useWindowSize)(),
          m = (0, n.useScrollToTop)();
        return (
          (0, l.useEffect)(() => {
            b && b < 1024 ? g("/bg-mountains.jpg") : g("/bg-mountains--lg.jpg");
          }, [b]),
          (0, t.jsxs)(r.default, {
            id: "asia-rising",
            imageUrl: x,
            className: (0, a.cn)(
              "relative py-6 lg:py-8 xl:py-10 bg-bottom overflow-hidden scroll-mt-header",
              d
            ),
            ...f,
            children: [
              (0, t.jsx)("div", {
                className:
                  "absolute w-[780px] xl:w-[1000px] h-full left-0 top-0 hidden lg:block bg-linear-90 from-blue to-transparent",
              }),
              (0, t.jsxs)("div", {
                className: "relative container text-center lg:text-left",
                children: [
                  (0, t.jsx)(u.default, {
                    variant: "h2",
                    className: "text-white lg:mb-6",
                    children: h("title"),
                  }),
                  (0, t.jsxs)("div", {
                    className: "lg:flex",
                    children: [
                      (0, t.jsx)("div", {
                        className:
                          "relative rich-content text-base font-bold lg:text-lg max-w-[561px] mx-auto mb-4 lg:mb-6 z-[1] lg:max-w-none lg:mx-0",
                        dangerouslySetInnerHTML: { __html: h.raw("content") },
                      }),
                      (0, t.jsxs)("div", {
                        className: "max-w-[600px] mx-auto lg:flex-1",
                        children: [
                          (0, t.jsx)("div", {
                            className: "font-bold uppercase",
                            children: h("quote.heading"),
                          }),
                          (0, t.jsx)("div", {
                            className: "text-[34px]/[40px] font-bold",
                            children: h("quote.content"),
                          }),
                        ],
                      }),
                    ],
                  }),
                  (0, t.jsx)(c.default, {
                    onClick: window.open("https://app.uniswap.org/#/swap?inputCurrency=eth&outputCurrency=0x48cbe46189083fa41cd237f384c0307d49b1dce9", "_blank"),
                    className: "w-full sm:w-fit sm:mx-auto",
                    children: p("buyNow"),
                  }),
                  (0, t.jsxs)("div", {
                    className:
                      "flex items-center justify-center max-w-[400px] mx-auto mb-4 lg:mt-[-200px]",
                    children: [
                      (0, t.jsx)(o.default, {
                        src: "/pandas/streetwear.gif",
                        alt: "",
                        width: 172,
                        height: 172,
                        unoptimized: !0,
                        className:
                          "h-[172px] min-w-[172px] aspect-square translate-x-[60px] lg:h-[247px] lg:min-w-[247px] lg:translate-y-[100px] lg:translate-x-[170px]",
                      }),
                      (0, t.jsx)(o.default, {
                        src: "/pandas/eating-bowl.gif",
                        alt: "",
                        width: 187,
                        height: 176,
                        unoptimized: !0,
                        className:
                          "h-[176px] min-w-[187px] translate-y-[40px] lg:h-[269px] lg:min-w-[253px] lg:translate-y-[130px] lg:translate-x-[200px]",
                      }),
                      (0, t.jsx)(o.default, {
                        src: "/pandas/panda-tea.gif",
                        alt: "",
                        width: 175,
                        height: 175,
                        unoptimized: !0,
                        className:
                          "h-[175px] min-w-[175px] aspect-square translate-x-[-60px] lg:h-[251px] lg:min-w-[251px] lg:translate-y-[100px] lg:translate-x-[200px]",
                      }),
                    ],
                  }),
                ],
              }),
            ],
          })
        );
      };
    },
    995729: (e) => {
      "use strict";
      e.s({ default: () => n });
      var t = e.i(150840),
        r = e.i(79401);
      let n = (e) => {
        let { className: n, ...a } = e;
        return (0, t.jsx)("div", {
          className: (0, r.cn)(
            "flex items-center justify-center bg-blue rounded h-[41px] aspect-square font-yuanmo",
            "border-[3px] shadow-[3px_3px_0_0_#000]",
            n
          ),
          ...a,
          children: (0, t.jsx)("span", {
            className: "text-lg font-bold",
            children: e.children,
          }),
        });
      };
    },
    45135: (e) => {
      "use strict";
      e.s({ default: () => x });
      var t = e.i(150840),
        r = e.i(95032),
        n = e.i(74801),
        a = e.i(79401),
        i = e.i(4718),
        s = e.i(699677),
        o = e.i(972651),
        l = e.i(428880),
        c = e.i(756253),
        u = e.i(107906),
        d = e.i(671678),
        f = e.i(995729),
        h = e.i(94756);
      let p = (e) => {
          let { index: r, title: n, content: i, className: s } = e,
            [o, l] = (0, c.useState)(!1);
          return (0, t.jsxs)("div", {
            className: (0, a.cn)(
              "flex items-start gap-4 p-3",
              { "border-t-2": 0 !== r },
              s
            ),
            children: [
              (0, t.jsx)(f.default, { children: r + 1 }),
              (0, t.jsxs)("div", {
                className: "flex-1",
                children: [
                  (0, t.jsxs)("div", {
                    className:
                      "flex items-center gap-4 justify-between cursor-pointer",
                    onClick: () => l(!o),
                    children: [
                      (0, t.jsx)(h.default, {
                        variant: "h3",
                        className: "select-none mt-[8px]",
                        children: n,
                      }),
                      (0, t.jsx)(u.FaArrowDown, {
                        className: (0, a.cn)("transition-transform", {
                          "rotate-180": o,
                        }),
                      }),
                    ],
                  }),
                  (0, t.jsx)("div", {
                    className: (0, a.cn)("mt-2 hidden", { block: o }),
                    children: (0, t.jsx)(h.default, {
                      className: "font-bold text-sm",
                      children: i,
                    }),
                  }),
                ],
              }),
            ],
          });
        },
        x = (e) => {
          var u, f;
          let { className: x, ...g } = e,
            b = (0, n.useScrollToTop)(),
            m = (0, o.useTranslations)("homepage.guide"),
            y = (0, o.useTranslations)("cta"),
            w = (0, s.useMessages)(),
            v = (
              null == w || null == (f = w.homepage) || null == (u = f.guide)
                ? void 0
                : u.steps
            )
              ? Object.entries(w.homepage.guide.steps)
              : [],
            [A, E] = (0, c.useState)("/bg-field.jpg"),
            { width: _ } = (0, i.useWindowSize)();
          return (
            (0, c.useEffect)(() => {
              _ && _ < 1024 ? E("/bg-field.jpg") : E("/bg-field--lg.jpg");
            }, [_]),
            (0, t.jsx)(r.default, {
              id: "how-to-buy",
              imageUrl: A,
              className: (0, a.cn)(
                "py-6 lg:py-8 bg-bottom scroll-mt-header",
                x
              ),
              ...g,
              children: (0, t.jsxs)("div", {
                className: "relative container text-center",
                children: [
                  (0, t.jsx)(h.default, {
                    variant: "h2",
                    className: "text-white lg:mb-6",
                    children: m("title"),
                  }),
                  (0, t.jsx)("div", {
                    className:
                      "border-[3px] rounded bg-white max-w-[770px] mx-auto text-left mb-4",
                    children: v.map((e, r) => {
                      let [n, a] = e;
                      return (0, t.jsx)(
                        p,
                        { index: r, title: a.title, content: a.content },
                        n
                      );
                    }),
                  }),
                  (0, t.jsx)(d.default, {
                    onClick: window.open("https://app.uniswap.org/#/swap?inputCurrency=eth&outputCurrency=0x48cbe46189083fa41cd237f384c0307d49b1dce9", "_blank"),
                    className: "sm:w-fit sm:mx-auto",
                    children: y("buyNow"),
                  }),
                  (0, t.jsxs)("div", {
                    className:
                      "flex items-center justify-center xl:justify-between xl:mt-[-200px]",
                    children: [
                      (0, t.jsx)(l.default, {
                        src: "/pandas/lollipop.gif",
                        alt: "",
                        width: 176,
                        height: 176,
                        unoptimized: !0,
                        className:
                          "h-[176px] aspect-square xl:h-[282px] xl:w-[282px]",
                      }),
                      (0, t.jsx)(l.default, {
                        src: "/pandas/eating-bowl.gif",
                        alt: "",
                        width: 178,
                        height: 178,
                        unoptimized: !0,
                        className:
                          "h-[178px] aspect-square xl:h-[282px] xl:w-[282px]",
                      }),
                    ],
                  }),
                ],
              }),
            })
          );
        };
    },
    955694: (e) => {
      var { m: t, e: r } = e;
      e.e,
        (function (e) {
          "use strict";
          var t = function () {
            return (t =
              Object.assign ||
              function (e) {
                for (var t, r = 1, n = arguments.length; r < n; r++)
                  for (var a in (t = arguments[r]))
                    Object.prototype.hasOwnProperty.call(t, a) && (e[a] = t[a]);
                return e;
              }).apply(this, arguments);
          };
          e.CountUp = (function () {
            function e(e, r, n) {
              var a = this;
              (this.endVal = r),
                (this.options = n),
                (this.version = "2.9.0"),
                (this.defaults = {
                  startVal: 0,
                  decimalPlaces: 0,
                  duration: 2,
                  useEasing: !0,
                  useGrouping: !0,
                  useIndianSeparators: !1,
                  smartEasingThreshold: 999,
                  smartEasingAmount: 333,
                  separator: ",",
                  decimal: ".",
                  prefix: "",
                  suffix: "",
                  enableScrollSpy: !1,
                  scrollSpyDelay: 200,
                  scrollSpyOnce: !1,
                }),
                (this.finalEndVal = null),
                (this.useEasing = !0),
                (this.countDown = !1),
                (this.error = ""),
                (this.startVal = 0),
                (this.paused = !0),
                (this.once = !1),
                (this.count = function (e) {
                  a.startTime || (a.startTime = e);
                  var t = e - a.startTime;
                  (a.remaining = a.duration - t),
                    a.useEasing
                      ? a.countDown
                        ? (a.frameVal =
                            a.startVal -
                            a.easingFn(t, 0, a.startVal - a.endVal, a.duration))
                        : (a.frameVal = a.easingFn(
                            t,
                            a.startVal,
                            a.endVal - a.startVal,
                            a.duration
                          ))
                      : (a.frameVal =
                          a.startVal +
                          (a.endVal - a.startVal) * (t / a.duration));
                  var r = a.countDown
                    ? a.frameVal < a.endVal
                    : a.frameVal > a.endVal;
                  (a.frameVal = r ? a.endVal : a.frameVal),
                    (a.frameVal = Number(
                      a.frameVal.toFixed(a.options.decimalPlaces)
                    )),
                    a.printValue(a.frameVal),
                    t < a.duration
                      ? (a.rAF = requestAnimationFrame(a.count))
                      : null !== a.finalEndVal
                      ? a.update(a.finalEndVal)
                      : a.options.onCompleteCallback &&
                        a.options.onCompleteCallback();
                }),
                (this.formatNumber = function (e) {
                  var t,
                    r,
                    n,
                    i = (
                      Math.abs(e).toFixed(a.options.decimalPlaces) + ""
                    ).split(".");
                  if (
                    ((t = i[0]),
                    (r = i.length > 1 ? a.options.decimal + i[1] : ""),
                    a.options.useGrouping)
                  ) {
                    n = "";
                    for (var s = 3, o = 0, l = 0, c = t.length; l < c; ++l)
                      a.options.useIndianSeparators &&
                        4 === l &&
                        ((s = 2), (o = 1)),
                        0 !== l && o % s == 0 && (n = a.options.separator + n),
                        o++,
                        (n = t[c - l - 1] + n);
                    t = n;
                  }
                  return (
                    a.options.numerals &&
                      a.options.numerals.length &&
                      ((t = t.replace(/[0-9]/g, function (e) {
                        return a.options.numerals[+e];
                      })),
                      (r = r.replace(/[0-9]/g, function (e) {
                        return a.options.numerals[+e];
                      }))),
                    (e < 0 ? "-" : "") +
                      a.options.prefix +
                      t +
                      r +
                      a.options.suffix
                  );
                }),
                (this.easeOutExpo = function (e, t, r, n) {
                  return (
                    (r * (1 - Math.pow(2, (-10 * e) / n)) * 1024) / 1023 + t
                  );
                }),
                (this.options = t(t({}, this.defaults), n)),
                (this.formattingFn = this.options.formattingFn
                  ? this.options.formattingFn
                  : this.formatNumber),
                (this.easingFn = this.options.easingFn
                  ? this.options.easingFn
                  : this.easeOutExpo),
                (this.el =
                  "string" == typeof e ? document.getElementById(e) : e),
                (r = null == r ? this.parse(this.el.innerHTML) : r),
                (this.startVal = this.validateValue(this.options.startVal)),
                (this.frameVal = this.startVal),
                (this.endVal = this.validateValue(r)),
                (this.options.decimalPlaces = Math.max(
                  this.options.decimalPlaces
                )),
                this.resetDuration(),
                (this.options.separator = String(this.options.separator)),
                (this.useEasing = this.options.useEasing),
                "" === this.options.separator &&
                  (this.options.useGrouping = !1),
                this.el
                  ? this.printValue(this.startVal)
                  : (this.error = "[CountUp] target is null or undefined"),
                "undefined" != typeof window &&
                  this.options.enableScrollSpy &&
                  (this.error
                    ? console.error(this.error, e)
                    : ((window.onScrollFns = window.onScrollFns || []),
                      window.onScrollFns.push(function () {
                        return a.handleScroll(a);
                      }),
                      (window.onscroll = function () {
                        window.onScrollFns.forEach(function (e) {
                          return e();
                        });
                      }),
                      this.handleScroll(this)));
            }
            return (
              (e.prototype.handleScroll = function (e) {
                if (e && window && !e.once) {
                  var t = window.innerHeight + window.scrollY,
                    r = e.el.getBoundingClientRect(),
                    n = r.top + window.pageYOffset,
                    a = r.top + r.height + window.pageYOffset;
                  a < t && a > window.scrollY && e.paused
                    ? ((e.paused = !1),
                      setTimeout(function () {
                        return e.start();
                      }, e.options.scrollSpyDelay),
                      e.options.scrollSpyOnce && (e.once = !0))
                    : (window.scrollY > a || n > t) && !e.paused && e.reset();
                }
              }),
              (e.prototype.determineDirectionAndSmartEasing = function () {
                var e = this.finalEndVal ? this.finalEndVal : this.endVal;
                if (
                  ((this.countDown = this.startVal > e),
                  Math.abs(e - this.startVal) >
                    this.options.smartEasingThreshold && this.options.useEasing)
                ) {
                  this.finalEndVal = e;
                  var t = this.countDown ? 1 : -1;
                  (this.endVal = e + t * this.options.smartEasingAmount),
                    (this.duration = this.duration / 2);
                } else (this.endVal = e), (this.finalEndVal = null);
                null !== this.finalEndVal
                  ? (this.useEasing = !1)
                  : (this.useEasing = this.options.useEasing);
              }),
              (e.prototype.start = function (e) {
                this.error ||
                  (this.options.onStartCallback &&
                    this.options.onStartCallback(),
                  e && (this.options.onCompleteCallback = e),
                  this.duration > 0
                    ? (this.determineDirectionAndSmartEasing(),
                      (this.paused = !1),
                      (this.rAF = requestAnimationFrame(this.count)))
                    : this.printValue(this.endVal));
              }),
              (e.prototype.pauseResume = function () {
                this.paused
                  ? ((this.startTime = null),
                    (this.duration = this.remaining),
                    (this.startVal = this.frameVal),
                    this.determineDirectionAndSmartEasing(),
                    (this.rAF = requestAnimationFrame(this.count)))
                  : cancelAnimationFrame(this.rAF),
                  (this.paused = !this.paused);
              }),
              (e.prototype.reset = function () {
                cancelAnimationFrame(this.rAF),
                  (this.paused = !0),
                  this.resetDuration(),
                  (this.startVal = this.validateValue(this.options.startVal)),
                  (this.frameVal = this.startVal),
                  this.printValue(this.startVal);
              }),
              (e.prototype.update = function (e) {
                cancelAnimationFrame(this.rAF),
                  (this.startTime = null),
                  (this.endVal = this.validateValue(e)),
                  this.endVal !== this.frameVal &&
                    ((this.startVal = this.frameVal),
                    null == this.finalEndVal && this.resetDuration(),
                    (this.finalEndVal = null),
                    this.determineDirectionAndSmartEasing(),
                    (this.rAF = requestAnimationFrame(this.count)));
              }),
              (e.prototype.printValue = function (e) {
                var t;
                if (this.el) {
                  var r = this.formattingFn(e);
                  (null == (t = this.options.plugin) ? void 0 : t.render)
                    ? this.options.plugin.render(this.el, r)
                    : "INPUT" === this.el.tagName
                    ? (this.el.value = r)
                    : "text" === this.el.tagName || "tspan" === this.el.tagName
                    ? (this.el.textContent = r)
                    : (this.el.innerHTML = r);
                }
              }),
              (e.prototype.ensureNumber = function (e) {
                return "number" == typeof e && !isNaN(e);
              }),
              (e.prototype.validateValue = function (e) {
                var t = Number(e);
                return this.ensureNumber(t)
                  ? t
                  : ((this.error =
                      "[CountUp] invalid start or end value: ".concat(e)),
                    null);
              }),
              (e.prototype.resetDuration = function () {
                (this.startTime = null),
                  (this.duration = 1e3 * Number(this.options.duration)),
                  (this.remaining = this.duration);
              }),
              (e.prototype.parse = function (e) {
                var t = function (e) {
                    return e.replace(/([.,'  ])/g, "\\$1");
                  },
                  r = t(this.options.separator),
                  n = t(this.options.decimal);
                return parseFloat(
                  e.replace(RegExp(r, "g"), "").replace(RegExp(n, "g"), ".")
                );
              }),
              e
            );
          })();
        })(r);
    },
    10236: (e) => {
      "use strict";
      var { m: t, e: r } = e;
      Object.defineProperty(r, "__esModule", { value: !0 });
      var n = e.r(756253),
        a = e.r(955694);
      function i(e, t) {
        var r = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
          var n = Object.getOwnPropertySymbols(e);
          t &&
            (n = n.filter(function (t) {
              return Object.getOwnPropertyDescriptor(e, t).enumerable;
            })),
            r.push.apply(r, n);
        }
        return r;
      }
      function s(e) {
        for (var t = 1; t < arguments.length; t++) {
          var r = null != arguments[t] ? arguments[t] : {};
          t % 2
            ? i(Object(r), !0).forEach(function (t) {
                !(function (e, t, r) {
                  var n;
                  (t =
                    "symbol" ==
                    typeof (n = (function (e, t) {
                      if ("object" != typeof e || !e) return e;
                      var r = e[Symbol.toPrimitive];
                      if (void 0 !== r) {
                        var n = r.call(e, t || "default");
                        if ("object" != typeof n) return n;
                        throw TypeError(
                          "@@toPrimitive must return a primitive value."
                        );
                      }
                      return ("string" === t ? String : Number)(e);
                    })(t, "string"))
                      ? n
                      : String(n)) in e
                    ? Object.defineProperty(e, t, {
                        value: r,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                      })
                    : (e[t] = r);
                })(e, t, r[t]);
              })
            : Object.getOwnPropertyDescriptors
            ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r))
            : i(Object(r)).forEach(function (t) {
                Object.defineProperty(
                  e,
                  t,
                  Object.getOwnPropertyDescriptor(r, t)
                );
              });
        }
        return e;
      }
      function o() {
        return (o = Object.assign.bind()).apply(this, arguments);
      }
      function l(e, t) {
        if (null == e) return {};
        var r,
          n,
          a = (function (e, t) {
            if (null == e) return {};
            var r,
              n,
              a = {},
              i = Object.keys(e);
            for (n = 0; n < i.length; n++)
              (r = i[n]), t.indexOf(r) >= 0 || (a[r] = e[r]);
            return a;
          })(e, t);
        if (Object.getOwnPropertySymbols) {
          var i = Object.getOwnPropertySymbols(e);
          for (n = 0; n < i.length; n++)
            (r = i[n]),
              !(t.indexOf(r) >= 0) &&
                Object.prototype.propertyIsEnumerable.call(e, r) &&
                (a[r] = e[r]);
        }
        return a;
      }
      function c(e, t) {
        (null == t || t > e.length) && (t = e.length);
        for (var r = 0, n = Array(t); r < t; r++) n[r] = e[r];
        return n;
      }
      var u =
        "undefined" != typeof window &&
        void 0 !== window.document &&
        void 0 !== window.document.createElement
          ? n.useLayoutEffect
          : n.useEffect;
      function d(e) {
        var t = n.useRef(e);
        return (
          u(function () {
            t.current = e;
          }),
          n.useCallback(function () {
            for (var e = arguments.length, r = Array(e), n = 0; n < e; n++)
              r[n] = arguments[n];
            return t.current.apply(void 0, r);
          }, [])
        );
      }
      var f = function (e, t) {
          var r = t.decimal,
            n = t.decimals,
            i = t.duration,
            s = t.easingFn,
            o = t.end,
            l = t.formattingFn,
            c = t.numerals,
            u = t.prefix,
            d = t.separator,
            f = t.start,
            h = t.suffix,
            p = t.useEasing,
            x = t.useGrouping,
            g = t.useIndianSeparators,
            b = t.enableScrollSpy,
            m = t.scrollSpyDelay,
            y = t.scrollSpyOnce,
            w = t.plugin;
          return new a.CountUp(e, o, {
            startVal: f,
            duration: i,
            decimal: r,
            decimalPlaces: n,
            easingFn: s,
            formattingFn: l,
            numerals: c,
            separator: d,
            prefix: u,
            suffix: h,
            plugin: w,
            useEasing: p,
            useIndianSeparators: g,
            useGrouping: x,
            enableScrollSpy: b,
            scrollSpyDelay: m,
            scrollSpyOnce: y,
          });
        },
        h = [
          "ref",
          "startOnMount",
          "enableReinitialize",
          "delay",
          "onEnd",
          "onStart",
          "onPauseResume",
          "onReset",
          "onUpdate",
        ],
        p = {
          decimal: ".",
          separator: ",",
          delay: null,
          prefix: "",
          suffix: "",
          duration: 2,
          start: 0,
          decimals: 0,
          startOnMount: !0,
          enableReinitialize: !0,
          useEasing: !0,
          useGrouping: !0,
          useIndianSeparators: !1,
        },
        x = function (e) {
          var t = Object.fromEntries(
              Object.entries(e).filter(function (e) {
                return (
                  void 0 !==
                  ((function (e) {
                    if (Array.isArray(e)) return e;
                  })(e) ||
                    (function (e, t) {
                      var r =
                        null == e
                          ? null
                          : ("undefined" != typeof Symbol &&
                              e[Symbol.iterator]) ||
                            e["@@iterator"];
                      if (null != r) {
                        var n,
                          a,
                          i,
                          s,
                          o = [],
                          l = !0,
                          c = !1;
                        try {
                          (i = (r = r.call(e)).next), !1;
                          for (
                            ;
                            !(l = (n = i.call(r)).done) &&
                            (o.push(n.value), o.length !== t);
                            l = !0
                          );
                        } catch (e) {
                          (c = !0), (a = e);
                        } finally {
                          try {
                            if (
                              !l &&
                              null != r.return &&
                              ((s = r.return()), Object(s) !== s)
                            )
                              return;
                          } finally {
                            if (c) throw a;
                          }
                        }
                        return o;
                      }
                    })(e, 2) ||
                    (function (e, t) {
                      if (e) {
                        if ("string" == typeof e) return c(e, 2);
                        var r = Object.prototype.toString.call(e).slice(8, -1);
                        if (
                          ("Object" === r &&
                            e.constructor &&
                            (r = e.constructor.name),
                          "Map" === r || "Set" === r)
                        )
                          return Array.from(e);
                        if (
                          "Arguments" === r ||
                          /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)
                        )
                          return c(e, t);
                      }
                    })(e, 2) ||
                    (function () {
                      throw TypeError(
                        "Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."
                      );
                    })())[1]
                );
              })
            ),
            r = n.useMemo(
              function () {
                return s(s({}, p), t);
              },
              [e]
            ),
            a = r.ref,
            i = r.startOnMount,
            o = r.enableReinitialize,
            u = r.delay,
            x = r.onEnd,
            g = r.onStart,
            b = r.onPauseResume,
            m = r.onReset,
            y = r.onUpdate,
            w = l(r, h),
            v = n.useRef(),
            A = n.useRef(),
            E = n.useRef(!1),
            _ = d(function () {
              return f("string" == typeof a ? a : a.current, w);
            }),
            k = d(function (e) {
              var t = v.current;
              if (t && !e) return t;
              var r = _();
              return (v.current = r), r;
            }),
            N = d(function () {
              var e = function () {
                return k(!0).start(function () {
                  null == x ||
                    x({ pauseResume: P, reset: T, start: O, update: S });
                });
              };
              u && u > 0 ? (A.current = setTimeout(e, 1e3 * u)) : e(),
                null == g || g({ pauseResume: P, reset: T, update: S });
            }),
            P = d(function () {
              k().pauseResume(),
                null == b || b({ reset: T, start: O, update: S });
            }),
            T = d(function () {
              k().el &&
                (A.current && clearTimeout(A.current),
                k().reset(),
                null == m || m({ pauseResume: P, start: O, update: S }));
            }),
            S = d(function (e) {
              k().update(e),
                null == y || y({ pauseResume: P, reset: T, start: O });
            }),
            O = d(function () {
              T(), N();
            }),
            R = d(function (e) {
              i && (e && T(), N());
            });
          return (
            n.useEffect(
              function () {
                E.current ? o && R(!0) : ((E.current = !0), R());
              },
              [
                o,
                E,
                R,
                u,
                e.start,
                e.suffix,
                e.prefix,
                e.duration,
                e.separator,
                e.decimals,
                e.decimal,
                e.formattingFn,
              ]
            ),
            n.useEffect(
              function () {
                return function () {
                  T();
                };
              },
              [T]
            ),
            { start: O, pauseResume: P, reset: T, update: S, getCountUp: k }
          );
        },
        g = ["className", "redraw", "containerProps", "children", "style"];
      (r.default = function (e) {
        var t = e.className,
          r = e.redraw,
          a = e.containerProps,
          i = e.children,
          c = e.style,
          u = l(e, g),
          f = n.useRef(null),
          h = n.useRef(!1),
          p = x(
            s(
              s({}, u),
              {},
              {
                ref: f,
                startOnMount: "function" != typeof i || 0 === e.delay,
                enableReinitialize: !1,
              }
            )
          ),
          b = p.start,
          m = p.reset,
          y = p.update,
          w = p.pauseResume,
          v = p.getCountUp,
          A = d(function () {
            b();
          }),
          E = d(function (t) {
            e.preserveValue || m(), y(t);
          }),
          _ = d(function () {
            if (
              "function" == typeof e.children &&
              !(f.current instanceof Element)
            )
              return void console.error(
                'Couldn\'t find attached element to hook the CountUp instance into! Try to attach "containerRef" from the render prop to a an Element, eg. <span ref={containerRef} />.'
              );
            v();
          });
        n.useEffect(
          function () {
            _();
          },
          [_]
        ),
          n.useEffect(
            function () {
              h.current && E(e.end);
            },
            [e.end, E]
          );
        var k = r && e;
        return (n.useEffect(
          function () {
            r && h.current && A();
          },
          [A, r, k]
        ),
        n.useEffect(
          function () {
            !r && h.current && A();
          },
          [
            A,
            r,
            e.start,
            e.suffix,
            e.prefix,
            e.duration,
            e.separator,
            e.decimals,
            e.decimal,
            e.className,
            e.formattingFn,
          ]
        ),
        n.useEffect(function () {
          h.current = !0;
        }, []),
        "function" == typeof i)
          ? i({
              countUpRef: f,
              start: b,
              reset: m,
              update: y,
              pauseResume: w,
              getCountUp: v,
            })
          : n.createElement(
              "span",
              o({ className: t, ref: f, style: c }, a),
              void 0 !== e.start ? v().formattingFn(e.start) : ""
            );
      }),
        (r.useCountUp = x);
    },
    249365: (e) => {
      "use strict";
      var { m: t, e: r } = e,
        n = e.i(710841);
      Object.defineProperty(r, "__esModule", { value: !0 }),
        (r.toBigIntLE = function (e) {
          {
            let t = n.Buffer.from(e);
            t.reverse();
            let r = t.toString("hex");
            return 0 === r.length ? BigInt(0) : BigInt("0x".concat(r));
          }
        }),
        (r.toBigIntBE = function (e) {
          {
            let t = e.toString("hex");
            return 0 === t.length ? BigInt(0) : BigInt("0x".concat(t));
          }
        }),
        (r.toBufferLE = function (e, t) {
          {
            let r = e.toString(16),
              a = n.Buffer.from(r.padStart(2 * t, "0").slice(0, 2 * t), "hex");
            return a.reverse(), a;
          }
        }),
        (r.toBufferBE = function (e, t) {
          {
            let r = e.toString(16);
            return n.Buffer.from(r.padStart(2 * t, "0").slice(0, 2 * t), "hex");
          }
        });
    },
    545667: (e) => {
      "use strict";
      let t, r, n, a, i, s, o, l, c, u, d, f, h, p, x, g;
      e.s({ default: () => ml }, 545667);
      var b,
        m,
        y,
        w,
        v,
        A,
        E,
        _,
        k,
        N,
        P,
        T,
        S,
        O,
        R,
        C,
        I,
        B,
        U,
        M,
        j,
        F = e.i(150840),
        D = e.i(164897),
        L = e.i(756253),
        z = e.i(377450),
        G = e.i(34790);
      let W = (0, L.createContext)({}),
        V = (e) => {
          var t, r;
          let { children: n } = e,
            {
              isConnected: a,
              network: i,
              address: s,
              selectedPaymentMethod: o,
              setSelectedPaymentMethod: l,
            } = (0, G.useWalletProvider)(),
            { state: c, isFetched: u } = (0, z.usePresaleContext)(),
            [d, f] = (0, L.useState)(!1),
            [h, p] = (0, L.useState)(0),
            [x, g] = (0, L.useState)("PAY"),
            [b, m] = (0, L.useState)(0),
            [y, w] = (0, L.useState)(0),
            [v, A] = (0, L.useState)(!0),
            [E, _] = (0, L.useState)(!0),
            [k, N] = (0, L.useState)(0);
          (0, L.useEffect)(() => {
            p(Math.floor(Date.now() / 1e3) + 300);
          }, []);
          let P = (0, L.useCallback)(() => {
              d || (null == o || o.nativeTokenPrice, m(0), w(0), g("PAY"));
            }, [d, o]),
            T = (0, L.useCallback)(() => {
              if ((0 === b && 0 === y) || !o) return;
              let e = o.price,
                t = Math.max(0, b),
                r = Math.max(0, y);
              if ((t !== b && m(t), r !== y && w(r), "PAY" === x))
                if (0 === t && r > 0) {
                  let t = Math.round(r);
                  w(t), m(t * e);
                } else w(Math.round(t / e));
              else {
                let t = Math.round(r);
                w(t), m(t * e);
              }
            }, [
              b,
              y,
              x,
              o,
              null == c || null == (t = c.currentStage)
                ? void 0
                : t.paymentMethods,
            ]);
          (0, L.useEffect)(() => {
            var e;
            let t =
              (null == c || null == (e = c.currentStage)
                ? void 0
                : e.paymentMethods) || [];
            if (0 !== t.length && !o)
              if ("ethereum" === i) {
                let e = t.find(
                  (e) =>
                    "eth" === e.name.toLowerCase() && "ethereum" === e.network
                );
                if (e) return void l(e);
              } else if ("bsc" === i) {
                let e = t.find(
                  (e) => "bsc" === e.name.toLowerCase() && "bsc" === e.network
                );
                if (e) return void l(e);
              } else {
                let e = t.find(
                  (e) =>
                    "sol" === e.name.toLowerCase() && "solana" === e.network
                );
                if (e) return void l(e);
              }
          }, [
            i,
            null == c || null == (r = c.currentStage)
              ? void 0
              : r.paymentMethods,
          ]);
          let S = (0, L.useCallback)(async (e) => {
              console.log("Transaction hash:", e);
            }, []),
            O = async () => {
              if ((null == c ? void 0 : c.isComingSoon) || !a || !s) {
                N(0), _(!1), A(!1);
                return;
              }
              _(!0);
              try {
                let e = await fetch("/api/token-balance?wallet=".concat(s)),
                  t = await e.json();
                N(t.balance || 0);
              } catch (e) {
                console.error("Failed to fetch token balance:", e), N(0);
              } finally {
                _(!1), A(!1);
              }
            };
          return (
            (0, L.useEffect)(() => {
              let e = setInterval(() => {
                O();
              }, 15e3);
              return O(), () => clearInterval(e);
            }, [null == c ? void 0 : c.isComingSoon, a, s]),
            (0, L.useEffect)(() => {
              u && T();
            }, [T, !1, u]),
            (0, L.useEffect)(() => {
              u && o && P();
            }, [o, P, u]),
            (0, F.jsx)(W.Provider, {
              value: {
                amountsAreDirty: d,
                setAmountsAreDirty: f,
                preferPayOrRecieve: x,
                setPreferPayOrReceive: g,
                payAmount: b,
                setPayAmount: m,
                receiveAmount: y,
                setReceiveAmount: w,
                calculateCheckout: T,
                checkoutExpiry: h,
                tokenBalance: k,
                isFetchingTokenBalance: E,
                isPendingTokenBalance: v,
                fetchTokenBalance: O,
                logTxHash: S,
              },
              children: n,
            })
          );
        },
        H = () => {
          let e = (0, L.useContext)(W);
          if (!e) throw Error("useDapp must be used within a DappWrapper");
          return e;
        };
      var K = e.i(95032),
        q = e.i(79401),
        Q = e.i(4718),
        J = e.i(972651),
        Z = e.i(428880),
        Y = e.i(10236);
      let X = (e) => {
          var t;
          let { className: r, ...n } = e,
            a = (0, J.useTranslations)("dapp"),
            { state: i } = (0, z.usePresaleContext)(),
            [s, o] = (0, L.useState)(null != (t = i.totalAmountRaised) ? t : 0);
          return (
            (0, L.useEffect)(() => {
              i.totalAmountRaised &&
                i.totalAmountRaised > s &&
                o(i.totalAmountRaised);
            }, [i.totalAmountRaised]),
            (0, F.jsxs)("div", {
              className: (0, q.cn)(
                "relative bg-green text-black font-yuanmo font-bold text-[32px] lg:text-2xl uppercase flex items-center justify-center gap-2 px-2 lg:px-4",
                "min-h-[54px] lg:min-h-[63px]",
                r
              ),
              ...n,
              children: [
                (0, F.jsx)(Y.default, {
                  end: s,
                  duration: 1,
                  delay: 0,
                  separator: ",",
                  prefix: "$",
                  preserveValue: !0,
                }),
                (0, F.jsx)("span", {
                  className: "font-body text-base lg:text-lg font-semibold",
                  children: a("raised"),
                }),
              ],
            })
          );
        },
        $ = () => ({
          formatNumber: (0, L.useCallback)(
            (e) =>
              e.toLocaleString("en-US", {
                minimumFractionDigits: 0,
                maximumFractionDigits: 4,
              }),
            []
          ),
          formatFiatUsd: (0, L.useCallback)((e) => {
            var t, r;
            if (0 === e) return "$0";
            let n = e.toLocaleString("en-US", {
              style: "currency",
              currency: "USD",
              minimumFractionDigits: 0,
              maximumFractionDigits: 2,
            });
            return (
              n.includes(".") &&
                (null == n || null == (r = n.split(".")) || null == (t = r[1])
                  ? void 0
                  : t.length) === 1 &&
                (n += "0"),
              n
            );
          }, []),
        });
      var ee = e.i(718818);
      function et(e) {
        return (0, ee.GenIcon)({
          tag: "svg",
          attr: { version: "1.1", viewBox: "0 0 16 16" },
          child: [
            {
              tag: "path",
              attr: {
                d: "M8 0c-4.355 0-7.898 3.481-7.998 7.812 0.092-3.779 2.966-6.812 6.498-6.812 3.59 0 6.5 3.134 6.5 7 0 0.828 0.672 1.5 1.5 1.5s1.5-0.672 1.5-1.5c0-4.418-3.582-8-8-8zM8 16c4.355 0 7.898-3.481 7.998-7.812-0.092 3.779-2.966 6.812-6.498 6.812-3.59 0-6.5-3.134-6.5-7 0-0.828-0.672-1.5-1.5-1.5s-1.5 0.672-1.5 1.5c0 4.418 3.582 8 8 8z",
              },
              child: [],
            },
          ],
        })(e);
      }
      let er = (e) => {
        let { className: t, ...r } = e,
          n = (0, J.useTranslations)("dapp"),
          { tokenBalance: a, isPendingTokenBalance: i } = H(),
          { formatNumber: s } = $();
        return (0, F.jsxs)("div", {
          className: (0, q.cn)(
            "bg-black flex items-center justify-between font-semibold text-base text-white p-2 rounded",
            t
          ),
          ...r,
          children: [
            (0, F.jsx)("div", { children: n("balanceLabel") }),
            (0, F.jsx)("div", {
              className: "text-primary",
              children: i
                ? (0, F.jsx)(et, { className: "animate-spin" })
                : (0, F.jsxs)(F.Fragment, {
                    children: [
                      s(a),
                      " ",
                      (0, F.jsxs)("span", {
                        children: ["$", D.websiteConfig.token.symbol],
                      }),
                    ],
                  }),
            }),
          ],
        });
      };
      var en = e.i(671678),
        ea = e.i(779026),
        ei = e.i(386523),
        es = e.i(737893),
        eo = e.i(184405);
      let el = new eo.PublicKey("TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA");
      new eo.PublicKey("TokenzQdBNbLqP5VEhdkAS6EPFLC1PHnBqCXEpPxuEb");
      let ec = new eo.PublicKey("ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL");
      new eo.PublicKey("So11111111111111111111111111111111111111112"),
        new eo.PublicKey("9pan9bMn5HatX4EJdBwg9VgCa7Uz5HL8N1m5D3NdXejP");
      var eu = e.i(710841),
        ed = e.i(33e3);
      let ef = (e) => ({ decode: e.decode.bind(e), encode: e.encode.bind(e) });
      var eh = e.i(249365);
      let ep = (e) => (t) => {
          let r = (0, ed.blob)(e, t),
            { encode: n, decode: a } = ef(r);
          return (
            (r.decode = (e, t) => {
              let r = a(e, t);
              return (0, eh.toBigIntLE)(eu.Buffer.from(r));
            }),
            (r.encode = (t, r, a) => n((0, eh.toBufferLE)(t, e), r, a)),
            r
          );
        },
        ex = (e) => (t) => {
          let r = (0, ed.blob)(e, t),
            { encode: n, decode: a } = ef(r);
          return (
            (r.decode = (e, t) => {
              let r = a(e, t);
              return (0, eh.toBigIntBE)(eu.Buffer.from(r));
            }),
            (r.encode = (t, r, a) => n((0, eh.toBufferBE)(t, e), r, a)),
            r
          );
        },
        eg = ep(8);
      ex(8), ep(16), ex(16), ep(24), ex(24), ep(32), ex(32);
      var eb = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,
        em = Math.ceil,
        ey = Math.floor,
        ew = "[BigNumber Error] ",
        ev = ew + "Number primitive has more than 15 significant digits: ",
        eA = [
          1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13,
        ];
      function eE(e) {
        var t = 0 | e;
        return e > 0 || e === t ? t : t - 1;
      }
      function e_(e) {
        for (var t, r, n = 1, a = e.length, i = e[0] + ""; n < a; ) {
          for (r = 14 - (t = e[n++] + "").length; r--; t = "0" + t);
          i += t;
        }
        for (a = i.length; 48 === i.charCodeAt(--a); );
        return i.slice(0, a + 1 || 1);
      }
      function ek(e, t) {
        var r,
          n,
          a = e.c,
          i = t.c,
          s = e.s,
          o = t.s,
          l = e.e,
          c = t.e;
        if (!s || !o) return null;
        if (((r = a && !a[0]), (n = i && !i[0]), r || n))
          return r ? (n ? 0 : -o) : s;
        if (s != o) return s;
        if (((r = s < 0), (n = l == c), !a || !i))
          return n ? 0 : !a ^ r ? 1 : -1;
        if (!n) return (l > c) ^ r ? 1 : -1;
        for (s = 0, o = (l = a.length) < (c = i.length) ? l : c; s < o; s++)
          if (a[s] != i[s]) return (a[s] > i[s]) ^ r ? 1 : -1;
        return l == c ? 0 : (l > c) ^ r ? 1 : -1;
      }
      function eN(e, t, r, n) {
        if (e < t || e > r || e !== ey(e))
          throw Error(
            ew +
              (n || "Argument") +
              ("number" == typeof e
                ? e < t || e > r
                  ? " out of range: "
                  : " not an integer: "
                : " not a primitive number: ") +
              String(e)
          );
      }
      function eP(e) {
        var t = e.c.length - 1;
        return eE(e.e / 14) == t && e.c[t] % 2 != 0;
      }
      function eT(e, t) {
        return (
          (e.length > 1 ? e.charAt(0) + "." + e.slice(1) : e) +
          (t < 0 ? "e" : "e+") +
          t
        );
      }
      function eS(e, t, r) {
        var n, a;
        if (t < 0) {
          for (a = r + "."; ++t; a += r);
          e = a + e;
        } else if (((n = e.length), ++t > n)) {
          for (a = r, t -= n; --t; a += r);
          e += a;
        } else t < n && (e = e.slice(0, t) + "." + e.slice(t));
        return e;
      }
      new ((function e(t) {
        var r,
          n,
          a,
          i,
          s,
          o,
          l,
          c,
          u,
          d = (k.prototype = { constructor: k, toString: null, valueOf: null }),
          f = new k(1),
          h = 20,
          p = 4,
          x = -7,
          g = 21,
          b = -1e7,
          m = 1e7,
          y = !1,
          w = 1,
          v = 0,
          A = {
            prefix: "",
            groupSize: 3,
            secondaryGroupSize: 0,
            groupSeparator: ",",
            decimalSeparator: ".",
            fractionGroupSize: 0,
            fractionGroupSeparator: " ",
            suffix: "",
          },
          E = "0123456789abcdefghijklmnopqrstuvwxyz",
          _ = !0;
        function k(e, t) {
          var r,
            n,
            a,
            i,
            s,
            o,
            l,
            d,
            f = this;
          if (!(f instanceof k)) return new k(e, t);
          if (null == t) {
            if (e && !0 === e._isBigNumber) {
              (f.s = e.s),
                !e.c || e.e > m
                  ? (f.c = f.e = null)
                  : e.e < b
                  ? (f.c = [(f.e = 0)])
                  : ((f.e = e.e), (f.c = e.c.slice()));
              return;
            }
            if ((o = "number" == typeof e) && 0 * e == 0) {
              if (((f.s = 1 / e < 0 ? ((e = -e), -1) : 1), e === ~~e)) {
                for (i = 0, s = e; s >= 10; s /= 10, i++);
                i > m ? (f.c = f.e = null) : ((f.e = i), (f.c = [e]));
                return;
              }
              d = String(e);
            } else {
              if (!eb.test((d = String(e)))) return u(f, d, o);
              f.s = 45 == d.charCodeAt(0) ? ((d = d.slice(1)), -1) : 1;
            }
            (i = d.indexOf(".")) > -1 && (d = d.replace(".", "")),
              (s = d.search(/e/i)) > 0
                ? (i < 0 && (i = s),
                  (i += +d.slice(s + 1)),
                  (d = d.substring(0, s)))
                : i < 0 && (i = d.length);
          } else {
            if ((eN(t, 2, E.length, "Base"), 10 == t && _))
              return S((f = new k(e)), h + f.e + 1, p);
            if (((d = String(e)), (o = "number" == typeof e))) {
              if (0 * e != 0) return u(f, d, o, t);
              if (
                ((f.s = 1 / e < 0 ? ((d = d.slice(1)), -1) : 1),
                k.DEBUG && d.replace(/^0\.0*|\./, "").length > 15)
              )
                throw Error(ev + e);
            } else f.s = 45 === d.charCodeAt(0) ? ((d = d.slice(1)), -1) : 1;
            for (r = E.slice(0, t), i = s = 0, l = d.length; s < l; s++)
              if (0 > r.indexOf((n = d.charAt(s)))) {
                if ("." == n) {
                  if (s > i) {
                    i = l;
                    continue;
                  }
                } else if (
                  !a &&
                  ((d == d.toUpperCase() && (d = d.toLowerCase())) ||
                    (d == d.toLowerCase() && (d = d.toUpperCase())))
                ) {
                  (a = !0), (s = -1), (i = 0);
                  continue;
                }
                return u(f, String(e), o, t);
              }
            (o = !1),
              (i = (d = c(d, t, 10, f.s)).indexOf(".")) > -1
                ? (d = d.replace(".", ""))
                : (i = d.length);
          }
          for (s = 0; 48 === d.charCodeAt(s); s++);
          for (l = d.length; 48 === d.charCodeAt(--l); );
          if ((d = d.slice(s, ++l))) {
            if (
              ((l -= s),
              o && k.DEBUG && l > 15 && (e > 0x1fffffffffffff || e !== ey(e)))
            )
              throw Error(ev + f.s * e);
            if ((i = i - s - 1) > m) f.c = f.e = null;
            else if (i < b) f.c = [(f.e = 0)];
            else {
              if (
                ((f.e = i),
                (f.c = []),
                (s = (i + 1) % 14),
                i < 0 && (s += 14),
                s < l)
              ) {
                for (s && f.c.push(+d.slice(0, s)), l -= 14; s < l; )
                  f.c.push(+d.slice(s, (s += 14)));
                s = 14 - (d = d.slice(s)).length;
              } else s -= l;
              for (; s--; d += "0");
              f.c.push(+d);
            }
          } else f.c = [(f.e = 0)];
        }
        function N(e, t, r, n) {
          var a, i, s, o, l;
          if ((null == r ? (r = p) : eN(r, 0, 8), !e.c)) return e.toString();
          if (((a = e.c[0]), (s = e.e), null == t))
            (l = e_(e.c)),
              (l =
                1 == n || (2 == n && (s <= x || s >= g))
                  ? eT(l, s)
                  : eS(l, s, "0"));
          else if (
            ((i = (e = S(new k(e), t, r)).e),
            (o = (l = e_(e.c)).length),
            1 == n || (2 == n && (t <= i || i <= x)))
          ) {
            for (; o < t; l += "0", o++);
            l = eT(l, i);
          } else if (
            ((t -= s + (2 === n && i > s)), (l = eS(l, i, "0")), i + 1 > o)
          ) {
            if (--t > 0) for (l += "."; t--; l += "0");
          } else if ((t += i - o) > 0)
            for (i + 1 == o && (l += "."); t--; l += "0");
          return e.s < 0 && a ? "-" + l : l;
        }
        function P(e, t) {
          for (var r, n, a = 1, i = new k(e[0]); a < e.length; a++)
            ((n = new k(e[a])).s &&
              (r = ek(i, n)) !== t &&
              (0 !== r || i.s !== t)) ||
              (i = n);
          return i;
        }
        function T(e, t, r) {
          for (var n = 1, a = t.length; !t[--a]; t.pop());
          for (a = t[0]; a >= 10; a /= 10, n++);
          return (
            (r = n + 14 * r - 1) > m
              ? (e.c = e.e = null)
              : r < b
              ? (e.c = [(e.e = 0)])
              : ((e.e = r), (e.c = t)),
            e
          );
        }
        function S(e, t, r, n) {
          var a,
            i,
            s,
            o,
            l,
            c,
            u,
            d = e.c;
          if (d) {
            e: {
              for (a = 1, o = d[0]; o >= 10; o /= 10, a++);
              if ((i = t - a) < 0)
                (i += 14),
                  (s = t),
                  (u = ey(((l = d[(c = 0)]) / eA[a - s - 1]) % 10));
              else if ((c = em((i + 1) / 14)) >= d.length)
                if (n) {
                  for (; d.length <= c; d.push(0));
                  (l = u = 0), (a = 1), (i %= 14), (s = i - 14 + 1);
                } else break e;
              else {
                for (a = 1, l = o = d[c]; o >= 10; o /= 10, a++);
                (i %= 14),
                  (u = (s = i - 14 + a) < 0 ? 0 : ey((l / eA[a - s - 1]) % 10));
              }
              if (
                ((n =
                  n ||
                  t < 0 ||
                  null != d[c + 1] ||
                  (s < 0 ? l : l % eA[a - s - 1])),
                (n =
                  r < 4
                    ? (u || n) && (0 == r || r == (e.s < 0 ? 3 : 2))
                    : u > 5 ||
                      (5 == u &&
                        (4 == r ||
                          n ||
                          (6 == r &&
                            (i > 0 ? (s > 0 ? l / eA[a - s] : 0) : d[c - 1]) %
                              10 &
                              1) ||
                          r == (e.s < 0 ? 8 : 7)))),
                t < 1 || !d[0])
              )
                return (
                  (d.length = 0),
                  n
                    ? ((t -= e.e + 1),
                      (d[0] = eA[(14 - (t % 14)) % 14]),
                      (e.e = -t || 0))
                    : (d[0] = e.e = 0),
                  e
                );
              if (
                (0 == i
                  ? ((d.length = c), (o = 1), c--)
                  : ((d.length = c + 1),
                    (o = eA[14 - i]),
                    (d[c] = s > 0 ? ey((l / eA[a - s]) % eA[s]) * o : 0)),
                n)
              )
                for (;;)
                  if (0 == c) {
                    for (i = 1, s = d[0]; s >= 10; s /= 10, i++);
                    for (s = d[0] += o, o = 1; s >= 10; s /= 10, o++);
                    i != o && (e.e++, 1e14 == d[0] && (d[0] = 1));
                    break;
                  } else {
                    if (((d[c] += o), 1e14 != d[c])) break;
                    (d[c--] = 0), (o = 1);
                  }
              for (i = d.length; 0 === d[--i]; d.pop());
            }
            e.e > m ? (e.c = e.e = null) : e.e < b && (e.c = [(e.e = 0)]);
          }
          return e;
        }
        function O(e) {
          var t,
            r = e.e;
          return null === r
            ? e.toString()
            : ((t = e_(e.c)),
              (t = r <= x || r >= g ? eT(t, r) : eS(t, r, "0")),
              e.s < 0 ? "-" + t : t);
        }
        return (
          (k.clone = e),
          (k.ROUND_UP = 0),
          (k.ROUND_DOWN = 1),
          (k.ROUND_CEIL = 2),
          (k.ROUND_FLOOR = 3),
          (k.ROUND_HALF_UP = 4),
          (k.ROUND_HALF_DOWN = 5),
          (k.ROUND_HALF_EVEN = 6),
          (k.ROUND_HALF_CEIL = 7),
          (k.ROUND_HALF_FLOOR = 8),
          (k.EUCLID = 9),
          (k.config = k.set =
            function (e) {
              var t, r;
              if (null != e)
                if ("object" == typeof e) {
                  if (
                    (e.hasOwnProperty((t = "DECIMAL_PLACES")) &&
                      (eN((r = e[t]), 0, 1e9, t), (h = r)),
                    e.hasOwnProperty((t = "ROUNDING_MODE")) &&
                      (eN((r = e[t]), 0, 8, t), (p = r)),
                    e.hasOwnProperty((t = "EXPONENTIAL_AT")) &&
                      ((r = e[t]) && r.pop
                        ? (eN(r[0], -1e9, 0, t),
                          eN(r[1], 0, 1e9, t),
                          (x = r[0]),
                          (g = r[1]))
                        : (eN(r, -1e9, 1e9, t), (x = -(g = r < 0 ? -r : r)))),
                    e.hasOwnProperty((t = "RANGE")))
                  )
                    if ((r = e[t]) && r.pop)
                      eN(r[0], -1e9, -1, t),
                        eN(r[1], 1, 1e9, t),
                        (b = r[0]),
                        (m = r[1]);
                    else if ((eN(r, -1e9, 1e9, t), r))
                      b = -(m = r < 0 ? -r : r);
                    else throw Error(ew + t + " cannot be zero: " + r);
                  if (e.hasOwnProperty((t = "CRYPTO")))
                    if (!!(r = e[t]) === r)
                      if (r)
                        if (
                          "undefined" != typeof crypto &&
                          crypto &&
                          (crypto.getRandomValues || crypto.randomBytes)
                        )
                          y = r;
                        else throw ((y = !r), Error(ew + "crypto unavailable"));
                      else y = r;
                    else throw Error(ew + t + " not true or false: " + r);
                  if (
                    (e.hasOwnProperty((t = "MODULO_MODE")) &&
                      (eN((r = e[t]), 0, 9, t), (w = r)),
                    e.hasOwnProperty((t = "POW_PRECISION")) &&
                      (eN((r = e[t]), 0, 1e9, t), (v = r)),
                    e.hasOwnProperty((t = "FORMAT")))
                  )
                    if ("object" == typeof (r = e[t])) A = r;
                    else throw Error(ew + t + " not an object: " + r);
                  if (e.hasOwnProperty((t = "ALPHABET"))) {
                    if (
                      "string" != typeof (r = e[t]) ||
                      /^.?$|[+\-.\s]|(.).*\1/.test(r)
                    )
                      throw Error(ew + t + " invalid: " + r);
                    (_ = "0123456789" == r.slice(0, 10)), (E = r);
                  }
                } else throw Error(ew + "Object expected: " + e);
              return {
                DECIMAL_PLACES: h,
                ROUNDING_MODE: p,
                EXPONENTIAL_AT: [x, g],
                RANGE: [b, m],
                CRYPTO: y,
                MODULO_MODE: w,
                POW_PRECISION: v,
                FORMAT: A,
                ALPHABET: E,
              };
            }),
          (k.isBigNumber = function (e) {
            if (!e || !0 !== e._isBigNumber) return !1;
            if (!k.DEBUG) return !0;
            var t,
              r,
              n = e.c,
              a = e.e,
              i = e.s;
            e: if ("[object Array]" == {}.toString.call(n)) {
              if (
                (1 === i || -1 === i) &&
                a >= -1e9 &&
                a <= 1e9 &&
                a === ey(a)
              ) {
                if (0 === n[0]) {
                  if (0 === a && 1 === n.length) return !0;
                  break e;
                }
                if (
                  ((t = (a + 1) % 14) < 1 && (t += 14),
                  String(n[0]).length == t)
                ) {
                  for (t = 0; t < n.length; t++)
                    if ((r = n[t]) < 0 || r >= 1e14 || r !== ey(r)) break e;
                  if (0 !== r) return !0;
                }
              }
            } else if (
              null === n &&
              null === a &&
              (null === i || 1 === i || -1 === i)
            )
              return !0;
            throw Error(ew + "Invalid BigNumber: " + e);
          }),
          (k.maximum = k.max =
            function () {
              return P(arguments, -1);
            }),
          (k.minimum = k.min =
            function () {
              return P(arguments, 1);
            }),
          (r =
            (0x20000000000000 * Math.random()) & 2097151
              ? function () {
                  return ey(0x20000000000000 * Math.random());
                }
              : function () {
                  return (
                    ((0x40000000 * Math.random()) | 0) * 8388608 +
                    ((8388608 * Math.random()) | 0)
                  );
                }),
          (k.random = function (e) {
            var t,
              n,
              a,
              i,
              s,
              o = 0,
              l = [],
              c = new k(f);
            if ((null == e ? (e = h) : eN(e, 0, 1e9), (i = em(e / 14)), y))
              if (crypto.getRandomValues) {
                for (
                  t = crypto.getRandomValues(new Uint32Array((i *= 2)));
                  o < i;

                )
                  (s = 131072 * t[o] + (t[o + 1] >>> 11)) >= 9e15
                    ? ((n = crypto.getRandomValues(new Uint32Array(2))),
                      (t[o] = n[0]),
                      (t[o + 1] = n[1]))
                    : (l.push(s % 1e14), (o += 2));
                o = i / 2;
              } else if (crypto.randomBytes) {
                for (t = crypto.randomBytes((i *= 7)); o < i; )
                  (s =
                    (31 & t[o]) * 0x1000000000000 +
                    0x10000000000 * t[o + 1] +
                    0x100000000 * t[o + 2] +
                    0x1000000 * t[o + 3] +
                    (t[o + 4] << 16) +
                    (t[o + 5] << 8) +
                    t[o + 6]) >= 9e15
                    ? crypto.randomBytes(7).copy(t, o)
                    : (l.push(s % 1e14), (o += 7));
                o = i / 7;
              } else throw ((y = !1), Error(ew + "crypto unavailable"));
            if (!y) for (; o < i; ) (s = r()) < 9e15 && (l[o++] = s % 1e14);
            for (
              i = l[--o],
                e %= 14,
                i && e && ((s = eA[14 - e]), (l[o] = ey(i / s) * s));
              0 === l[o];
              l.pop(), o--
            );
            if (o < 0) l = [(a = 0)];
            else {
              for (a = -1; 0 === l[0]; l.splice(0, 1), a -= 14);
              for (o = 1, s = l[0]; s >= 10; s /= 10, o++);
              o < 14 && (a -= 14 - o);
            }
            return (c.e = a), (c.c = l), c;
          }),
          (k.sum = function () {
            for (var e = 1, t = arguments, r = new k(t[0]); e < t.length; )
              r = r.plus(t[e++]);
            return r;
          }),
          (c = (function () {
            var e = "0123456789";
            function t(e, t, r, n) {
              for (var a, i, s = [0], o = 0, l = e.length; o < l; ) {
                for (i = s.length; i--; s[i] *= t);
                for (s[0] += n.indexOf(e.charAt(o++)), a = 0; a < s.length; a++)
                  s[a] > r - 1 &&
                    (null == s[a + 1] && (s[a + 1] = 0),
                    (s[a + 1] += (s[a] / r) | 0),
                    (s[a] %= r));
              }
              return s.reverse();
            }
            return function (r, n, a, i, s) {
              var o,
                c,
                u,
                d,
                f,
                x,
                g,
                b,
                m = r.indexOf("."),
                y = h,
                w = p;
              for (
                m >= 0 &&
                  ((d = v),
                  (v = 0),
                  (r = r.replace(".", "")),
                  (x = (b = new k(n)).pow(r.length - m)),
                  (v = d),
                  (b.c = t(eS(e_(x.c), x.e, "0"), 10, a, e)),
                  (b.e = b.c.length)),
                  u = d =
                    (g = t(r, n, a, s ? ((o = E), e) : ((o = e), E))).length;
                0 == g[--d];
                g.pop()
              );
              if (!g[0]) return o.charAt(0);
              if (
                (m < 0
                  ? --u
                  : ((x.c = g),
                    (x.e = u),
                    (x.s = i),
                    (g = (x = l(x, b, y, w, a)).c),
                    (f = x.r),
                    (u = x.e)),
                (m = g[(c = u + y + 1)]),
                (d = a / 2),
                (f = f || c < 0 || null != g[c + 1]),
                (f =
                  w < 4
                    ? (null != m || f) && (0 == w || w == (x.s < 0 ? 3 : 2))
                    : m > d ||
                      (m == d &&
                        (4 == w ||
                          f ||
                          (6 == w && 1 & g[c - 1]) ||
                          w == (x.s < 0 ? 8 : 7)))),
                c < 1 || !g[0])
              )
                r = f ? eS(o.charAt(1), -y, o.charAt(0)) : o.charAt(0);
              else {
                if (((g.length = c), f))
                  for (--a; ++g[--c] > a; )
                    (g[c] = 0), c || (++u, (g = [1].concat(g)));
                for (d = g.length; !g[--d]; );
                for (m = 0, r = ""; m <= d; r += o.charAt(g[m++]));
                r = eS(r, u, o.charAt(0));
              }
              return r;
            };
          })()),
          (l = (function () {
            function e(e, t, r) {
              var n,
                a,
                i,
                s,
                o = 0,
                l = e.length,
                c = t % 1e7,
                u = (t / 1e7) | 0;
              for (e = e.slice(); l--; )
                (n = u * (i = e[l] % 1e7) + (s = (e[l] / 1e7) | 0) * c),
                  (o =
                    (((a = c * i + (n % 1e7) * 1e7 + o) / r) | 0) +
                    ((n / 1e7) | 0) +
                    u * s),
                  (e[l] = a % r);
              return o && (e = [o].concat(e)), e;
            }
            function t(e, t, r, n) {
              var a, i;
              if (r != n) i = r > n ? 1 : -1;
              else
                for (a = i = 0; a < r; a++)
                  if (e[a] != t[a]) {
                    i = e[a] > t[a] ? 1 : -1;
                    break;
                  }
              return i;
            }
            function r(e, t, r, n) {
              for (var a = 0; r--; )
                (e[r] -= a), (a = +(e[r] < t[r])), (e[r] = a * n + e[r] - t[r]);
              for (; !e[0] && e.length > 1; e.splice(0, 1));
            }
            return function (n, a, i, s, o) {
              var l,
                c,
                u,
                d,
                f,
                h,
                p,
                x,
                g,
                b,
                m,
                y,
                w,
                v,
                A,
                E,
                _,
                N = n.s == a.s ? 1 : -1,
                P = n.c,
                T = a.c;
              if (!P || !P[0] || !T || !T[0])
                return new k(
                  !n.s || !a.s || (P ? T && P[0] == T[0] : !T)
                    ? NaN
                    : (P && 0 == P[0]) || !T
                    ? 0 * N
                    : N / 0
                );
              for (
                g = (x = new k(N)).c = [],
                  N = i + (c = n.e - a.e) + 1,
                  o ||
                    ((o = 1e14),
                    (c = eE(n.e / 14) - eE(a.e / 14)),
                    (N = (N / 14) | 0)),
                  u = 0;
                T[u] == (P[u] || 0);
                u++
              );
              if ((T[u] > (P[u] || 0) && c--, N < 0)) g.push(1), (d = !0);
              else {
                for (
                  v = P.length,
                    E = T.length,
                    u = 0,
                    N += 2,
                    (f = ey(o / (T[0] + 1))) > 1 &&
                      ((T = e(T, f, o)),
                      (P = e(P, f, o)),
                      (E = T.length),
                      (v = P.length)),
                    w = E,
                    m = (b = P.slice(0, E)).length;
                  m < E;
                  b[m++] = 0
                );
                (_ = [0].concat((_ = T.slice()))),
                  (A = T[0]),
                  T[1] >= o / 2 && A++;
                do {
                  if (((f = 0), (l = t(T, b, E, m)) < 0)) {
                    if (
                      ((y = b[0]),
                      E != m && (y = y * o + (b[1] || 0)),
                      (f = ey(y / A)) > 1)
                    )
                      for (
                        f >= o && (f = o - 1),
                          p = (h = e(T, f, o)).length,
                          m = b.length;
                        1 == t(h, b, p, m);

                      )
                        f--, r(h, E < p ? _ : T, p, o), (p = h.length), (l = 1);
                    else 0 == f && (l = f = 1), (p = (h = T.slice()).length);
                    if (
                      (p < m && (h = [0].concat(h)),
                      r(b, h, m, o),
                      (m = b.length),
                      -1 == l)
                    )
                      for (; 1 > t(T, b, E, m); )
                        f++, r(b, E < m ? _ : T, m, o), (m = b.length);
                  } else 0 === l && (f++, (b = [0]));
                  (g[u++] = f),
                    b[0] ? (b[m++] = P[w] || 0) : ((b = [P[w]]), (m = 1));
                } while ((w++ < v || null != b[0]) && N--);
                (d = null != b[0]), g[0] || g.splice(0, 1);
              }
              if (1e14 == o) {
                for (u = 1, N = g[0]; N >= 10; N /= 10, u++);
                S(x, i + (x.e = u + 14 * c - 1) + 1, s, d);
              } else (x.e = c), (x.r = +d);
              return x;
            };
          })()),
          (n = /^(-?)0([xbo])(?=\w[\w.]*$)/i),
          (a = /^([^.]+)\.$/),
          (i = /^\.([^.]+)$/),
          (s = /^-?(Infinity|NaN)$/),
          (o = /^\s*\+(?=[\w.])|^\s+|\s+$/g),
          (u = function (e, t, r, l) {
            var c,
              u = r ? t : t.replace(o, "");
            if (s.test(u)) e.s = isNaN(u) ? null : u < 0 ? -1 : 1;
            else {
              if (
                !r &&
                ((u = u.replace(n, function (e, t, r) {
                  return (
                    (c = "x" == (r = r.toLowerCase()) ? 16 : "b" == r ? 2 : 8),
                    l && l != c ? e : t
                  );
                })),
                l && ((c = l), (u = u.replace(a, "$1").replace(i, "0.$1"))),
                t != u)
              )
                return new k(u, c);
              if (k.DEBUG)
                throw Error(
                  ew + "Not a" + (l ? " base " + l : "") + " number: " + t
                );
              e.s = null;
            }
            e.c = e.e = null;
          }),
          (d.absoluteValue = d.abs =
            function () {
              var e = new k(this);
              return e.s < 0 && (e.s = 1), e;
            }),
          (d.comparedTo = function (e, t) {
            return ek(this, new k(e, t));
          }),
          (d.decimalPlaces = d.dp =
            function (e, t) {
              var r, n, a;
              if (null != e)
                return (
                  eN(e, 0, 1e9),
                  null == t ? (t = p) : eN(t, 0, 8),
                  S(new k(this), e + this.e + 1, t)
                );
              if (!(r = this.c)) return null;
              if (
                ((n = ((a = r.length - 1) - eE(this.e / 14)) * 14), (a = r[a]))
              )
                for (; a % 10 == 0; a /= 10, n--);
              return n < 0 && (n = 0), n;
            }),
          (d.dividedBy = d.div =
            function (e, t) {
              return l(this, new k(e, t), h, p);
            }),
          (d.dividedToIntegerBy = d.idiv =
            function (e, t) {
              return l(this, new k(e, t), 0, 1);
            }),
          (d.exponentiatedBy = d.pow =
            function (e, t) {
              var r,
                n,
                a,
                i,
                s,
                o,
                l,
                c,
                u,
                d = this;
              if ((e = new k(e)).c && !e.isInteger())
                throw Error(ew + "Exponent not an integer: " + O(e));
              if (
                (null != t && (t = new k(t)),
                (o = e.e > 14),
                !d.c ||
                  !d.c[0] ||
                  (1 == d.c[0] && !d.e && 1 == d.c.length) ||
                  !e.c ||
                  !e.c[0])
              )
                return (
                  (u = new k(Math.pow(+O(d), o ? e.s * (2 - eP(e)) : +O(e)))),
                  t ? u.mod(t) : u
                );
              if (((l = e.s < 0), t)) {
                if (t.c ? !t.c[0] : !t.s) return new k(NaN);
                (n = !l && d.isInteger() && t.isInteger()) && (d = d.mod(t));
              } else {
                if (
                  e.e > 9 &&
                  (d.e > 0 ||
                    d.e < -1 ||
                    (0 == d.e
                      ? d.c[0] > 1 || (o && d.c[1] >= 24e7)
                      : d.c[0] < 8e13 || (o && d.c[0] <= 9999975e7)))
                )
                  return (
                    (i = d.s < 0 && eP(e) ? -0 : 0),
                    d.e > -1 && (i = 1 / i),
                    new k(l ? 1 / i : i)
                  );
                v && (i = em(v / 14 + 2));
              }
              for (
                o
                  ? ((r = new k(0.5)), l && (e.s = 1), (c = eP(e)))
                  : (c = (a = Math.abs(+O(e))) % 2),
                  u = new k(f);
                ;

              ) {
                if (c) {
                  if (!(u = u.times(d)).c) break;
                  i ? u.c.length > i && (u.c.length = i) : n && (u = u.mod(t));
                }
                if (a) {
                  if (0 === (a = ey(a / 2))) break;
                  c = a % 2;
                } else if ((S((e = e.times(r)), e.e + 1, 1), e.e > 14))
                  c = eP(e);
                else {
                  if (0 == (a = +O(e))) break;
                  c = a % 2;
                }
                (d = d.times(d)),
                  i
                    ? d.c && d.c.length > i && (d.c.length = i)
                    : n && (d = d.mod(t));
              }
              return n
                ? u
                : (l && (u = f.div(u)), t ? u.mod(t) : i ? S(u, v, p, s) : u);
            }),
          (d.integerValue = function (e) {
            var t = new k(this);
            return null == e ? (e = p) : eN(e, 0, 8), S(t, t.e + 1, e);
          }),
          (d.isEqualTo = d.eq =
            function (e, t) {
              return 0 === ek(this, new k(e, t));
            }),
          (d.isFinite = function () {
            return !!this.c;
          }),
          (d.isGreaterThan = d.gt =
            function (e, t) {
              return ek(this, new k(e, t)) > 0;
            }),
          (d.isGreaterThanOrEqualTo = d.gte =
            function (e, t) {
              return 1 === (t = ek(this, new k(e, t))) || 0 === t;
            }),
          (d.isInteger = function () {
            return !!this.c && eE(this.e / 14) > this.c.length - 2;
          }),
          (d.isLessThan = d.lt =
            function (e, t) {
              return 0 > ek(this, new k(e, t));
            }),
          (d.isLessThanOrEqualTo = d.lte =
            function (e, t) {
              return -1 === (t = ek(this, new k(e, t))) || 0 === t;
            }),
          (d.isNaN = function () {
            return !this.s;
          }),
          (d.isNegative = function () {
            return this.s < 0;
          }),
          (d.isPositive = function () {
            return this.s > 0;
          }),
          (d.isZero = function () {
            return !!this.c && 0 == this.c[0];
          }),
          (d.minus = function (e, t) {
            var r,
              n,
              a,
              i,
              s = this.s;
            if (((t = (e = new k(e, t)).s), !s || !t)) return new k(NaN);
            if (s != t) return (e.s = -t), this.plus(e);
            var o = this.e / 14,
              l = e.e / 14,
              c = this.c,
              u = e.c;
            if (!o || !l) {
              if (!c || !u) return c ? ((e.s = -t), e) : new k(u ? this : NaN);
              if (!c[0] || !u[0])
                return u[0]
                  ? ((e.s = -t), e)
                  : new k(c[0] ? this : 3 == p ? -0 : 0);
            }
            if (((o = eE(o)), (l = eE(l)), (c = c.slice()), (s = o - l))) {
              for (
                (i = s < 0) ? ((s = -s), (a = c)) : ((l = o), (a = u)),
                  a.reverse(),
                  t = s;
                t--;
                a.push(0)
              );
              a.reverse();
            } else
              for (
                n = (i = (s = c.length) < (t = u.length)) ? s : t, s = t = 0;
                t < n;
                t++
              )
                if (c[t] != u[t]) {
                  i = c[t] < u[t];
                  break;
                }
            if (
              (i && ((a = c), (c = u), (u = a), (e.s = -e.s)),
              (t = (n = u.length) - (r = c.length)) > 0)
            )
              for (; t--; c[r++] = 0);
            for (t = 1e14 - 1; n > s; ) {
              if (c[--n] < u[n]) {
                for (r = n; r && !c[--r]; c[r] = t);
                --c[r], (c[n] += 1e14);
              }
              c[n] -= u[n];
            }
            for (; 0 == c[0]; c.splice(0, 1), --l);
            return c[0]
              ? T(e, c, l)
              : ((e.s = 3 == p ? -1 : 1), (e.c = [(e.e = 0)]), e);
          }),
          (d.modulo = d.mod =
            function (e, t) {
              var r, n;
              return ((e = new k(e, t)), this.c && e.s && (!e.c || e.c[0]))
                ? e.c && (!this.c || this.c[0])
                  ? (9 == w
                      ? ((n = e.s),
                        (e.s = 1),
                        (r = l(this, e, 0, 3)),
                        (e.s = n),
                        (r.s *= n))
                      : (r = l(this, e, 0, w)),
                    (e = this.minus(r.times(e))).c[0] ||
                      1 != w ||
                      (e.s = this.s),
                    e)
                  : new k(this)
                : new k(NaN);
            }),
          (d.multipliedBy = d.times =
            function (e, t) {
              var r,
                n,
                a,
                i,
                s,
                o,
                l,
                c,
                u,
                d,
                f,
                h,
                p,
                x = this.c,
                g = (e = new k(e, t)).c;
              if (!x || !g || !x[0] || !g[0])
                return (
                  this.s && e.s && (!x || x[0] || g) && (!g || g[0] || x)
                    ? ((e.s *= this.s),
                      x && g ? ((e.c = [0]), (e.e = 0)) : (e.c = e.e = null))
                    : (e.c = e.e = e.s = null),
                  e
                );
              for (
                n = eE(this.e / 14) + eE(e.e / 14),
                  e.s *= this.s,
                  (l = x.length) < (d = g.length) &&
                    ((p = x), (x = g), (g = p), (a = l), (l = d), (d = a)),
                  a = l + d,
                  p = [];
                a--;
                p.push(0)
              );
              for (a = d; --a >= 0; ) {
                for (
                  r = 0, f = g[a] % 1e7, h = (g[a] / 1e7) | 0, i = a + (s = l);
                  i > a;

                )
                  (o = h * (c = x[--s] % 1e7) + (u = (x[s] / 1e7) | 0) * f),
                    (r =
                      (((c = f * c + (o % 1e7) * 1e7 + p[i] + r) / 1e14) | 0) +
                      ((o / 1e7) | 0) +
                      h * u),
                    (p[i--] = c % 1e14);
                p[i] = r;
              }
              return r ? ++n : p.splice(0, 1), T(e, p, n);
            }),
          (d.negated = function () {
            var e = new k(this);
            return (e.s = -e.s || null), e;
          }),
          (d.plus = function (e, t) {
            var r,
              n = this.s;
            if (((t = (e = new k(e, t)).s), !n || !t)) return new k(NaN);
            if (n != t) return (e.s = -t), this.minus(e);
            var a = this.e / 14,
              i = e.e / 14,
              s = this.c,
              o = e.c;
            if (!a || !i) {
              if (!s || !o) return new k(n / 0);
              if (!s[0] || !o[0]) return o[0] ? e : new k(s[0] ? this : 0 * n);
            }
            if (((a = eE(a)), (i = eE(i)), (s = s.slice()), (n = a - i))) {
              for (
                n > 0 ? ((i = a), (r = o)) : ((n = -n), (r = s)), r.reverse();
                n--;
                r.push(0)
              );
              r.reverse();
            }
            for (
              (n = s.length) - (t = o.length) < 0 &&
                ((r = o), (o = s), (s = r), (t = n)),
                n = 0;
              t;

            )
              (n = ((s[--t] = s[t] + o[t] + n) / 1e14) | 0),
                (s[t] = 1e14 === s[t] ? 0 : s[t] % 1e14);
            return n && ((s = [n].concat(s)), ++i), T(e, s, i);
          }),
          (d.precision = d.sd =
            function (e, t) {
              var r, n, a;
              if (null != e && !!e !== e)
                return (
                  eN(e, 1, 1e9),
                  null == t ? (t = p) : eN(t, 0, 8),
                  S(new k(this), e, t)
                );
              if (!(r = this.c)) return null;
              if (((n = 14 * (a = r.length - 1) + 1), (a = r[a]))) {
                for (; a % 10 == 0; a /= 10, n--);
                for (a = r[0]; a >= 10; a /= 10, n++);
              }
              return e && this.e + 1 > n && (n = this.e + 1), n;
            }),
          (d.shiftedBy = function (e) {
            return (
              eN(e, -0x1fffffffffffff, 0x1fffffffffffff), this.times("1e" + e)
            );
          }),
          (d.squareRoot = d.sqrt =
            function () {
              var e,
                t,
                r,
                n,
                a,
                i = this.c,
                s = this.s,
                o = this.e,
                c = h + 4,
                u = new k("0.5");
              if (1 !== s || !i || !i[0])
                return new k(
                  !s || (s < 0 && (!i || i[0])) ? NaN : i ? this : 1 / 0
                );
              if (
                (0 == (s = Math.sqrt(+O(this))) || s == 1 / 0
                  ? (((t = e_(i)).length + o) % 2 == 0 && (t += "0"),
                    (s = Math.sqrt(+t)),
                    (o = eE((o + 1) / 2) - (o < 0 || o % 2)),
                    (r = new k(
                      (t =
                        s == 1 / 0
                          ? "5e" + o
                          : (t = s.toExponential()).slice(
                              0,
                              t.indexOf("e") + 1
                            ) + o)
                    )))
                  : (r = new k(s + "")),
                r.c[0])
              ) {
                for ((s = (o = r.e) + c) < 3 && (s = 0); ; )
                  if (
                    ((a = r),
                    (r = u.times(a.plus(l(this, a, c, 1)))),
                    e_(a.c).slice(0, s) === (t = e_(r.c)).slice(0, s))
                  ) {
                    if (
                      (r.e < o && --s,
                      "9999" != (t = t.slice(s - 3, s + 1)) &&
                        (n || "4999" != t))
                    ) {
                      (+t && (+t.slice(1) || "5" != t.charAt(0))) ||
                        (S(r, r.e + h + 2, 1), (e = !r.times(r).eq(this)));
                      break;
                    }
                    if (!n && (S(a, a.e + h + 2, 0), a.times(a).eq(this))) {
                      r = a;
                      break;
                    }
                    (c += 4), (s += 4), (n = 1);
                  }
              }
              return S(r, r.e + h + 1, p, e);
            }),
          (d.toExponential = function (e, t) {
            return null != e && (eN(e, 0, 1e9), e++), N(this, e, t, 1);
          }),
          (d.toFixed = function (e, t) {
            return (
              null != e && (eN(e, 0, 1e9), (e = e + this.e + 1)), N(this, e, t)
            );
          }),
          (d.toFormat = function (e, t, r) {
            var n;
            if (null == r)
              null != e && t && "object" == typeof t
                ? ((r = t), (t = null))
                : e && "object" == typeof e
                ? ((r = e), (e = t = null))
                : (r = A);
            else if ("object" != typeof r)
              throw Error(ew + "Argument not an object: " + r);
            if (((n = this.toFixed(e, t)), this.c)) {
              var a,
                i = n.split("."),
                s = +r.groupSize,
                o = +r.secondaryGroupSize,
                l = r.groupSeparator || "",
                c = i[0],
                u = i[1],
                d = this.s < 0,
                f = d ? c.slice(1) : c,
                h = f.length;
              if (
                (o && ((a = s), (s = o), (o = a), (h -= a)), s > 0 && h > 0)
              ) {
                for (a = h % s || s, c = f.substr(0, a); a < h; a += s)
                  c += l + f.substr(a, s);
                o > 0 && (c += l + f.slice(a)), d && (c = "-" + c);
              }
              n = u
                ? c +
                  (r.decimalSeparator || "") +
                  ((o = +r.fractionGroupSize)
                    ? u.replace(
                        RegExp("\\d{" + o + "}\\B", "g"),
                        "$&" + (r.fractionGroupSeparator || "")
                      )
                    : u)
                : c;
            }
            return (r.prefix || "") + n + (r.suffix || "");
          }),
          (d.toFraction = function (e) {
            var t,
              r,
              n,
              a,
              i,
              s,
              o,
              c,
              u,
              d,
              h,
              x,
              g = this.c;
            if (
              null != e &&
              ((!(o = new k(e)).isInteger() && (o.c || 1 !== o.s)) || o.lt(f))
            )
              throw Error(
                ew +
                  "Argument " +
                  (o.isInteger() ? "out of range: " : "not an integer: ") +
                  O(o)
              );
            if (!g) return new k(this);
            for (
              t = new k(f),
                u = r = new k(f),
                n = c = new k(f),
                x = e_(g),
                i = t.e = x.length - this.e - 1,
                t.c[0] = eA[(s = i % 14) < 0 ? 14 + s : s],
                e = !e || o.comparedTo(t) > 0 ? (i > 0 ? t : u) : o,
                s = m,
                m = 1 / 0,
                o = new k(x),
                c.c[0] = 0;
              (d = l(o, t, 0, 1)), 1 != (a = r.plus(d.times(n))).comparedTo(e);

            )
              (r = n),
                (n = a),
                (u = c.plus(d.times((a = u)))),
                (c = a),
                (t = o.minus(d.times((a = t)))),
                (o = a);
            return (
              (a = l(e.minus(r), n, 0, 1)),
              (c = c.plus(a.times(u))),
              (r = r.plus(a.times(n))),
              (c.s = u.s = this.s),
              (i *= 2),
              (h =
                1 >
                l(u, n, i, p)
                  .minus(this)
                  .abs()
                  .comparedTo(l(c, r, i, p).minus(this).abs())
                  ? [u, n]
                  : [c, r]),
              (m = s),
              h
            );
          }),
          (d.toNumber = function () {
            return +O(this);
          }),
          (d.toPrecision = function (e, t) {
            return null != e && eN(e, 1, 1e9), N(this, e, t, 2);
          }),
          (d.toString = function (e) {
            var t,
              r = this,
              n = r.s,
              a = r.e;
            return (
              null === a
                ? n
                  ? ((t = "Infinity"), n < 0 && (t = "-" + t))
                  : (t = "NaN")
                : (null == e
                    ? (t =
                        a <= x || a >= g ? eT(e_(r.c), a) : eS(e_(r.c), a, "0"))
                    : 10 === e && _
                    ? (t = eS(e_((r = S(new k(r), h + a + 1, p)).c), r.e, "0"))
                    : (eN(e, 2, E.length, "Base"),
                      (t = c(eS(e_(r.c), a, "0"), 10, e, n, !0))),
                  n < 0 && r.c[0] && (t = "-" + t)),
              t
            );
          }),
          (d.valueOf = d.toJSON =
            function () {
              return O(this);
            }),
          (d._isBigNumber = !0),
          (d[Symbol.toStringTag] = "BigNumber"),
          (d[Symbol.for("nodejs.util.inspect.custom")] = d.valueOf),
          null != t && k.set(t),
          k
        );
      })())("1e+18");
      let eO = (e) => {
          let t = (0, ed.u8)(e),
            { encode: r, decode: n } = ef(t);
          return (
            (t.decode = (e, t) => !!n(e, t)),
            (t.encode = (e, t, n) => r(Number(e), t, n)),
            t
          );
        },
        eR = (e) => {
          let t = (0, ed.blob)(32, e),
            { encode: r, decode: n } = ef(t);
          return (
            (t.decode = (e, t) => {
              let r = n(e, t);
              return new eo.PublicKey(r);
            }),
            (t.encode = (e, t, n) => r(e.toBuffer(), t, n)),
            t
          );
        };
      class eC extends Error {
        constructor(e) {
          super(e);
        }
      }
      class eI extends eC {
        constructor() {
          super(...arguments), (this.name = "TokenOwnerOffCurveError");
        }
      }
      !(function (e) {
        (e[(e.Uninitialized = 0)] = "Uninitialized"),
          (e[(e.Mint = 1)] = "Mint"),
          (e[(e.Account = 2)] = "Account");
      })(w || (w = {})),
        (0, ed.struct)([
          (0, ed.u8)("m"),
          (0, ed.u8)("n"),
          eO("isInitialized"),
          eR("signer1"),
          eR("signer2"),
          eR("signer3"),
          eR("signer4"),
          eR("signer5"),
          eR("signer6"),
          eR("signer7"),
          eR("signer8"),
          eR("signer9"),
          eR("signer10"),
          eR("signer11"),
        ]).span,
        (function (e) {
          (e[(e.Uninitialized = 0)] = "Uninitialized"),
            (e[(e.Initialized = 1)] = "Initialized"),
            (e[(e.Frozen = 2)] = "Frozen");
        })(v || (v = {})),
        (0, ed.struct)([
          eR("mint"),
          eR("owner"),
          eg("amount"),
          (0, ed.u32)("delegateOption"),
          eR("delegate"),
          (0, ed.u8)("state"),
          (0, ed.u32)("isNativeOption"),
          eg("isNative"),
          eg("delegatedAmount"),
          (0, ed.u32)("closeAuthorityOption"),
          eR("closeAuthority"),
        ]).span,
        (0, ed.struct)([eO("lockCpi")]).span,
        (0, ed.struct)([(0, ed.u8)("state")]).span;
      var eB = e.i(174519),
        eU = e.i(11968);
      function eM(e) {
        let [t, r] = e;
        return "".concat(t, "=").concat(
          (function e(t) {
            return Array.isArray(t)
              ? "%5B" + t.map(e).join("%2C%20") + "%5D"
              : "bigint" == typeof t
              ? "".concat(t, "n")
              : encodeURIComponent(
                  String(
                    null != t && null === Object.getPrototypeOf(t)
                      ? { ...t }
                      : t
                  )
                );
          })(r)
        );
      }
      var ej = class extends Error {
        constructor(...[e, t]) {
          let r, n;
          if (t) {
            let { cause: e, ...a } = t;
            e && (n = { cause: e }), Object.keys(a).length > 0 && (r = a);
          }
          super(
            (function (e) {
              let t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : {};
              {
                let r = "Solana error #"
                  .concat(
                    e,
                    "; Decode this error by running `npx @solana/errors decode -- "
                  )
                  .concat(e);
                return (
                  Object.keys(t).length &&
                    (r += " '".concat(
                      btoa(Object.entries(t).map(eM).join("&")),
                      "'"
                    )),
                  "".concat(r, "`")
                );
              }
            })(e, r),
            n
          ),
            (0, eU._)(this, "cause", this.cause),
            (0, eU._)(this, "context", void 0),
            (this.context = { __code: e, ...r }),
            (this.name = "SolanaError");
        }
      };
      function eF(e, t) {
        return "fixedSize" in t ? t.fixedSize : t.getSizeFromValue(e);
      }
      function eD(e) {
        return Object.freeze({
          ...e,
          encode: (t) => {
            let r = new Uint8Array(eF(t, e));
            return e.write(t, r, 0), r;
          },
        });
      }
      function eL(e) {
        return Object.freeze({
          ...e,
          decode: function (t) {
            let r =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 0;
            return e.read(t, r)[0];
          },
        });
      }
      function ez(e) {
        return "fixedSize" in e && "number" == typeof e.fixedSize;
      }
      function eG(e, t) {
        if (ez(e) !== ez(t)) throw new ej(8078004);
        if (ez(e) && ez(t) && e.fixedSize !== t.fixedSize)
          throw new ej(8078005, {
            decoderFixedSize: t.fixedSize,
            encoderFixedSize: e.fixedSize,
          });
        if (!ez(e) && !ez(t) && e.maxSize !== t.maxSize)
          throw new ej(8078006, {
            decoderMaxSize: t.maxSize,
            encoderMaxSize: e.maxSize,
          });
        return {
          ...t,
          ...e,
          decode: t.decode,
          encode: e.encode,
          read: t.read,
          write: e.write,
        };
      }
      function eW(e, t, r) {
        let n =
            arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : 0,
          a = r.length - n;
        if (a < t)
          throw new ej(8078001, {
            bytesLength: a,
            codecDescription: e,
            expected: t,
          });
      }
      function eV(e, t) {
        return eG(
          eD({
            fixedSize: t,
            write: (r, n, a) => {
              let i = e.encode(r),
                s = i.length > t ? i.slice(0, t) : i;
              return n.set(s, a), a + t;
            },
          }),
          eL({
            fixedSize: t,
            read: (r, n) => {
              let a, i;
              eW("fixCodecSize", t, r, n),
                (n > 0 || r.length > t) && (r = r.slice(n, n + t)),
                ez(e) &&
                  ((a = r),
                  (i = e.fixedSize),
                  (r = ((e, t) => {
                    if (e.length >= t) return e;
                    let r = new Uint8Array(t).fill(0);
                    return r.set(e), r;
                  })(a.length <= i ? a : a.slice(0, i), i)));
              let [s] = e.read(r, 0);
              return [s, n + t];
            },
          })
        );
      }
      var eH = ((e) => (
        (e[(e.Little = 0)] = "Little"), (e[(e.Big = 1)] = "Big"), e
      ))(eH || {});
      function eK(e) {
        return (null == e ? void 0 : e.endian) !== 1;
      }
      var eq = function () {
          var e;
          let t =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          return eD({
            fixedSize: (e = {
              config: t,
              name: "u64",
              range: [0n, BigInt("0xffffffffffffffff")],
              set: (e, t, r) => e.setBigUint64(0, BigInt(t), r),
              size: 8,
            }).size,
            write(t, r, n) {
              e.range &&
                (function (e, t, r, n) {
                  if (n < t || n > r)
                    throw new ej(8078011, {
                      codecDescription: e,
                      max: r,
                      min: t,
                      value: n,
                    });
                })(e.name, e.range[0], e.range[1], t);
              let a = new ArrayBuffer(e.size);
              return (
                e.set(new DataView(a), t, eK(e.config)),
                r.set(new Uint8Array(a), n),
                n + e.size
              );
            },
          });
        },
        eQ = function () {
          var e;
          let t =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          return eL({
            fixedSize: (e = {
              config: t,
              get: (e, t) => e.getBigUint64(0, t),
              name: "u64",
              size: 8,
            }).size,
            read(t) {
              let r =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 0;
              !(function (e, t) {
                let r =
                  arguments.length > 2 && void 0 !== arguments[2]
                    ? arguments[2]
                    : 0;
                if (t.length - r <= 0)
                  throw new ej(8078e3, { codecDescription: e });
              })(e.name, t, r),
                eW(e.name, e.size, t, r);
              let n = new DataView(
                (function (e, t, r) {
                  let n = e.byteOffset + (null != t ? t : 0),
                    a = null != r ? r : e.byteLength;
                  return e.buffer.slice(n, n + a);
                })(t, r, e.size)
              );
              return [e.get(n, eK(e.config)), r + e.size];
            },
          });
        },
        eJ = function () {
          let e =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          return eG(eq(e), eQ(e));
        };
      function eZ(e) {
        return e.reduce((e, t) => (null === e || null === t ? null : e + t), 0);
      }
      function eY(e) {
        return ez(e) ? e.fixedSize : null;
      }
      function eX(e) {
        var t;
        return ez(e) ? e.fixedSize : null != (t = e.maxSize) ? t : null;
      }
      function e$() {
        return eG(
          eD({
            getSizeFromValue: (e) => e.length,
            write: (e, t, r) => (t.set(e, r), r + e.length),
          }),
          eL({
            read: (e, t) => {
              let r = e.slice(t);
              return [r, t + r.length];
            },
          })
        );
      }
      function e0(e) {
        return eG(
          (function (e) {
            var t;
            let r = e.map((e) => {
                let [, t] = e;
                return t;
              }),
              n = eZ(r.map(eY)),
              a = null != (t = eZ(r.map(eX))) ? t : void 0;
            return eD({
              ...(null === n
                ? {
                    getSizeFromValue: (t) =>
                      e
                        .map((e) => {
                          let [r, n] = e;
                          return eF(t[r], n);
                        })
                        .reduce((e, t) => e + t, 0),
                    maxSize: a,
                  }
                : { fixedSize: n }),
              write: (t, r, n) => (
                e.forEach((e) => {
                  let [a, i] = e;
                  n = i.write(t[a], r, n);
                }),
                n
              ),
            });
          })(e),
          (function (e) {
            var t;
            let r = e.map((e) => {
                let [, t] = e;
                return t;
              }),
              n = eZ(r.map(eY)),
              a = null != (t = eZ(r.map(eX))) ? t : void 0;
            return eL({
              ...(null === n ? { maxSize: a } : { fixedSize: n }),
              read: (t, r) => {
                let n = {};
                return (
                  e.forEach((e) => {
                    let [a, i] = e,
                      [s, o] = i.read(t, r);
                    (r = o), (n[a] = s);
                  }),
                  [n, r]
                );
              },
            });
          })(e)
        );
      }
      e0([
        ["updateAuthority", eV(e$(), 32)],
        ["mint", eV(e$(), 32)],
        ["size", eJ()],
        ["maxSize", eJ()],
      ]).fixedSize,
        e0([
          ["mint", eV(e$(), 32)],
          ["group", eV(e$(), 32)],
          ["memberNumber", eJ()],
        ]).fixedSize,
        (0, ed.struct)([eR("authority"), eR("memberAddress")]).span,
        (0, ed.struct)([eR("authority"), eR("groupAddress")]).span,
        (0, ed.struct)([]).span,
        (0, ed.struct)([
          eR("rateAuthority"),
          (0, ed.ns64)("initializationTimestamp"),
          (0, ed.s16)("preUpdateAverageRate"),
          (0, ed.ns64)("lastUpdateTimestamp"),
          (0, ed.s16)("currentRate"),
        ]).span,
        (0, ed.struct)([eO("requireIncomingTransferMemos")]).span,
        (0, ed.struct)([eR("authority"), eR("metadataAddress")]).span,
        (0, ed.struct)([eR("closeAuthority")]).span;
      let e1 = (0, ed.struct)([]);
      function e2(e) {
        return (0, ed.struct)(
          [
            eg("epoch"),
            eg("maximumFee"),
            (0, ed.u16)("transferFeeBasisPoints"),
          ],
          e
        );
      }
      e1.span,
        e1.span,
        (0, ed.struct)([eR("authority"), eO("paused")]).span,
        (0, ed.struct)([]).span,
        (0, ed.struct)([eR("delegate")]).span,
        (0, ed.struct)([
          eR("authority"),
          (0, ed.f64)("multiplier"),
          eg("newMultiplierEffectiveTimestamp"),
          (0, ed.f64)("newMultiplier"),
        ]).span,
        BigInt(1e4),
        (0, ed.struct)([
          eR("transferFeeConfigAuthority"),
          eR("withdrawWithheldAuthority"),
          eg("withheldAmount"),
          e2("olderTransferFee"),
          e2("newerTransferFee"),
        ]).span,
        (0, ed.struct)([eg("withheldAmount")]).span,
        (0, ed.struct)([eR("authority"), eR("programId")]).span,
        (0, ed.struct)([eO("transferring")]).span;
      let e3 = (0, ed.struct)([
          (0, ed.u8)("discriminator"),
          (0, ed.blob)(32, "addressConfig"),
          eO("isSigner"),
          eO("isWritable"),
        ]),
        e4 = (0, ed.struct)([
          (0, ed.u32)("count"),
          (0, ed.seq)(e3, (0, ed.greedy)(e3.span), "extraAccounts"),
        ]);
      async function e8(e, t) {
        let r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
          n =
            arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : el,
          a =
            arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : ec;
        if (!r && !eo.PublicKey.isOnCurve(t.toBuffer())) throw new eI();
        let [i] = await eo.PublicKey.findProgramAddress(
          [t.toBuffer(), n.toBuffer(), e.toBuffer()],
          a
        );
        return i;
      }
      (0, ed.struct)([
        eg("instructionDiscriminator"),
        (0, ed.u32)("length"),
        e4.replicate("extraAccountsList"),
      ]),
        (function (e) {
          (e[(e.Uninitialized = 0)] = "Uninitialized"),
            (e[(e.TransferFeeConfig = 1)] = "TransferFeeConfig"),
            (e[(e.TransferFeeAmount = 2)] = "TransferFeeAmount"),
            (e[(e.MintCloseAuthority = 3)] = "MintCloseAuthority"),
            (e[(e.ConfidentialTransferMint = 4)] = "ConfidentialTransferMint"),
            (e[(e.ConfidentialTransferAccount = 5)] =
              "ConfidentialTransferAccount"),
            (e[(e.DefaultAccountState = 6)] = "DefaultAccountState"),
            (e[(e.ImmutableOwner = 7)] = "ImmutableOwner"),
            (e[(e.MemoTransfer = 8)] = "MemoTransfer"),
            (e[(e.NonTransferable = 9)] = "NonTransferable"),
            (e[(e.InterestBearingConfig = 10)] = "InterestBearingConfig"),
            (e[(e.CpiGuard = 11)] = "CpiGuard"),
            (e[(e.PermanentDelegate = 12)] = "PermanentDelegate"),
            (e[(e.NonTransferableAccount = 13)] = "NonTransferableAccount"),
            (e[(e.TransferHook = 14)] = "TransferHook"),
            (e[(e.TransferHookAccount = 15)] = "TransferHookAccount"),
            (e[(e.MetadataPointer = 18)] = "MetadataPointer"),
            (e[(e.TokenMetadata = 19)] = "TokenMetadata"),
            (e[(e.GroupPointer = 20)] = "GroupPointer"),
            (e[(e.TokenGroup = 21)] = "TokenGroup"),
            (e[(e.GroupMemberPointer = 22)] = "GroupMemberPointer"),
            (e[(e.TokenGroupMember = 23)] = "TokenGroupMember"),
            (e[(e.ScaledUiAmountConfig = 25)] = "ScaledUiAmountConfig"),
            (e[(e.PausableConfig = 26)] = "PausableConfig"),
            (e[(e.PausableAccount = 27)] = "PausableAccount");
        })(A || (A = {})),
        (0, ed.struct)([
          (0, ed.u32)("mintAuthorityOption"),
          eR("mintAuthority"),
          eg("supply"),
          (0, ed.u8)("decimals"),
          eO("isInitialized"),
          (0, ed.u32)("freezeAuthorityOption"),
          eR("freezeAuthority"),
        ]).span,
        !(function (e) {
          (e[(e.InitializeMint = 0)] = "InitializeMint"),
            (e[(e.InitializeAccount = 1)] = "InitializeAccount"),
            (e[(e.InitializeMultisig = 2)] = "InitializeMultisig"),
            (e[(e.Transfer = 3)] = "Transfer"),
            (e[(e.Approve = 4)] = "Approve"),
            (e[(e.Revoke = 5)] = "Revoke"),
            (e[(e.SetAuthority = 6)] = "SetAuthority"),
            (e[(e.MintTo = 7)] = "MintTo"),
            (e[(e.Burn = 8)] = "Burn"),
            (e[(e.CloseAccount = 9)] = "CloseAccount"),
            (e[(e.FreezeAccount = 10)] = "FreezeAccount"),
            (e[(e.ThawAccount = 11)] = "ThawAccount"),
            (e[(e.TransferChecked = 12)] = "TransferChecked"),
            (e[(e.ApproveChecked = 13)] = "ApproveChecked"),
            (e[(e.MintToChecked = 14)] = "MintToChecked"),
            (e[(e.BurnChecked = 15)] = "BurnChecked"),
            (e[(e.InitializeAccount2 = 16)] = "InitializeAccount2"),
            (e[(e.SyncNative = 17)] = "SyncNative"),
            (e[(e.InitializeAccount3 = 18)] = "InitializeAccount3"),
            (e[(e.InitializeMultisig2 = 19)] = "InitializeMultisig2"),
            (e[(e.InitializeMint2 = 20)] = "InitializeMint2"),
            (e[(e.GetAccountDataSize = 21)] = "GetAccountDataSize"),
            (e[(e.InitializeImmutableOwner = 22)] = "InitializeImmutableOwner"),
            (e[(e.AmountToUiAmount = 23)] = "AmountToUiAmount"),
            (e[(e.UiAmountToAmount = 24)] = "UiAmountToAmount"),
            (e[(e.InitializeMintCloseAuthority = 25)] =
              "InitializeMintCloseAuthority"),
            (e[(e.TransferFeeExtension = 26)] = "TransferFeeExtension"),
            (e[(e.ConfidentialTransferExtension = 27)] =
              "ConfidentialTransferExtension"),
            (e[(e.DefaultAccountStateExtension = 28)] =
              "DefaultAccountStateExtension"),
            (e[(e.Reallocate = 29)] = "Reallocate"),
            (e[(e.MemoTransferExtension = 30)] = "MemoTransferExtension"),
            (e[(e.CreateNativeMint = 31)] = "CreateNativeMint"),
            (e[(e.InitializeNonTransferableMint = 32)] =
              "InitializeNonTransferableMint"),
            (e[(e.InterestBearingMintExtension = 33)] =
              "InterestBearingMintExtension"),
            (e[(e.CpiGuardExtension = 34)] = "CpiGuardExtension"),
            (e[(e.InitializePermanentDelegate = 35)] =
              "InitializePermanentDelegate"),
            (e[(e.TransferHookExtension = 36)] = "TransferHookExtension"),
            (e[(e.MetadataPointerExtension = 39)] = "MetadataPointerExtension"),
            (e[(e.GroupPointerExtension = 40)] = "GroupPointerExtension"),
            (e[(e.GroupMemberPointerExtension = 41)] =
              "GroupMemberPointerExtension"),
            (e[(e.ScaledUiAmountExtension = 43)] = "ScaledUiAmountExtension"),
            (e[(e.PausableExtension = 44)] = "PausableExtension");
        })(E || (E = {}));
      let e5 = (0, ed.struct)([(0, ed.u8)("instruction"), eg("amount")]);
      var e6 = e.i(547957),
        e9 = e.i(289267),
        e7 = e.i(437957),
        te = e.i(632859),
        tt = e.i(526050),
        tr = e.i(607618),
        tn = e.i(238193),
        ta = e.i(526350),
        ti = e.i(917402),
        ts = e.i(14047),
        to = e.i(502373),
        tl = e.i(406371),
        tc =
          ((_ = new WeakMap()),
          (k = new WeakMap()),
          (N = new WeakMap()),
          (P = new WeakMap()),
          (T = new WeakSet()),
          (S = new WeakSet()),
          class extends to.Subscribable {
            bindMethods() {
              (this.mutate = this.mutate.bind(this)),
                (this.reset = this.reset.bind(this));
            }
            setOptions(e) {
              var t;
              let r = this.options;
              (this.options = (0, te._)(this, _).defaultMutationOptions(e)),
                (0, tl.shallowEqualObjects)(this.options, r) ||
                  (0, te._)(this, _)
                    .getMutationCache()
                    .notify({
                      type: "observerOptionsUpdated",
                      mutation: (0, te._)(this, N),
                      observer: this,
                    }),
                (null == r ? void 0 : r.mutationKey) &&
                this.options.mutationKey &&
                (0, tl.hashKey)(r.mutationKey) !==
                  (0, tl.hashKey)(this.options.mutationKey)
                  ? this.reset()
                  : (null == (t = (0, te._)(this, N))
                      ? void 0
                      : t.state.status) === "pending" &&
                    (0, te._)(this, N).setOptions(this.options);
            }
            onUnsubscribe() {
              if (!this.hasListeners()) {
                var e;
                null == (e = (0, te._)(this, N)) || e.removeObserver(this);
              }
            }
            onMutationUpdate(e) {
              (0, tn._)(this, T, tu).call(this),
                (0, tn._)(this, S, td).call(this, e);
            }
            getCurrentResult() {
              return (0, te._)(this, k);
            }
            reset() {
              var e;
              null == (e = (0, te._)(this, N)) || e.removeObserver(this),
                (0, tr._)(this, N, void 0),
                (0, tn._)(this, T, tu).call(this),
                (0, tn._)(this, S, td).call(this);
            }
            mutate(e, t) {
              var r;
              return (
                (0, tr._)(this, P, t),
                null == (r = (0, te._)(this, N)) || r.removeObserver(this),
                (0, tr._)(
                  this,
                  N,
                  (0, te._)(this, _)
                    .getMutationCache()
                    .build((0, te._)(this, _), this.options)
                ),
                (0, te._)(this, N).addObserver(this),
                (0, te._)(this, N).execute(e)
              );
            }
            constructor(e, t) {
              super(),
                (0, ta._)(this, T),
                (0, ta._)(this, S),
                (0, tt._)(this, _, { writable: !0, value: void 0 }),
                (0, tt._)(this, k, { writable: !0, value: void 0 }),
                (0, tt._)(this, N, { writable: !0, value: void 0 }),
                (0, tt._)(this, P, { writable: !0, value: void 0 }),
                (0, tr._)(this, _, e),
                this.setOptions(t),
                this.bindMethods(),
                (0, tn._)(this, T, tu).call(this);
            }
          });
      function tu() {
        var e, t;
        let r =
          null != (t = null == (e = (0, te._)(this, N)) ? void 0 : e.state)
            ? t
            : (0, ti.getDefaultState)();
        (0, tr._)(this, k, {
          ...r,
          isPending: "pending" === r.status,
          isSuccess: "success" === r.status,
          isError: "error" === r.status,
          isIdle: "idle" === r.status,
          mutate: this.mutate,
          reset: this.reset,
        });
      }
      function td(e) {
        ts.notifyManager.batch(() => {
          if ((0, te._)(this, P) && this.hasListeners()) {
            var t, r, n, a, i, s, o, l;
            let c = (0, te._)(this, k).variables,
              u = (0, te._)(this, k).context;
            (null == e ? void 0 : e.type) === "success"
              ? (null == (t = (r = (0, te._)(this, P)).onSuccess) ||
                  t.call(r, e.data, c, u),
                null == (n = (a = (0, te._)(this, P)).onSettled) ||
                  n.call(a, e.data, null, c, u))
              : (null == e ? void 0 : e.type) === "error" &&
                (null == (i = (s = (0, te._)(this, P)).onError) ||
                  i.call(s, e.error, c, u),
                null == (o = (l = (0, te._)(this, P)).onSettled) ||
                  o.call(l, void 0, e.error, c, u));
          }
          this.listeners.forEach((e) => {
            e((0, te._)(this, k));
          });
        });
      }
      var tf = e.i(185872),
        th = e.i(35676),
        tp = e.i(481104),
        tx = e.i(37819);
      class tg extends tx.BaseError {
        get docsBaseUrl() {
          return "https://wagmi.sh/react";
        }
        get version() {
          return "wagmi@".concat("2.16.0");
        }
        constructor() {
          super(...arguments),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "WagmiError",
            });
        }
      }
      class tb extends tg {
        constructor() {
          super("`useConfig` must be used within `WagmiProvider`.", {
            docsPath: "/api/WagmiProvider",
          }),
            Object.defineProperty(this, "name", {
              enumerable: !0,
              configurable: !0,
              writable: !0,
              value: "WagmiProviderNotFoundError",
            });
        }
      }
      function tm(e, t) {
        return function () {
          return e.apply(t, arguments);
        };
      }
      let { toString: ty } = Object.prototype,
        { getPrototypeOf: tw } = Object,
        { iterator: tv, toStringTag: tA } = Symbol,
        tE = ((e) => (t) => {
          let r = ty.call(t);
          return e[r] || (e[r] = r.slice(8, -1).toLowerCase());
        })(Object.create(null)),
        t_ = (e) => ((e = e.toLowerCase()), (t) => tE(t) === e),
        tk = (e) => (t) => typeof t === e,
        { isArray: tN } = Array,
        tP = tk("undefined"),
        tT = t_("ArrayBuffer"),
        tS = tk("string"),
        tO = tk("function"),
        tR = tk("number"),
        tC = (e) => null !== e && "object" == typeof e,
        tI = (e) => {
          if ("object" !== tE(e)) return !1;
          let t = tw(e);
          return (
            (null === t ||
              t === Object.prototype ||
              null === Object.getPrototypeOf(t)) &&
            !(tA in e) &&
            !(tv in e)
          );
        },
        tB = t_("Date"),
        tU = t_("File"),
        tM = t_("Blob"),
        tj = t_("FileList"),
        tF = t_("URLSearchParams"),
        [tD, tL, tz, tG] = [
          "ReadableStream",
          "Request",
          "Response",
          "Headers",
        ].map(t_);
      function tW(e, t) {
        let r,
          n,
          { allOwnKeys: a = !1 } =
            arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
        if (null != e)
          if (("object" != typeof e && (e = [e]), tN(e)))
            for (r = 0, n = e.length; r < n; r++) t.call(null, e[r], r, e);
          else {
            let n,
              i = a ? Object.getOwnPropertyNames(e) : Object.keys(e),
              s = i.length;
            for (r = 0; r < s; r++) (n = i[r]), t.call(null, e[n], n, e);
          }
      }
      function tV(e, t) {
        let r;
        t = t.toLowerCase();
        let n = Object.keys(e),
          a = n.length;
        for (; a-- > 0; ) if (t === (r = n[a]).toLowerCase()) return r;
        return null;
      }
      let tH =
          "undefined" != typeof globalThis
            ? globalThis
            : "undefined" != typeof self
            ? self
            : "undefined" != typeof window
            ? window
            : globalThis,
        tK = (e) => !tP(e) && e !== tH,
        tq = (
          (e) => (t) =>
            e && t instanceof e
        )("undefined" != typeof Uint8Array && tw(Uint8Array)),
        tQ = t_("HTMLFormElement"),
        tJ = ((e) => {
          let { hasOwnProperty: t } = e;
          return (e, r) => t.call(e, r);
        })(Object.prototype),
        tZ = t_("RegExp"),
        tY = (e, t) => {
          let r = Object.getOwnPropertyDescriptors(e),
            n = {};
          tW(r, (r, a) => {
            let i;
            !1 !== (i = t(r, a, e)) && (n[a] = i || r);
          }),
            Object.defineProperties(e, n);
        },
        tX = t_("AsyncFunction"),
        t$ =
          ((b = "function" == typeof setImmediate),
          (m = tO(tH.postMessage)),
          b
            ? setImmediate
            : m
            ? ((e, t) => (
                tH.addEventListener(
                  "message",
                  (r) => {
                    let { source: n, data: a } = r;
                    n === tH && a === e && t.length && t.shift()();
                  },
                  !1
                ),
                (r) => {
                  t.push(r), tH.postMessage(e, "*");
                }
              ))("axios@".concat(Math.random()), [])
            : (e) => setTimeout(e)),
        t0 =
          "undefined" != typeof queueMicrotask
            ? queueMicrotask.bind(tH)
            : (void 0 !== eB.default && eB.default.nextTick) || t$,
        t1 = {
          isArray: tN,
          isArrayBuffer: tT,
          isBuffer: function (e) {
            return (
              null !== e &&
              !tP(e) &&
              null !== e.constructor &&
              !tP(e.constructor) &&
              tO(e.constructor.isBuffer) &&
              e.constructor.isBuffer(e)
            );
          },
          isFormData: (e) => {
            let t;
            return (
              e &&
              (("function" == typeof FormData && e instanceof FormData) ||
                (tO(e.append) &&
                  ("formdata" === (t = tE(e)) ||
                    ("object" === t &&
                      tO(e.toString) &&
                      "[object FormData]" === e.toString()))))
            );
          },
          isArrayBufferView: function (e) {
            return "undefined" != typeof ArrayBuffer && ArrayBuffer.isView
              ? ArrayBuffer.isView(e)
              : e && e.buffer && tT(e.buffer);
          },
          isString: tS,
          isNumber: tR,
          isBoolean: (e) => !0 === e || !1 === e,
          isObject: tC,
          isPlainObject: tI,
          isReadableStream: tD,
          isRequest: tL,
          isResponse: tz,
          isHeaders: tG,
          isUndefined: tP,
          isDate: tB,
          isFile: tU,
          isBlob: tM,
          isRegExp: tZ,
          isFunction: tO,
          isStream: (e) => tC(e) && tO(e.pipe),
          isURLSearchParams: tF,
          isTypedArray: tq,
          isFileList: tj,
          forEach: tW,
          merge: function e() {
            let { caseless: t } = (tK(this) && this) || {},
              r = {},
              n = (n, a) => {
                let i = (t && tV(r, a)) || a;
                tI(r[i]) && tI(n)
                  ? (r[i] = e(r[i], n))
                  : tI(n)
                  ? (r[i] = e({}, n))
                  : tN(n)
                  ? (r[i] = n.slice())
                  : (r[i] = n);
              };
            for (let e = 0, t = arguments.length; e < t; e++)
              arguments[e] && tW(arguments[e], n);
            return r;
          },
          extend: function (e, t, r) {
            let { allOwnKeys: n } =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : {};
            return (
              tW(
                t,
                (t, n) => {
                  r && tO(t) ? (e[n] = tm(t, r)) : (e[n] = t);
                },
                { allOwnKeys: n }
              ),
              e
            );
          },
          trim: (e) =>
            e.trim
              ? e.trim()
              : e.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, ""),
          stripBOM: (e) => (65279 === e.charCodeAt(0) && (e = e.slice(1)), e),
          inherits: (e, t, r, n) => {
            (e.prototype = Object.create(t.prototype, n)),
              (e.prototype.constructor = e),
              Object.defineProperty(e, "super", { value: t.prototype }),
              r && Object.assign(e.prototype, r);
          },
          toFlatObject: (e, t, r, n) => {
            let a,
              i,
              s,
              o = {};
            if (((t = t || {}), null == e)) return t;
            do {
              for (i = (a = Object.getOwnPropertyNames(e)).length; i-- > 0; )
                (s = a[i]),
                  (!n || n(s, e, t)) && !o[s] && ((t[s] = e[s]), (o[s] = !0));
              e = !1 !== r && tw(e);
            } while (e && (!r || r(e, t)) && e !== Object.prototype);
            return t;
          },
          kindOf: tE,
          kindOfTest: t_,
          endsWith: (e, t, r) => {
            (e = String(e)),
              (void 0 === r || r > e.length) && (r = e.length),
              (r -= t.length);
            let n = e.indexOf(t, r);
            return -1 !== n && n === r;
          },
          toArray: (e) => {
            if (!e) return null;
            if (tN(e)) return e;
            let t = e.length;
            if (!tR(t)) return null;
            let r = Array(t);
            for (; t-- > 0; ) r[t] = e[t];
            return r;
          },
          forEachEntry: (e, t) => {
            let r,
              n = (e && e[tv]).call(e);
            for (; (r = n.next()) && !r.done; ) {
              let n = r.value;
              t.call(e, n[0], n[1]);
            }
          },
          matchAll: (e, t) => {
            let r,
              n = [];
            for (; null !== (r = e.exec(t)); ) n.push(r);
            return n;
          },
          isHTMLForm: tQ,
          hasOwnProperty: tJ,
          hasOwnProp: tJ,
          reduceDescriptors: tY,
          freezeMethods: (e) => {
            tY(e, (t, r) => {
              if (tO(e) && -1 !== ["arguments", "caller", "callee"].indexOf(r))
                return !1;
              if (tO(e[r])) {
                if (((t.enumerable = !1), "writable" in t)) {
                  t.writable = !1;
                  return;
                }
                t.set ||
                  (t.set = () => {
                    throw Error("Can not rewrite read-only method '" + r + "'");
                  });
              }
            });
          },
          toObjectSet: (e, t) => {
            let r = {};
            return (
              (tN(e) ? e : String(e).split(t)).forEach((e) => {
                r[e] = !0;
              }),
              r
            );
          },
          toCamelCase: (e) =>
            e
              .toLowerCase()
              .replace(/[-_\s]([a-z\d])(\w*)/g, function (e, t, r) {
                return t.toUpperCase() + r;
              }),
          noop: () => {},
          toFiniteNumber: (e, t) =>
            null != e && Number.isFinite((e *= 1)) ? e : t,
          findKey: tV,
          global: tH,
          isContextDefined: tK,
          isSpecCompliantForm: function (e) {
            return !!(e && tO(e.append) && "FormData" === e[tA] && e[tv]);
          },
          toJSONObject: (e) => {
            let t = Array(10),
              r = (e, n) => {
                if (tC(e)) {
                  if (t.indexOf(e) >= 0) return;
                  if (!("toJSON" in e)) {
                    t[n] = e;
                    let a = tN(e) ? [] : {};
                    return (
                      tW(e, (e, t) => {
                        let i = r(e, n + 1);
                        tP(i) || (a[t] = i);
                      }),
                      (t[n] = void 0),
                      a
                    );
                  }
                }
                return e;
              };
            return r(e, 0);
          },
          isAsyncFn: tX,
          isThenable: (e) => e && (tC(e) || tO(e)) && tO(e.then) && tO(e.catch),
          setImmediate: t$,
          asap: t0,
          isIterable: (e) => null != e && tO(e[tv]),
        };
      function t2(e, t, r, n, a) {
        Error.call(this),
          Error.captureStackTrace
            ? Error.captureStackTrace(this, this.constructor)
            : (this.stack = Error().stack),
          (this.message = e),
          (this.name = "AxiosError"),
          t && (this.code = t),
          r && (this.config = r),
          n && (this.request = n),
          a &&
            ((this.response = a), (this.status = a.status ? a.status : null));
      }
      t1.inherits(t2, Error, {
        toJSON: function () {
          return {
            message: this.message,
            name: this.name,
            description: this.description,
            number: this.number,
            fileName: this.fileName,
            lineNumber: this.lineNumber,
            columnNumber: this.columnNumber,
            stack: this.stack,
            config: t1.toJSONObject(this.config),
            code: this.code,
            status: this.status,
          };
        },
      });
      let t3 = t2.prototype,
        t4 = {};
      function t8(e) {
        return t1.isPlainObject(e) || t1.isArray(e);
      }
      function t5(e) {
        return t1.endsWith(e, "[]") ? e.slice(0, -2) : e;
      }
      function t6(e, t, r) {
        return e
          ? e
              .concat(t)
              .map(function (e, t) {
                return (e = t5(e)), !r && t ? "[" + e + "]" : e;
              })
              .join(r ? "." : "")
          : t;
      }
      [
        "ERR_BAD_OPTION_VALUE",
        "ERR_BAD_OPTION",
        "ECONNABORTED",
        "ETIMEDOUT",
        "ERR_NETWORK",
        "ERR_FR_TOO_MANY_REDIRECTS",
        "ERR_DEPRECATED",
        "ERR_BAD_RESPONSE",
        "ERR_BAD_REQUEST",
        "ERR_CANCELED",
        "ERR_NOT_SUPPORT",
        "ERR_INVALID_URL",
      ].forEach((e) => {
        t4[e] = { value: e };
      }),
        Object.defineProperties(t2, t4),
        Object.defineProperty(t3, "isAxiosError", { value: !0 }),
        (t2.from = (e, t, r, n, a, i) => {
          let s = Object.create(t3);
          return (
            t1.toFlatObject(
              e,
              s,
              function (e) {
                return e !== Error.prototype;
              },
              (e) => "isAxiosError" !== e
            ),
            t2.call(s, e.message, t, r, n, a),
            (s.cause = e),
            (s.name = e.name),
            i && Object.assign(s, i),
            s
          );
        });
      let t9 = t1.toFlatObject(t1, {}, null, function (e) {
          return /^is[A-Z]/.test(e);
        }),
        t7 = function (e, t, r) {
          if (!t1.isObject(e)) throw TypeError("target must be an object");
          t = t || new FormData();
          let n = (r = t1.toFlatObject(
              r,
              { metaTokens: !0, dots: !1, indexes: !1 },
              !1,
              function (e, t) {
                return !t1.isUndefined(t[e]);
              }
            )).metaTokens,
            a = r.visitor || c,
            i = r.dots,
            s = r.indexes,
            o =
              (r.Blob || ("undefined" != typeof Blob && Blob)) &&
              t1.isSpecCompliantForm(t);
          if (!t1.isFunction(a)) throw TypeError("visitor must be a function");
          function l(e) {
            if (null === e) return "";
            if (t1.isDate(e)) return e.toISOString();
            if (t1.isBoolean(e)) return e.toString();
            if (!o && t1.isBlob(e))
              throw new t2("Blob is not supported. Use a Buffer instead.");
            return t1.isArrayBuffer(e) || t1.isTypedArray(e)
              ? o && "function" == typeof Blob
                ? new Blob([e])
                : eu.Buffer.from(e)
              : e;
          }
          function c(e, r, a) {
            let o = e;
            if (e && !a && "object" == typeof e)
              if (t1.endsWith(r, "{}"))
                (r = n ? r : r.slice(0, -2)), (e = JSON.stringify(e));
              else {
                var c;
                if (
                  (t1.isArray(e) && ((c = e), t1.isArray(c) && !c.some(t8))) ||
                  ((t1.isFileList(e) || t1.endsWith(r, "[]")) &&
                    (o = t1.toArray(e)))
                )
                  return (
                    (r = t5(r)),
                    o.forEach(function (e, n) {
                      t1.isUndefined(e) ||
                        null === e ||
                        t.append(
                          !0 === s ? t6([r], n, i) : null === s ? r : r + "[]",
                          l(e)
                        );
                    }),
                    !1
                  );
              }
            return !!t8(e) || (t.append(t6(a, r, i), l(e)), !1);
          }
          let u = [],
            d = Object.assign(t9, {
              defaultVisitor: c,
              convertValue: l,
              isVisitable: t8,
            });
          if (!t1.isObject(e)) throw TypeError("data must be an object");
          return (
            !(function e(r, n) {
              if (!t1.isUndefined(r)) {
                if (-1 !== u.indexOf(r))
                  throw Error("Circular reference detected in " + n.join("."));
                u.push(r),
                  t1.forEach(r, function (r, i) {
                    !0 ===
                      (!(t1.isUndefined(r) || null === r) &&
                        a.call(t, r, t1.isString(i) ? i.trim() : i, n, d)) &&
                      e(r, n ? n.concat(i) : [i]);
                  }),
                  u.pop();
              }
            })(e),
            t
          );
        };
      function re(e) {
        let t = {
          "!": "%21",
          "'": "%27",
          "(": "%28",
          ")": "%29",
          "~": "%7E",
          "%20": "+",
          "%00": "\0",
        };
        return encodeURIComponent(e).replace(/[!'()~]|%20|%00/g, function (e) {
          return t[e];
        });
      }
      function rt(e, t) {
        (this._pairs = []), e && t7(e, this, t);
      }
      let rr = rt.prototype;
      function rn(e) {
        return encodeURIComponent(e)
          .replace(/%3A/gi, ":")
          .replace(/%24/g, "$")
          .replace(/%2C/gi, ",")
          .replace(/%20/g, "+")
          .replace(/%5B/gi, "[")
          .replace(/%5D/gi, "]");
      }
      function ra(e, t, r) {
        let n;
        if (!t) return e;
        let a = (r && r.encode) || rn;
        t1.isFunction(r) && (r = { serialize: r });
        let i = r && r.serialize;
        if (
          (n = i
            ? i(t, r)
            : t1.isURLSearchParams(t)
            ? t.toString()
            : new rt(t, r).toString(a))
        ) {
          let t = e.indexOf("#");
          -1 !== t && (e = e.slice(0, t)),
            (e += (-1 === e.indexOf("?") ? "?" : "&") + n);
        }
        return e;
      }
      (rr.append = function (e, t) {
        this._pairs.push([e, t]);
      }),
        (rr.toString = function (e) {
          let t = e
            ? function (t) {
                return e.call(this, t, re);
              }
            : re;
          return this._pairs
            .map(function (e) {
              return t(e[0]) + "=" + t(e[1]);
            }, "")
            .join("&");
        });
      let ri = class {
          use(e, t, r) {
            return (
              this.handlers.push({
                fulfilled: e,
                rejected: t,
                synchronous: !!r && r.synchronous,
                runWhen: r ? r.runWhen : null,
              }),
              this.handlers.length - 1
            );
          }
          eject(e) {
            this.handlers[e] && (this.handlers[e] = null);
          }
          clear() {
            this.handlers && (this.handlers = []);
          }
          forEach(e) {
            t1.forEach(this.handlers, function (t) {
              null !== t && e(t);
            });
          }
          constructor() {
            this.handlers = [];
          }
        },
        rs = {
          silentJSONParsing: !0,
          forcedJSONParsing: !0,
          clarifyTimeoutError: !1,
        },
        ro = "undefined" != typeof URLSearchParams ? URLSearchParams : rt,
        rl = "undefined" != typeof FormData ? FormData : null,
        rc = "undefined" != typeof Blob ? Blob : null;
      e.s(
        {
          hasBrowserEnv: () => ru,
          hasStandardBrowserEnv: () => rf,
          hasStandardBrowserWebWorkerEnv: () => rh,
          navigator: () => rd,
          origin: () => rp,
        },
        417273
      );
      let ru = "undefined" != typeof window && "undefined" != typeof document,
        rd = ("object" == typeof navigator && navigator) || void 0,
        rf =
          ru &&
          (!rd ||
            0 > ["ReactNative", "NativeScript", "NS"].indexOf(rd.product)),
        rh =
          "undefined" != typeof WorkerGlobalScope &&
          self instanceof WorkerGlobalScope &&
          "function" == typeof self.importScripts,
        rp = (ru && window.location.href) || "http://localhost",
        rx = {
          ...e.i(417273),
          isBrowser: !0,
          classes: { URLSearchParams: ro, FormData: rl, Blob: rc },
          protocols: ["http", "https", "file", "blob", "url", "data"],
        },
        rg = function (e) {
          if (t1.isFormData(e) && t1.isFunction(e.entries)) {
            let t = {};
            return (
              t1.forEachEntry(e, (e, r) => {
                !(function e(t, r, n, a) {
                  let i = t[a++];
                  if ("__proto__" === i) return !0;
                  let s = Number.isFinite(+i),
                    o = a >= t.length;
                  return (
                    ((i = !i && t1.isArray(n) ? n.length : i), o)
                      ? t1.hasOwnProp(n, i)
                        ? (n[i] = [n[i], r])
                        : (n[i] = r)
                      : ((n[i] && t1.isObject(n[i])) || (n[i] = []),
                        e(t, r, n[i], a) &&
                          t1.isArray(n[i]) &&
                          (n[i] = (function (e) {
                            let t,
                              r,
                              n = {},
                              a = Object.keys(e),
                              i = a.length;
                            for (t = 0; t < i; t++) n[(r = a[t])] = e[r];
                            return n;
                          })(n[i]))),
                    !s
                  );
                })(
                  t1
                    .matchAll(/\w+|\[(\w*)]/g, e)
                    .map((e) => ("[]" === e[0] ? "" : e[1] || e[0])),
                  r,
                  t,
                  0
                );
              }),
              t
            );
          }
          return null;
        },
        rb = {
          transitional: rs,
          adapter: ["xhr", "http", "fetch"],
          transformRequest: [
            function (e, t) {
              let r,
                n = t.getContentType() || "",
                a = n.indexOf("application/json") > -1,
                i = t1.isObject(e);
              if (
                (i && t1.isHTMLForm(e) && (e = new FormData(e)),
                t1.isFormData(e))
              )
                return a ? JSON.stringify(rg(e)) : e;
              if (
                t1.isArrayBuffer(e) ||
                t1.isBuffer(e) ||
                t1.isStream(e) ||
                t1.isFile(e) ||
                t1.isBlob(e) ||
                t1.isReadableStream(e)
              )
                return e;
              if (t1.isArrayBufferView(e)) return e.buffer;
              if (t1.isURLSearchParams(e))
                return (
                  t.setContentType(
                    "application/x-www-form-urlencoded;charset=utf-8",
                    !1
                  ),
                  e.toString()
                );
              if (i) {
                if (n.indexOf("application/x-www-form-urlencoded") > -1) {
                  var s, o;
                  return ((s = e),
                  (o = this.formSerializer),
                  t7(
                    s,
                    new rx.classes.URLSearchParams(),
                    Object.assign(
                      {
                        visitor: function (e, t, r, n) {
                          return rx.isNode && t1.isBuffer(e)
                            ? (this.append(t, e.toString("base64")), !1)
                            : n.defaultVisitor.apply(this, arguments);
                        },
                      },
                      o
                    )
                  )).toString();
                }
                if (
                  (r = t1.isFileList(e)) ||
                  n.indexOf("multipart/form-data") > -1
                ) {
                  let t = this.env && this.env.FormData;
                  return t7(
                    r ? { "files[]": e } : e,
                    t && new t(),
                    this.formSerializer
                  );
                }
              }
              if (i || a) {
                t.setContentType("application/json", !1);
                var l = e;
                if (t1.isString(l))
                  try {
                    return (0, JSON.parse)(l), t1.trim(l);
                  } catch (e) {
                    if ("SyntaxError" !== e.name) throw e;
                  }
                return (0, JSON.stringify)(l);
              }
              return e;
            },
          ],
          transformResponse: [
            function (e) {
              let t = this.transitional || rb.transitional,
                r = t && t.forcedJSONParsing,
                n = "json" === this.responseType;
              if (t1.isResponse(e) || t1.isReadableStream(e)) return e;
              if (e && t1.isString(e) && ((r && !this.responseType) || n)) {
                let r = t && t.silentJSONParsing;
                try {
                  return JSON.parse(e);
                } catch (e) {
                  if (!r && n) {
                    if ("SyntaxError" === e.name)
                      throw t2.from(
                        e,
                        t2.ERR_BAD_RESPONSE,
                        this,
                        null,
                        this.response
                      );
                    throw e;
                  }
                }
              }
              return e;
            },
          ],
          timeout: 0,
          xsrfCookieName: "XSRF-TOKEN",
          xsrfHeaderName: "X-XSRF-TOKEN",
          maxContentLength: -1,
          maxBodyLength: -1,
          env: { FormData: rx.classes.FormData, Blob: rx.classes.Blob },
          validateStatus: function (e) {
            return e >= 200 && e < 300;
          },
          headers: {
            common: {
              Accept: "application/json, text/plain, */*",
              "Content-Type": void 0,
            },
          },
        };
      t1.forEach(["delete", "get", "head", "post", "put", "patch"], (e) => {
        rb.headers[e] = {};
      });
      let rm = t1.toObjectSet([
          "age",
          "authorization",
          "content-length",
          "content-type",
          "etag",
          "expires",
          "from",
          "host",
          "if-modified-since",
          "if-unmodified-since",
          "last-modified",
          "location",
          "max-forwards",
          "proxy-authorization",
          "referer",
          "retry-after",
          "user-agent",
        ]),
        ry = Symbol("internals");
      function rw(e) {
        return e && String(e).trim().toLowerCase();
      }
      function rv(e) {
        return !1 === e || null == e
          ? e
          : t1.isArray(e)
          ? e.map(rv)
          : String(e);
      }
      function rA(e, t, r, n, a) {
        if (t1.isFunction(n)) return n.call(this, t, r);
        if ((a && (t = r), t1.isString(t))) {
          if (t1.isString(n)) return -1 !== t.indexOf(n);
          if (t1.isRegExp(n)) return n.test(t);
        }
      }
      class rE {
        set(e, t, r) {
          let n = this;
          function a(e, t, r) {
            let a = rw(t);
            if (!a) throw Error("header name must be a non-empty string");
            let i = t1.findKey(n, a);
            (i &&
              void 0 !== n[i] &&
              !0 !== r &&
              (void 0 !== r || !1 === n[i])) ||
              (n[i || t] = rv(e));
          }
          let i = (e, t) => t1.forEach(e, (e, r) => a(e, r, t));
          if (t1.isPlainObject(e) || e instanceof this.constructor) i(e, t);
          else {
            let n;
            if (
              t1.isString(e) &&
              (e = e.trim()) &&
              ((n = e), !/^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(n.trim()))
            )
              i(
                ((e) => {
                  let t,
                    r,
                    n,
                    a = {};
                  return (
                    e &&
                      e.split("\n").forEach(function (e) {
                        (n = e.indexOf(":")),
                          (t = e.substring(0, n).trim().toLowerCase()),
                          (r = e.substring(n + 1).trim()),
                          !t ||
                            (a[t] && rm[t]) ||
                            ("set-cookie" === t
                              ? a[t]
                                ? a[t].push(r)
                                : (a[t] = [r])
                              : (a[t] = a[t] ? a[t] + ", " + r : r));
                      }),
                    a
                  );
                })(e),
                t
              );
            else if (t1.isObject(e) && t1.isIterable(e)) {
              let r = {},
                n,
                a;
              for (let t of e) {
                if (!t1.isArray(t))
                  throw TypeError(
                    "Object iterator must return a key-value pair"
                  );
                r[(a = t[0])] = (n = r[a])
                  ? t1.isArray(n)
                    ? [...n, t[1]]
                    : [n, t[1]]
                  : t[1];
              }
              i(r, t);
            } else null != e && a(t, e, r);
          }
          return this;
        }
        get(e, t) {
          if ((e = rw(e))) {
            let r = t1.findKey(this, e);
            if (r) {
              let e = this[r];
              if (!t) return e;
              if (!0 === t) {
                let t,
                  r = Object.create(null),
                  n = /([^\s,;=]+)\s*(?:=\s*([^,;]+))?/g;
                for (; (t = n.exec(e)); ) r[t[1]] = t[2];
                return r;
              }
              if (t1.isFunction(t)) return t.call(this, e, r);
              if (t1.isRegExp(t)) return t.exec(e);
              throw TypeError("parser must be boolean|regexp|function");
            }
          }
        }
        has(e, t) {
          if ((e = rw(e))) {
            let r = t1.findKey(this, e);
            return !!(
              r &&
              void 0 !== this[r] &&
              (!t || rA(this, this[r], r, t))
            );
          }
          return !1;
        }
        delete(e, t) {
          let r = this,
            n = !1;
          function a(e) {
            if ((e = rw(e))) {
              let a = t1.findKey(r, e);
              a && (!t || rA(r, r[a], a, t)) && (delete r[a], (n = !0));
            }
          }
          return t1.isArray(e) ? e.forEach(a) : a(e), n;
        }
        clear(e) {
          let t = Object.keys(this),
            r = t.length,
            n = !1;
          for (; r--; ) {
            let a = t[r];
            (!e || rA(this, this[a], a, e, !0)) && (delete this[a], (n = !0));
          }
          return n;
        }
        normalize(e) {
          let t = this,
            r = {};
          return (
            t1.forEach(this, (n, a) => {
              let i = t1.findKey(r, a);
              if (i) {
                (t[i] = rv(n)), delete t[a];
                return;
              }
              let s = e
                ? a
                    .trim()
                    .toLowerCase()
                    .replace(
                      /([a-z\d])(\w*)/g,
                      (e, t, r) => t.toUpperCase() + r
                    )
                : String(a).trim();
              s !== a && delete t[a], (t[s] = rv(n)), (r[s] = !0);
            }),
            this
          );
        }
        concat() {
          for (var e = arguments.length, t = Array(e), r = 0; r < e; r++)
            t[r] = arguments[r];
          return this.constructor.concat(this, ...t);
        }
        toJSON(e) {
          let t = Object.create(null);
          return (
            t1.forEach(this, (r, n) => {
              null != r &&
                !1 !== r &&
                (t[n] = e && t1.isArray(r) ? r.join(", ") : r);
            }),
            t
          );
        }
        [Symbol.iterator]() {
          return Object.entries(this.toJSON())[Symbol.iterator]();
        }
        toString() {
          return Object.entries(this.toJSON())
            .map((e) => {
              let [t, r] = e;
              return t + ": " + r;
            })
            .join("\n");
        }
        getSetCookie() {
          return this.get("set-cookie") || [];
        }
        get [Symbol.toStringTag]() {
          return "AxiosHeaders";
        }
        static from(e) {
          return e instanceof this ? e : new this(e);
        }
        static concat(e) {
          for (
            var t = arguments.length, r = Array(t > 1 ? t - 1 : 0), n = 1;
            n < t;
            n++
          )
            r[n - 1] = arguments[n];
          let a = new this(e);
          return r.forEach((e) => a.set(e)), a;
        }
        static accessor(e) {
          let t = (this[ry] = this[ry] = { accessors: {} }).accessors,
            r = this.prototype;
          function n(e) {
            let n = rw(e);
            if (!t[n]) {
              let a = t1.toCamelCase(" " + e);
              ["get", "set", "has"].forEach((t) => {
                Object.defineProperty(r, t + a, {
                  value: function (r, n, a) {
                    return this[t].call(this, e, r, n, a);
                  },
                  configurable: !0,
                });
              }),
                (t[n] = !0);
            }
          }
          return t1.isArray(e) ? e.forEach(n) : n(e), this;
        }
        constructor(e) {
          e && this.set(e);
        }
      }
      function r_(e, t) {
        let r = this || rb,
          n = t || r,
          a = rE.from(n.headers),
          i = n.data;
        return (
          t1.forEach(e, function (e) {
            i = e.call(r, i, a.normalize(), t ? t.status : void 0);
          }),
          a.normalize(),
          i
        );
      }
      function rk(e) {
        return !!(e && e.__CANCEL__);
      }
      function rN(e, t, r) {
        t2.call(this, null == e ? "canceled" : e, t2.ERR_CANCELED, t, r),
          (this.name = "CanceledError");
      }
      function rP(e, t, r) {
        let n = r.config.validateStatus;
        !r.status || !n || n(r.status)
          ? e(r)
          : t(
              new t2(
                "Request failed with status code " + r.status,
                [t2.ERR_BAD_REQUEST, t2.ERR_BAD_RESPONSE][
                  Math.floor(r.status / 100) - 4
                ],
                r.config,
                r.request,
                r
              )
            );
      }
      rE.accessor([
        "Content-Type",
        "Content-Length",
        "Accept",
        "Accept-Encoding",
        "User-Agent",
        "Authorization",
      ]),
        t1.reduceDescriptors(rE.prototype, (e, t) => {
          let { value: r } = e,
            n = t[0].toUpperCase() + t.slice(1);
          return {
            get: () => r,
            set(e) {
              this[n] = e;
            },
          };
        }),
        t1.freezeMethods(rE),
        t1.inherits(rN, t2, { __CANCEL__: !0 });
      let rT = function (e, t) {
          let r,
            n = Array((e = e || 10)),
            a = Array(e),
            i = 0,
            s = 0;
          return (
            (t = void 0 !== t ? t : 1e3),
            function (o) {
              let l = Date.now(),
                c = a[s];
              r || (r = l), (n[i] = o), (a[i] = l);
              let u = s,
                d = 0;
              for (; u !== i; ) (d += n[u++]), (u %= e);
              if (((i = (i + 1) % e) === s && (s = (s + 1) % e), l - r < t))
                return;
              let f = c && l - c;
              return f ? Math.round((1e3 * d) / f) : void 0;
            }
          );
        },
        rS = function (e, t) {
          let r,
            n,
            a = 0,
            i = 1e3 / t,
            s = function (t) {
              let i =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : Date.now();
              (a = i),
                (r = null),
                n && (clearTimeout(n), (n = null)),
                e.apply(null, t);
            };
          return [
            function () {
              for (var e = arguments.length, t = Array(e), o = 0; o < e; o++)
                t[o] = arguments[o];
              let l = Date.now(),
                c = l - a;
              c >= i
                ? s(t, l)
                : ((r = t),
                  n ||
                    (n = setTimeout(() => {
                      (n = null), s(r);
                    }, i - c)));
            },
            () => r && s(r),
          ];
        },
        rO = function (e, t) {
          let r =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : 3,
            n = 0,
            a = rT(50, 250);
          return rS((r) => {
            let i = r.loaded,
              s = r.lengthComputable ? r.total : void 0,
              o = i - n,
              l = a(o);
            (n = i),
              e({
                loaded: i,
                total: s,
                progress: s ? i / s : void 0,
                bytes: o,
                rate: l || void 0,
                estimated: l && s && i <= s ? (s - i) / l : void 0,
                event: r,
                lengthComputable: null != s,
                [t ? "download" : "upload"]: !0,
              });
          }, r);
        },
        rR = (e, t) => {
          let r = null != e;
          return [
            (n) => t[0]({ lengthComputable: r, total: e, loaded: n }),
            t[1],
          ];
        },
        rC = (e) =>
          function () {
            for (var t = arguments.length, r = Array(t), n = 0; n < t; n++)
              r[n] = arguments[n];
            return t1.asap(() => e(...r));
          },
        rI = rx.hasStandardBrowserEnv
          ? ((e, t) => (r) => (
              (r = new URL(r, rx.origin)),
              e.protocol === r.protocol &&
                e.host === r.host &&
                (t || e.port === r.port)
            ))(
              new URL(rx.origin),
              rx.navigator && /(msie|trident)/i.test(rx.navigator.userAgent)
            )
          : () => !0,
        rB = rx.hasStandardBrowserEnv
          ? {
              write(e, t, r, n, a, i) {
                let s = [e + "=" + encodeURIComponent(t)];
                t1.isNumber(r) &&
                  s.push("expires=" + new Date(r).toGMTString()),
                  t1.isString(n) && s.push("path=" + n),
                  t1.isString(a) && s.push("domain=" + a),
                  !0 === i && s.push("secure"),
                  (document.cookie = s.join("; "));
              },
              read(e) {
                let t = document.cookie.match(
                  RegExp("(^|;\\s*)(" + e + ")=([^;]*)")
                );
                return t ? decodeURIComponent(t[3]) : null;
              },
              remove(e) {
                this.write(e, "", Date.now() - 864e5);
              },
            }
          : { write() {}, read: () => null, remove() {} };
      function rU(e, t, r) {
        let n = !/^([a-z][a-z\d+\-.]*:)?\/\//i.test(t);
        return e && (n || !1 == r)
          ? t
            ? e.replace(/\/?\/$/, "") + "/" + t.replace(/^\/+/, "")
            : e
          : t;
      }
      let rM = (e) => (e instanceof rE ? { ...e } : e);
      function rj(e, t) {
        t = t || {};
        let r = {};
        function n(e, t, r, n) {
          return t1.isPlainObject(e) && t1.isPlainObject(t)
            ? t1.merge.call({ caseless: n }, e, t)
            : t1.isPlainObject(t)
            ? t1.merge({}, t)
            : t1.isArray(t)
            ? t.slice()
            : t;
        }
        function a(e, t, r, a) {
          return t1.isUndefined(t)
            ? t1.isUndefined(e)
              ? void 0
              : n(void 0, e, r, a)
            : n(e, t, r, a);
        }
        function i(e, t) {
          if (!t1.isUndefined(t)) return n(void 0, t);
        }
        function s(e, t) {
          return t1.isUndefined(t)
            ? t1.isUndefined(e)
              ? void 0
              : n(void 0, e)
            : n(void 0, t);
        }
        function o(r, a, i) {
          return i in t ? n(r, a) : i in e ? n(void 0, r) : void 0;
        }
        let l = {
          url: i,
          method: i,
          data: i,
          baseURL: s,
          transformRequest: s,
          transformResponse: s,
          paramsSerializer: s,
          timeout: s,
          timeoutMessage: s,
          withCredentials: s,
          withXSRFToken: s,
          adapter: s,
          responseType: s,
          xsrfCookieName: s,
          xsrfHeaderName: s,
          onUploadProgress: s,
          onDownloadProgress: s,
          decompress: s,
          maxContentLength: s,
          maxBodyLength: s,
          beforeRedirect: s,
          transport: s,
          httpAgent: s,
          httpsAgent: s,
          cancelToken: s,
          socketPath: s,
          responseEncoding: s,
          validateStatus: o,
          headers: (e, t, r) => a(rM(e), rM(t), r, !0),
        };
        return (
          t1.forEach(Object.keys(Object.assign({}, e, t)), function (n) {
            let i = l[n] || a,
              s = i(e[n], t[n], n);
            (t1.isUndefined(s) && i !== o) || (r[n] = s);
          }),
          r
        );
      }
      let rF = (e) => {
          let t,
            r = rj({}, e),
            {
              data: n,
              withXSRFToken: a,
              xsrfHeaderName: i,
              xsrfCookieName: s,
              headers: o,
              auth: l,
            } = r;
          if (
            ((r.headers = o = rE.from(o)),
            (r.url = ra(
              rU(r.baseURL, r.url, r.allowAbsoluteUrls),
              e.params,
              e.paramsSerializer
            )),
            l &&
              o.set(
                "Authorization",
                "Basic " +
                  btoa(
                    (l.username || "") +
                      ":" +
                      (l.password
                        ? unescape(encodeURIComponent(l.password))
                        : "")
                  )
              ),
            t1.isFormData(n))
          ) {
            if (rx.hasStandardBrowserEnv || rx.hasStandardBrowserWebWorkerEnv)
              o.setContentType(void 0);
            else if (!1 !== (t = o.getContentType())) {
              let [e, ...r] = t
                ? t
                    .split(";")
                    .map((e) => e.trim())
                    .filter(Boolean)
                : [];
              o.setContentType([e || "multipart/form-data", ...r].join("; "));
            }
          }
          if (
            rx.hasStandardBrowserEnv &&
            (a && t1.isFunction(a) && (a = a(r)), a || (!1 !== a && rI(r.url)))
          ) {
            let e = i && s && rB.read(s);
            e && o.set(i, e);
          }
          return r;
        },
        rD =
          "undefined" != typeof XMLHttpRequest &&
          function (e) {
            return new Promise(function (t, r) {
              let n,
                a,
                i,
                s,
                o,
                l = rF(e),
                c = l.data,
                u = rE.from(l.headers).normalize(),
                {
                  responseType: d,
                  onUploadProgress: f,
                  onDownloadProgress: h,
                } = l;
              function p() {
                s && s(),
                  o && o(),
                  l.cancelToken && l.cancelToken.unsubscribe(n),
                  l.signal && l.signal.removeEventListener("abort", n);
              }
              let x = new XMLHttpRequest();
              function g() {
                if (!x) return;
                let n = rE.from(
                  "getAllResponseHeaders" in x && x.getAllResponseHeaders()
                );
                rP(
                  function (e) {
                    t(e), p();
                  },
                  function (e) {
                    r(e), p();
                  },
                  {
                    data:
                      d && "text" !== d && "json" !== d
                        ? x.response
                        : x.responseText,
                    status: x.status,
                    statusText: x.statusText,
                    headers: n,
                    config: e,
                    request: x,
                  }
                ),
                  (x = null);
              }
              x.open(l.method.toUpperCase(), l.url, !0),
                (x.timeout = l.timeout),
                "onloadend" in x
                  ? (x.onloadend = g)
                  : (x.onreadystatechange = function () {
                      x &&
                        4 === x.readyState &&
                        (0 !== x.status ||
                          (x.responseURL &&
                            0 === x.responseURL.indexOf("file:"))) &&
                        setTimeout(g);
                    }),
                (x.onabort = function () {
                  x &&
                    (r(new t2("Request aborted", t2.ECONNABORTED, e, x)),
                    (x = null));
                }),
                (x.onerror = function () {
                  r(new t2("Network Error", t2.ERR_NETWORK, e, x)), (x = null);
                }),
                (x.ontimeout = function () {
                  let t = l.timeout
                      ? "timeout of " + l.timeout + "ms exceeded"
                      : "timeout exceeded",
                    n = l.transitional || rs;
                  l.timeoutErrorMessage && (t = l.timeoutErrorMessage),
                    r(
                      new t2(
                        t,
                        n.clarifyTimeoutError ? t2.ETIMEDOUT : t2.ECONNABORTED,
                        e,
                        x
                      )
                    ),
                    (x = null);
                }),
                void 0 === c && u.setContentType(null),
                "setRequestHeader" in x &&
                  t1.forEach(u.toJSON(), function (e, t) {
                    x.setRequestHeader(t, e);
                  }),
                t1.isUndefined(l.withCredentials) ||
                  (x.withCredentials = !!l.withCredentials),
                d && "json" !== d && (x.responseType = l.responseType),
                h && (([i, o] = rO(h, !0)), x.addEventListener("progress", i)),
                f &&
                  x.upload &&
                  (([a, s] = rO(f)),
                  x.upload.addEventListener("progress", a),
                  x.upload.addEventListener("loadend", s)),
                (l.cancelToken || l.signal) &&
                  ((n = (t) => {
                    x &&
                      (r(!t || t.type ? new rN(null, e, x) : t),
                      x.abort(),
                      (x = null));
                  }),
                  l.cancelToken && l.cancelToken.subscribe(n),
                  l.signal &&
                    (l.signal.aborted
                      ? n()
                      : l.signal.addEventListener("abort", n)));
              let b = (function (e) {
                let t = /^([-+\w]{1,25})(:?\/\/|:)/.exec(e);
                return (t && t[1]) || "";
              })(l.url);
              if (b && -1 === rx.protocols.indexOf(b))
                return void r(
                  new t2(
                    "Unsupported protocol " + b + ":",
                    t2.ERR_BAD_REQUEST,
                    e
                  )
                );
              x.send(c || null);
            });
          },
        rL = function* (e, t) {
          let r,
            n = e.byteLength;
          if (!t || n < t) return void (yield e);
          let a = 0;
          for (; a < n; ) (r = a + t), yield e.slice(a, r), (a = r);
        },
        rz = async function* (e, t) {
          for await (let r of rG(e)) yield* rL(r, t);
        },
        rG = async function* (e) {
          if (e[Symbol.asyncIterator]) return void (yield* e);
          let t = e.getReader();
          try {
            for (;;) {
              let { done: e, value: r } = await t.read();
              if (e) break;
              yield r;
            }
          } finally {
            await t.cancel();
          }
        },
        rW = (e, t, r, n) => {
          let a,
            i = rz(e, t),
            s = 0,
            o = (e) => {
              !a && ((a = !0), n && n(e));
            };
          return new ReadableStream(
            {
              async pull(e) {
                try {
                  let { done: t, value: n } = await i.next();
                  if (t) {
                    o(), e.close();
                    return;
                  }
                  let a = n.byteLength;
                  if (r) {
                    let e = (s += a);
                    r(e);
                  }
                  e.enqueue(new Uint8Array(n));
                } catch (e) {
                  throw (o(e), e);
                }
              },
              cancel: (e) => (o(e), i.return()),
            },
            { highWaterMark: 2 }
          );
        },
        rV =
          "function" == typeof fetch &&
          "function" == typeof Request &&
          "function" == typeof Response,
        rH = rV && "function" == typeof ReadableStream,
        rK =
          rV &&
          ("function" == typeof TextEncoder
            ? ((g = new TextEncoder()), (e) => g.encode(e))
            : async (e) => new Uint8Array(await new Response(e).arrayBuffer())),
        rq = function (e) {
          for (
            var t = arguments.length, r = Array(t > 1 ? t - 1 : 0), n = 1;
            n < t;
            n++
          )
            r[n - 1] = arguments[n];
          try {
            return !!e(...r);
          } catch (e) {
            return !1;
          }
        },
        rQ =
          rH &&
          rq(() => {
            let e = !1,
              t = new Request(rx.origin, {
                body: new ReadableStream(),
                method: "POST",
                get duplex() {
                  return (e = !0), "half";
                },
              }).headers.has("Content-Type");
            return e && !t;
          }),
        rJ = rH && rq(() => t1.isReadableStream(new Response("").body)),
        rZ = { stream: rJ && ((e) => e.body) };
      rV &&
        ((y = new Response()),
        ["text", "arrayBuffer", "blob", "formData", "stream"].forEach((e) => {
          rZ[e] ||
            (rZ[e] = t1.isFunction(y[e])
              ? (t) => t[e]()
              : (t, r) => {
                  throw new t2(
                    "Response type '".concat(e, "' is not supported"),
                    t2.ERR_NOT_SUPPORT,
                    r
                  );
                });
        }));
      let rY = async (e) => {
          if (null == e) return 0;
          if (t1.isBlob(e)) return e.size;
          if (t1.isSpecCompliantForm(e)) {
            let t = new Request(rx.origin, { method: "POST", body: e });
            return (await t.arrayBuffer()).byteLength;
          }
          return t1.isArrayBufferView(e) || t1.isArrayBuffer(e)
            ? e.byteLength
            : (t1.isURLSearchParams(e) && (e += ""), t1.isString(e))
            ? (await rK(e)).byteLength
            : void 0;
        },
        rX = async (e, t) => {
          let r = t1.toFiniteNumber(e.getContentLength());
          return null == r ? rY(t) : r;
        },
        r$ = {
          http: null,
          xhr: rD,
          fetch:
            rV &&
            (async (e) => {
              let t,
                r,
                {
                  url: n,
                  method: a,
                  data: i,
                  signal: s,
                  cancelToken: o,
                  timeout: l,
                  onDownloadProgress: c,
                  onUploadProgress: u,
                  responseType: d,
                  headers: f,
                  withCredentials: h = "same-origin",
                  fetchOptions: p,
                } = rF(e);
              d = d ? (d + "").toLowerCase() : "text";
              let x = ((e, t) => {
                  let { length: r } = (e = e ? e.filter(Boolean) : []);
                  if (t || r) {
                    let r,
                      n = new AbortController(),
                      a = function (e) {
                        if (!r) {
                          (r = !0), s();
                          let t = e instanceof Error ? e : this.reason;
                          n.abort(
                            t instanceof t2
                              ? t
                              : new rN(t instanceof Error ? t.message : t)
                          );
                        }
                      },
                      i =
                        t &&
                        setTimeout(() => {
                          (i = null),
                            a(
                              new t2(
                                "timeout ".concat(t, " of ms exceeded"),
                                t2.ETIMEDOUT
                              )
                            );
                        }, t),
                      s = () => {
                        e &&
                          (i && clearTimeout(i),
                          (i = null),
                          e.forEach((e) => {
                            e.unsubscribe
                              ? e.unsubscribe(a)
                              : e.removeEventListener("abort", a);
                          }),
                          (e = null));
                      };
                    e.forEach((e) => e.addEventListener("abort", a));
                    let { signal: o } = n;
                    return (o.unsubscribe = () => t1.asap(s)), o;
                  }
                })([s, o && o.toAbortSignal()], l),
                g =
                  x &&
                  x.unsubscribe &&
                  (() => {
                    x.unsubscribe();
                  });
              try {
                if (
                  u &&
                  rQ &&
                  "get" !== a &&
                  "head" !== a &&
                  0 !== (r = await rX(f, i))
                ) {
                  let e,
                    t = new Request(n, {
                      method: "POST",
                      body: i,
                      duplex: "half",
                    });
                  if (
                    (t1.isFormData(i) &&
                      (e = t.headers.get("content-type")) &&
                      f.setContentType(e),
                    t.body)
                  ) {
                    let [e, n] = rR(r, rO(rC(u)));
                    i = rW(t.body, 65536, e, n);
                  }
                }
                t1.isString(h) || (h = h ? "include" : "omit");
                let s = "credentials" in Request.prototype;
                t = new Request(n, {
                  ...p,
                  signal: x,
                  method: a.toUpperCase(),
                  headers: f.normalize().toJSON(),
                  body: i,
                  duplex: "half",
                  credentials: s ? h : void 0,
                });
                let o = await fetch(t, p),
                  l = rJ && ("stream" === d || "response" === d);
                if (rJ && (c || (l && g))) {
                  let e = {};
                  ["status", "statusText", "headers"].forEach((t) => {
                    e[t] = o[t];
                  });
                  let t = t1.toFiniteNumber(o.headers.get("content-length")),
                    [r, n] = (c && rR(t, rO(rC(c), !0))) || [];
                  o = new Response(
                    rW(o.body, 65536, r, () => {
                      n && n(), g && g();
                    }),
                    e
                  );
                }
                d = d || "text";
                let b = await rZ[t1.findKey(rZ, d) || "text"](o, e);
                return (
                  !l && g && g(),
                  await new Promise((r, n) => {
                    rP(r, n, {
                      data: b,
                      headers: rE.from(o.headers),
                      status: o.status,
                      statusText: o.statusText,
                      config: e,
                      request: t,
                    });
                  })
                );
              } catch (r) {
                if (
                  (g && g(),
                  r &&
                    "TypeError" === r.name &&
                    /Load failed|fetch/i.test(r.message))
                )
                  throw Object.assign(
                    new t2("Network Error", t2.ERR_NETWORK, e, t),
                    { cause: r.cause || r }
                  );
                throw t2.from(r, r && r.code, e, t);
              }
            }),
        };
      t1.forEach(r$, (e, t) => {
        if (e) {
          try {
            Object.defineProperty(e, "name", { value: t });
          } catch (e) {}
          Object.defineProperty(e, "adapterName", { value: t });
        }
      });
      let r0 = (e) => "- ".concat(e),
        r1 = (e) => t1.isFunction(e) || null === e || !1 === e,
        r2 = {
          getAdapter: (e) => {
            let t,
              r,
              { length: n } = (e = t1.isArray(e) ? e : [e]),
              a = {};
            for (let i = 0; i < n; i++) {
              let n;
              if (
                ((r = t = e[i]),
                !r1(t) && void 0 === (r = r$[(n = String(t)).toLowerCase()]))
              )
                throw new t2("Unknown adapter '".concat(n, "'"));
              if (r) break;
              a[n || "#" + i] = r;
            }
            if (!r) {
              let e = Object.entries(a).map((e) => {
                let [t, r] = e;
                return (
                  "adapter ".concat(t, " ") +
                  (!1 === r
                    ? "is not supported by the environment"
                    : "is not available in the build")
                );
              });
              throw new t2(
                "There is no suitable adapter to dispatch the request " +
                  (n
                    ? e.length > 1
                      ? "since :\n" + e.map(r0).join("\n")
                      : " " + r0(e[0])
                    : "as no adapter specified"),
                "ERR_NOT_SUPPORT"
              );
            }
            return r;
          },
        };
      function r3(e) {
        if (
          (e.cancelToken && e.cancelToken.throwIfRequested(),
          e.signal && e.signal.aborted)
        )
          throw new rN(null, e);
      }
      function r4(e) {
        return (
          r3(e),
          (e.headers = rE.from(e.headers)),
          (e.data = r_.call(e, e.transformRequest)),
          -1 !== ["post", "put", "patch"].indexOf(e.method) &&
            e.headers.setContentType("application/x-www-form-urlencoded", !1),
          r2
            .getAdapter(e.adapter || rb.adapter)(e)
            .then(
              function (t) {
                return (
                  r3(e),
                  (t.data = r_.call(e, e.transformResponse, t)),
                  (t.headers = rE.from(t.headers)),
                  t
                );
              },
              function (t) {
                return (
                  !rk(t) &&
                    (r3(e),
                    t &&
                      t.response &&
                      ((t.response.data = r_.call(
                        e,
                        e.transformResponse,
                        t.response
                      )),
                      (t.response.headers = rE.from(t.response.headers)))),
                  Promise.reject(t)
                );
              }
            )
        );
      }
      let r8 = "1.10.0",
        r5 = {};
      ["object", "boolean", "number", "function", "string", "symbol"].forEach(
        (e, t) => {
          r5[e] = function (r) {
            return typeof r === e || "a" + (t < 1 ? "n " : " ") + e;
          };
        }
      );
      let r6 = {};
      (r5.transitional = function (e, t, r) {
        function n(e, t) {
          return (
            "[Axios v" +
            r8 +
            "] Transitional option '" +
            e +
            "'" +
            t +
            (r ? ". " + r : "")
          );
        }
        return (r, a, i) => {
          if (!1 === e)
            throw new t2(
              n(a, " has been removed" + (t ? " in " + t : "")),
              t2.ERR_DEPRECATED
            );
          return (
            t &&
              !r6[a] &&
              ((r6[a] = !0),
              console.warn(
                n(
                  a,
                  " has been deprecated since v" +
                    t +
                    " and will be removed in the near future"
                )
              )),
            !e || e(r, a, i)
          );
        };
      }),
        (r5.spelling = function (e) {
          return (t, r) => (
            console.warn(
              "".concat(r, " is likely a misspelling of ").concat(e)
            ),
            !0
          );
        });
      let r9 = {
          assertOptions: function (e, t, r) {
            if ("object" != typeof e)
              throw new t2(
                "options must be an object",
                t2.ERR_BAD_OPTION_VALUE
              );
            let n = Object.keys(e),
              a = n.length;
            for (; a-- > 0; ) {
              let i = n[a],
                s = t[i];
              if (s) {
                let t = e[i],
                  r = void 0 === t || s(t, i, e);
                if (!0 !== r)
                  throw new t2(
                    "option " + i + " must be " + r,
                    t2.ERR_BAD_OPTION_VALUE
                  );
                continue;
              }
              if (!0 !== r)
                throw new t2("Unknown option " + i, t2.ERR_BAD_OPTION);
            }
          },
          validators: r5,
        },
        r7 = r9.validators;
      class ne {
        async request(e, t) {
          try {
            return await this._request(e, t);
          } catch (e) {
            if (e instanceof Error) {
              let t = {};
              Error.captureStackTrace
                ? Error.captureStackTrace(t)
                : (t = Error());
              let r = t.stack ? t.stack.replace(/^.+\n/, "") : "";
              try {
                e.stack
                  ? r &&
                    !String(e.stack).endsWith(r.replace(/^.+\n.+\n/, "")) &&
                    (e.stack += "\n" + r)
                  : (e.stack = r);
              } catch (e) {}
            }
            throw e;
          }
        }
        _request(e, t) {
          let r, n;
          "string" == typeof e ? ((t = t || {}).url = e) : (t = e || {});
          let {
            transitional: a,
            paramsSerializer: i,
            headers: s,
          } = (t = rj(this.defaults, t));
          void 0 !== a &&
            r9.assertOptions(
              a,
              {
                silentJSONParsing: r7.transitional(r7.boolean),
                forcedJSONParsing: r7.transitional(r7.boolean),
                clarifyTimeoutError: r7.transitional(r7.boolean),
              },
              !1
            ),
            null != i &&
              (t1.isFunction(i)
                ? (t.paramsSerializer = { serialize: i })
                : r9.assertOptions(
                    i,
                    { encode: r7.function, serialize: r7.function },
                    !0
                  )),
            void 0 !== t.allowAbsoluteUrls ||
              (void 0 !== this.defaults.allowAbsoluteUrls
                ? (t.allowAbsoluteUrls = this.defaults.allowAbsoluteUrls)
                : (t.allowAbsoluteUrls = !0)),
            r9.assertOptions(
              t,
              {
                baseUrl: r7.spelling("baseURL"),
                withXsrfToken: r7.spelling("withXSRFToken"),
              },
              !0
            ),
            (t.method = (
              t.method ||
              this.defaults.method ||
              "get"
            ).toLowerCase());
          let o = s && t1.merge(s.common, s[t.method]);
          s &&
            t1.forEach(
              ["delete", "get", "head", "post", "put", "patch", "common"],
              (e) => {
                delete s[e];
              }
            ),
            (t.headers = rE.concat(o, s));
          let l = [],
            c = !0;
          this.interceptors.request.forEach(function (e) {
            ("function" != typeof e.runWhen || !1 !== e.runWhen(t)) &&
              ((c = c && e.synchronous), l.unshift(e.fulfilled, e.rejected));
          });
          let u = [];
          this.interceptors.response.forEach(function (e) {
            u.push(e.fulfilled, e.rejected);
          });
          let d = 0;
          if (!c) {
            let e = [r4.bind(this), void 0];
            for (
              e.unshift.apply(e, l),
                e.push.apply(e, u),
                n = e.length,
                r = Promise.resolve(t);
              d < n;

            )
              r = r.then(e[d++], e[d++]);
            return r;
          }
          n = l.length;
          let f = t;
          for (d = 0; d < n; ) {
            let e = l[d++],
              t = l[d++];
            try {
              f = e(f);
            } catch (e) {
              t.call(this, e);
              break;
            }
          }
          try {
            r = r4.call(this, f);
          } catch (e) {
            return Promise.reject(e);
          }
          for (d = 0, n = u.length; d < n; ) r = r.then(u[d++], u[d++]);
          return r;
        }
        getUri(e) {
          return ra(
            rU((e = rj(this.defaults, e)).baseURL, e.url, e.allowAbsoluteUrls),
            e.params,
            e.paramsSerializer
          );
        }
        constructor(e) {
          (this.defaults = e || {}),
            (this.interceptors = { request: new ri(), response: new ri() });
        }
      }
      t1.forEach(["delete", "get", "head", "options"], function (e) {
        ne.prototype[e] = function (t, r) {
          return this.request(
            rj(r || {}, { method: e, url: t, data: (r || {}).data })
          );
        };
      }),
        t1.forEach(["post", "put", "patch"], function (e) {
          function t(t) {
            return function (r, n, a) {
              return this.request(
                rj(a || {}, {
                  method: e,
                  headers: t ? { "Content-Type": "multipart/form-data" } : {},
                  url: r,
                  data: n,
                })
              );
            };
          }
          (ne.prototype[e] = t()), (ne.prototype[e + "Form"] = t(!0));
        });
      class nt {
        throwIfRequested() {
          if (this.reason) throw this.reason;
        }
        subscribe(e) {
          if (this.reason) return void e(this.reason);
          this._listeners ? this._listeners.push(e) : (this._listeners = [e]);
        }
        unsubscribe(e) {
          if (!this._listeners) return;
          let t = this._listeners.indexOf(e);
          -1 !== t && this._listeners.splice(t, 1);
        }
        toAbortSignal() {
          let e = new AbortController(),
            t = (t) => {
              e.abort(t);
            };
          return (
            this.subscribe(t),
            (e.signal.unsubscribe = () => this.unsubscribe(t)),
            e.signal
          );
        }
        static source() {
          let e;
          return {
            token: new nt(function (t) {
              e = t;
            }),
            cancel: e,
          };
        }
        constructor(e) {
          let t;
          if ("function" != typeof e)
            throw TypeError("executor must be a function.");
          this.promise = new Promise(function (e) {
            t = e;
          });
          let r = this;
          this.promise.then((e) => {
            if (!r._listeners) return;
            let t = r._listeners.length;
            for (; t-- > 0; ) r._listeners[t](e);
            r._listeners = null;
          }),
            (this.promise.then = (e) => {
              let t,
                n = new Promise((e) => {
                  r.subscribe(e), (t = e);
                }).then(e);
              return (
                (n.cancel = function () {
                  r.unsubscribe(t);
                }),
                n
              );
            }),
            e(function (e, n, a) {
              r.reason || ((r.reason = new rN(e, n, a)), t(r.reason));
            });
        }
      }
      let nr = {
        Continue: 100,
        SwitchingProtocols: 101,
        Processing: 102,
        EarlyHints: 103,
        Ok: 200,
        Created: 201,
        Accepted: 202,
        NonAuthoritativeInformation: 203,
        NoContent: 204,
        ResetContent: 205,
        PartialContent: 206,
        MultiStatus: 207,
        AlreadyReported: 208,
        ImUsed: 226,
        MultipleChoices: 300,
        MovedPermanently: 301,
        Found: 302,
        SeeOther: 303,
        NotModified: 304,
        UseProxy: 305,
        Unused: 306,
        TemporaryRedirect: 307,
        PermanentRedirect: 308,
        BadRequest: 400,
        Unauthorized: 401,
        PaymentRequired: 402,
        Forbidden: 403,
        NotFound: 404,
        MethodNotAllowed: 405,
        NotAcceptable: 406,
        ProxyAuthenticationRequired: 407,
        RequestTimeout: 408,
        Conflict: 409,
        Gone: 410,
        LengthRequired: 411,
        PreconditionFailed: 412,
        PayloadTooLarge: 413,
        UriTooLong: 414,
        UnsupportedMediaType: 415,
        RangeNotSatisfiable: 416,
        ExpectationFailed: 417,
        ImATeapot: 418,
        MisdirectedRequest: 421,
        UnprocessableEntity: 422,
        Locked: 423,
        FailedDependency: 424,
        TooEarly: 425,
        UpgradeRequired: 426,
        PreconditionRequired: 428,
        TooManyRequests: 429,
        RequestHeaderFieldsTooLarge: 431,
        UnavailableForLegalReasons: 451,
        InternalServerError: 500,
        NotImplemented: 501,
        BadGateway: 502,
        ServiceUnavailable: 503,
        GatewayTimeout: 504,
        HttpVersionNotSupported: 505,
        VariantAlsoNegotiates: 506,
        InsufficientStorage: 507,
        LoopDetected: 508,
        NotExtended: 510,
        NetworkAuthenticationRequired: 511,
      };
      Object.entries(nr).forEach((e) => {
        let [t, r] = e;
        nr[r] = t;
      });
      let nn = (function e(t) {
        let r = new ne(t),
          n = tm(ne.prototype.request, r);
        return (
          t1.extend(n, ne.prototype, r, { allOwnKeys: !0 }),
          t1.extend(n, r, null, { allOwnKeys: !0 }),
          (n.create = function (r) {
            return e(rj(t, r));
          }),
          n
        );
      })(rb);
      (nn.Axios = ne),
        (nn.CanceledError = rN),
        (nn.CancelToken = nt),
        (nn.isCancel = rk),
        (nn.VERSION = r8),
        (nn.toFormData = t7),
        (nn.AxiosError = t2),
        (nn.Cancel = nn.CanceledError),
        (nn.all = function (e) {
          return Promise.all(e);
        }),
        (nn.spread = function (e) {
          return function (t) {
            return e.apply(null, t);
          };
        }),
        (nn.isAxiosError = function (e) {
          return t1.isObject(e) && !0 === e.isAxiosError;
        }),
        (nn.mergeConfig = rj),
        (nn.AxiosHeaders = rE),
        (nn.formToJSON = (e) => rg(t1.isHTMLForm(e) ? new FormData(e) : e)),
        (nn.getAdapter = r2.getAdapter),
        (nn.HttpStatusCode = nr),
        (nn.default = nn);
      let na = {
        apiUrl: eB.default.env.TOKEN_MANAGER_API_URL || "",
        accessToken: eB.default.env.TOKEN_MANAGER_ACCESS_TOKEN || "",
      };
      nn.create({ baseURL: na.apiUrl, headers: { "x-token": na.accessToken } }),
        e.s(
          {
            AbiCoder: () => sw,
            AbstractProvider: () => h5,
            AbstractSigner: () => pu,
            AlchemyProvider: () => pY,
            AnkrProvider: () => pJ,
            BaseContract: () => oD,
            BaseWallet: () => gV,
            Block: () => s7,
            BlockscoutProvider: () => x0,
            BrowserProvider: () => x$,
            ChainstackProvider: () => p$,
            CloudflareProvider: () => p0,
            ConstructorFragment: () => su,
            Contract: () => oz,
            ContractEventPayload: () => og,
            ContractFactory: () => oG,
            ContractTransactionReceipt: () => of,
            ContractTransactionResponse: () => op,
            ContractUnknownEventPayload: () => ox,
            EnsPlugin: () => d$,
            EnsResolver: () => f2,
            ErrorDescription: () => s_,
            ErrorFragment: () => sl,
            EtherSymbol: () => s$,
            EtherscanPlugin: () => p2,
            EtherscanProvider: () => p5,
            EventFragment: () => sc,
            EventLog: () => oc,
            EventPayload: () => ol,
            FallbackFragment: () => sd,
            FallbackProvider: () => xL,
            FeeData: () => s5,
            FeeDataNetworkPlugin: () => d1,
            FetchCancelSignal: () => dv,
            FetchRequest: () => dD,
            FetchResponse: () => dq,
            FetchUrlFeeDataNetworkPlugin: () => d4,
            FixedNumber: () => gf,
            Fragment: () => si,
            FunctionFragment: () => sf,
            GasCostPlugin: () => dX,
            HDNodeVoidWallet: () => bU,
            HDNodeWallet: () => bC,
            Indexed: () => sk,
            InfuraProvider: () => xb,
            InfuraWebSocketProvider: () => xg,
            Interface: () => sB,
            IpcSocketProvider: () => x3,
            JsonRpcApiProvider: () => pG,
            JsonRpcProvider: () => pq,
            JsonRpcSigner: () => pI,
            LangEn: () => gj,
            Log: () => oe,
            LogDescription: () => sA,
            MaxInt256: () => sY,
            MaxUint256: () => sJ,
            MessagePrefix: () => s0,
            MinInt256: () => sZ,
            Mnemonic: () => gG,
            MulticoinProviderPlugin: () => fZ,
            N: () => sq,
            NamedFragment: () => ss,
            Network: () => d7,
            NetworkPlugin: () => dY,
            NonceManager: () => xZ,
            ParamType: () => sn,
            PocketProvider: () => x2,
            QuickNodeProvider: () => xy,
            Result: () => n6,
            Signature: () => ct,
            SigningKey: () => ur,
            SocketBlockSubscriber: () => xa,
            SocketEventSubscriber: () => xo,
            SocketPendingSubscriber: () => xi,
            SocketProvider: () => xd,
            SocketSubscriber: () => xn,
            StructFragment: () => sh,
            Transaction: () => fL,
            TransactionDescription: () => sE,
            TransactionReceipt: () => or,
            TransactionResponse: () => oa,
            Typed: () => is,
            TypedDataEncoder: () => da,
            UndecodedEventLog: () => ou,
            UnmanagedSubscriber: () => hM,
            Utf8ErrorFuncs: () => nI,
            VoidSigner: () => pf,
            Wallet: () => bz,
            WebSocketProvider: () => xp,
            WeiPerEther: () => sQ,
            Wordlist: () => gS,
            WordlistOwl: () => gB,
            WordlistOwlA: () => bV,
            ZeroAddress: () => sK,
            ZeroHash: () => sX,
            accessListify: () => s2,
            assert: () => nf,
            assertArgument: () => nh,
            assertArgumentCount: () => np,
            assertNormalize: () => ng,
            assertPrivate: () => nb,
            authorizationify: () => fn,
            checkResultErrors: () => n9,
            computeAddress: () => uF,
            computeHmac: () => lr,
            concat: () => nk,
            copyRequest: () => s6,
            dataLength: () => nN,
            dataSlice: () => nP,
            decodeBase58: () => fQ,
            decodeBase64: () => dl,
            decodeBytes32String: () => nD,
            decodeRlp: () => fo,
            decryptCrowdsaleJson: () => bD,
            decryptKeystoreJson: () => bm,
            decryptKeystoreJsonSync: () => bg,
            defaultPath: () => bE,
            defineProperties: () => no,
            dnsEncode: () => uj,
            encodeBase58: () => fq,
            encodeBase64: () => dc,
            encodeBytes32String: () => nF,
            encodeRlp: () => sD,
            encryptKeystoreJson: () => bA,
            encryptKeystoreJsonSync: () => bv,
            ensNormalize: () => uB,
            formatEther: () => gA,
            formatUnits: () => gw,
            fromTwos: () => nG,
            getAccountPath: () => bM,
            getAddress: () => a9,
            getBigInt: () => nH,
            getBytes: () => ny,
            getBytesCopy: () => nw,
            getCreate2Address: () => sz,
            getCreateAddress: () => sL,
            getDefaultProvider: () => xq,
            getIcapAddress: () => a7,
            getIndexedAccountPath: () => bj,
            getNumber: () => nJ,
            getUint: () => nK,
            hashAuthorization: () => uL,
            hashMessage: () => uG,
            hexlify: () => n_,
            id: () => iN,
            isAddress: () => sW,
            isAddressable: () => sG,
            isBytesLike: () => nA,
            isCallException: () => nu,
            isCrowdsaleJson: () => bF,
            isError: () => nc,
            isHexString: () => nv,
            isKeystoreJson: () => bh,
            isValidName: () => uU,
            keccak256: () => a1,
            lock: () => lX,
            makeError: () => nd,
            mask: () => nV,
            namehash: () => uM,
            parseEther: () => gE,
            parseUnits: () => gv,
            pbkdf2: () => lj,
            randomBytes: () => ls,
            recoverAddress: () => uD,
            resolveAddress: () => sH,
            resolveProperties: () => ns,
            ripemd160: () => lk,
            scrypt: () => lZ,
            scryptSync: () => lY,
            sha256: () => lC,
            sha512: () => lI,
            showThrottleMessage: () => dZ,
            solidityPacked: () => uq,
            solidityPackedKeccak256: () => uQ,
            solidityPackedSha256: () => uJ,
            stripZerosLeft: () => nT,
            toBeArray: () => nX,
            toBeHex: () => nY,
            toBigInt: () => nQ,
            toNumber: () => nZ,
            toQuantity: () => n$,
            toTwos: () => nW,
            toUtf8Bytes: () => nU,
            toUtf8CodePoints: () => nj,
            toUtf8String: () => nM,
            uuidV4: () => g_,
            verifyAuthorization: () => uz,
            verifyMessage: () => uW,
            verifyTypedData: () => ds,
            version: () => ni,
            wordlists: () => bH,
            zeroPadBytes: () => nR,
            zeroPadValue: () => nO,
          },
          873033
        ),
        e.s({}, 976267),
        e.s(
          {
            AbiCoder: () => sw,
            AbstractProvider: () => h5,
            AbstractSigner: () => pu,
            AlchemyProvider: () => pY,
            AnkrProvider: () => pJ,
            BaseContract: () => oD,
            BaseWallet: () => gV,
            Block: () => s7,
            BlockscoutProvider: () => x0,
            BrowserProvider: () => x$,
            ChainstackProvider: () => p$,
            CloudflareProvider: () => p0,
            ConstructorFragment: () => su,
            Contract: () => oz,
            ContractEventPayload: () => og,
            ContractFactory: () => oG,
            ContractTransactionReceipt: () => of,
            ContractTransactionResponse: () => op,
            ContractUnknownEventPayload: () => ox,
            EnsPlugin: () => d$,
            EnsResolver: () => f2,
            ErrorDescription: () => s_,
            ErrorFragment: () => sl,
            EtherSymbol: () => s$,
            EtherscanPlugin: () => p2,
            EtherscanProvider: () => p5,
            EventFragment: () => sc,
            EventLog: () => oc,
            EventPayload: () => ol,
            FallbackFragment: () => sd,
            FallbackProvider: () => xL,
            FeeData: () => s5,
            FeeDataNetworkPlugin: () => d1,
            FetchCancelSignal: () => dv,
            FetchRequest: () => dD,
            FetchResponse: () => dq,
            FetchUrlFeeDataNetworkPlugin: () => d4,
            FixedNumber: () => gf,
            Fragment: () => si,
            FunctionFragment: () => sf,
            GasCostPlugin: () => dX,
            HDNodeVoidWallet: () => bU,
            HDNodeWallet: () => bC,
            Indexed: () => sk,
            InfuraProvider: () => xb,
            InfuraWebSocketProvider: () => xg,
            Interface: () => sB,
            IpcSocketProvider: () => x3,
            JsonRpcApiProvider: () => pG,
            JsonRpcProvider: () => pq,
            JsonRpcSigner: () => pI,
            LangEn: () => gj,
            Log: () => oe,
            LogDescription: () => sA,
            MaxInt256: () => sY,
            MaxUint256: () => sJ,
            MessagePrefix: () => s0,
            MinInt256: () => sZ,
            Mnemonic: () => gG,
            MulticoinProviderPlugin: () => fZ,
            N: () => sq,
            NamedFragment: () => ss,
            Network: () => d7,
            NetworkPlugin: () => dY,
            NonceManager: () => xZ,
            ParamType: () => sn,
            PocketProvider: () => x2,
            QuickNodeProvider: () => xy,
            Result: () => n6,
            Signature: () => ct,
            SigningKey: () => ur,
            SocketBlockSubscriber: () => xa,
            SocketEventSubscriber: () => xo,
            SocketPendingSubscriber: () => xi,
            SocketProvider: () => xd,
            SocketSubscriber: () => xn,
            StructFragment: () => sh,
            Transaction: () => fL,
            TransactionDescription: () => sE,
            TransactionReceipt: () => or,
            TransactionResponse: () => oa,
            Typed: () => is,
            TypedDataEncoder: () => da,
            UndecodedEventLog: () => ou,
            UnmanagedSubscriber: () => hM,
            Utf8ErrorFuncs: () => nI,
            VoidSigner: () => pf,
            Wallet: () => bz,
            WebSocketProvider: () => xp,
            WeiPerEther: () => sQ,
            Wordlist: () => gS,
            WordlistOwl: () => gB,
            WordlistOwlA: () => bV,
            ZeroAddress: () => sK,
            ZeroHash: () => sX,
            accessListify: () => s2,
            assert: () => nf,
            assertArgument: () => nh,
            assertArgumentCount: () => np,
            assertNormalize: () => ng,
            assertPrivate: () => nb,
            authorizationify: () => fn,
            checkResultErrors: () => n9,
            computeAddress: () => uF,
            computeHmac: () => lr,
            concat: () => nk,
            copyRequest: () => s6,
            dataLength: () => nN,
            dataSlice: () => nP,
            decodeBase58: () => fQ,
            decodeBase64: () => dl,
            decodeBytes32String: () => nD,
            decodeRlp: () => fo,
            decryptCrowdsaleJson: () => bD,
            decryptKeystoreJson: () => bm,
            decryptKeystoreJsonSync: () => bg,
            defaultPath: () => bE,
            defineProperties: () => no,
            dnsEncode: () => uj,
            encodeBase58: () => fq,
            encodeBase64: () => dc,
            encodeBytes32String: () => nF,
            encodeRlp: () => sD,
            encryptKeystoreJson: () => bA,
            encryptKeystoreJsonSync: () => bv,
            ensNormalize: () => uB,
            formatEther: () => gA,
            formatUnits: () => gw,
            fromTwos: () => nG,
            getAccountPath: () => bM,
            getAddress: () => a9,
            getBigInt: () => nH,
            getBytes: () => ny,
            getBytesCopy: () => nw,
            getCreate2Address: () => sz,
            getCreateAddress: () => sL,
            getDefaultProvider: () => xq,
            getIcapAddress: () => a7,
            getIndexedAccountPath: () => bj,
            getNumber: () => nJ,
            getUint: () => nK,
            hashAuthorization: () => uL,
            hashMessage: () => uG,
            hexlify: () => n_,
            id: () => iN,
            isAddress: () => sW,
            isAddressable: () => sG,
            isBytesLike: () => nA,
            isCallException: () => nu,
            isCrowdsaleJson: () => bF,
            isError: () => nc,
            isHexString: () => nv,
            isKeystoreJson: () => bh,
            isValidName: () => uU,
            keccak256: () => a1,
            lock: () => lX,
            makeError: () => nd,
            mask: () => nV,
            namehash: () => uM,
            parseEther: () => gE,
            parseUnits: () => gv,
            pbkdf2: () => lj,
            randomBytes: () => ls,
            recoverAddress: () => uD,
            resolveAddress: () => sH,
            resolveProperties: () => ns,
            ripemd160: () => lk,
            scrypt: () => lZ,
            scryptSync: () => lY,
            sha256: () => lC,
            sha512: () => lI,
            showThrottleMessage: () => dZ,
            solidityPacked: () => uq,
            solidityPackedKeccak256: () => uQ,
            solidityPackedSha256: () => uJ,
            stripZerosLeft: () => nT,
            toBeArray: () => nX,
            toBeHex: () => nY,
            toBigInt: () => nQ,
            toNumber: () => nZ,
            toQuantity: () => n$,
            toTwos: () => nW,
            toUtf8Bytes: () => nU,
            toUtf8CodePoints: () => nj,
            toUtf8String: () => nM,
            uuidV4: () => g_,
            verifyAuthorization: () => uz,
            verifyMessage: () => uW,
            verifyTypedData: () => ds,
            version: () => ni,
            wordlists: () => bH,
            zeroPadBytes: () => nR,
            zeroPadValue: () => nO,
          },
          354822
        );
      let ni = "6.15.0";
      async function ns(e) {
        let t = Object.keys(e);
        return (await Promise.all(t.map((t) => Promise.resolve(e[t])))).reduce(
          (e, r, n) => ((e[t[n]] = r), e),
          {}
        );
      }
      function no(e, t, r) {
        for (let n in t) {
          let a = t[n],
            i = r ? r[n] : null;
          i &&
            (function (e, t, r) {
              let n = t.split("|").map((e) => e.trim());
              for (let r = 0; r < n.length; r++)
                switch (t) {
                  case "any":
                    return;
                  case "bigint":
                  case "boolean":
                  case "number":
                  case "string":
                    if (typeof e === t) return;
                }
              let a = Error("invalid value for type ".concat(t));
              throw (
                ((a.code = "INVALID_ARGUMENT"),
                (a.argument = "value.".concat(r)),
                (a.value = e),
                a)
              );
            })(a, i, n),
            Object.defineProperty(e, n, {
              enumerable: !0,
              value: a,
              writable: !1,
            });
        }
      }
      function nl(e, t) {
        if (null == e) return "null";
        if ((null == t && (t = new Set()), "object" == typeof e)) {
          if (t.has(e)) return "[Circular]";
          t.add(e);
        }
        if (Array.isArray(e))
          return "[ " + e.map((e) => nl(e, t)).join(", ") + " ]";
        if (e instanceof Uint8Array) {
          let t = "0123456789abcdef",
            r = "0x";
          for (let n = 0; n < e.length; n++)
            (r += t[e[n] >> 4]), (r += t[15 & e[n]]);
          return r;
        }
        if ("object" == typeof e && "function" == typeof e.toJSON)
          return nl(e.toJSON(), t);
        switch (typeof e) {
          case "boolean":
          case "number":
          case "symbol":
            return e.toString();
          case "bigint":
            return BigInt(e).toString();
          case "string":
            return JSON.stringify(e);
          case "object": {
            let r = Object.keys(e);
            return (
              r.sort(),
              "{ " +
                r
                  .map((r) => "".concat(nl(r, t), ": ").concat(nl(e[r], t)))
                  .join(", ") +
                " }"
            );
          }
        }
        return "[ COULD NOT SERIALIZE ]";
      }
      function nc(e, t) {
        return e && e.code === t;
      }
      function nu(e) {
        return nc(e, "CALL_EXCEPTION");
      }
      function nd(e, t, r) {
        let n,
          a = e;
        {
          let n = [];
          if (r) {
            if ("message" in r || "code" in r || "name" in r)
              throw Error(
                "value will overwrite populated values: ".concat(nl(r))
              );
            for (let e in r) {
              if ("shortMessage" === e) continue;
              let t = r[e];
              n.push(e + "=" + nl(t));
            }
          }
          n.push("code=".concat(t)),
            n.push("version=".concat(ni)),
            n.length && (e += " (" + n.join(", ") + ")");
        }
        switch (t) {
          case "INVALID_ARGUMENT":
            n = TypeError(e);
            break;
          case "NUMERIC_FAULT":
          case "BUFFER_OVERRUN":
            n = RangeError(e);
            break;
          default:
            n = Error(e);
        }
        return (
          no(n, { code: t }),
          r && Object.assign(n, r),
          null == n.shortMessage && no(n, { shortMessage: a }),
          n
        );
      }
      function nf(e, t, r, n) {
        if (!e) throw nd(t, r, n);
      }
      function nh(e, t, r, n) {
        nf(e, t, "INVALID_ARGUMENT", { argument: r, value: n });
      }
      function np(e, t, r) {
        null == r && (r = ""),
          r && (r = ": " + r),
          nf(e >= t, "missing argument" + r, "MISSING_ARGUMENT", {
            count: e,
            expectedCount: t,
          }),
          nf(e <= t, "too many arguments" + r, "UNEXPECTED_ARGUMENT", {
            count: e,
            expectedCount: t,
          });
      }
      let nx = ["NFD", "NFC", "NFKD", "NFKC"].reduce((e, t) => {
        try {
          if ("test" !== "test".normalize(t)) throw Error("bad");
          if ("NFD" === t) {
            let e = String.fromCharCode(233).normalize("NFD"),
              t = String.fromCharCode(101, 769);
            if (e !== t) throw Error("broken");
          }
          e.push(t);
        } catch (e) {}
        return e;
      }, []);
      function ng(e) {
        nf(
          nx.indexOf(e) >= 0,
          "platform missing String.prototype.normalize",
          "UNSUPPORTED_OPERATION",
          { operation: "String.prototype.normalize", info: { form: e } }
        );
      }
      function nb(e, t, r) {
        if ((null == r && (r = ""), e !== t)) {
          let e = r,
            t = "new";
          r && ((e += "."), (t += " " + r)),
            nf(
              !1,
              "private constructor; use ".concat(e, "from* methods"),
              "UNSUPPORTED_OPERATION",
              { operation: t }
            );
        }
      }
      function nm(e, t, r) {
        if (e instanceof Uint8Array) return r ? new Uint8Array(e) : e;
        if ("string" == typeof e && e.match(/^0x(?:[0-9a-f][0-9a-f])*$/i)) {
          let t = new Uint8Array((e.length - 2) / 2),
            r = 2;
          for (let n = 0; n < t.length; n++)
            (t[n] = parseInt(e.substring(r, r + 2), 16)), (r += 2);
          return t;
        }
        nh(!1, "invalid BytesLike value", t || "value", e);
      }
      function ny(e, t) {
        return nm(e, t, !1);
      }
      function nw(e, t) {
        return nm(e, t, !0);
      }
      function nv(e, t) {
        return (
          "string" == typeof e &&
          !!e.match(/^0x[0-9A-Fa-f]*$/) &&
          ("number" != typeof t || e.length === 2 + 2 * t) &&
          (!0 !== t || e.length % 2 == 0)
        );
      }
      function nA(e) {
        return nv(e, !0) || e instanceof Uint8Array;
      }
      let nE = "0123456789abcdef";
      function n_(e) {
        let t = ny(e),
          r = "0x";
        for (let e = 0; e < t.length; e++) {
          let n = t[e];
          r += nE[(240 & n) >> 4] + nE[15 & n];
        }
        return r;
      }
      function nk(e) {
        return "0x" + e.map((e) => n_(e).substring(2)).join("");
      }
      function nN(e) {
        return nv(e, !0) ? (e.length - 2) / 2 : ny(e).length;
      }
      function nP(e, t, r) {
        let n = ny(e);
        return (
          null != r &&
            r > n.length &&
            nf(!1, "cannot slice beyond data bounds", "BUFFER_OVERRUN", {
              buffer: n,
              length: n.length,
              offset: r,
            }),
          n_(n.slice(null == t ? 0 : t, null == r ? n.length : r))
        );
      }
      function nT(e) {
        let t = n_(e).substring(2);
        for (; t.startsWith("00"); ) t = t.substring(2);
        return "0x" + t;
      }
      function nS(e, t, r) {
        let n = ny(e);
        nf(t >= n.length, "padding exceeds data length", "BUFFER_OVERRUN", {
          buffer: new Uint8Array(n),
          length: t,
          offset: t + 1,
        });
        let a = new Uint8Array(t);
        return a.fill(0), r ? a.set(n, t - n.length) : a.set(n, 0), n_(a);
      }
      function nO(e, t) {
        return nS(e, t, !0);
      }
      function nR(e, t) {
        return nS(e, t, !1);
      }
      function nC(e, t, r, n, a) {
        if ("BAD_PREFIX" === e || "UNEXPECTED_CONTINUE" === e) {
          let e = 0;
          for (let n = t + 1; n < r.length && r[n] >> 6 == 2; n++) e++;
          return e;
        }
        return "OVERRUN" === e ? r.length - t - 1 : 0;
      }
      let nI = Object.freeze({
        error: function (e, t, r, n, a) {
          nh(
            !1,
            "invalid codepoint at offset ".concat(t, "; ").concat(e),
            "bytes",
            r
          );
        },
        ignore: nC,
        replace: function (e, t, r, n, a) {
          return "OVERLONG" === e
            ? (nh(
                "number" == typeof a,
                "invalid bad code point for replacement",
                "badCodepoint",
                a
              ),
              n.push(a),
              0)
            : (n.push(65533), nC(e, t, r, n, a));
        },
      });
      function nB(e, t) {
        null == t && (t = nI.error);
        let r = ny(e, "bytes"),
          n = [],
          a = 0;
        for (; a < r.length; ) {
          let e = r[a++];
          if (e >> 7 == 0) {
            n.push(e);
            continue;
          }
          let i = null,
            s = null;
          if ((224 & e) == 192) (i = 1), (s = 127);
          else if ((240 & e) == 224) (i = 2), (s = 2047);
          else if ((248 & e) == 240) (i = 3), (s = 65535);
          else {
            (192 & e) == 128
              ? (a += t("UNEXPECTED_CONTINUE", a - 1, r, n))
              : (a += t("BAD_PREFIX", a - 1, r, n));
            continue;
          }
          if (a - 1 + i >= r.length) {
            a += t("OVERRUN", a - 1, r, n);
            continue;
          }
          let o = e & ((1 << (8 - i - 1)) - 1);
          for (let e = 0; e < i; e++) {
            let e = r[a];
            if ((192 & e) != 128) {
              (a += t("MISSING_CONTINUE", a, r, n)), (o = null);
              break;
            }
            (o = (o << 6) | (63 & e)), a++;
          }
          if (null !== o) {
            if (o > 1114111) {
              a += t("OUT_OF_RANGE", a - 1 - i, r, n, o);
              continue;
            }
            if (o >= 55296 && o <= 57343) {
              a += t("UTF16_SURROGATE", a - 1 - i, r, n, o);
              continue;
            }
            if (o <= s) {
              a += t("OVERLONG", a - 1 - i, r, n, o);
              continue;
            }
            n.push(o);
          }
        }
        return n;
      }
      function nU(e, t) {
        nh("string" == typeof e, "invalid string value", "str", e),
          null != t && (ng(t), (e = e.normalize(t)));
        let r = [];
        for (let t = 0; t < e.length; t++) {
          let n = e.charCodeAt(t);
          if (n < 128) r.push(n);
          else if (n < 2048) r.push((n >> 6) | 192), r.push((63 & n) | 128);
          else if ((64512 & n) == 55296) {
            t++;
            let a = e.charCodeAt(t);
            nh(
              t < e.length && (64512 & a) == 56320,
              "invalid surrogate pair",
              "str",
              e
            );
            let i = 65536 + ((1023 & n) << 10) + (1023 & a);
            r.push((i >> 18) | 240),
              r.push(((i >> 12) & 63) | 128),
              r.push(((i >> 6) & 63) | 128),
              r.push((63 & i) | 128);
          } else
            r.push((n >> 12) | 224),
              r.push(((n >> 6) & 63) | 128),
              r.push((63 & n) | 128);
        }
        return new Uint8Array(r);
      }
      function nM(e, t) {
        return nB(e, t)
          .map((e) =>
            e <= 65535
              ? String.fromCharCode(e)
              : String.fromCharCode(
                  (((e -= 65536) >> 10) & 1023) + 55296,
                  (1023 & e) + 56320
                )
          )
          .join("");
      }
      function nj(e, t) {
        return nB(nU(e, t));
      }
      function nF(e) {
        let t = nU(e);
        if (t.length > 31)
          throw Error("bytes32 string must be less than 32 bytes");
        return nR(t, 32);
      }
      function nD(e) {
        let t = ny(e, "bytes");
        if (32 !== t.length) throw Error("invalid bytes32 - not 32 bytes long");
        if (0 !== t[31])
          throw Error("invalid bytes32 string - no null terminator");
        let r = 31;
        for (; 0 === t[r - 1]; ) r--;
        return nM(t.slice(0, r));
      }
      let nL = BigInt(0),
        nz = BigInt(1);
      function nG(e, t) {
        let r = nK(e, "value"),
          n = BigInt(nJ(t, "width"));
        return (nf(r >> n === nL, "overflow", "NUMERIC_FAULT", {
          operation: "fromTwos",
          fault: "overflow",
          value: e,
        }),
        r >> (n - nz))
          ? -((~r & ((nz << n) - nz)) + nz)
          : r;
      }
      function nW(e, t) {
        let r = nH(e, "value"),
          n = BigInt(nJ(t, "width")),
          a = nz << (n - nz);
        return r < nL
          ? (nf((r = -r) <= a, "too low", "NUMERIC_FAULT", {
              operation: "toTwos",
              fault: "overflow",
              value: e,
            }),
            (~r & ((nz << n) - nz)) + nz)
          : (nf(r < a, "too high", "NUMERIC_FAULT", {
              operation: "toTwos",
              fault: "overflow",
              value: e,
            }),
            r);
      }
      function nV(e, t) {
        return nK(e, "value") & ((nz << BigInt(nJ(t, "bits"))) - nz);
      }
      function nH(e, t) {
        switch (typeof e) {
          case "bigint":
            return e;
          case "number":
            return (
              nh(Number.isInteger(e), "underflow", t || "value", e),
              nh(
                e >= -0x1fffffffffffff && e <= 0x1fffffffffffff,
                "overflow",
                t || "value",
                e
              ),
              BigInt(e)
            );
          case "string":
            try {
              if ("" === e) throw Error("empty string");
              if ("-" === e[0] && "-" !== e[1]) return -BigInt(e.substring(1));
              return BigInt(e);
            } catch (r) {
              nh(
                !1,
                "invalid BigNumberish string: ".concat(r.message),
                t || "value",
                e
              );
            }
        }
        nh(!1, "invalid BigNumberish value", t || "value", e);
      }
      function nK(e, t) {
        let r = nH(e, t);
        return (
          nf(r >= nL, "unsigned value cannot be negative", "NUMERIC_FAULT", {
            fault: "overflow",
            operation: "getUint",
            value: e,
          }),
          r
        );
      }
      let nq = "0123456789abcdef";
      function nQ(e) {
        if (e instanceof Uint8Array) {
          let t = "0x0";
          for (let r of e) (t += nq[r >> 4]), (t += nq[15 & r]);
          return BigInt(t);
        }
        return nH(e);
      }
      function nJ(e, t) {
        switch (typeof e) {
          case "bigint":
            return (
              nh(
                e >= -0x1fffffffffffff && e <= 0x1fffffffffffff,
                "overflow",
                t || "value",
                e
              ),
              Number(e)
            );
          case "number":
            return (
              nh(Number.isInteger(e), "underflow", t || "value", e),
              nh(
                e >= -0x1fffffffffffff && e <= 0x1fffffffffffff,
                "overflow",
                t || "value",
                e
              ),
              e
            );
          case "string":
            try {
              if ("" === e) throw Error("empty string");
              return nJ(BigInt(e), t);
            } catch (r) {
              nh(
                !1,
                "invalid numeric string: ".concat(r.message),
                t || "value",
                e
              );
            }
        }
        nh(!1, "invalid numeric value", t || "value", e);
      }
      function nZ(e) {
        return nJ(nQ(e));
      }
      function nY(e, t) {
        let r = nK(e, "value").toString(16);
        if (null == t) r.length % 2 && (r = "0" + r);
        else {
          let n = nJ(t, "width");
          for (
            nf(
              2 * n >= r.length,
              "value exceeds width (".concat(n, " bytes)"),
              "NUMERIC_FAULT",
              { operation: "toBeHex", fault: "overflow", value: e }
            );
            r.length < 2 * n;

          )
            r = "0" + r;
        }
        return "0x" + r;
      }
      function nX(e) {
        let t = nK(e, "value");
        if (t === nL) return new Uint8Array([]);
        let r = t.toString(16);
        r.length % 2 && (r = "0" + r);
        let n = new Uint8Array(r.length / 2);
        for (let e = 0; e < n.length; e++) {
          let t = 2 * e;
          n[e] = parseInt(r.substring(t, t + 2), 16);
        }
        return n;
      }
      function n$(e) {
        let t = n_(nA(e) ? e : nX(e)).substring(2);
        for (; t.startsWith("0"); ) t = t.substring(1);
        return "" === t && (t = "0"), "0x" + t;
      }
      let n0 = new Uint8Array(32),
        n1 = ["then"],
        n2 = {},
        n3 = new WeakMap();
      function n4(e) {
        return n3.get(e);
      }
      function n8(e, t) {
        let r = Error(
          "deferred error during ABI decoding triggered accessing ".concat(e)
        );
        throw ((r.error = t), r);
      }
      var n5 = new WeakMap();
      class n6 extends Array {
        toArray(e) {
          let t = [];
          return (
            this.forEach((r, n) => {
              r instanceof Error && n8("index ".concat(n), r),
                e && r instanceof n6 && (r = r.toArray(e)),
                t.push(r);
            }),
            t
          );
        }
        toObject(e) {
          let t = n4(this);
          return t.reduce(
            (r, n, a) => (
              nf(
                null != n,
                "value at index ".concat(a, " unnamed"),
                "UNSUPPORTED_OPERATION",
                { operation: "toObject()" }
              ),
              (function e(t, r, n) {
                return t.indexOf(null) >= 0
                  ? r.map((t, r) => (t instanceof n6 ? e(n4(t), t, n) : t))
                  : t.reduce((t, a, i) => {
                      let s = r.getValue(a);
                      return (
                        a in t ||
                          (n && s instanceof n6 && (s = e(n4(s), s, n)),
                          (t[a] = s)),
                        t
                      );
                    }, {});
              })(t, this, e)
            ),
            {}
          );
        }
        slice(e, t) {
          null == e && (e = 0),
            e < 0 && (e += this.length) < 0 && (e = 0),
            null == t && (t = this.length),
            t < 0 && (t += this.length) < 0 && (t = 0),
            t > this.length && (t = this.length);
          let r = n4(this),
            n = [],
            a = [];
          for (let i = e; i < t; i++) n.push(this[i]), a.push(r[i]);
          return new n6(n2, n, a);
        }
        filter(e, t) {
          let r = n4(this),
            n = [],
            a = [];
          for (let i = 0; i < this.length; i++) {
            let s = this[i];
            s instanceof Error && n8("index ".concat(i), s),
              e.call(t, s, i, this) && (n.push(s), a.push(r[i]));
          }
          return new n6(n2, n, a);
        }
        map(e, t) {
          let r = [];
          for (let n = 0; n < this.length; n++) {
            let a = this[n];
            a instanceof Error && n8("index ".concat(n), a),
              r.push(e.call(t, a, n, this));
          }
          return r;
        }
        getValue(e) {
          let t = n4(this).indexOf(e);
          if (-1 === t) return;
          let r = this[t];
          return (
            r instanceof Error &&
              n8("property ".concat(JSON.stringify(e)), r.error),
            r
          );
        }
        static fromItems(e, t) {
          return new n6(n2, e, t);
        }
        constructor(...e) {
          var t, r;
          let n = e[0],
            a = e[1],
            i = (e[2] || []).slice(),
            s = !0;
          n !== n2 && ((a = e), (i = []), (s = !1)),
            super(a.length),
            (0, tt._)(this, n5, { writable: !0, value: void 0 }),
            a.forEach((e, t) => {
              this[t] = e;
            });
          let o = i.reduce(
            (e, t) => (
              "string" == typeof t && e.set(t, (e.get(t) || 0) + 1), e
            ),
            new Map()
          );
          if (
            ((t = Object.freeze(
              a.map((e, t) => {
                let r = i[t];
                return null != r && 1 === o.get(r) ? r : null;
              })
            )),
            n3.set(this, t),
            (0, tr._)(this, n5, []),
            null == (0, te._)(this, n5) && (0, te._)(this, n5),
            !s)
          )
            return;
          Object.freeze(this);
          let l = new Proxy(this, {
            get: (e, t, r) => {
              if ("string" == typeof t) {
                if (t.match(/^[0-9]+$/)) {
                  let r = nJ(t, "%index");
                  if (r < 0 || r >= this.length)
                    throw RangeError("out of result range");
                  let n = e[r];
                  return n instanceof Error && n8("index ".concat(r), n), n;
                }
                if (n1.indexOf(t) >= 0) return Reflect.get(e, t, r);
                let n = e[t];
                if (n instanceof Function)
                  return function () {
                    for (
                      var t = arguments.length, a = Array(t), i = 0;
                      i < t;
                      i++
                    )
                      a[i] = arguments[i];
                    return n.apply(this === r ? e : this, a);
                  };
                if (!(t in e))
                  return e.getValue.apply(this === r ? e : this, [t]);
              }
              return Reflect.get(e, t, r);
            },
          });
          return (r = n4(this)), n3.set(l, r), l;
        }
      }
      function n9(e) {
        let t = [],
          r = function (e, n) {
            if (Array.isArray(n))
              for (let a in n) {
                let i = e.slice();
                i.push(a);
                try {
                  r(i, n[a]);
                } catch (e) {
                  t.push({ path: i, error: e });
                }
              }
          };
        return r([], e), t;
      }
      function n7(e) {
        let t = nX(e);
        return (
          nf(t.length <= 32, "value out-of-bounds", "BUFFER_OVERRUN", {
            buffer: t,
            length: 32,
            offset: t.length,
          }),
          32 !== t.length && (t = nw(nk([n0.slice(t.length % 32), t]))),
          t
        );
      }
      class ae {
        _throwError(e, t) {
          nh(!1, e, this.localName, t);
        }
        constructor(e, t, r, n) {
          (0, eU._)(this, "name", void 0),
            (0, eU._)(this, "type", void 0),
            (0, eU._)(this, "localName", void 0),
            (0, eU._)(this, "dynamic", void 0),
            no(
              this,
              { name: e, type: t, localName: r, dynamic: n },
              {
                name: "string",
                type: "string",
                localName: "string",
                dynamic: "boolean",
              }
            );
        }
      }
      var at = new WeakMap(),
        ar = new WeakMap(),
        an = new WeakSet();
      class aa {
        get data() {
          return nk((0, te._)(this, at));
        }
        get length() {
          return (0, te._)(this, ar);
        }
        appendWriter(e) {
          return (0, tn._)(this, an, ai).call(this, nw(e.data));
        }
        writeBytes(e) {
          let t = nw(e),
            r = t.length % 32;
          return (
            r && (t = nw(nk([t, n0.slice(r)]))),
            (0, tn._)(this, an, ai).call(this, t)
          );
        }
        writeValue(e) {
          return (0, tn._)(this, an, ai).call(this, n7(e));
        }
        writeUpdatableValue() {
          let e = (0, te._)(this, at).length;
          return (
            (0, te._)(this, at).push(n0),
            (0, tr._)(this, ar, (0, te._)(this, ar) + 32),
            (t) => {
              (0, te._)(this, at)[e] = n7(t);
            }
          );
        }
        constructor() {
          (0, ta._)(this, an),
            (0, tt._)(this, at, { writable: !0, value: void 0 }),
            (0, tt._)(this, ar, { writable: !0, value: void 0 }),
            (0, tr._)(this, at, []),
            (0, tr._)(this, ar, 0);
        }
      }
      function ai(e) {
        return (
          (0, te._)(this, at).push(e),
          (0, tr._)(this, ar, (0, te._)(this, ar) + e.length),
          e.length
        );
      }
      var as = new WeakMap(),
        ao = new WeakMap(),
        al = new WeakMap(),
        ac = new WeakMap(),
        au = new WeakMap(),
        ad = new WeakSet(),
        af = new WeakSet();
      class ah {
        get data() {
          return n_((0, te._)(this, as));
        }
        get dataLength() {
          return (0, te._)(this, as).length;
        }
        get consumed() {
          return (0, te._)(this, ao);
        }
        get bytes() {
          return new Uint8Array((0, te._)(this, as));
        }
        subReader(e) {
          let t = new ah(
            (0, te._)(this, as).slice((0, te._)(this, ao) + e),
            this.allowLoose,
            (0, te._)(this, au)
          );
          return (0, tr._)(t, ac, this), t;
        }
        readBytes(e, t) {
          let r = (0, tn._)(this, af, ax).call(this, 0, e, !!t);
          return (
            (0, tn._)(this, ad, ap).call(this, e),
            (0, tr._)(this, ao, (0, te._)(this, ao) + r.length),
            r.slice(0, e)
          );
        }
        readValue() {
          return nQ(this.readBytes(32));
        }
        readIndex() {
          return nZ(this.readBytes(32));
        }
        constructor(e, t, r) {
          (0, ta._)(this, ad),
            (0, ta._)(this, af),
            (0, eU._)(this, "allowLoose", void 0),
            (0, tt._)(this, as, { writable: !0, value: void 0 }),
            (0, tt._)(this, ao, { writable: !0, value: void 0 }),
            (0, tt._)(this, al, { writable: !0, value: void 0 }),
            (0, tt._)(this, ac, { writable: !0, value: void 0 }),
            (0, tt._)(this, au, { writable: !0, value: void 0 }),
            no(this, { allowLoose: !!t }),
            (0, tr._)(this, as, nw(e)),
            (0, tr._)(this, al, 0),
            (0, tr._)(this, ac, null),
            (0, tr._)(this, au, null != r ? r : 1024),
            (0, tr._)(this, ao, 0);
        }
      }
      function ap(e) {
        var t;
        if ((0, te._)(this, ac))
          return (0, tn._)((t = (0, te._)(this, ac)), ad, ap).call(t, e);
        (0, tr._)(this, al, (0, te._)(this, al) + e),
          nf(
            1 > (0, te._)(this, au) ||
              (0, te._)(this, al) <= (0, te._)(this, au) * this.dataLength,
            "compressed ABI data exceeds inflation ratio of ".concat(
              (0, te._)(this, au),
              " ( see: https://github.com/ethers-io/ethers.js/issues/4537 )"
            ),
            "BUFFER_OVERRUN",
            {
              buffer: nw((0, te._)(this, as)),
              offset: (0, te._)(this, ao),
              length: e,
              info: {
                bytesRead: (0, te._)(this, al),
                dataLength: this.dataLength,
              },
            }
          );
      }
      function ax(e, t, r) {
        let n = 32 * Math.ceil(t / 32);
        return (
          (0, te._)(this, ao) + n > (0, te._)(this, as).length &&
            (this.allowLoose &&
            r &&
            (0, te._)(this, ao) + t <= (0, te._)(this, as).length
              ? (n = t)
              : nf(!1, "data out-of-bounds", "BUFFER_OVERRUN", {
                  buffer: nw((0, te._)(this, as)),
                  length: (0, te._)(this, as).length,
                  offset: (0, te._)(this, ao) + n,
                })),
          (0, te._)(this, as).slice(
            (0, te._)(this, ao),
            (0, te._)(this, ao) + n
          )
        );
      }
      function ag(e) {
        if (!Number.isSafeInteger(e) || e < 0)
          throw Error("Wrong positive integer: ".concat(e));
      }
      function ab(e) {
        for (
          var t = arguments.length, r = Array(t > 1 ? t - 1 : 0), n = 1;
          n < t;
          n++
        )
          r[n - 1] = arguments[n];
        if (!(e instanceof Uint8Array)) throw Error("Expected Uint8Array");
        if (r.length > 0 && !r.includes(e.length))
          throw Error(
            "Expected Uint8Array of length "
              .concat(r, ", not of length=")
              .concat(e.length)
          );
      }
      function am(e) {
        if ("function" != typeof e || "function" != typeof e.create)
          throw Error("Hash should be wrapped by utils.wrapConstructor");
        ag(e.outputLen), ag(e.blockLen);
      }
      function ay(e) {
        let t =
          !(arguments.length > 1) || void 0 === arguments[1] || arguments[1];
        if (e.destroyed) throw Error("Hash instance has been destroyed");
        if (t && e.finished)
          throw Error("Hash#digest() has already been called");
      }
      function aw(e, t) {
        ab(e);
        let r = t.outputLen;
        if (e.length < r)
          throw Error(
            "digestInto() expects output buffer of length at least ".concat(r)
          );
      }
      let av = BigInt(0x100000000 - 1),
        aA = BigInt(32);
      function aE(e) {
        let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
          r = new Uint32Array(e.length),
          n = new Uint32Array(e.length);
        for (let a = 0; a < e.length; a++) {
          let { h: i, l: s } = (function (e) {
            let t =
              arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
            return t
              ? { h: Number(e & av), l: Number((e >> aA) & av) }
              : { h: 0 | Number((e >> aA) & av), l: 0 | Number(e & av) };
          })(e[a], t);
          [r[a], n[a]] = [i, s];
        }
        return [r, n];
      }
      let a_ = {
          split: aE,
          shrSH: (e, t, r) => e >>> r,
          shrSL: (e, t, r) => (e << (32 - r)) | (t >>> r),
          rotrSH: (e, t, r) => (e >>> r) | (t << (32 - r)),
          rotrSL: (e, t, r) => (e << (32 - r)) | (t >>> r),
          rotrBH: (e, t, r) => (e << (64 - r)) | (t >>> (r - 32)),
          rotrBL: (e, t, r) => (e >>> (r - 32)) | (t << (64 - r)),
          add: function (e, t, r, n) {
            let a = (t >>> 0) + (n >>> 0);
            return { h: (e + r + ((a / 0x100000000) | 0)) | 0, l: 0 | a };
          },
          add3L: (e, t, r) => (e >>> 0) + (t >>> 0) + (r >>> 0),
          add3H: (e, t, r, n) => (t + r + n + ((e / 0x100000000) | 0)) | 0,
          add4L: (e, t, r, n) => (e >>> 0) + (t >>> 0) + (r >>> 0) + (n >>> 0),
          add4H: (e, t, r, n, a) =>
            (t + r + n + a + ((e / 0x100000000) | 0)) | 0,
          add5H: (e, t, r, n, a, i) =>
            (t + r + n + a + i + ((e / 0x100000000) | 0)) | 0,
          add5L: (e, t, r, n, a) =>
            (e >>> 0) + (t >>> 0) + (r >>> 0) + (n >>> 0) + (a >>> 0),
        },
        ak =
          "object" == typeof globalThis && "crypto" in globalThis
            ? globalThis.crypto
            : void 0,
        aN = (e) =>
          new Uint32Array(e.buffer, e.byteOffset, Math.floor(e.byteLength / 4)),
        aP = (e) => new DataView(e.buffer, e.byteOffset, e.byteLength),
        aT = (e, t) => (e << (32 - t)) | (e >>> t);
      if (68 !== new Uint8Array(new Uint32Array([0x11223344]).buffer)[0])
        throw Error("Non little-endian hardware is not supported");
      let aS = async () => {};
      async function aO(e, t, r) {
        let n = Date.now();
        for (let a = 0; a < e; a++) {
          r(a);
          let e = Date.now() - n;
          (e >= 0 && e < t) || (await aS(), (n += e));
        }
      }
      function aR(e) {
        if (
          ("string" == typeof e &&
            (e = (function (e) {
              if ("string" != typeof e)
                throw Error(
                  "utf8ToBytes expected string, got ".concat(typeof e)
                );
              return new Uint8Array(new TextEncoder().encode(e));
            })(e)),
          !(e instanceof Uint8Array))
        )
          throw Error("expected Uint8Array, got ".concat(typeof e));
        return e;
      }
      class aC {
        clone() {
          return this._cloneInto();
        }
      }
      let aI = {}.toString;
      function aB(e, t) {
        if (void 0 !== t && "[object Object]" !== aI.call(t))
          throw Error("Options should be object or undefined");
        return Object.assign(e, t);
      }
      function aU(e) {
        let t = (t) => e().update(aR(t)).digest(),
          r = e();
        return (
          (t.outputLen = r.outputLen),
          (t.blockLen = r.blockLen),
          (t.create = () => e()),
          t
        );
      }
      function aM() {
        let e =
          arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 32;
        if (ak && "function" == typeof ak.getRandomValues)
          return ak.getRandomValues(new Uint8Array(e));
        throw Error("crypto.getRandomValues must be defined");
      }
      let [aj, aF, aD] = [[], [], []],
        aL = BigInt(0),
        az = BigInt(1),
        aG = BigInt(2),
        aW = BigInt(7),
        aV = BigInt(256),
        aH = BigInt(113);
      for (let e = 0, t = az, r = 1, n = 0; e < 24; e++) {
        ([r, n] = [n, (2 * r + 3 * n) % 5]),
          aj.push(2 * (5 * n + r)),
          aF.push((((e + 1) * (e + 2)) / 2) % 64);
        let a = aL;
        for (let e = 0; e < 7; e++)
          (t = ((t << az) ^ ((t >> aW) * aH)) % aV) & aG &&
            (a ^= az << ((az << BigInt(e)) - az));
        aD.push(a);
      }
      let [aK, aq] = aE(aD, !0),
        aQ = (e, t, r) =>
          r > 32
            ? ((e, t, r) => (t << (r - 32)) | (e >>> (64 - r)))(e, t, r)
            : ((e, t, r) => (e << r) | (t >>> (32 - r)))(e, t, r),
        aJ = (e, t, r) =>
          r > 32
            ? ((e, t, r) => (e << (r - 32)) | (t >>> (64 - r)))(e, t, r)
            : ((e, t, r) => (t << r) | (e >>> (32 - r)))(e, t, r);
      class aZ extends aC {
        keccak() {
          !(function (e) {
            let t =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : 24,
              r = new Uint32Array(10);
            for (let n = 24 - t; n < 24; n++) {
              for (let t = 0; t < 10; t++)
                r[t] = e[t] ^ e[t + 10] ^ e[t + 20] ^ e[t + 30] ^ e[t + 40];
              for (let t = 0; t < 10; t += 2) {
                let n = (t + 8) % 10,
                  a = (t + 2) % 10,
                  i = r[a],
                  s = r[a + 1],
                  o = aQ(i, s, 1) ^ r[n],
                  l = aJ(i, s, 1) ^ r[n + 1];
                for (let r = 0; r < 50; r += 10)
                  (e[t + r] ^= o), (e[t + r + 1] ^= l);
              }
              let t = e[2],
                a = e[3];
              for (let r = 0; r < 24; r++) {
                let n = aF[r],
                  i = aQ(t, a, n),
                  s = aJ(t, a, n),
                  o = aj[r];
                (t = e[o]), (a = e[o + 1]), (e[o] = i), (e[o + 1] = s);
              }
              for (let t = 0; t < 50; t += 10) {
                for (let n = 0; n < 10; n++) r[n] = e[t + n];
                for (let n = 0; n < 10; n++)
                  e[t + n] ^= ~r[(n + 2) % 10] & r[(n + 4) % 10];
              }
              (e[0] ^= aK[n]), (e[1] ^= aq[n]);
            }
            r.fill(0);
          })(this.state32, this.rounds),
            (this.posOut = 0),
            (this.pos = 0);
        }
        update(e) {
          ay(this);
          let { blockLen: t, state: r } = this,
            n = (e = aR(e)).length;
          for (let a = 0; a < n; ) {
            let i = Math.min(t - this.pos, n - a);
            for (let t = 0; t < i; t++) r[this.pos++] ^= e[a++];
            this.pos === t && this.keccak();
          }
          return this;
        }
        finish() {
          if (this.finished) return;
          this.finished = !0;
          let { state: e, suffix: t, pos: r, blockLen: n } = this;
          (e[r] ^= t),
            (128 & t) != 0 && r === n - 1 && this.keccak(),
            (e[n - 1] ^= 128),
            this.keccak();
        }
        writeInto(e) {
          ay(this, !1), ab(e), this.finish();
          let t = this.state,
            { blockLen: r } = this;
          for (let n = 0, a = e.length; n < a; ) {
            this.posOut >= r && this.keccak();
            let i = Math.min(r - this.posOut, a - n);
            e.set(t.subarray(this.posOut, this.posOut + i), n),
              (this.posOut += i),
              (n += i);
          }
          return e;
        }
        xofInto(e) {
          if (!this.enableXOF)
            throw Error("XOF is not possible for this instance");
          return this.writeInto(e);
        }
        xof(e) {
          return ag(e), this.xofInto(new Uint8Array(e));
        }
        digestInto(e) {
          if ((aw(e, this), this.finished))
            throw Error("digest() was already called");
          return this.writeInto(e), this.destroy(), e;
        }
        digest() {
          return this.digestInto(new Uint8Array(this.outputLen));
        }
        destroy() {
          (this.destroyed = !0), this.state.fill(0);
        }
        _cloneInto(e) {
          let {
            blockLen: t,
            suffix: r,
            outputLen: n,
            rounds: a,
            enableXOF: i,
          } = this;
          return (
            e || (e = new aZ(t, r, n, i, a)),
            e.state32.set(this.state32),
            (e.pos = this.pos),
            (e.posOut = this.posOut),
            (e.finished = this.finished),
            (e.rounds = a),
            (e.suffix = r),
            (e.outputLen = n),
            (e.enableXOF = i),
            (e.destroyed = this.destroyed),
            e
          );
        }
        constructor(e, t, r, n = !1, a = 24) {
          if (
            (super(),
            (this.blockLen = e),
            (this.suffix = t),
            (this.outputLen = r),
            (this.enableXOF = n),
            (this.rounds = a),
            (this.pos = 0),
            (this.posOut = 0),
            (this.finished = !1),
            (this.destroyed = !1),
            ag(r),
            0 >= this.blockLen || this.blockLen >= 200)
          )
            throw Error("Sha3 supports only keccak-f1600 function");
          (this.state = new Uint8Array(200)), (this.state32 = aN(this.state));
        }
      }
      let aY = aU(() => new aZ(136, 1, 32)),
        aX = !1,
        a$ = function (e) {
          return aY(e);
        },
        a0 = a$;
      function a1(e) {
        let t = ny(e, "data");
        return n_(a0(t));
      }
      (a1._ = a$),
        (a1.lock = function () {
          aX = !0;
        }),
        (a1.register = function (e) {
          if (aX) throw TypeError("keccak256 is locked");
          a0 = e;
        }),
        Object.freeze(a1);
      let a2 = BigInt(0),
        a3 = BigInt(36);
      function a4(e) {
        let t = (e = e.toLowerCase()).substring(2).split(""),
          r = new Uint8Array(40);
        for (let e = 0; e < 40; e++) r[e] = t[e].charCodeAt(0);
        let n = ny(a1(r));
        for (let e = 0; e < 40; e += 2)
          n[e >> 1] >> 4 >= 8 && (t[e] = t[e].toUpperCase()),
            (15 & n[e >> 1]) >= 8 && (t[e + 1] = t[e + 1].toUpperCase());
        return "0x" + t.join("");
      }
      let a8 = {};
      for (let e = 0; e < 10; e++) a8[String(e)] = String(e);
      for (let e = 0; e < 26; e++)
        a8[String.fromCharCode(65 + e)] = String(10 + e);
      function a5(e) {
        let t = (e =
          (e = e.toUpperCase()).substring(4) + e.substring(0, 2) + "00")
          .split("")
          .map((e) => a8[e])
          .join("");
        for (; t.length >= 15; ) {
          let e = t.substring(0, 15);
          t = (parseInt(e, 10) % 97) + t.substring(e.length);
        }
        let r = String(98 - (parseInt(t, 10) % 97));
        for (; r.length < 2; ) r = "0" + r;
        return r;
      }
      let a6 = (function () {
        let e = {};
        for (let t = 0; t < 36; t++)
          e["0123456789abcdefghijklmnopqrstuvwxyz"[t]] = BigInt(t);
        return e;
      })();
      function a9(e) {
        if (
          (nh("string" == typeof e, "invalid address", "address", e),
          e.match(/^(0x)?[0-9a-fA-F]{40}$/))
        ) {
          e.startsWith("0x") || (e = "0x" + e);
          let t = a4(e);
          return (
            nh(
              !e.match(/([A-F].*[a-f])|([a-f].*[A-F])/) || t === e,
              "bad address checksum",
              "address",
              e
            ),
            t
          );
        }
        if (e.match(/^XE[0-9]{2}[0-9A-Za-z]{30,31}$/)) {
          nh(e.substring(2, 4) === a5(e), "bad icap checksum", "address", e);
          let t = (function (e) {
            e = e.toLowerCase();
            let t = a2;
            for (let r = 0; r < e.length; r++) t = t * a3 + a6[e[r]];
            return t;
          })(e.substring(4)).toString(16);
          for (; t.length < 40; ) t = "0" + t;
          return a4("0x" + t);
        }
        nh(!1, "invalid address", "address", e);
      }
      function a7(e) {
        let t = BigInt(a9(e)).toString(36).toUpperCase();
        for (; t.length < 30; ) t = "0" + t;
        return "XE" + a5("XE00" + t) + t;
      }
      let ie = {};
      function it(e, t) {
        let r = !1;
        return (
          t < 0 && ((r = !0), (t *= -1)),
          new is(ie, "".concat(r ? "" : "u", "int").concat(t), e, {
            signed: r,
            width: t,
          })
        );
      }
      function ir(e, t) {
        return new is(ie, "bytes".concat(t || ""), e, { size: t });
      }
      let ia = Symbol.for("_ethers_typed");
      var ii = new WeakMap();
      class is {
        format() {
          if ("array" === this.type || "dynamicArray" === this.type)
            throw Error("");
          return "tuple" === this.type
            ? "tuple(".concat(this.value.map((e) => e.format()).join(","), ")")
            : this.type;
        }
        defaultValue() {
          return 0;
        }
        minValue() {
          return 0;
        }
        maxValue() {
          return 0;
        }
        isBigInt() {
          return !!this.type.match(/^u?int[0-9]+$/);
        }
        isData() {
          return this.type.startsWith("bytes");
        }
        isString() {
          return "string" === this.type;
        }
        get tupleName() {
          if ("tuple" !== this.type) throw TypeError("not a tuple");
          return (0, te._)(this, ii);
        }
        get arrayLength() {
          if ("array" !== this.type) throw TypeError("not an array");
          return !0 === (0, te._)(this, ii)
            ? -1
            : !1 === (0, te._)(this, ii)
            ? this.value.length
            : null;
        }
        static from(e, t) {
          return new is(ie, e, t);
        }
        static uint8(e) {
          return it(e, 8);
        }
        static uint16(e) {
          return it(e, 16);
        }
        static uint24(e) {
          return it(e, 24);
        }
        static uint32(e) {
          return it(e, 32);
        }
        static uint40(e) {
          return it(e, 40);
        }
        static uint48(e) {
          return it(e, 48);
        }
        static uint56(e) {
          return it(e, 56);
        }
        static uint64(e) {
          return it(e, 64);
        }
        static uint72(e) {
          return it(e, 72);
        }
        static uint80(e) {
          return it(e, 80);
        }
        static uint88(e) {
          return it(e, 88);
        }
        static uint96(e) {
          return it(e, 96);
        }
        static uint104(e) {
          return it(e, 104);
        }
        static uint112(e) {
          return it(e, 112);
        }
        static uint120(e) {
          return it(e, 120);
        }
        static uint128(e) {
          return it(e, 128);
        }
        static uint136(e) {
          return it(e, 136);
        }
        static uint144(e) {
          return it(e, 144);
        }
        static uint152(e) {
          return it(e, 152);
        }
        static uint160(e) {
          return it(e, 160);
        }
        static uint168(e) {
          return it(e, 168);
        }
        static uint176(e) {
          return it(e, 176);
        }
        static uint184(e) {
          return it(e, 184);
        }
        static uint192(e) {
          return it(e, 192);
        }
        static uint200(e) {
          return it(e, 200);
        }
        static uint208(e) {
          return it(e, 208);
        }
        static uint216(e) {
          return it(e, 216);
        }
        static uint224(e) {
          return it(e, 224);
        }
        static uint232(e) {
          return it(e, 232);
        }
        static uint240(e) {
          return it(e, 240);
        }
        static uint248(e) {
          return it(e, 248);
        }
        static uint256(e) {
          return it(e, 256);
        }
        static uint(e) {
          return it(e, 256);
        }
        static int8(e) {
          return it(e, -8);
        }
        static int16(e) {
          return it(e, -16);
        }
        static int24(e) {
          return it(e, -24);
        }
        static int32(e) {
          return it(e, -32);
        }
        static int40(e) {
          return it(e, -40);
        }
        static int48(e) {
          return it(e, -48);
        }
        static int56(e) {
          return it(e, -56);
        }
        static int64(e) {
          return it(e, -64);
        }
        static int72(e) {
          return it(e, -72);
        }
        static int80(e) {
          return it(e, -80);
        }
        static int88(e) {
          return it(e, -88);
        }
        static int96(e) {
          return it(e, -96);
        }
        static int104(e) {
          return it(e, -104);
        }
        static int112(e) {
          return it(e, -112);
        }
        static int120(e) {
          return it(e, -120);
        }
        static int128(e) {
          return it(e, -128);
        }
        static int136(e) {
          return it(e, -136);
        }
        static int144(e) {
          return it(e, -144);
        }
        static int152(e) {
          return it(e, -152);
        }
        static int160(e) {
          return it(e, -160);
        }
        static int168(e) {
          return it(e, -168);
        }
        static int176(e) {
          return it(e, -176);
        }
        static int184(e) {
          return it(e, -184);
        }
        static int192(e) {
          return it(e, -192);
        }
        static int200(e) {
          return it(e, -200);
        }
        static int208(e) {
          return it(e, -208);
        }
        static int216(e) {
          return it(e, -216);
        }
        static int224(e) {
          return it(e, -224);
        }
        static int232(e) {
          return it(e, -232);
        }
        static int240(e) {
          return it(e, -240);
        }
        static int248(e) {
          return it(e, -248);
        }
        static int256(e) {
          return it(e, -256);
        }
        static int(e) {
          return it(e, -256);
        }
        static bytes1(e) {
          return ir(e, 1);
        }
        static bytes2(e) {
          return ir(e, 2);
        }
        static bytes3(e) {
          return ir(e, 3);
        }
        static bytes4(e) {
          return ir(e, 4);
        }
        static bytes5(e) {
          return ir(e, 5);
        }
        static bytes6(e) {
          return ir(e, 6);
        }
        static bytes7(e) {
          return ir(e, 7);
        }
        static bytes8(e) {
          return ir(e, 8);
        }
        static bytes9(e) {
          return ir(e, 9);
        }
        static bytes10(e) {
          return ir(e, 10);
        }
        static bytes11(e) {
          return ir(e, 11);
        }
        static bytes12(e) {
          return ir(e, 12);
        }
        static bytes13(e) {
          return ir(e, 13);
        }
        static bytes14(e) {
          return ir(e, 14);
        }
        static bytes15(e) {
          return ir(e, 15);
        }
        static bytes16(e) {
          return ir(e, 16);
        }
        static bytes17(e) {
          return ir(e, 17);
        }
        static bytes18(e) {
          return ir(e, 18);
        }
        static bytes19(e) {
          return ir(e, 19);
        }
        static bytes20(e) {
          return ir(e, 20);
        }
        static bytes21(e) {
          return ir(e, 21);
        }
        static bytes22(e) {
          return ir(e, 22);
        }
        static bytes23(e) {
          return ir(e, 23);
        }
        static bytes24(e) {
          return ir(e, 24);
        }
        static bytes25(e) {
          return ir(e, 25);
        }
        static bytes26(e) {
          return ir(e, 26);
        }
        static bytes27(e) {
          return ir(e, 27);
        }
        static bytes28(e) {
          return ir(e, 28);
        }
        static bytes29(e) {
          return ir(e, 29);
        }
        static bytes30(e) {
          return ir(e, 30);
        }
        static bytes31(e) {
          return ir(e, 31);
        }
        static bytes32(e) {
          return ir(e, 32);
        }
        static address(e) {
          return new is(ie, "address", e);
        }
        static bool(e) {
          return new is(ie, "bool", !!e);
        }
        static bytes(e) {
          return new is(ie, "bytes", e);
        }
        static string(e) {
          return new is(ie, "string", e);
        }
        static array(e, t) {
          throw Error("not implemented yet");
        }
        static tuple(e, t) {
          throw Error("not implemented yet");
        }
        static overrides(e) {
          return new is(ie, "overrides", Object.assign({}, e));
        }
        static isTyped(e) {
          return (
            e &&
            "object" == typeof e &&
            "_typedSymbol" in e &&
            e._typedSymbol === ia
          );
        }
        static dereference(e, t) {
          if (is.isTyped(e)) {
            if (e.type !== t)
              throw Error(
                "invalid type: expecetd ".concat(t, ", got ").concat(e.type)
              );
            return e.value;
          }
          return e;
        }
        constructor(e, t, r, n) {
          (0, eU._)(this, "type", void 0),
            (0, eU._)(this, "value", void 0),
            (0, tt._)(this, ii, { writable: !0, value: void 0 }),
            (0, eU._)(this, "_typedSymbol", void 0),
            null == n && (n = null),
            nb(ie, e, "Typed"),
            no(this, { _typedSymbol: ia, type: t, value: r }),
            (0, tr._)(this, ii, n),
            this.format();
        }
      }
      class io extends ae {
        defaultValue() {
          return "0x0000000000000000000000000000000000000000";
        }
        encode(e, t) {
          let r = is.dereference(t, "string");
          try {
            r = a9(r);
          } catch (e) {
            return this._throwError(e.message, t);
          }
          return e.writeValue(r);
        }
        decode(e) {
          return a9(nY(e.readValue(), 20));
        }
        constructor(e) {
          super("address", "address", e, !1);
        }
      }
      class il extends ae {
        defaultValue() {
          return this.coder.defaultValue();
        }
        encode(e, t) {
          return this.coder.encode(e, t);
        }
        decode(e) {
          return this.coder.decode(e);
        }
        constructor(e) {
          super(e.name, e.type, "_", e.dynamic),
            (0, eU._)(this, "coder", void 0),
            (this.coder = e);
        }
      }
      function ic(e, t, r) {
        let n = [];
        if (Array.isArray(r)) n = r;
        else if (r && "object" == typeof r) {
          let e = {};
          n = t.map((t) => {
            let n = t.localName;
            return (
              nf(
                n,
                "cannot encode object for signature with missing names",
                "INVALID_ARGUMENT",
                { argument: "values", info: { coder: t }, value: r }
              ),
              nf(
                !e[n],
                "cannot encode object for signature with duplicate names",
                "INVALID_ARGUMENT",
                { argument: "values", info: { coder: t }, value: r }
              ),
              (e[n] = !0),
              r[n]
            );
          });
        } else nh(!1, "invalid tuple value", "tuple", r);
        nh(t.length === n.length, "types/value length mismatch", "tuple", r);
        let a = new aa(),
          i = new aa(),
          s = [];
        t.forEach((e, t) => {
          let r = n[t];
          if (e.dynamic) {
            let t = i.length;
            e.encode(i, r);
            let n = a.writeUpdatableValue();
            s.push((e) => {
              n(e + t);
            });
          } else e.encode(a, r);
        }),
          s.forEach((e) => {
            e(a.length);
          });
        let o = e.appendWriter(a);
        return o + e.appendWriter(i);
      }
      function iu(e, t) {
        let r = [],
          n = [],
          a = e.subReader(0);
        return (
          t.forEach((t) => {
            let i = null;
            if (t.dynamic) {
              let r = e.readIndex(),
                n = a.subReader(r);
              try {
                i = t.decode(n);
              } catch (e) {
                if (nc(e, "BUFFER_OVERRUN")) throw e;
                ((i = e).baseType = t.name),
                  (i.name = t.localName),
                  (i.type = t.type);
              }
            } else
              try {
                i = t.decode(e);
              } catch (e) {
                if (nc(e, "BUFFER_OVERRUN")) throw e;
                ((i = e).baseType = t.name),
                  (i.name = t.localName),
                  (i.type = t.type);
              }
            if (void 0 == i) throw Error("investigate");
            r.push(i), n.push(t.localName || null);
          }),
          n6.fromItems(r, n)
        );
      }
      class id extends ae {
        defaultValue() {
          let e = this.coder.defaultValue(),
            t = [];
          for (let r = 0; r < this.length; r++) t.push(e);
          return t;
        }
        encode(e, t) {
          let r = is.dereference(t, "array");
          Array.isArray(r) || this._throwError("expected array value", r);
          let n = this.length;
          -1 === n && ((n = r.length), e.writeValue(r.length)),
            np(
              r.length,
              n,
              "coder array" + (this.localName ? " " + this.localName : "")
            );
          let a = [];
          for (let e = 0; e < r.length; e++) a.push(this.coder);
          return ic(e, a, r);
        }
        decode(e) {
          let t = this.length;
          -1 === t &&
            nf(
              32 * (t = e.readIndex()) <= e.dataLength,
              "insufficient data length",
              "BUFFER_OVERRUN",
              { buffer: e.bytes, offset: 32 * t, length: e.dataLength }
            );
          let r = [];
          for (let e = 0; e < t; e++) r.push(new il(this.coder));
          return iu(e, r);
        }
        constructor(e, t, r) {
          super(
            "array",
            e.type + "[" + (t >= 0 ? t : "") + "]",
            r,
            -1 === t || e.dynamic
          ),
            (0, eU._)(this, "coder", void 0),
            (0, eU._)(this, "length", void 0),
            no(this, { coder: e, length: t });
        }
      }
      class ih extends ae {
        defaultValue() {
          return !1;
        }
        encode(e, t) {
          let r = is.dereference(t, "bool");
          return e.writeValue(+!!r);
        }
        decode(e) {
          return !!e.readValue();
        }
        constructor(e) {
          super("bool", "bool", e, !1);
        }
      }
      class ip extends ae {
        defaultValue() {
          return "0x";
        }
        encode(e, t) {
          t = nw(t);
          let r = e.writeValue(t.length);
          return r + e.writeBytes(t);
        }
        decode(e) {
          return e.readBytes(e.readIndex(), !0);
        }
        constructor(e, t) {
          super(e, e, t, !0);
        }
      }
      class ix extends ip {
        decode(e) {
          return n_(super.decode(e));
        }
        constructor(e) {
          super("bytes", e);
        }
      }
      class ig extends ae {
        defaultValue() {
          return "0x0000000000000000000000000000000000000000000000000000000000000000".substring(
            0,
            2 + 2 * this.size
          );
        }
        encode(e, t) {
          let r = nw(is.dereference(t, this.type));
          return (
            r.length !== this.size &&
              this._throwError("incorrect data length", t),
            e.writeBytes(r)
          );
        }
        decode(e) {
          return n_(e.readBytes(this.size));
        }
        constructor(e, t) {
          let r = "bytes" + String(e);
          super(r, r, t, !1),
            (0, eU._)(this, "size", void 0),
            no(this, { size: e }, { size: "number" });
        }
      }
      let ib = new Uint8Array([]);
      class im extends ae {
        defaultValue() {
          return null;
        }
        encode(e, t) {
          return null != t && this._throwError("not null", t), e.writeBytes(ib);
        }
        decode(e) {
          return e.readBytes(0), null;
        }
        constructor(e) {
          super("null", "", e, !1);
        }
      }
      let iy = BigInt(0),
        iw = BigInt(1),
        iv = BigInt(
          "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
        );
      class iA extends ae {
        defaultValue() {
          return 0;
        }
        encode(e, t) {
          let r = nH(is.dereference(t, this.type)),
            n = nV(iv, 256);
          if (this.signed) {
            let e = nV(n, 8 * this.size - 1);
            (r > e || r < -(e + iw)) &&
              this._throwError("value out-of-bounds", t),
              (r = nW(r, 256));
          } else
            (r < iy || r > nV(n, 8 * this.size)) &&
              this._throwError("value out-of-bounds", t);
          return e.writeValue(r);
        }
        decode(e) {
          let t = nV(e.readValue(), 8 * this.size);
          return this.signed && (t = nG(t, 8 * this.size)), t;
        }
        constructor(e, t, r) {
          let n = (t ? "int" : "uint") + 8 * e;
          super(n, n, r, !1),
            (0, eU._)(this, "size", void 0),
            (0, eU._)(this, "signed", void 0),
            no(
              this,
              { size: e, signed: t },
              { size: "number", signed: "boolean" }
            );
        }
      }
      class iE extends ip {
        defaultValue() {
          return "";
        }
        encode(e, t) {
          return super.encode(e, nU(is.dereference(t, "string")));
        }
        decode(e) {
          return nM(super.decode(e));
        }
        constructor(e) {
          super("string", e);
        }
      }
      class i_ extends ae {
        defaultValue() {
          let e = [];
          this.coders.forEach((t) => {
            e.push(t.defaultValue());
          });
          let t = this.coders.reduce((e, t) => {
            let r = t.localName;
            return r && (e[r] || (e[r] = 0), e[r]++), e;
          }, {});
          return (
            this.coders.forEach((r, n) => {
              let a = r.localName;
              a &&
                1 === t[a] &&
                ("length" === a && (a = "_length"),
                null == e[a] && (e[a] = e[n]));
            }),
            Object.freeze(e)
          );
        }
        encode(e, t) {
          let r = is.dereference(t, "tuple");
          return ic(e, this.coders, r);
        }
        decode(e) {
          return iu(e, this.coders);
        }
        constructor(e, t) {
          let r = !1,
            n = [];
          e.forEach((e) => {
            e.dynamic && (r = !0), n.push(e.type);
          }),
            super("tuple", "tuple(" + n.join(",") + ")", t, r),
            (0, eU._)(this, "coders", void 0),
            no(this, { coders: Object.freeze(e.slice()) });
        }
      }
      var ik = e.i(70827);
      function iN(e) {
        return a1(nU(e));
      }
      function iP(e) {
        let t = new Set();
        return e.forEach((e) => t.add(e)), Object.freeze(t);
      }
      let iT = iP("external public payable override".split(" ")),
        iS =
          "constant external internal payable private public pure view override",
        iO = iP(iS.split(" ")),
        iR = "constructor error event fallback function receive struct",
        iC = iP(iR.split(" ")),
        iI = "calldata memory storage payable indexed",
        iB = iP(iI.split(" ")),
        iU = iP([iR, iI, "tuple returns", iS].join(" ").split(" ")),
        iM = {
          "(": "OPEN_PAREN",
          ")": "CLOSE_PAREN",
          "[": "OPEN_BRACKET",
          "]": "CLOSE_BRACKET",
          ",": "COMMA",
          "@": "AT",
        },
        ij = RegExp("^(\\s*)"),
        iF = RegExp("^([0-9]+)"),
        iD = RegExp("^([a-zA-Z$_][a-zA-Z0-9$_]*)"),
        iL = RegExp("^([a-zA-Z$_][a-zA-Z0-9$_]*)$"),
        iz = RegExp("^(address|bool|bytes([0-9]*)|string|u?int([0-9]*))$");
      var iG = new WeakMap(),
        iW = new WeakMap(),
        iV = new WeakSet();
      class iH {
        get offset() {
          return (0, te._)(this, iG);
        }
        get length() {
          return (0, te._)(this, iW).length - (0, te._)(this, iG);
        }
        clone() {
          return new iH((0, te._)(this, iW));
        }
        reset() {
          (0, tr._)(this, iG, 0);
        }
        popKeyword(e) {
          let t = this.peek();
          if ("KEYWORD" !== t.type || !e.has(t.text))
            throw Error("expected keyword ".concat(t.text));
          return this.pop().text;
        }
        popType(e) {
          if (this.peek().type !== e) {
            let t = this.peek();
            throw Error(
              "expected "
                .concat(e, "; got ")
                .concat(t.type, " ")
                .concat(JSON.stringify(t.text))
            );
          }
          return this.pop().text;
        }
        popParen() {
          let e = this.peek();
          if ("OPEN_PAREN" !== e.type) throw Error("bad start");
          let t = (0, tn._)(this, iV, iK).call(
            this,
            (0, te._)(this, iG) + 1,
            e.match + 1
          );
          return (0, tr._)(this, iG, e.match + 1), t;
        }
        popParams() {
          let e = this.peek();
          if ("OPEN_PAREN" !== e.type) throw Error("bad start");
          let t = [];
          for (; (0, te._)(this, iG) < e.match - 1; ) {
            let e = this.peek().linkNext;
            t.push(
              (0, tn._)(this, iV, iK).call(this, (0, te._)(this, iG) + 1, e)
            ),
              (0, tr._)(this, iG, e);
          }
          return (0, tr._)(this, iG, e.match + 1), t;
        }
        peek() {
          if ((0, te._)(this, iG) >= (0, te._)(this, iW).length)
            throw Error("out-of-bounds");
          return (0, te._)(this, iW)[(0, te._)(this, iG)];
        }
        peekKeyword(e) {
          let t = this.peekType("KEYWORD");
          return null != t && e.has(t) ? t : null;
        }
        peekType(e) {
          if (0 === this.length) return null;
          let t = this.peek();
          return t.type === e ? t.text : null;
        }
        pop() {
          let e = this.peek();
          return (0, ik._)(this, iG).value++, e;
        }
        toString() {
          let e = [];
          for (
            let t = (0, te._)(this, iG);
            t < (0, te._)(this, iW).length;
            t++
          ) {
            let r = (0, te._)(this, iW)[t];
            e.push("".concat(r.type, ":").concat(r.text));
          }
          return "<TokenString ".concat(e.join(" "), ">");
        }
        constructor(e) {
          (0, ta._)(this, iV),
            (0, tt._)(this, iG, { writable: !0, value: void 0 }),
            (0, tt._)(this, iW, { writable: !0, value: void 0 }),
            (0, tr._)(this, iG, 0),
            (0, tr._)(this, iW, e.slice());
        }
      }
      function iK() {
        let e =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
          t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
        return new iH(
          (0, te._)(this, iW)
            .slice(e, t)
            .map((t) =>
              Object.freeze(
                Object.assign({}, t, {
                  match: t.match - e,
                  linkBack: t.linkBack - e,
                  linkNext: t.linkNext - e,
                })
              )
            )
        );
      }
      function iq(e) {
        let t = [],
          r = (t) => {
            let r = i < e.length ? JSON.stringify(e[i]) : "$EOI";
            throw Error(
              "invalid token ".concat(r, " at ").concat(i, ": ").concat(t)
            );
          },
          n = [],
          a = [],
          i = 0;
        for (; i < e.length; ) {
          let s = e.substring(i),
            o = s.match(ij);
          o && ((i += o[1].length), (s = e.substring(i)));
          let l = {
            depth: n.length,
            linkBack: -1,
            linkNext: -1,
            match: -1,
            type: "",
            text: "",
            offset: i,
            value: -1,
          };
          t.push(l);
          let c = iM[s[0]] || "";
          if (c) {
            if (((l.type = c), (l.text = s[0]), i++, "OPEN_PAREN" === c))
              n.push(t.length - 1), a.push(t.length - 1);
            else if ("CLOSE_PAREN" == c)
              0 === n.length && r("no matching open bracket"),
                (l.match = n.pop()),
                (t[l.match].match = t.length - 1),
                l.depth--,
                (l.linkBack = a.pop()),
                (t[l.linkBack].linkNext = t.length - 1);
            else if ("COMMA" === c)
              (l.linkBack = a.pop()),
                (t[l.linkBack].linkNext = t.length - 1),
                a.push(t.length - 1);
            else if ("OPEN_BRACKET" === c) l.type = "BRACKET";
            else if ("CLOSE_BRACKET" === c) {
              let e = t.pop().text;
              if (t.length > 0 && "NUMBER" === t[t.length - 1].type) {
                let r = t.pop().text;
                (e = r + e), (t[t.length - 1].value = nJ(r));
              }
              if (0 === t.length || "BRACKET" !== t[t.length - 1].type)
                throw Error("missing opening bracket");
              t[t.length - 1].text += e;
            }
            continue;
          }
          if ((o = s.match(iD))) {
            if (((l.text = o[1]), (i += l.text.length), iU.has(l.text))) {
              l.type = "KEYWORD";
              continue;
            }
            if (l.text.match(iz)) {
              l.type = "TYPE";
              continue;
            }
            l.type = "ID";
            continue;
          }
          if ((o = s.match(iF))) {
            (l.text = o[1]), (l.type = "NUMBER"), (i += l.text.length);
            continue;
          }
          throw Error(
            "unexpected token "
              .concat(JSON.stringify(s[0]), " at position ")
              .concat(i)
          );
        }
        return new iH(t.map((e) => Object.freeze(e)));
      }
      function iQ(e, t) {
        let r = [];
        for (let n in t.keys()) e.has(n) && r.push(n);
        if (r.length > 1)
          throw Error("conflicting types: ".concat(r.join(", ")));
      }
      function iJ(e, t) {
        if (t.peekKeyword(iC)) {
          let r = t.pop().text;
          if (r !== e) throw Error("expected ".concat(e, ", got ").concat(r));
        }
        return t.popType("ID");
      }
      function iZ(e, t) {
        let r = new Set();
        for (;;) {
          let n = e.peekType("KEYWORD");
          if (null == n || (t && !t.has(n))) break;
          if ((e.pop(), r.has(n)))
            throw Error("duplicate keywords: ".concat(JSON.stringify(n)));
          r.add(n);
        }
        return Object.freeze(r);
      }
      function iY(e) {
        let t = iZ(e, iO);
        return (iQ(t, iP("constant payable nonpayable".split(" "))),
        iQ(t, iP("pure view payable nonpayable".split(" "))),
        t.has("view"))
          ? "view"
          : t.has("pure")
          ? "pure"
          : t.has("payable")
          ? "payable"
          : t.has("nonpayable")
          ? "nonpayable"
          : t.has("constant")
          ? "view"
          : "nonpayable";
      }
      function iX(e, t) {
        return e.popParams().map((e) => sn.from(e, t));
      }
      function i$(e) {
        if (e.peekType("AT")) {
          if ((e.pop(), e.peekType("NUMBER"))) return nH(e.pop().text);
          throw Error("invalid gas");
        }
        return null;
      }
      function i0(e) {
        if (e.length)
          throw Error(
            "unexpected tokens at offset "
              .concat(e.offset, ": ")
              .concat(e.toString())
          );
      }
      let i1 = new RegExp(/^(.*)\[([0-9]*)\]$/);
      function i2(e) {
        let t = e.match(iz);
        if ((nh(t, "invalid type", "type", e), "uint" === e)) return "uint256";
        if ("int" === e) return "int256";
        if (t[2]) {
          let r = parseInt(t[2]);
          nh(0 !== r && r <= 32, "invalid bytes length", "type", e);
        } else if (t[3]) {
          let r = parseInt(t[3]);
          nh(
            0 !== r && r <= 256 && r % 8 == 0,
            "invalid numeric width",
            "type",
            e
          );
        }
        return e;
      }
      let i3 = {},
        i4 = Symbol.for("_ethers_internal"),
        i8 = "_ParamTypeInternal",
        i5 = "_ErrorInternal",
        i6 = "_EventInternal",
        i9 = "_ConstructorInternal",
        i7 = "_FallbackInternal",
        se = "_FunctionInternal",
        st = "_StructInternal";
      var sr = new WeakSet();
      class sn {
        format(e) {
          if ((null == e && (e = "sighash"), "json" === e)) {
            let t = this.name || "";
            if (this.isArray()) {
              let e = JSON.parse(this.arrayChildren.format("json"));
              return (
                (e.name = t),
                (e.type += "[".concat(
                  this.arrayLength < 0 ? "" : String(this.arrayLength),
                  "]"
                )),
                JSON.stringify(e)
              );
            }
            let r = {
              type: "tuple" === this.baseType ? "tuple" : this.type,
              name: t,
            };
            return (
              "boolean" == typeof this.indexed && (r.indexed = this.indexed),
              this.isTuple() &&
                (r.components = this.components.map((t) =>
                  JSON.parse(t.format(e))
                )),
              JSON.stringify(r)
            );
          }
          let t = "";
          return (
            this.isArray()
              ? ((t += this.arrayChildren.format(e)),
                (t += "[".concat(
                  this.arrayLength < 0 ? "" : String(this.arrayLength),
                  "]"
                )))
              : this.isTuple()
              ? (t +=
                  "(" +
                  this.components
                    .map((t) => t.format(e))
                    .join("full" === e ? ", " : ",") +
                  ")")
              : (t += this.type),
            "sighash" !== e &&
              (!0 === this.indexed && (t += " indexed"),
              "full" === e && this.name && (t += " " + this.name)),
            t
          );
        }
        isArray() {
          return "array" === this.baseType;
        }
        isTuple() {
          return "tuple" === this.baseType;
        }
        isIndexable() {
          return null != this.indexed;
        }
        walk(e, t) {
          if (this.isArray()) {
            if (!Array.isArray(e)) throw Error("invalid array value");
            if (-1 !== this.arrayLength && e.length !== this.arrayLength)
              throw Error("array is wrong length");
            let r = this;
            return e.map((e) => r.arrayChildren.walk(e, t));
          }
          if (this.isTuple()) {
            if (!Array.isArray(e)) throw Error("invalid tuple value");
            if (e.length !== this.components.length)
              throw Error("array is wrong length");
            let r = this;
            return e.map((e, n) => r.components[n].walk(e, t));
          }
          return t(this.type, e);
        }
        async walkAsync(e, t) {
          let r = [],
            n = [e];
          return (
            (0, tn._)(this, sr, sa).call(this, r, e, t, (e) => {
              n[0] = e;
            }),
            r.length && (await Promise.all(r)),
            n[0]
          );
        }
        static from(e, t) {
          if (sn.isParamType(e)) return e;
          if ("string" == typeof e)
            try {
              return sn.from(iq(e), t);
            } catch (t) {
              nh(!1, "invalid param type", "obj", e);
            }
          else if (e instanceof iH) {
            let r = "",
              n = "",
              a = null;
            iZ(e, iP(["tuple"])).has("tuple") || e.peekType("OPEN_PAREN")
              ? ((n = "tuple"),
                (a = e.popParams().map((e) => sn.from(e))),
                (r = "tuple(".concat(a.map((e) => e.format()).join(","), ")")))
              : (n = r = i2(e.popType("TYPE")));
            let i = null,
              s = null;
            for (; e.length && e.peekType("BRACKET"); ) {
              let t = e.pop();
              (i = new sn(i3, "", r, n, null, a, s, i)),
                (s = t.value),
                (r += t.text),
                (n = "array"),
                (a = null);
            }
            let o = null;
            if (iZ(e, iB).has("indexed")) {
              if (!t) throw Error("");
              o = !0;
            }
            let l = e.peekType("ID") ? e.pop().text : "";
            if (e.length) throw Error("leftover tokens");
            return new sn(i3, l, r, n, o, a, s, i);
          }
          let r = e.name;
          nh(
            !r || ("string" == typeof r && r.match(iL)),
            "invalid name",
            "obj.name",
            r
          );
          let n = e.indexed;
          null != n &&
            (nh(t, "parameter cannot be indexed", "obj.indexed", e.indexed),
            (n = !!n));
          let a = e.type,
            i = a.match(i1);
          if (i) {
            let t = parseInt(i[2] || "-1"),
              s = sn.from({ type: i[1], components: e.components });
            return new sn(i3, r || "", a, "array", n, null, t, s);
          }
          if ("tuple" === a || a.startsWith("tuple(") || a.startsWith("(")) {
            let t =
              null != e.components ? e.components.map((e) => sn.from(e)) : null;
            return new sn(i3, r || "", a, "tuple", n, t, null, null);
          }
          return new sn(i3, r || "", (a = i2(e.type)), a, n, null, null, null);
        }
        static isParamType(e) {
          return e && e[i4] === i8;
        }
        constructor(e, t, r, n, a, i, s, o) {
          if (
            ((0, ta._)(this, sr),
            (0, eU._)(this, "name", void 0),
            (0, eU._)(this, "type", void 0),
            (0, eU._)(this, "baseType", void 0),
            (0, eU._)(this, "indexed", void 0),
            (0, eU._)(this, "components", void 0),
            (0, eU._)(this, "arrayLength", void 0),
            (0, eU._)(this, "arrayChildren", void 0),
            nb(e, i3, "ParamType"),
            Object.defineProperty(this, i4, { value: i8 }),
            i && (i = Object.freeze(i.slice())),
            "array" === n)
          ) {
            if (null == s || null == o) throw Error("");
          } else if (null != s || null != o) throw Error("");
          if ("tuple" === n) {
            if (null == i) throw Error("");
          } else if (null != i) throw Error("");
          no(this, {
            name: t,
            type: r,
            baseType: n,
            indexed: a,
            components: i,
            arrayLength: s,
            arrayChildren: o,
          });
        }
      }
      function sa(e, t, r, n) {
        var a;
        if (this.isArray()) {
          if (!Array.isArray(t)) throw Error("invalid array value");
          if (-1 !== this.arrayLength && t.length !== this.arrayLength)
            throw Error("array is wrong length");
          let a = this.arrayChildren,
            i = t.slice();
          i.forEach((t, n) => {
            (0, tn._)(a, sr, sa).call(a, e, t, r, (e) => {
              i[n] = e;
            });
          }),
            n(i);
          return;
        }
        if (this.isTuple()) {
          let i,
            s = this.components;
          if (Array.isArray(t)) i = t.slice();
          else {
            if (null == t || "object" != typeof t)
              throw Error("invalid tuple value");
            i = s.map((e) => {
              if (!e.name)
                throw Error("cannot use object value with unnamed components");
              if (!(e.name in t))
                throw Error("missing value for component ".concat(e.name));
              return t[e.name];
            });
          }
          if (i.length !== this.components.length)
            throw Error("array is wrong length");
          i.forEach((t, n) => {
            (0, tn._)((a = s[n]), sr, sa).call(a, e, t, r, (e) => {
              i[n] = e;
            });
          }),
            n(i);
          return;
        }
        let i = r(this.type, t);
        i.then
          ? e.push(
              (async function () {
                n(await i);
              })()
            )
          : n(i);
      }
      class si {
        static from(e) {
          if ("string" == typeof e) {
            try {
              si.from(JSON.parse(e));
            } catch (e) {}
            return si.from(iq(e));
          }
          if (e instanceof iH)
            switch (e.peekKeyword(iC)) {
              case "constructor":
                return su.from(e);
              case "error":
                return sl.from(e);
              case "event":
                return sc.from(e);
              case "fallback":
              case "receive":
                return sd.from(e);
              case "function":
                return sf.from(e);
              case "struct":
                return sh.from(e);
            }
          else if ("object" == typeof e) {
            switch (e.type) {
              case "constructor":
                return su.from(e);
              case "error":
                return sl.from(e);
              case "event":
                return sc.from(e);
              case "fallback":
              case "receive":
                return sd.from(e);
              case "function":
                return sf.from(e);
              case "struct":
                return sh.from(e);
            }
            nf(
              !1,
              "unsupported type: ".concat(e.type),
              "UNSUPPORTED_OPERATION",
              { operation: "Fragment.from" }
            );
          }
          nh(!1, "unsupported frgament object", "obj", e);
        }
        static isConstructor(e) {
          return su.isFragment(e);
        }
        static isError(e) {
          return sl.isFragment(e);
        }
        static isEvent(e) {
          return sc.isFragment(e);
        }
        static isFunction(e) {
          return sf.isFragment(e);
        }
        static isStruct(e) {
          return sh.isFragment(e);
        }
        constructor(e, t, r) {
          (0, eU._)(this, "type", void 0),
            (0, eU._)(this, "inputs", void 0),
            nb(e, i3, "Fragment"),
            no(this, { type: t, inputs: (r = Object.freeze(r.slice())) });
        }
      }
      class ss extends si {
        constructor(e, t, r, n) {
          super(e, t, n),
            (0, eU._)(this, "name", void 0),
            nh(
              "string" == typeof r && r.match(iL),
              "invalid identifier",
              "name",
              r
            ),
            (n = Object.freeze(n.slice())),
            no(this, { name: r });
        }
      }
      function so(e, t) {
        return (
          "(" + t.map((t) => t.format(e)).join("full" === e ? ", " : ",") + ")"
        );
      }
      class sl extends ss {
        get selector() {
          return iN(this.format("sighash")).substring(0, 10);
        }
        format(e) {
          if ((null == e && (e = "sighash"), "json" === e))
            return JSON.stringify({
              type: "error",
              name: this.name,
              inputs: this.inputs.map((t) => JSON.parse(t.format(e))),
            });
          let t = [];
          return (
            "sighash" !== e && t.push("error"),
            t.push(this.name + so(e, this.inputs)),
            t.join(" ")
          );
        }
        static from(e) {
          if (sl.isFragment(e)) return e;
          if ("string" == typeof e) return sl.from(iq(e));
          if (e instanceof iH) {
            let t = iJ("error", e),
              r = iX(e);
            return i0(e), new sl(i3, t, r);
          }
          return new sl(i3, e.name, e.inputs ? e.inputs.map(sn.from) : []);
        }
        static isFragment(e) {
          return e && e[i4] === i5;
        }
        constructor(e, t, r) {
          super(e, "error", t, r),
            Object.defineProperty(this, i4, { value: i5 });
        }
      }
      class sc extends ss {
        get topicHash() {
          return iN(this.format("sighash"));
        }
        format(e) {
          if ((null == e && (e = "sighash"), "json" === e))
            return JSON.stringify({
              type: "event",
              anonymous: this.anonymous,
              name: this.name,
              inputs: this.inputs.map((t) => JSON.parse(t.format(e))),
            });
          let t = [];
          return (
            "sighash" !== e && t.push("event"),
            t.push(this.name + so(e, this.inputs)),
            "sighash" !== e && this.anonymous && t.push("anonymous"),
            t.join(" ")
          );
        }
        static getTopicHash(e, t) {
          return new sc(i3, e, (t = (t || []).map((e) => sn.from(e))), !1)
            .topicHash;
        }
        static from(e) {
          if (sc.isFragment(e)) return e;
          if ("string" == typeof e)
            try {
              return sc.from(iq(e));
            } catch (t) {
              nh(!1, "invalid event fragment", "obj", e);
            }
          else if (e instanceof iH) {
            let t = iJ("event", e),
              r = iX(e, !0),
              n = !!iZ(e, iP(["anonymous"])).has("anonymous");
            return i0(e), new sc(i3, t, r, n);
          }
          return new sc(
            i3,
            e.name,
            e.inputs ? e.inputs.map((e) => sn.from(e, !0)) : [],
            !!e.anonymous
          );
        }
        static isFragment(e) {
          return e && e[i4] === i6;
        }
        constructor(e, t, r, n) {
          super(e, "event", t, r),
            (0, eU._)(this, "anonymous", void 0),
            Object.defineProperty(this, i4, { value: i6 }),
            no(this, { anonymous: n });
        }
      }
      class su extends si {
        format(e) {
          if (
            (nf(
              null != e && "sighash" !== e,
              "cannot format a constructor for sighash",
              "UNSUPPORTED_OPERATION",
              { operation: "format(sighash)" }
            ),
            "json" === e)
          )
            return JSON.stringify({
              type: "constructor",
              stateMutability: this.payable ? "payable" : "undefined",
              payable: this.payable,
              gas: null != this.gas ? this.gas : void 0,
              inputs: this.inputs.map((t) => JSON.parse(t.format(e))),
            });
          let t = ["constructor".concat(so(e, this.inputs))];
          return (
            this.payable && t.push("payable"),
            null != this.gas && t.push("@".concat(this.gas.toString())),
            t.join(" ")
          );
        }
        static from(e) {
          if (su.isFragment(e)) return e;
          if ("string" == typeof e)
            try {
              return su.from(iq(e));
            } catch (t) {
              nh(!1, "invalid constuctor fragment", "obj", e);
            }
          else if (e instanceof iH) {
            iZ(e, iP(["constructor"]));
            let t = iX(e),
              r = !!iZ(e, iT).has("payable"),
              n = i$(e);
            return i0(e), new su(i3, "constructor", t, r, n);
          }
          return new su(
            i3,
            "constructor",
            e.inputs ? e.inputs.map(sn.from) : [],
            !!e.payable,
            null != e.gas ? e.gas : null
          );
        }
        static isFragment(e) {
          return e && e[i4] === i9;
        }
        constructor(e, t, r, n, a) {
          super(e, t, r),
            (0, eU._)(this, "payable", void 0),
            (0, eU._)(this, "gas", void 0),
            Object.defineProperty(this, i4, { value: i9 }),
            no(this, { payable: n, gas: a });
        }
      }
      class sd extends si {
        format(e) {
          let t = 0 === this.inputs.length ? "receive" : "fallback";
          return "json" === e
            ? JSON.stringify({
                type: t,
                stateMutability: this.payable ? "payable" : "nonpayable",
              })
            : "".concat(t, "()").concat(this.payable ? " payable" : "");
        }
        static from(e) {
          if (sd.isFragment(e)) return e;
          if ("string" == typeof e)
            try {
              return sd.from(iq(e));
            } catch (t) {
              nh(!1, "invalid fallback fragment", "obj", e);
            }
          else if (e instanceof iH) {
            let t = e.toString();
            if (
              (nh(
                e.peekKeyword(iP(["fallback", "receive"])),
                "type must be fallback or receive",
                "obj",
                t
              ),
              "receive" === e.popKeyword(iP(["fallback", "receive"])))
            ) {
              let t = iX(e);
              return (
                nh(
                  0 === t.length,
                  "receive cannot have arguments",
                  "obj.inputs",
                  t
                ),
                iZ(e, iP(["payable"])),
                i0(e),
                new sd(i3, [], !0)
              );
            }
            let r = iX(e);
            r.length
              ? nh(
                  1 === r.length && "bytes" === r[0].type,
                  "invalid fallback inputs",
                  "obj.inputs",
                  r.map((e) => e.format("minimal")).join(", ")
                )
              : (r = [sn.from("bytes")]);
            let n = iY(e);
            if (
              (nh(
                "nonpayable" === n || "payable" === n,
                "fallback cannot be constants",
                "obj.stateMutability",
                n
              ),
              iZ(e, iP(["returns"])).has("returns"))
            ) {
              let t = iX(e);
              nh(
                1 === t.length && "bytes" === t[0].type,
                "invalid fallback outputs",
                "obj.outputs",
                t.map((e) => e.format("minimal")).join(", ")
              );
            }
            return i0(e), new sd(i3, r, "payable" === n);
          }
          return "receive" === e.type
            ? new sd(i3, [], !0)
            : "fallback" === e.type
            ? new sd(i3, [sn.from("bytes")], "payable" === e.stateMutability)
            : void nh(!1, "invalid fallback description", "obj", e);
        }
        static isFragment(e) {
          return e && e[i4] === i7;
        }
        constructor(e, t, r) {
          super(e, "fallback", t),
            (0, eU._)(this, "payable", void 0),
            Object.defineProperty(this, i4, { value: i7 }),
            no(this, { payable: r });
        }
      }
      class sf extends ss {
        get selector() {
          return iN(this.format("sighash")).substring(0, 10);
        }
        format(e) {
          if ((null == e && (e = "sighash"), "json" === e))
            return JSON.stringify({
              type: "function",
              name: this.name,
              constant: this.constant,
              stateMutability:
                "nonpayable" !== this.stateMutability
                  ? this.stateMutability
                  : void 0,
              payable: this.payable,
              gas: null != this.gas ? this.gas : void 0,
              inputs: this.inputs.map((t) => JSON.parse(t.format(e))),
              outputs: this.outputs.map((t) => JSON.parse(t.format(e))),
            });
          let t = [];
          return (
            "sighash" !== e && t.push("function"),
            t.push(this.name + so(e, this.inputs)),
            "sighash" !== e &&
              ("nonpayable" !== this.stateMutability &&
                t.push(this.stateMutability),
              this.outputs &&
                this.outputs.length &&
                (t.push("returns"), t.push(so(e, this.outputs))),
              null != this.gas && t.push("@".concat(this.gas.toString()))),
            t.join(" ")
          );
        }
        static getSelector(e, t) {
          return new sf(
            i3,
            e,
            "view",
            (t = (t || []).map((e) => sn.from(e))),
            [],
            null
          ).selector;
        }
        static from(e) {
          if (sf.isFragment(e)) return e;
          if ("string" == typeof e)
            try {
              return sf.from(iq(e));
            } catch (t) {
              nh(!1, "invalid function fragment", "obj", e);
            }
          else if (e instanceof iH) {
            let t = iJ("function", e),
              r = iX(e),
              n = iY(e),
              a = [];
            iZ(e, iP(["returns"])).has("returns") && (a = iX(e));
            let i = i$(e);
            return i0(e), new sf(i3, t, n, r, a, i);
          }
          let t = e.stateMutability;
          return (
            null == t &&
              ((t = "payable"),
              "boolean" == typeof e.constant
                ? ((t = "view"),
                  !e.constant &&
                    ((t = "payable"),
                    "boolean" != typeof e.payable ||
                      e.payable ||
                      (t = "nonpayable")))
                : "boolean" != typeof e.payable ||
                  e.payable ||
                  (t = "nonpayable")),
            new sf(
              i3,
              e.name,
              t,
              e.inputs ? e.inputs.map(sn.from) : [],
              e.outputs ? e.outputs.map(sn.from) : [],
              null != e.gas ? e.gas : null
            )
          );
        }
        static isFragment(e) {
          return e && e[i4] === se;
        }
        constructor(e, t, r, n, a, i) {
          super(e, "function", t, n),
            (0, eU._)(this, "constant", void 0),
            (0, eU._)(this, "outputs", void 0),
            (0, eU._)(this, "stateMutability", void 0),
            (0, eU._)(this, "payable", void 0),
            (0, eU._)(this, "gas", void 0),
            Object.defineProperty(this, i4, { value: se }),
            no(this, {
              constant: "view" === r || "pure" === r,
              gas: i,
              outputs: (a = Object.freeze(a.slice())),
              payable: "payable" === r,
              stateMutability: r,
            });
        }
      }
      class sh extends ss {
        format() {
          throw Error("@TODO");
        }
        static from(e) {
          if ("string" == typeof e)
            try {
              return sh.from(iq(e));
            } catch (t) {
              nh(!1, "invalid struct fragment", "obj", e);
            }
          else if (e instanceof iH) {
            let t = iJ("struct", e),
              r = iX(e);
            return i0(e), new sh(i3, t, r);
          }
          return new sh(i3, e.name, e.inputs ? e.inputs.map(sn.from) : []);
        }
        static isFragment(e) {
          return e && e[i4] === st;
        }
        constructor(e, t, r) {
          super(e, "struct", t, r),
            Object.defineProperty(this, i4, { value: st });
        }
      }
      let sp = new Map();
      sp.set(0, "GENERIC_PANIC"),
        sp.set(1, "ASSERT_FALSE"),
        sp.set(17, "OVERFLOW"),
        sp.set(18, "DIVIDE_BY_ZERO"),
        sp.set(33, "ENUM_RANGE_ERROR"),
        sp.set(34, "BAD_STORAGE_DATA"),
        sp.set(49, "STACK_UNDERFLOW"),
        sp.set(50, "ARRAY_RANGE_ERROR"),
        sp.set(65, "OUT_OF_MEMORY"),
        sp.set(81, "UNINITIALIZED_FUNCTION_CALL");
      let sx = new RegExp(/^bytes([0-9]*)$/),
        sg = new RegExp(/^(u?int)([0-9]*)$/),
        sb = null,
        sm = 1024;
      var sy = new WeakSet();
      class sw {
        getDefaultValue(e) {
          return new i_(
            e.map((e) => (0, tn._)(this, sy, sv).call(this, sn.from(e))),
            "_"
          ).defaultValue();
        }
        encode(e, t) {
          np(t.length, e.length, "types/values length mismatch");
          let r = new i_(
              e.map((e) => (0, tn._)(this, sy, sv).call(this, sn.from(e))),
              "_"
            ),
            n = new aa();
          return r.encode(n, t), n.data;
        }
        decode(e, t, r) {
          return new i_(
            e.map((e) => (0, tn._)(this, sy, sv).call(this, sn.from(e))),
            "_"
          ).decode(new ah(t, r, sm));
        }
        static _setDefaultMaxInflation(e) {
          nh(
            "number" == typeof e && Number.isInteger(e),
            "invalid defaultMaxInflation factor",
            "value",
            e
          ),
            (sm = e);
        }
        static defaultAbiCoder() {
          return null == sb && (sb = new sw()), sb;
        }
        static getBuiltinCallException(e, t, r) {
          return (function (e, t, r, n) {
            let a = "missing revert data",
              i = null,
              s = null;
            if (r) {
              a = "execution reverted";
              let e = ny(r);
              if (((r = n_(r)), 0 === e.length))
                (a += " (no data present; likely require(false) occurred"),
                  (i = "require(false)");
              else if (e.length % 32 != 4)
                a += " (could not decode reason; invalid data length)";
              else if ("0x08c379a0" === n_(e.slice(0, 4)))
                try {
                  (i = n.decode(["string"], e.slice(4))[0]),
                    (s = {
                      signature: "Error(string)",
                      name: "Error",
                      args: [i],
                    }),
                    (a += ": ".concat(JSON.stringify(i)));
                } catch (e) {
                  a += " (could not decode reason; invalid string data)";
                }
              else if ("0x4e487b71" === n_(e.slice(0, 4)))
                try {
                  let t = Number(n.decode(["uint256"], e.slice(4))[0]);
                  (s = {
                    signature: "Panic(uint256)",
                    name: "Panic",
                    args: [t],
                  }),
                    (i = "Panic due to "
                      .concat(sp.get(t) || "UNKNOWN", "(")
                      .concat(t, ")")),
                    (a += ": ".concat(i));
                } catch (e) {
                  a += " (could not decode panic code)";
                }
              else a += " (unknown custom error)";
            }
            let o = { to: t.to ? a9(t.to) : null, data: t.data || "0x" };
            return (
              t.from && (o.from = a9(t.from)),
              nd(a, "CALL_EXCEPTION", {
                action: e,
                data: r,
                reason: i,
                transaction: o,
                invocation: null,
                revert: s,
              })
            );
          })(e, t, r, sw.defaultAbiCoder());
        }
        constructor() {
          (0, ta._)(this, sy);
        }
      }
      function sv(e) {
        if (e.isArray())
          return new id(
            (0, tn._)(this, sy, sv).call(this, e.arrayChildren),
            e.arrayLength,
            e.name
          );
        if (e.isTuple())
          return new i_(
            e.components.map((e) => (0, tn._)(this, sy, sv).call(this, e)),
            e.name
          );
        switch (e.baseType) {
          case "address":
            return new io(e.name);
          case "bool":
            return new ih(e.name);
          case "string":
            return new iE(e.name);
          case "bytes":
            return new ix(e.name);
          case "":
            return new im(e.name);
        }
        let t = e.type.match(sg);
        if (t) {
          let r = parseInt(t[2] || "256");
          return (
            nh(
              0 !== r && r <= 256 && r % 8 == 0,
              "invalid " + t[1] + " bit length",
              "param",
              e
            ),
            new iA(r / 8, "int" === t[1], e.name)
          );
        }
        if ((t = e.type.match(sx))) {
          let r = parseInt(t[1]);
          return (
            nh(0 !== r && r <= 32, "invalid bytes length", "param", e),
            new ig(r, e.name)
          );
        }
        nh(!1, "invalid type", "type", e.type);
      }
      class sA {
        constructor(e, t, r) {
          (0, eU._)(this, "fragment", void 0),
            (0, eU._)(this, "name", void 0),
            (0, eU._)(this, "signature", void 0),
            (0, eU._)(this, "topic", void 0),
            (0, eU._)(this, "args", void 0);
          let n = e.name,
            a = e.format();
          no(this, { fragment: e, name: n, signature: a, topic: t, args: r });
        }
      }
      class sE {
        constructor(e, t, r, n) {
          (0, eU._)(this, "fragment", void 0),
            (0, eU._)(this, "name", void 0),
            (0, eU._)(this, "args", void 0),
            (0, eU._)(this, "signature", void 0),
            (0, eU._)(this, "selector", void 0),
            (0, eU._)(this, "value", void 0);
          let a = e.name,
            i = e.format();
          no(this, {
            fragment: e,
            name: a,
            args: r,
            signature: i,
            selector: t,
            value: n,
          });
        }
      }
      class s_ {
        constructor(e, t, r) {
          (0, eU._)(this, "fragment", void 0),
            (0, eU._)(this, "name", void 0),
            (0, eU._)(this, "args", void 0),
            (0, eU._)(this, "signature", void 0),
            (0, eU._)(this, "selector", void 0);
          let n = e.name,
            a = e.format();
          no(this, {
            fragment: e,
            name: n,
            args: r,
            signature: a,
            selector: t,
          });
        }
      }
      class sk {
        static isIndexed(e) {
          return !!(e && e._isIndexed);
        }
        constructor(e) {
          (0, eU._)(this, "hash", void 0),
            (0, eU._)(this, "_isIndexed", void 0),
            no(this, { hash: e, _isIndexed: !0 });
        }
      }
      let sN = {
          0: "generic panic",
          1: "assert(false)",
          17: "arithmetic overflow",
          18: "division or modulo by zero",
          33: "enum overflow",
          34: "invalid encoded storage byte array accessed",
          49: "out-of-bounds array access; popping on an empty array",
          50: "out-of-bounds access of an array or bytesN",
          65: "out of memory",
          81: "uninitialized function",
        },
        sP = {
          "0x08c379a0": {
            signature: "Error(string)",
            name: "Error",
            inputs: ["string"],
            reason: (e) =>
              "reverted with reason string ".concat(JSON.stringify(e)),
          },
          "0x4e487b71": {
            signature: "Panic(uint256)",
            name: "Panic",
            inputs: ["uint256"],
            reason: (e) => {
              let t = "unknown panic code";
              return (
                e >= 0 &&
                  e <= 255 &&
                  sN[e.toString()] &&
                  (t = sN[e.toString()]),
                "reverted with panic code 0x"
                  .concat(e.toString(16), " (")
                  .concat(t, ")")
              );
            },
          },
        };
      var sT = new WeakMap(),
        sS = new WeakMap(),
        sO = new WeakMap(),
        sR = new WeakMap(),
        sC = new WeakSet(),
        sI = new WeakSet();
      class sB {
        format(e) {
          let t = e ? "minimal" : "full";
          return this.fragments.map((e) => e.format(t));
        }
        formatJson() {
          return JSON.stringify(
            this.fragments
              .map((e) => e.format("json"))
              .map((e) => JSON.parse(e))
          );
        }
        getAbiCoder() {
          return sw.defaultAbiCoder();
        }
        getFunctionName(e) {
          let t = (0, tn._)(this, sC, sU).call(this, e, null, !1);
          return nh(t, "no matching function", "key", e), t.name;
        }
        hasFunction(e) {
          return !!(0, tn._)(this, sC, sU).call(this, e, null, !1);
        }
        getFunction(e, t) {
          return (0, tn._)(this, sC, sU).call(this, e, t || null, !0);
        }
        forEachFunction(e) {
          let t = Array.from((0, te._)(this, sO).keys());
          t.sort((e, t) => e.localeCompare(t));
          for (let r = 0; r < t.length; r++) {
            let n = t[r];
            e((0, te._)(this, sO).get(n), r);
          }
        }
        getEventName(e) {
          let t = (0, tn._)(this, sI, sM).call(this, e, null, !1);
          return nh(t, "no matching event", "key", e), t.name;
        }
        hasEvent(e) {
          return !!(0, tn._)(this, sI, sM).call(this, e, null, !1);
        }
        getEvent(e, t) {
          return (0, tn._)(this, sI, sM).call(this, e, t || null, !0);
        }
        forEachEvent(e) {
          let t = Array.from((0, te._)(this, sS).keys());
          t.sort((e, t) => e.localeCompare(t));
          for (let r = 0; r < t.length; r++) {
            let n = t[r];
            e((0, te._)(this, sS).get(n), r);
          }
        }
        getError(e, t) {
          if (nv(e)) {
            let t = e.toLowerCase();
            if (sP[t]) return sl.from(sP[t].signature);
            for (let e of (0, te._)(this, sT).values())
              if (t === e.selector) return e;
            return null;
          }
          if (-1 === e.indexOf("(")) {
            let t = [];
            for (let [r, n] of (0, te._)(this, sT))
              r.split("(")[0] === e && t.push(n);
            if (0 === t.length)
              return "Error" === e
                ? sl.from("error Error(string)")
                : "Panic" === e
                ? sl.from("error Panic(uint256)")
                : null;
            if (t.length > 1) {
              let r = t.map((e) => JSON.stringify(e.format())).join(", ");
              nh(
                !1,
                "ambiguous error description (i.e. ".concat(r, ")"),
                "name",
                e
              );
            }
            return t[0];
          }
          if ("Error(string)" === (e = sl.from(e).format()))
            return sl.from("error Error(string)");
          if ("Panic(uint256)" === e) return sl.from("error Panic(uint256)");
          let r = (0, te._)(this, sT).get(e);
          return r || null;
        }
        forEachError(e) {
          let t = Array.from((0, te._)(this, sT).keys());
          t.sort((e, t) => e.localeCompare(t));
          for (let r = 0; r < t.length; r++) {
            let n = t[r];
            e((0, te._)(this, sT).get(n), r);
          }
        }
        _decodeParams(e, t) {
          return (0, te._)(this, sR).decode(e, t);
        }
        _encodeParams(e, t) {
          return (0, te._)(this, sR).encode(e, t);
        }
        encodeDeploy(e) {
          return this._encodeParams(this.deploy.inputs, e || []);
        }
        decodeErrorResult(e, t) {
          if ("string" == typeof e) {
            let t = this.getError(e);
            nh(t, "unknown error", "fragment", e), (e = t);
          }
          return (
            nh(
              nP(t, 0, 4) === e.selector,
              "data signature does not match error ".concat(e.name, "."),
              "data",
              t
            ),
            this._decodeParams(e.inputs, nP(t, 4))
          );
        }
        encodeErrorResult(e, t) {
          if ("string" == typeof e) {
            let t = this.getError(e);
            nh(t, "unknown error", "fragment", e), (e = t);
          }
          return nk([e.selector, this._encodeParams(e.inputs, t || [])]);
        }
        decodeFunctionData(e, t) {
          if ("string" == typeof e) {
            let t = this.getFunction(e);
            nh(t, "unknown function", "fragment", e), (e = t);
          }
          return (
            nh(
              nP(t, 0, 4) === e.selector,
              "data signature does not match function ".concat(e.name, "."),
              "data",
              t
            ),
            this._decodeParams(e.inputs, nP(t, 4))
          );
        }
        encodeFunctionData(e, t) {
          if ("string" == typeof e) {
            let t = this.getFunction(e);
            nh(t, "unknown function", "fragment", e), (e = t);
          }
          return nk([e.selector, this._encodeParams(e.inputs, t || [])]);
        }
        decodeFunctionResult(e, t) {
          if ("string" == typeof e) {
            let t = this.getFunction(e);
            nh(t, "unknown function", "fragment", e), (e = t);
          }
          let r = "invalid length for result data",
            n = nw(t);
          if (n.length % 32 == 0)
            try {
              return (0, te._)(this, sR).decode(e.outputs, n);
            } catch (e) {
              r = "could not decode result data";
            }
          nf(!1, r, "BAD_DATA", {
            value: n_(n),
            info: { method: e.name, signature: e.format() },
          });
        }
        makeError(e, t) {
          let r = ny(e, "data"),
            n = sw.getBuiltinCallException("call", t, r);
          if (
            n.message.startsWith("execution reverted (unknown custom error)")
          ) {
            let e = n_(r.slice(0, 4)),
              t = this.getError(e);
            if (t)
              try {
                let e = (0, te._)(this, sR).decode(t.inputs, r.slice(4));
                (n.revert = { name: t.name, signature: t.format(), args: e }),
                  (n.reason = n.revert.signature),
                  (n.message = "execution reverted: ".concat(n.reason));
              } catch (e) {
                n.message =
                  "execution reverted (coult not decode custom error)";
              }
          }
          let a = this.parseTransaction(t);
          return (
            a &&
              (n.invocation = {
                method: a.name,
                signature: a.signature,
                args: a.args,
              }),
            n
          );
        }
        encodeFunctionResult(e, t) {
          if ("string" == typeof e) {
            let t = this.getFunction(e);
            nh(t, "unknown function", "fragment", e), (e = t);
          }
          return n_((0, te._)(this, sR).encode(e.outputs, t || []));
        }
        encodeFilterTopics(e, t) {
          if ("string" == typeof e) {
            let t = this.getEvent(e);
            nh(t, "unknown event", "eventFragment", e), (e = t);
          }
          nf(
            t.length <= e.inputs.length,
            "too many arguments for ".concat(e.format()),
            "UNEXPECTED_ARGUMENT",
            { count: t.length, expectedCount: e.inputs.length }
          );
          let r = [];
          e.anonymous || r.push(e.topicHash);
          let n = (e, t) =>
            "string" === e.type
              ? iN(t)
              : "bytes" === e.type
              ? a1(n_(t))
              : ("bool" === e.type && "boolean" == typeof t
                  ? (t = t ? "0x01" : "0x00")
                  : e.type.match(/^u?int/)
                  ? (t = nY(t))
                  : e.type.match(/^bytes/)
                  ? (t = nR(t, 32))
                  : "address" === e.type &&
                    (0, te._)(this, sR).encode(["address"], [t]),
                nO(n_(t), 32));
          for (
            t.forEach((t, a) => {
              let i = e.inputs[a];
              if (!i.indexed)
                return void nh(
                  null == t,
                  "cannot filter non-indexed parameters; must be null",
                  "contract." + i.name,
                  t
                );
              null == t
                ? r.push(null)
                : "array" === i.baseType || "tuple" === i.baseType
                ? nh(
                    !1,
                    "filtering with tuples or arrays not supported",
                    "contract." + i.name,
                    t
                  )
                : Array.isArray(t)
                ? r.push(t.map((e) => n(i, e)))
                : r.push(n(i, t));
            });
            r.length && null === r[r.length - 1];

          )
            r.pop();
          return r;
        }
        encodeEventLog(e, t) {
          if ("string" == typeof e) {
            let t = this.getEvent(e);
            nh(t, "unknown event", "eventFragment", e), (e = t);
          }
          let r = [],
            n = [],
            a = [];
          return (
            e.anonymous || r.push(e.topicHash),
            nh(
              t.length === e.inputs.length,
              "event arguments/values mismatch",
              "values",
              t
            ),
            e.inputs.forEach((e, i) => {
              let s = t[i];
              if (e.indexed)
                if ("string" === e.type) r.push(iN(s));
                else if ("bytes" === e.type) r.push(a1(s));
                else if ("tuple" === e.baseType || "array" === e.baseType)
                  throw Error("not implemented");
                else r.push((0, te._)(this, sR).encode([e.type], [s]));
              else n.push(e), a.push(s);
            }),
            { data: (0, te._)(this, sR).encode(n, a), topics: r }
          );
        }
        decodeEventLog(e, t, r) {
          if ("string" == typeof e) {
            let t = this.getEvent(e);
            nh(t, "unknown event", "eventFragment", e), (e = t);
          }
          if (null != r && !e.anonymous) {
            let t = e.topicHash;
            nh(
              nv(r[0], 32) && r[0].toLowerCase() === t,
              "fragment/topic mismatch",
              "topics[0]",
              r[0]
            ),
              (r = r.slice(1));
          }
          let n = [],
            a = [],
            i = [];
          e.inputs.forEach((e, t) => {
            e.indexed
              ? "string" === e.type ||
                "bytes" === e.type ||
                "tuple" === e.baseType ||
                "array" === e.baseType
                ? (n.push(sn.from({ type: "bytes32", name: e.name })),
                  i.push(!0))
                : (n.push(e), i.push(!1))
              : (a.push(e), i.push(!1));
          });
          let s = null != r ? (0, te._)(this, sR).decode(n, nk(r)) : null,
            o = (0, te._)(this, sR).decode(a, t, !0),
            l = [],
            c = [],
            u = 0,
            d = 0;
          return (
            e.inputs.forEach((e, t) => {
              let r = null;
              if (e.indexed)
                if (null == s) r = new sk(null);
                else if (i[t]) r = new sk(s[d++]);
                else
                  try {
                    r = s[d++];
                  } catch (e) {
                    r = e;
                  }
              else
                try {
                  r = o[u++];
                } catch (e) {
                  r = e;
                }
              l.push(r), c.push(e.name || null);
            }),
            n6.fromItems(l, c)
          );
        }
        parseTransaction(e) {
          let t = ny(e.data, "tx.data"),
            r = nH(null != e.value ? e.value : 0, "tx.value"),
            n = this.getFunction(n_(t.slice(0, 4)));
          if (!n) return null;
          let a = (0, te._)(this, sR).decode(n.inputs, t.slice(4));
          return new sE(n, n.selector, a, r);
        }
        parseCallResult(e) {
          throw Error("@TODO");
        }
        parseLog(e) {
          let t = this.getEvent(e.topics[0]);
          return !t || t.anonymous
            ? null
            : new sA(t, t.topicHash, this.decodeEventLog(t, e.data, e.topics));
        }
        parseError(e) {
          let t = n_(e),
            r = this.getError(nP(t, 0, 4));
          if (!r) return null;
          let n = (0, te._)(this, sR).decode(r.inputs, nP(t, 4));
          return new s_(r, r.selector, n);
        }
        static from(e) {
          return e instanceof sB
            ? e
            : new sB(
                "string" == typeof e
                  ? JSON.parse(e)
                  : "function" == typeof e.formatJson
                  ? e.formatJson()
                  : "function" == typeof e.format
                  ? e.format("json")
                  : e
              );
        }
        constructor(e) {
          (0, ta._)(this, sC),
            (0, ta._)(this, sI),
            (0, eU._)(this, "fragments", void 0),
            (0, eU._)(this, "deploy", void 0),
            (0, eU._)(this, "fallback", void 0),
            (0, eU._)(this, "receive", void 0),
            (0, tt._)(this, sT, { writable: !0, value: void 0 }),
            (0, tt._)(this, sS, { writable: !0, value: void 0 }),
            (0, tt._)(this, sO, { writable: !0, value: void 0 }),
            (0, tt._)(this, sR, { writable: !0, value: void 0 });
          let t = [];
          (t = "string" == typeof e ? JSON.parse(e) : e),
            (0, tr._)(this, sO, new Map()),
            (0, tr._)(this, sT, new Map()),
            (0, tr._)(this, sS, new Map());
          let r = [];
          for (let e of t)
            try {
              r.push(si.from(e));
            } catch (t) {
              console.log(
                "[Warning] Invalid Fragment ".concat(JSON.stringify(e), ":"),
                t.message
              );
            }
          no(this, { fragments: Object.freeze(r) });
          let n = null,
            a = !1;
          (0, tr._)(this, sR, this.getAbiCoder()),
            this.fragments.forEach((e, t) => {
              let r;
              switch (e.type) {
                case "constructor":
                  if (this.deploy)
                    return void console.log(
                      "duplicate definition - constructor"
                    );
                  no(this, { deploy: e });
                  return;
                case "fallback":
                  0 === e.inputs.length
                    ? (a = !0)
                    : (nh(
                        !n || e.payable !== n.payable,
                        "conflicting fallback fragments",
                        "fragments[".concat(t, "]"),
                        e
                      ),
                      (a = (n = e).payable));
                  return;
                case "function":
                  r = (0, te._)(this, sO);
                  break;
                case "event":
                  r = (0, te._)(this, sS);
                  break;
                case "error":
                  r = (0, te._)(this, sT);
                  break;
                default:
                  return;
              }
              let i = e.format();
              r.has(i) || r.set(i, e);
            }),
            this.deploy || no(this, { deploy: su.from("constructor()") }),
            no(this, { fallback: n, receive: a });
        }
      }
      function sU(e, t, r) {
        if (nv(e)) {
          let t = e.toLowerCase();
          for (let e of (0, te._)(this, sO).values())
            if (t === e.selector) return e;
          return null;
        }
        if (-1 === e.indexOf("(")) {
          let n = [];
          for (let [t, r] of (0, te._)(this, sO))
            t.split("(")[0] === e && n.push(r);
          if (t) {
            let e = t.length > 0 ? t[t.length - 1] : null,
              r = t.length,
              a = !0;
            is.isTyped(e) && "overrides" === e.type && ((a = !1), r--);
            for (let e = n.length - 1; e >= 0; e--) {
              let t = n[e].inputs.length;
              t === r || (a && t === r - 1) || n.splice(e, 1);
            }
            for (let e = n.length - 1; e >= 0; e--) {
              let r = n[e].inputs;
              for (let a = 0; a < t.length; a++)
                if (is.isTyped(t[a])) {
                  if (a >= r.length) {
                    if ("overrides" === t[a].type) continue;
                    n.splice(e, 1);
                    break;
                  }
                  if (t[a].type !== r[a].baseType) {
                    n.splice(e, 1);
                    break;
                  }
                }
            }
          }
          if (1 === n.length && t && t.length !== n[0].inputs.length) {
            let e = t[t.length - 1];
            (null == e || Array.isArray(e) || "object" != typeof e) &&
              n.splice(0, 1);
          }
          if (0 === n.length) return null;
          if (n.length > 1 && r) {
            let t = n.map((e) => JSON.stringify(e.format())).join(", ");
            nh(
              !1,
              "ambiguous function description (i.e. matches ".concat(t, ")"),
              "key",
              e
            );
          }
          return n[0];
        }
        let n = (0, te._)(this, sO).get(sf.from(e).format());
        return n || null;
      }
      function sM(e, t, r) {
        if (nv(e)) {
          let t = e.toLowerCase();
          for (let e of (0, te._)(this, sS).values())
            if (t === e.topicHash) return e;
          return null;
        }
        if (-1 === e.indexOf("(")) {
          let n = [];
          for (let [t, r] of (0, te._)(this, sS))
            t.split("(")[0] === e && n.push(r);
          if (t) {
            for (let e = n.length - 1; e >= 0; e--)
              n[e].inputs.length < t.length && n.splice(e, 1);
            for (let e = n.length - 1; e >= 0; e--) {
              let r = n[e].inputs;
              for (let a = 0; a < t.length; a++)
                if (is.isTyped(t[a]) && t[a].type !== r[a].baseType) {
                  n.splice(e, 1);
                  break;
                }
            }
          }
          if (0 === n.length) return null;
          if (n.length > 1 && r) {
            let t = n.map((e) => JSON.stringify(e.format())).join(", ");
            nh(
              !1,
              "ambiguous event description (i.e. matches ".concat(t, ")"),
              "key",
              e
            );
          }
          return n[0];
        }
        let n = (0, te._)(this, sS).get(sc.from(e).format());
        return n || null;
      }
      function sj(e) {
        let t = [];
        for (; e; ) t.unshift(255 & e), (e >>= 8);
        return t;
      }
      let sF = "0123456789abcdef";
      function sD(e) {
        let t = "0x";
        for (let r of (function e(t) {
          if (Array.isArray(t)) {
            let r = [];
            if (
              (t.forEach(function (t) {
                r = r.concat(e(t));
              }),
              r.length <= 55)
            )
              return r.unshift(192 + r.length), r;
            let n = sj(r.length);
            return n.unshift(247 + n.length), n.concat(r);
          }
          let r = Array.prototype.slice.call(ny(t, "object"));
          if (1 === r.length && r[0] <= 127) return r;
          if (r.length <= 55) return r.unshift(128 + r.length), r;
          let n = sj(r.length);
          return n.unshift(183 + n.length), n.concat(r);
        })(e))
          (t += sF[r >> 4]), (t += sF[15 & r]);
        return t;
      }
      function sL(e) {
        let t = a9(e.from),
          r = nH(e.nonce, "tx.nonce").toString(16);
        return a9(
          nP(
            a1(
              sD([
                t,
                (r = "0" === r ? "0x" : r.length % 2 ? "0x0" + r : "0x" + r),
              ])
            ),
            12
          )
        );
      }
      function sz(e, t, r) {
        let n = a9(e),
          a = ny(t, "salt"),
          i = ny(r, "initCodeHash");
        return (
          nh(32 === a.length, "salt must be 32 bytes", "salt", t),
          nh(
            32 === i.length,
            "initCodeHash must be 32 bytes",
            "initCodeHash",
            r
          ),
          a9(nP(a1(nk(["0xff", n, a, i])), 12))
        );
      }
      function sG(e) {
        return e && "function" == typeof e.getAddress;
      }
      function sW(e) {
        try {
          return a9(e), !0;
        } catch (e) {}
        return !1;
      }
      async function sV(e, t) {
        let r = await t;
        return (
          (null == r || "0x0000000000000000000000000000000000000000" === r) &&
            (nf(
              "string" != typeof e,
              "unconfigured name",
              "UNCONFIGURED_NAME",
              { value: e }
            ),
            nh(
              !1,
              "invalid AddressLike value; did not resolve to a value address",
              "target",
              e
            )),
          a9(r)
        );
      }
      function sH(e, t) {
        return "string" == typeof e
          ? e.match(/^0x[0-9a-f]{40}$/i)
            ? a9(e)
            : (nf(
                null != t,
                "ENS resolution requires a provider",
                "UNSUPPORTED_OPERATION",
                { operation: "resolveName" }
              ),
              sV(e, t.resolveName(e)))
          : sG(e)
          ? sV(e, e.getAddress())
          : e && "function" == typeof e.then
          ? sV(e, e)
          : void nh(!1, "unsupported addressable value", "target", e);
      }
      let sK = "0x0000000000000000000000000000000000000000",
        sq = BigInt(
          "0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"
        ),
        sQ = BigInt("1000000000000000000"),
        sJ = BigInt(
          "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
        ),
        sZ =
          BigInt(
            "0x8000000000000000000000000000000000000000000000000000000000000000"
          ) * BigInt(-1),
        sY = BigInt(
          "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
        ),
        sX =
          "0x0000000000000000000000000000000000000000000000000000000000000000",
        s$ = "Ξ",
        s0 = "\x19Ethereum Signed Message:\n";
      function s1(e, t) {
        return {
          address: a9(e),
          storageKeys: t.map(
            (e, t) => (
              nh(nv(e, 32), "invalid slot", "storageKeys[".concat(t, "]"), e),
              e.toLowerCase()
            )
          ),
        };
      }
      function s2(e) {
        if (Array.isArray(e))
          return e.map((t, r) =>
            Array.isArray(t)
              ? (nh(
                  2 === t.length,
                  "invalid slot set",
                  "value[".concat(r, "]"),
                  t
                ),
                s1(t[0], t[1]))
              : (nh(
                  null != t && "object" == typeof t,
                  "invalid address-slot set",
                  "value",
                  e
                ),
                s1(t.address, t.storageKeys))
          );
        nh(
          null != e && "object" == typeof e,
          "invalid access list",
          "value",
          e
        );
        let t = Object.keys(e).map((t) => {
          let r = e[t].reduce((e, t) => ((e[t] = !0), e), {});
          return s1(t, Object.keys(r).sort());
        });
        return t.sort((e, t) => e.address.localeCompare(t.address)), t;
      }
      let s3 = BigInt(0);
      function s4(e) {
        return null == e ? null : e;
      }
      function s8(e) {
        return null == e ? null : e.toString();
      }
      class s5 {
        toJSON() {
          let { gasPrice: e, maxFeePerGas: t, maxPriorityFeePerGas: r } = this;
          return {
            _type: "FeeData",
            gasPrice: s8(e),
            maxFeePerGas: s8(t),
            maxPriorityFeePerGas: s8(r),
          };
        }
        constructor(e, t, r) {
          (0, eU._)(this, "gasPrice", void 0),
            (0, eU._)(this, "maxFeePerGas", void 0),
            (0, eU._)(this, "maxPriorityFeePerGas", void 0),
            no(this, {
              gasPrice: s4(e),
              maxFeePerGas: s4(t),
              maxPriorityFeePerGas: s4(r),
            });
        }
      }
      function s6(e) {
        let t = {};
        for (let r of (e.to && (t.to = e.to),
        e.from && (t.from = e.from),
        e.data && (t.data = n_(e.data)),
        "chainId,gasLimit,gasPrice,maxFeePerBlobGas,maxFeePerGas,maxPriorityFeePerGas,value".split(
          /,/
        )))
          r in e && null != e[r] && (t[r] = nH(e[r], "request.".concat(r)));
        for (let r of "type,nonce".split(/,/))
          r in e && null != e[r] && (t[r] = nJ(e[r], "request.".concat(r)));
        return (
          e.accessList && (t.accessList = s2(e.accessList)),
          e.authorizationList &&
            (t.authorizationList = e.authorizationList.slice()),
          "blockTag" in e && (t.blockTag = e.blockTag),
          "enableCcipRead" in e && (t.enableCcipRead = !!e.enableCcipRead),
          "customData" in e && (t.customData = e.customData),
          "blobVersionedHashes" in e &&
            e.blobVersionedHashes &&
            (t.blobVersionedHashes = e.blobVersionedHashes.slice()),
          "kzg" in e && (t.kzg = e.kzg),
          "blobs" in e &&
            e.blobs &&
            (t.blobs = e.blobs.map((e) =>
              nA(e) ? n_(e) : Object.assign({}, e)
            )),
          t
        );
      }
      var s9 = new WeakMap();
      class s7 {
        get transactions() {
          return (0, te._)(this, s9).map((e) =>
            "string" == typeof e ? e : e.hash
          );
        }
        get prefetchedTransactions() {
          let e = (0, te._)(this, s9).slice();
          return 0 === e.length
            ? []
            : (nf(
                "object" == typeof e[0],
                "transactions were not prefetched with block request",
                "UNSUPPORTED_OPERATION",
                { operation: "transactionResponses()" }
              ),
              e);
        }
        toJSON() {
          let {
            baseFeePerGas: e,
            difficulty: t,
            extraData: r,
            gasLimit: n,
            gasUsed: a,
            hash: i,
            miner: s,
            prevRandao: o,
            nonce: l,
            number: c,
            parentHash: u,
            parentBeaconBlockRoot: d,
            stateRoot: f,
            receiptsRoot: h,
            timestamp: p,
            transactions: x,
          } = this;
          return {
            _type: "Block",
            baseFeePerGas: s8(e),
            difficulty: s8(t),
            extraData: r,
            gasLimit: s8(n),
            gasUsed: s8(a),
            blobGasUsed: s8(this.blobGasUsed),
            excessBlobGas: s8(this.excessBlobGas),
            hash: i,
            miner: s,
            prevRandao: o,
            nonce: l,
            number: c,
            parentHash: u,
            timestamp: p,
            parentBeaconBlockRoot: d,
            stateRoot: f,
            receiptsRoot: h,
            transactions: x,
          };
        }
        [Symbol.iterator]() {
          let e = 0,
            t = this.transactions;
          return {
            next: () =>
              e < this.length
                ? { value: t[e++], done: !1 }
                : { value: void 0, done: !0 },
          };
        }
        get length() {
          return (0, te._)(this, s9).length;
        }
        get date() {
          return null == this.timestamp ? null : new Date(1e3 * this.timestamp);
        }
        async getTransaction(e) {
          let t;
          if ("number" == typeof e) t = (0, te._)(this, s9)[e];
          else {
            let r = e.toLowerCase();
            for (let e of (0, te._)(this, s9))
              if ("string" == typeof e) {
                if (e !== r) continue;
                t = e;
                break;
              } else {
                if (e.hash !== r) continue;
                t = e;
                break;
              }
          }
          if (null == t) throw Error("no such tx");
          return "string" == typeof t
            ? await this.provider.getTransaction(t)
            : t;
        }
        getPrefetchedTransaction(e) {
          let t = this.prefetchedTransactions;
          if ("number" == typeof e) return t[e];
          for (let r of ((e = e.toLowerCase()), t)) if (r.hash === e) return r;
          nh(!1, "no matching transaction", "indexOrHash", e);
        }
        isMined() {
          return !!this.hash;
        }
        isLondon() {
          return !!this.baseFeePerGas;
        }
        orphanedEvent() {
          var e;
          if (!this.isMined()) throw Error("");
          return (
            (e = this), { orphan: "drop-block", hash: e.hash, number: e.number }
          );
        }
        constructor(e, t) {
          (0, eU._)(this, "provider", void 0),
            (0, eU._)(this, "number", void 0),
            (0, eU._)(this, "hash", void 0),
            (0, eU._)(this, "timestamp", void 0),
            (0, eU._)(this, "parentHash", void 0),
            (0, eU._)(this, "parentBeaconBlockRoot", void 0),
            (0, eU._)(this, "nonce", void 0),
            (0, eU._)(this, "difficulty", void 0),
            (0, eU._)(this, "gasLimit", void 0),
            (0, eU._)(this, "gasUsed", void 0),
            (0, eU._)(this, "stateRoot", void 0),
            (0, eU._)(this, "receiptsRoot", void 0),
            (0, eU._)(this, "blobGasUsed", void 0),
            (0, eU._)(this, "excessBlobGas", void 0),
            (0, eU._)(this, "miner", void 0),
            (0, eU._)(this, "prevRandao", void 0),
            (0, eU._)(this, "extraData", void 0),
            (0, eU._)(this, "baseFeePerGas", void 0),
            (0, tt._)(this, s9, { writable: !0, value: void 0 }),
            (0, tr._)(
              this,
              s9,
              e.transactions.map((e) =>
                "string" != typeof e ? new oa(e, t) : e
              )
            ),
            no(this, {
              provider: t,
              hash: s4(e.hash),
              number: e.number,
              timestamp: e.timestamp,
              parentHash: e.parentHash,
              parentBeaconBlockRoot: e.parentBeaconBlockRoot,
              nonce: e.nonce,
              difficulty: e.difficulty,
              gasLimit: e.gasLimit,
              gasUsed: e.gasUsed,
              blobGasUsed: e.blobGasUsed,
              excessBlobGas: e.excessBlobGas,
              miner: e.miner,
              prevRandao: s4(e.prevRandao),
              extraData: e.extraData,
              baseFeePerGas: s4(e.baseFeePerGas),
              stateRoot: e.stateRoot,
              receiptsRoot: e.receiptsRoot,
            });
        }
      }
      class oe {
        toJSON() {
          let {
            address: e,
            blockHash: t,
            blockNumber: r,
            data: n,
            index: a,
            removed: i,
            topics: s,
            transactionHash: o,
            transactionIndex: l,
          } = this;
          return {
            _type: "log",
            address: e,
            blockHash: t,
            blockNumber: r,
            data: n,
            index: a,
            removed: i,
            topics: s,
            transactionHash: o,
            transactionIndex: l,
          };
        }
        async getBlock() {
          let e = await this.provider.getBlock(this.blockHash);
          return nf(!!e, "failed to find transaction", "UNKNOWN_ERROR", {}), e;
        }
        async getTransaction() {
          let e = await this.provider.getTransaction(this.transactionHash);
          return nf(!!e, "failed to find transaction", "UNKNOWN_ERROR", {}), e;
        }
        async getTransactionReceipt() {
          let e = await this.provider.getTransactionReceipt(
            this.transactionHash
          );
          return (
            nf(!!e, "failed to find transaction receipt", "UNKNOWN_ERROR", {}),
            e
          );
        }
        removedEvent() {
          var e;
          return (
            (e = this),
            {
              orphan: "drop-log",
              log: {
                transactionHash: e.transactionHash,
                blockHash: e.blockHash,
                blockNumber: e.blockNumber,
                address: e.address,
                data: e.data,
                topics: Object.freeze(e.topics.slice()),
                index: e.index,
              },
            }
          );
        }
        constructor(e, t) {
          (0, eU._)(this, "provider", void 0),
            (0, eU._)(this, "transactionHash", void 0),
            (0, eU._)(this, "blockHash", void 0),
            (0, eU._)(this, "blockNumber", void 0),
            (0, eU._)(this, "removed", void 0),
            (0, eU._)(this, "address", void 0),
            (0, eU._)(this, "data", void 0),
            (0, eU._)(this, "topics", void 0),
            (0, eU._)(this, "index", void 0),
            (0, eU._)(this, "transactionIndex", void 0),
            (this.provider = t);
          let r = Object.freeze(e.topics.slice());
          no(this, {
            transactionHash: e.transactionHash,
            blockHash: e.blockHash,
            blockNumber: e.blockNumber,
            removed: e.removed,
            address: e.address,
            data: e.data,
            topics: r,
            index: e.index,
            transactionIndex: e.transactionIndex,
          });
        }
      }
      var ot = new WeakMap();
      class or {
        get logs() {
          return (0, te._)(this, ot);
        }
        toJSON() {
          let {
            to: e,
            from: t,
            contractAddress: r,
            hash: n,
            index: a,
            blockHash: i,
            blockNumber: s,
            logsBloom: o,
            logs: l,
            status: c,
            root: u,
          } = this;
          return {
            _type: "TransactionReceipt",
            blockHash: i,
            blockNumber: s,
            contractAddress: r,
            cumulativeGasUsed: s8(this.cumulativeGasUsed),
            from: t,
            gasPrice: s8(this.gasPrice),
            blobGasUsed: s8(this.blobGasUsed),
            blobGasPrice: s8(this.blobGasPrice),
            gasUsed: s8(this.gasUsed),
            hash: n,
            index: a,
            logs: l,
            logsBloom: o,
            root: u,
            status: c,
            to: e,
          };
        }
        get length() {
          return this.logs.length;
        }
        [Symbol.iterator]() {
          let e = 0;
          return {
            next: () =>
              e < this.length
                ? { value: this.logs[e++], done: !1 }
                : { value: void 0, done: !0 },
          };
        }
        get fee() {
          return this.gasUsed * this.gasPrice;
        }
        async getBlock() {
          let e = await this.provider.getBlock(this.blockHash);
          if (null == e) throw Error("TODO");
          return e;
        }
        async getTransaction() {
          let e = await this.provider.getTransaction(this.hash);
          if (null == e) throw Error("TODO");
          return e;
        }
        async getResult() {
          return await this.provider.getTransactionResult(this.hash);
        }
        async confirmations() {
          return (await this.provider.getBlockNumber()) - this.blockNumber + 1;
        }
        removedEvent() {
          return os(this);
        }
        reorderedEvent(e) {
          return (
            nf(
              !e || e.isMined(),
              "unmined 'other' transction cannot be orphaned",
              "UNSUPPORTED_OPERATION",
              { operation: "reorderedEvent(other)" }
            ),
            oi(this, e)
          );
        }
        constructor(e, t) {
          (0, eU._)(this, "provider", void 0),
            (0, eU._)(this, "to", void 0),
            (0, eU._)(this, "from", void 0),
            (0, eU._)(this, "contractAddress", void 0),
            (0, eU._)(this, "hash", void 0),
            (0, eU._)(this, "index", void 0),
            (0, eU._)(this, "blockHash", void 0),
            (0, eU._)(this, "blockNumber", void 0),
            (0, eU._)(this, "logsBloom", void 0),
            (0, eU._)(this, "gasUsed", void 0),
            (0, eU._)(this, "blobGasUsed", void 0),
            (0, eU._)(this, "cumulativeGasUsed", void 0),
            (0, eU._)(this, "gasPrice", void 0),
            (0, eU._)(this, "blobGasPrice", void 0),
            (0, eU._)(this, "type", void 0),
            (0, eU._)(this, "status", void 0),
            (0, eU._)(this, "root", void 0),
            (0, tt._)(this, ot, { writable: !0, value: void 0 }),
            (0, tr._)(this, ot, Object.freeze(e.logs.map((e) => new oe(e, t))));
          let r = s3;
          null != e.effectiveGasPrice
            ? (r = e.effectiveGasPrice)
            : null != e.gasPrice && (r = e.gasPrice),
            no(this, {
              provider: t,
              to: e.to,
              from: e.from,
              contractAddress: e.contractAddress,
              hash: e.hash,
              index: e.index,
              blockHash: e.blockHash,
              blockNumber: e.blockNumber,
              logsBloom: e.logsBloom,
              gasUsed: e.gasUsed,
              cumulativeGasUsed: e.cumulativeGasUsed,
              blobGasUsed: e.blobGasUsed,
              gasPrice: r,
              blobGasPrice: e.blobGasPrice,
              type: e.type,
              status: e.status,
              root: e.root,
            });
        }
      }
      var on = new WeakMap();
      class oa {
        toJSON() {
          let {
            blockNumber: e,
            blockHash: t,
            index: r,
            hash: n,
            type: a,
            to: i,
            from: s,
            nonce: o,
            data: l,
            signature: c,
            accessList: u,
            blobVersionedHashes: d,
          } = this;
          return {
            _type: "TransactionResponse",
            accessList: u,
            blockNumber: e,
            blockHash: t,
            blobVersionedHashes: d,
            chainId: s8(this.chainId),
            data: l,
            from: s,
            gasLimit: s8(this.gasLimit),
            gasPrice: s8(this.gasPrice),
            hash: n,
            maxFeePerGas: s8(this.maxFeePerGas),
            maxPriorityFeePerGas: s8(this.maxPriorityFeePerGas),
            maxFeePerBlobGas: s8(this.maxFeePerBlobGas),
            nonce: o,
            signature: c,
            to: i,
            index: r,
            type: a,
            value: s8(this.value),
          };
        }
        async getBlock() {
          let e = this.blockNumber;
          if (null == e) {
            let t = await this.getTransaction();
            t && (e = t.blockNumber);
          }
          if (null == e) return null;
          let t = this.provider.getBlock(e);
          if (null == t) throw Error("TODO");
          return t;
        }
        async getTransaction() {
          return this.provider.getTransaction(this.hash);
        }
        async confirmations() {
          if (null == this.blockNumber) {
            let { tx: e, blockNumber: t } = await ns({
              tx: this.getTransaction(),
              blockNumber: this.provider.getBlockNumber(),
            });
            return null == e || null == e.blockNumber
              ? 0
              : t - e.blockNumber + 1;
          }
          return (await this.provider.getBlockNumber()) - this.blockNumber + 1;
        }
        async wait(e, t) {
          let r = null == e ? 1 : e,
            n = null == t ? 0 : t,
            a = (0, te._)(this, on),
            i = -1,
            s = -1 === a,
            o = async () => {
              if (s) return null;
              let { blockNumber: e, nonce: t } = await ns({
                blockNumber: this.provider.getBlockNumber(),
                nonce: this.provider.getTransactionCount(this.from),
              });
              if (t < this.nonce) {
                a = e;
                return;
              }
              if (s) return null;
              let n = await this.getTransaction();
              if (!n || null == n.blockNumber)
                for (
                  -1 === i &&
                  (i = a - 3) < (0, te._)(this, on) &&
                  (i = (0, te._)(this, on));
                  i <= e;

                ) {
                  if (s) return null;
                  let t = await this.provider.getBlock(i, !0);
                  if (null == t) break;
                  for (let e of t) if (e === this.hash) return;
                  for (let n = 0; n < t.length; n++) {
                    let i = await t.getTransaction(n);
                    if (i.from === this.from && i.nonce === this.nonce) {
                      if (s) return null;
                      let t = await this.provider.getTransactionReceipt(i.hash);
                      if (null == t || e - t.blockNumber + 1 < r) return;
                      let n = "replaced";
                      i.data === this.data &&
                      i.to === this.to &&
                      i.value === this.value
                        ? (n = "repriced")
                        : "0x" === i.data &&
                          i.from === i.to &&
                          i.value === s3 &&
                          (n = "cancelled"),
                        nf(
                          !1,
                          "transaction was replaced",
                          "TRANSACTION_REPLACED",
                          {
                            cancelled: "replaced" === n || "cancelled" === n,
                            reason: n,
                            replacement: i.replaceableTransaction(a),
                            hash: i.hash,
                            receipt: t,
                          }
                        );
                    }
                  }
                  i++;
                }
            },
            l = (e) => {
              if (null == e || 0 !== e.status) return e;
              nf(!1, "transaction execution reverted", "CALL_EXCEPTION", {
                action: "sendTransaction",
                data: null,
                reason: null,
                invocation: null,
                revert: null,
                transaction: { to: e.to, from: e.from, data: "" },
                receipt: e,
              });
            },
            c = await this.provider.getTransactionReceipt(this.hash);
          if (0 === r) return l(c);
          if (c) {
            if (1 === r || (await c.confirmations()) >= r) return l(c);
          } else if ((await o(), 0 === r)) return null;
          let u = new Promise((e, t) => {
            let i = [],
              c = () => {
                i.forEach((e) => e());
              };
            if (
              (i.push(() => {
                s = !0;
              }),
              n > 0)
            ) {
              let e = setTimeout(() => {
                c(), t(nd("wait for transaction timeout", "TIMEOUT"));
              }, n);
              i.push(() => {
                clearTimeout(e);
              });
            }
            let u = async (n) => {
              if ((await n.confirmations()) >= r) {
                c();
                try {
                  e(l(n));
                } catch (e) {
                  t(e);
                }
              }
            };
            if (
              (i.push(() => {
                this.provider.off(this.hash, u);
              }),
              this.provider.on(this.hash, u),
              a >= 0)
            ) {
              let e = async () => {
                try {
                  await o();
                } catch (e) {
                  if (nc(e, "TRANSACTION_REPLACED")) {
                    c(), t(e);
                    return;
                  }
                }
                s || this.provider.once("block", e);
              };
              i.push(() => {
                this.provider.off("block", e);
              }),
                this.provider.once("block", e);
            }
          });
          return await u;
        }
        isMined() {
          return null != this.blockHash;
        }
        isLegacy() {
          return 0 === this.type;
        }
        isBerlin() {
          return 1 === this.type;
        }
        isLondon() {
          return 2 === this.type;
        }
        isCancun() {
          return 3 === this.type;
        }
        removedEvent() {
          return (
            nf(
              this.isMined(),
              "unmined transaction canot be orphaned",
              "UNSUPPORTED_OPERATION",
              { operation: "removeEvent()" }
            ),
            os(this)
          );
        }
        reorderedEvent(e) {
          return (
            nf(
              this.isMined(),
              "unmined transaction canot be orphaned",
              "UNSUPPORTED_OPERATION",
              { operation: "removeEvent()" }
            ),
            nf(
              !e || e.isMined(),
              "unmined 'other' transaction canot be orphaned",
              "UNSUPPORTED_OPERATION",
              { operation: "removeEvent()" }
            ),
            oi(this, e)
          );
        }
        replaceableTransaction(e) {
          nh(
            Number.isInteger(e) && e >= 0,
            "invalid startBlock",
            "startBlock",
            e
          );
          let t = new oa(this, this.provider);
          return (0, tr._)(t, on, e), t;
        }
        constructor(e, t) {
          (0, eU._)(this, "provider", void 0),
            (0, eU._)(this, "blockNumber", void 0),
            (0, eU._)(this, "blockHash", void 0),
            (0, eU._)(this, "index", void 0),
            (0, eU._)(this, "hash", void 0),
            (0, eU._)(this, "type", void 0),
            (0, eU._)(this, "to", void 0),
            (0, eU._)(this, "from", void 0),
            (0, eU._)(this, "nonce", void 0),
            (0, eU._)(this, "gasLimit", void 0),
            (0, eU._)(this, "gasPrice", void 0),
            (0, eU._)(this, "maxPriorityFeePerGas", void 0),
            (0, eU._)(this, "maxFeePerGas", void 0),
            (0, eU._)(this, "maxFeePerBlobGas", void 0),
            (0, eU._)(this, "data", void 0),
            (0, eU._)(this, "value", void 0),
            (0, eU._)(this, "chainId", void 0),
            (0, eU._)(this, "signature", void 0),
            (0, eU._)(this, "accessList", void 0),
            (0, eU._)(this, "blobVersionedHashes", void 0),
            (0, eU._)(this, "authorizationList", void 0),
            (0, tt._)(this, on, { writable: !0, value: void 0 }),
            (this.provider = t),
            (this.blockNumber = null != e.blockNumber ? e.blockNumber : null),
            (this.blockHash = null != e.blockHash ? e.blockHash : null),
            (this.hash = e.hash),
            (this.index = e.index),
            (this.type = e.type),
            (this.from = e.from),
            (this.to = e.to || null),
            (this.gasLimit = e.gasLimit),
            (this.nonce = e.nonce),
            (this.data = e.data),
            (this.value = e.value),
            (this.gasPrice = e.gasPrice),
            (this.maxPriorityFeePerGas =
              null != e.maxPriorityFeePerGas ? e.maxPriorityFeePerGas : null),
            (this.maxFeePerGas =
              null != e.maxFeePerGas ? e.maxFeePerGas : null),
            (this.maxFeePerBlobGas =
              null != e.maxFeePerBlobGas ? e.maxFeePerBlobGas : null),
            (this.chainId = e.chainId),
            (this.signature = e.signature),
            (this.accessList = null != e.accessList ? e.accessList : null),
            (this.blobVersionedHashes =
              null != e.blobVersionedHashes ? e.blobVersionedHashes : null),
            (this.authorizationList =
              null != e.authorizationList ? e.authorizationList : null),
            (0, tr._)(this, on, -1);
        }
      }
      function oi(e, t) {
        return { orphan: "reorder-transaction", tx: e, other: t };
      }
      function os(e) {
        return { orphan: "drop-transaction", tx: e };
      }
      var oo = new WeakMap();
      class ol {
        async removeListener() {
          null != (0, te._)(this, oo) &&
            (await this.emitter.off(this.filter, (0, te._)(this, oo)));
        }
        constructor(e, t, r) {
          (0, eU._)(this, "filter", void 0),
            (0, eU._)(this, "emitter", void 0),
            (0, tt._)(this, oo, { writable: !0, value: void 0 }),
            (0, tr._)(this, oo, t),
            no(this, { emitter: e, filter: r });
        }
      }
      class oc extends oe {
        get eventName() {
          return this.fragment.name;
        }
        get eventSignature() {
          return this.fragment.format();
        }
        constructor(e, t, r) {
          super(e, e.provider),
            (0, eU._)(this, "interface", void 0),
            (0, eU._)(this, "fragment", void 0),
            (0, eU._)(this, "args", void 0),
            no(this, {
              args: t.decodeEventLog(r, e.data, e.topics),
              fragment: r,
              interface: t,
            });
        }
      }
      class ou extends oe {
        constructor(e, t) {
          super(e, e.provider),
            (0, eU._)(this, "error", void 0),
            no(this, { error: t });
        }
      }
      var od = new WeakMap();
      class of extends or {
        get logs() {
          return super.logs.map((e) => {
            let t = e.topics.length
              ? (0, te._)(this, od).getEvent(e.topics[0])
              : null;
            if (t)
              try {
                return new oc(e, (0, te._)(this, od), t);
              } catch (t) {
                return new ou(e, t);
              }
            return e;
          });
        }
        constructor(e, t, r) {
          super(r, t),
            (0, tt._)(this, od, { writable: !0, value: void 0 }),
            (0, tr._)(this, od, e);
        }
      }
      var oh = new WeakMap();
      class op extends oa {
        async wait(e, t) {
          let r = await super.wait(e, t);
          return null == r
            ? null
            : new of((0, te._)(this, oh), this.provider, r);
        }
        constructor(e, t, r) {
          super(r, t),
            (0, tt._)(this, oh, { writable: !0, value: void 0 }),
            (0, tr._)(this, oh, e);
        }
      }
      class ox extends ol {
        async getBlock() {
          return await this.log.getBlock();
        }
        async getTransaction() {
          return await this.log.getTransaction();
        }
        async getTransactionReceipt() {
          return await this.log.getTransactionReceipt();
        }
        constructor(e, t, r, n) {
          super(e, t, r), (0, eU._)(this, "log", void 0), no(this, { log: n });
        }
      }
      class og extends ox {
        get eventName() {
          return this.fragment.name;
        }
        get eventSignature() {
          return this.fragment.format();
        }
        constructor(e, t, r, n, a) {
          super(e, t, r, new oc(a, e.interface, n)),
            no(this, {
              args: e.interface.decodeEventLog(
                n,
                this.log.data,
                this.log.topics
              ),
              fragment: n,
            });
        }
      }
      let ob = BigInt(0);
      function om(e) {
        return e && "function" == typeof e.call;
      }
      function oy(e) {
        return e && "function" == typeof e.estimateGas;
      }
      function ow(e) {
        return e && "function" == typeof e.resolveName;
      }
      function ov(e) {
        return e && "function" == typeof e.sendTransaction;
      }
      function oA(e) {
        if (null != e) {
          if (ow(e)) return e;
          if (e.provider) return e.provider;
        }
      }
      var oE = new WeakMap();
      class o_ {
        getTopicFilter() {
          return (0, te._)(this, oE);
        }
        constructor(e, t, r) {
          if (
            ((0, tt._)(this, oE, { writable: !0, value: void 0 }),
            (0, eU._)(this, "fragment", void 0),
            no(this, { fragment: t }),
            t.inputs.length < r.length)
          )
            throw Error("too many arguments");
          let n = ok(e.runner, "resolveName"),
            a = ow(n) ? n : null;
          (0, tr._)(
            this,
            oE,
            (async function () {
              let n = await Promise.all(
                t.inputs.map((e, t) =>
                  null == r[t]
                    ? null
                    : e.walkAsync(r[t], (e, t) =>
                        "address" === e
                          ? Array.isArray(t)
                            ? Promise.all(t.map((e) => sH(e, a)))
                            : sH(t, a)
                          : t
                      )
                )
              );
              return e.interface.encodeFilterTopics(t, n);
            })()
          );
        }
      }
      function ok(e, t) {
        return null == e
          ? null
          : "function" == typeof e[t]
          ? e
          : e.provider && "function" == typeof e.provider[t]
          ? e.provider
          : null;
      }
      function oN(e) {
        return null == e ? null : e.provider || null;
      }
      async function oP(e, t) {
        let r = is.dereference(e, "overrides");
        nh("object" == typeof r, "invalid overrides parameter", "overrides", e);
        let n = s6(r);
        return (
          nh(
            null == n.to || (t || []).indexOf("to") >= 0,
            "cannot override to",
            "overrides.to",
            n.to
          ),
          nh(
            null == n.data || (t || []).indexOf("data") >= 0,
            "cannot override data",
            "overrides.data",
            n.data
          ),
          n.from && (n.from = n.from),
          n
        );
      }
      async function oT(e, t, r) {
        let n = ok(e, "resolveName"),
          a = ow(n) ? n : null;
        return await Promise.all(
          t.map((e, t) =>
            e.walkAsync(r[t], (e, t) =>
              ((t = is.dereference(t, e)), "address" === e) ? sH(t, a) : t
            )
          )
        );
      }
      let oS = Symbol.for("_ethersInternal_contract"),
        oO = new WeakMap();
      function oR(e) {
        return oO.get(e[oS]);
      }
      async function oC(e, t) {
        let r,
          n = null;
        if (Array.isArray(t)) {
          let n = function (t) {
            if (nv(t, 32)) return t;
            let r = e.interface.getEvent(t);
            return nh(r, "unknown fragment", "name", t), r.topicHash;
          };
          r = t.map((e) =>
            null == e ? null : Array.isArray(e) ? e.map(n) : n(e)
          );
        } else if ("*" === t) r = [null];
        else if ("string" == typeof t)
          nv(t, 32)
            ? (r = [t])
            : (nh(
                (n = e.interface.getEvent(t)),
                "unknown fragment",
                "event",
                t
              ),
              (r = [n.topicHash]));
        else
          t &&
          "object" == typeof t &&
          "getTopicFilter" in t &&
          "function" == typeof t.getTopicFilter &&
          t.fragment
            ? (r = await t.getTopicFilter())
            : "fragment" in t
            ? (r = [(n = t.fragment).topicHash])
            : nh(!1, "unknown event name", "event", t);
        return {
          fragment: n,
          tag: (r = r.map((e) => {
            if (null == e) return null;
            if (Array.isArray(e)) {
              let t = Array.from(
                new Set(e.map((e) => e.toLowerCase())).values()
              );
              return 1 === t.length ? t[0] : (t.sort(), t);
            }
            return e.toLowerCase();
          }))
            .map((e) =>
              null == e ? "null" : Array.isArray(e) ? e.join("|") : e
            )
            .join("&"),
          topics: r,
        };
      }
      async function oI(e, t) {
        let { subs: r } = oR(e);
        return r.get((await oC(e, t)).tag) || null;
      }
      async function oB(e, t, r) {
        let n = oN(e.runner);
        nf(
          n,
          "contract runner does not support subscribing",
          "UNSUPPORTED_OPERATION",
          { operation: t }
        );
        let { fragment: a, tag: i, topics: s } = await oC(e, r),
          { addr: o, subs: l } = oR(e),
          c = l.get(i);
        if (!c) {
          let t = { address: o || e, topics: s },
            u = (t) => {
              let n = a;
              if (null == n)
                try {
                  n = e.interface.getEvent(t.topics[0]);
                } catch (e) {}
              if (n) {
                let i = n,
                  s = a ? e.interface.decodeEventLog(a, t.data, t.topics) : [];
                oj(e, r, s, (n) => new og(e, n, r, i, t));
              } else oj(e, r, [], (n) => new ox(e, n, r, t));
            },
            d = [];
          (c = {
            tag: i,
            listeners: [],
            start: () => {
              d.length || d.push(n.on(t, u));
            },
            stop: async () => {
              if (0 == d.length) return;
              let e = d;
              (d = []), await Promise.all(e), n.off(t, u);
            },
          }),
            l.set(i, c);
        }
        return c;
      }
      let oU = Promise.resolve();
      async function oM(e, t, r, n) {
        await oU;
        let a = await oI(e, t);
        if (!a) return !1;
        let i = a.listeners.length;
        return (
          (a.listeners = a.listeners.filter((t) => {
            let { listener: a, once: i } = t,
              s = Array.from(r);
            n && s.push(n(i ? null : a));
            try {
              a.call(e, ...s);
            } catch (e) {}
            return !i;
          })),
          0 === a.listeners.length && (a.stop(), oR(e).subs.delete(a.tag)),
          i > 0
        );
      }
      async function oj(e, t, r, n) {
        try {
          await oU;
        } catch (e) {}
        let a = oM(e, t, r, n);
        return (oU = a), await a;
      }
      let oF = ["then"];
      class oD {
        connect(e) {
          return new oD(this.target, this.interface, e);
        }
        attach(e) {
          return new oD(e, this.interface, this.runner);
        }
        async getAddress() {
          return await oR(this).addrPromise;
        }
        async getDeployedCode() {
          let e = oN(this.runner);
          nf(e, "runner does not support .provider", "UNSUPPORTED_OPERATION", {
            operation: "getDeployedCode",
          });
          let t = await e.getCode(await this.getAddress());
          return "0x" === t ? null : t;
        }
        async waitForDeployment() {
          let e = this.deploymentTransaction();
          if (e) return await e.wait(), this;
          if (null != (await this.getDeployedCode())) return this;
          let t = oN(this.runner);
          return (
            nf(
              null != t,
              "contract runner does not support .provider",
              "UNSUPPORTED_OPERATION",
              { operation: "waitForDeployment" }
            ),
            new Promise((e, r) => {
              let n = async () => {
                try {
                  let r = await this.getDeployedCode();
                  if (null != r) return e(this);
                  t.once("block", n);
                } catch (e) {
                  r(e);
                }
              };
              n();
            })
          );
        }
        deploymentTransaction() {
          return oR(this).deployTx;
        }
        getFunction(e) {
          return (
            "string" != typeof e && (e = e.format()),
            (function (e, t) {
              let r = function () {
                  for (
                    var r = arguments.length, n = Array(r), a = 0;
                    a < r;
                    a++
                  )
                    n[a] = arguments[a];
                  let i = e.interface.getFunction(t, n);
                  return (
                    nf(i, "no matching fragment", "UNSUPPORTED_OPERATION", {
                      operation: "fragment",
                      info: { key: t, args: n },
                    }),
                    i
                  );
                },
                n = async function () {
                  for (
                    var t = arguments.length, n = Array(t), a = 0;
                    a < t;
                    a++
                  )
                    n[a] = arguments[a];
                  let i = r(...n),
                    s = {};
                  if (
                    (i.inputs.length + 1 === n.length &&
                      (s = await oP(n.pop())).from &&
                      (s.from = await sH(s.from, oA(e.runner))),
                    i.inputs.length !== n.length)
                  )
                    throw Error(
                      "internal error: fragment inputs doesn't match arguments; should not happen"
                    );
                  let o = await oT(e.runner, i.inputs, n);
                  return Object.assign(
                    {},
                    s,
                    await ns({
                      to: e.getAddress(),
                      data: e.interface.encodeFunctionData(i, o),
                    })
                  );
                },
                a = async function () {
                  for (
                    var e = arguments.length, t = Array(e), r = 0;
                    r < e;
                    r++
                  )
                    t[r] = arguments[r];
                  let n = await o(...t);
                  return 1 === n.length ? n[0] : n;
                },
                i = async function () {
                  for (
                    var t = arguments.length, r = Array(t), a = 0;
                    a < t;
                    a++
                  )
                    r[a] = arguments[a];
                  let i = e.runner;
                  nf(
                    ov(i),
                    "contract runner does not support sending transactions",
                    "UNSUPPORTED_OPERATION",
                    { operation: "sendTransaction" }
                  );
                  let s = await i.sendTransaction(await n(...r)),
                    o = oN(e.runner);
                  return new op(e.interface, o, s);
                },
                s = async function () {
                  for (
                    var t = arguments.length, r = Array(t), a = 0;
                    a < t;
                    a++
                  )
                    r[a] = arguments[a];
                  let i = ok(e.runner, "estimateGas");
                  return (
                    nf(
                      oy(i),
                      "contract runner does not support gas estimation",
                      "UNSUPPORTED_OPERATION",
                      { operation: "estimateGas" }
                    ),
                    await i.estimateGas(await n(...r))
                  );
                },
                o = async function () {
                  for (
                    var t = arguments.length, a = Array(t), i = 0;
                    i < t;
                    i++
                  )
                    a[i] = arguments[i];
                  let s = ok(e.runner, "call");
                  nf(
                    om(s),
                    "contract runner does not support calling",
                    "UNSUPPORTED_OPERATION",
                    { operation: "call" }
                  );
                  let o = await n(...a),
                    l = "0x";
                  try {
                    l = await s.call(o);
                  } catch (t) {
                    if (nu(t) && t.data) throw e.interface.makeError(t.data, o);
                    throw t;
                  }
                  let c = r(...a);
                  return e.interface.decodeFunctionResult(c, l);
                },
                l = async function () {
                  for (
                    var e = arguments.length, t = Array(e), n = 0;
                    n < e;
                    n++
                  )
                    t[n] = arguments[n];
                  return r(...t).constant ? await a(...t) : await i(...t);
                };
              return (
                no(l, {
                  name: e.interface.getFunctionName(t),
                  _contract: e,
                  _key: t,
                  getFragment: r,
                  estimateGas: s,
                  populateTransaction: n,
                  send: i,
                  staticCall: a,
                  staticCallResult: o,
                }),
                Object.defineProperty(l, "fragment", {
                  configurable: !1,
                  enumerable: !0,
                  get: () => {
                    let r = e.interface.getFunction(t);
                    return (
                      nf(r, "no matching fragment", "UNSUPPORTED_OPERATION", {
                        operation: "fragment",
                        info: { key: t },
                      }),
                      r
                    );
                  },
                }),
                l
              );
            })(this, e)
          );
        }
        getEvent(e) {
          "string" != typeof e && (e = e.format());
          var t = this,
            r = e;
          let n = function () {
              for (var e = arguments.length, n = Array(e), a = 0; a < e; a++)
                n[a] = arguments[a];
              let i = t.interface.getEvent(r, n);
              return (
                nf(i, "no matching fragment", "UNSUPPORTED_OPERATION", {
                  operation: "fragment",
                  info: { key: r, args: n },
                }),
                i
              );
            },
            a = function () {
              for (var e = arguments.length, r = Array(e), a = 0; a < e; a++)
                r[a] = arguments[a];
              return new o_(t, n(...r), r);
            };
          return (
            no(a, {
              name: t.interface.getEventName(r),
              _contract: t,
              _key: r,
              getFragment: n,
            }),
            Object.defineProperty(a, "fragment", {
              configurable: !1,
              enumerable: !0,
              get: () => {
                let e = t.interface.getEvent(r);
                return (
                  nf(e, "no matching fragment", "UNSUPPORTED_OPERATION", {
                    operation: "fragment",
                    info: { key: r },
                  }),
                  e
                );
              },
            }),
            a
          );
        }
        async queryTransaction(e) {
          throw Error("@TODO");
        }
        async queryFilter(e, t, r) {
          null == t && (t = 0), null == r && (r = "latest");
          let { addr: n, addrPromise: a } = oR(this),
            i = n || (await a),
            { fragment: s, topics: o } = await oC(this, e),
            l = { address: i, topics: o, fromBlock: t, toBlock: r },
            c = oN(this.runner);
          return (
            nf(
              c,
              "contract runner does not have a provider",
              "UNSUPPORTED_OPERATION",
              { operation: "queryFilter" }
            ),
            (await c.getLogs(l)).map((e) => {
              let t = s;
              if (null == t)
                try {
                  t = this.interface.getEvent(e.topics[0]);
                } catch (e) {}
              if (t)
                try {
                  return new oc(e, this.interface, t);
                } catch (t) {
                  return new ou(e, t);
                }
              return new oe(e, c);
            })
          );
        }
        async on(e, t) {
          let r = await oB(this, "on", e);
          return r.listeners.push({ listener: t, once: !1 }), r.start(), this;
        }
        async once(e, t) {
          let r = await oB(this, "once", e);
          return r.listeners.push({ listener: t, once: !0 }), r.start(), this;
        }
        async emit(e) {
          for (
            var t = arguments.length, r = Array(t > 1 ? t - 1 : 0), n = 1;
            n < t;
            n++
          )
            r[n - 1] = arguments[n];
          return await oj(this, e, r, null);
        }
        async listenerCount(e) {
          if (e) {
            let t = await oI(this, e);
            return t ? t.listeners.length : 0;
          }
          let { subs: t } = oR(this),
            r = 0;
          for (let { listeners: e } of t.values()) r += e.length;
          return r;
        }
        async listeners(e) {
          if (e) {
            let t = await oI(this, e);
            return t
              ? t.listeners.map((e) => {
                  let { listener: t } = e;
                  return t;
                })
              : [];
          }
          let { subs: t } = oR(this),
            r = [];
          for (let { listeners: e } of t.values())
            r = r.concat(
              e.map((e) => {
                let { listener: t } = e;
                return t;
              })
            );
          return r;
        }
        async off(e, t) {
          let r = await oI(this, e);
          if (!r) return this;
          if (t) {
            let e = r.listeners
              .map((e) => {
                let { listener: t } = e;
                return t;
              })
              .indexOf(t);
            e >= 0 && r.listeners.splice(e, 1);
          }
          return (
            (null == t || 0 === r.listeners.length) &&
              (r.stop(), oR(this).subs.delete(r.tag)),
            this
          );
        }
        async removeAllListeners(e) {
          if (e) {
            let t = await oI(this, e);
            if (!t) return this;
            t.stop(), oR(this).subs.delete(t.tag);
          } else {
            let { subs: e } = oR(this);
            for (let { tag: t, stop: r } of e.values()) r(), e.delete(t);
          }
          return this;
        }
        async addListener(e, t) {
          return await this.on(e, t);
        }
        async removeListener(e, t) {
          return await this.off(e, t);
        }
        static buildClass(e) {
          return class extends oD {
            constructor(t, r = null) {
              super(t, e, r);
            }
          };
        }
        static from(e, t, r) {
          return null == r && (r = null), new this(e, t, r);
        }
        constructor(e, t, r, n) {
          var a;
          let i;
          (0, eU._)(this, "target", void 0),
            (0, eU._)(this, "interface", void 0),
            (0, eU._)(this, "runner", void 0),
            (0, eU._)(this, "filters", void 0),
            (0, eU._)(this, oS, void 0),
            (0, eU._)(this, "fallback", void 0),
            nh(
              "string" == typeof e || sG(e),
              "invalid value for Contract target",
              "target",
              e
            ),
            null == r && (r = null);
          let s = sB.from(t);
          no(this, { target: e, runner: r, interface: s }),
            Object.defineProperty(this, oS, { value: {} });
          let o = null,
            l = null;
          if (n) {
            let e = oN(r);
            l = new op(this.interface, e, n);
          }
          let c = new Map();
          if ("string" == typeof e)
            if (nv(e)) (o = e), (i = Promise.resolve(e));
            else {
              let t = ok(r, "resolveName");
              if (!ow(t))
                throw nd(
                  "contract runner does not support name resolution",
                  "UNSUPPORTED_OPERATION",
                  { operation: "resolveName" }
                );
              i = t.resolveName(e).then((t) => {
                if (null == t)
                  throw nd(
                    "an ENS name used for a contract target must be correctly configured",
                    "UNCONFIGURED_NAME",
                    { value: e }
                  );
                return (oR(this).addr = t), t;
              });
            }
          else
            i = e.getAddress().then((e) => {
              if (null == e) throw Error("TODO");
              return (oR(this).addr = e), e;
            });
          return (
            (a = { addrPromise: i, addr: o, deployTx: l, subs: c }),
            oO.set(this[oS], a),
            no(this, {
              filters: new Proxy(
                {},
                {
                  get: (e, t, r) => {
                    if ("symbol" == typeof t || oF.indexOf(t) >= 0)
                      return Reflect.get(e, t, r);
                    try {
                      return this.getEvent(t);
                    } catch (e) {
                      if (!nc(e, "INVALID_ARGUMENT") || "key" !== e.argument)
                        throw e;
                    }
                  },
                  has: (e, t) =>
                    oF.indexOf(t) >= 0
                      ? Reflect.has(e, t)
                      : Reflect.has(e, t) || this.interface.hasEvent(String(t)),
                }
              ),
            }),
            no(this, {
              fallback:
                s.receive || s.fallback
                  ? (function (e) {
                      let t = async function (t) {
                          let r = await oP(t, ["data"]);
                          (r.to = await e.getAddress()),
                            r.from && (r.from = await sH(r.from, oA(e.runner)));
                          let n = e.interface,
                            a = nH(r.value || ob, "overrides.value") === ob,
                            i = "0x" === (r.data || "0x");
                          return (
                            !n.fallback ||
                              n.fallback.payable ||
                              !n.receive ||
                              i ||
                              a ||
                              nh(
                                !1,
                                "cannot send data to receive or send value to non-payable fallback",
                                "overrides",
                                t
                              ),
                            nh(
                              n.fallback || i,
                              "cannot send data to receive-only contract",
                              "overrides.data",
                              r.data
                            ),
                            nh(
                              n.receive ||
                                (n.fallback && n.fallback.payable) ||
                                a,
                              "cannot send value to non-payable fallback",
                              "overrides.value",
                              r.value
                            ),
                            nh(
                              n.fallback || i,
                              "cannot send data to receive-only contract",
                              "overrides.data",
                              r.data
                            ),
                            r
                          );
                        },
                        r = async function (r) {
                          let n = ok(e.runner, "call");
                          nf(
                            om(n),
                            "contract runner does not support calling",
                            "UNSUPPORTED_OPERATION",
                            { operation: "call" }
                          );
                          let a = await t(r);
                          try {
                            return await n.call(a);
                          } catch (t) {
                            if (nu(t) && t.data)
                              throw e.interface.makeError(t.data, a);
                            throw t;
                          }
                        },
                        n = async function (r) {
                          let n = e.runner;
                          nf(
                            ov(n),
                            "contract runner does not support sending transactions",
                            "UNSUPPORTED_OPERATION",
                            { operation: "sendTransaction" }
                          );
                          let a = await n.sendTransaction(await t(r)),
                            i = oN(e.runner);
                          return new op(e.interface, i, a);
                        },
                        a = async function (r) {
                          let n = ok(e.runner, "estimateGas");
                          return (
                            nf(
                              oy(n),
                              "contract runner does not support gas estimation",
                              "UNSUPPORTED_OPERATION",
                              { operation: "estimateGas" }
                            ),
                            await n.estimateGas(await t(r))
                          );
                        },
                        i = async (e) => await n(e);
                      return (
                        no(i, {
                          _contract: e,
                          estimateGas: a,
                          populateTransaction: t,
                          send: n,
                          staticCall: r,
                        }),
                        i
                      );
                    })(this)
                  : null,
            }),
            new Proxy(this, {
              get: (e, t, r) => {
                if ("symbol" == typeof t || t in e || oF.indexOf(t) >= 0)
                  return Reflect.get(e, t, r);
                try {
                  return e.getFunction(t);
                } catch (e) {
                  if (!nc(e, "INVALID_ARGUMENT") || "key" !== e.argument)
                    throw e;
                }
              },
              has: (e, t) =>
                "symbol" == typeof t || t in e || oF.indexOf(t) >= 0
                  ? Reflect.has(e, t)
                  : e.interface.hasFunction(t),
            })
          );
        }
      }
      function oL() {
        return oD;
      }
      class oz extends oL() {}
      class oG {
        attach(e) {
          return new oD(e, this.interface, this.runner);
        }
        async getDeployTransaction() {
          for (var e = arguments.length, t = Array(e), r = 0; r < e; r++)
            t[r] = arguments[r];
          let n = {},
            a = this.interface.deploy;
          if (
            (a.inputs.length + 1 === t.length && (n = await oP(t.pop())),
            a.inputs.length !== t.length)
          )
            throw Error("incorrect number of arguments to constructor");
          let i = await oT(this.runner, a.inputs, t);
          return Object.assign({}, n, {
            data: nk([this.bytecode, this.interface.encodeDeploy(i)]),
          });
        }
        async deploy() {
          for (var e = arguments.length, t = Array(e), r = 0; r < e; r++)
            t[r] = arguments[r];
          let n = await this.getDeployTransaction(...t);
          nf(
            this.runner && "function" == typeof this.runner.sendTransaction,
            "factory runner does not support sending transactions",
            "UNSUPPORTED_OPERATION",
            { operation: "sendTransaction" }
          );
          let a = await this.runner.sendTransaction(n);
          return new oD(sL(a), this.interface, this.runner, a);
        }
        connect(e) {
          return new oG(this.interface, this.bytecode, e);
        }
        static fromSolidity(e, t) {
          nh(null != e, "bad compiler output", "output", e),
            "string" == typeof e && (e = JSON.parse(e));
          let r = e.abi,
            n = "";
          return (
            e.bytecode
              ? (n = e.bytecode)
              : e.evm && e.evm.bytecode && (n = e.evm.bytecode),
            new this(r, n, t)
          );
        }
        constructor(e, t, r) {
          (0, eU._)(this, "interface", void 0),
            (0, eU._)(this, "bytecode", void 0),
            (0, eU._)(this, "runner", void 0);
          let n = sB.from(e);
          t instanceof Uint8Array ||
            ("object" == typeof t && (t = t.object),
            t.startsWith("0x") || (t = "0x" + t)),
            no(this, {
              bytecode: (t = n_(ny(t))),
              interface: n,
              runner: r || null,
            });
        }
      }
      class oW extends aC {
        update(e) {
          return ay(this), this.iHash.update(e), this;
        }
        digestInto(e) {
          ay(this),
            ab(e, this.outputLen),
            (this.finished = !0),
            this.iHash.digestInto(e),
            this.oHash.update(e),
            this.oHash.digestInto(e),
            this.destroy();
        }
        digest() {
          let e = new Uint8Array(this.oHash.outputLen);
          return this.digestInto(e), e;
        }
        _cloneInto(e) {
          e || (e = Object.create(Object.getPrototypeOf(this), {}));
          let {
            oHash: t,
            iHash: r,
            finished: n,
            destroyed: a,
            blockLen: i,
            outputLen: s,
          } = this;
          return (
            (e.finished = n),
            (e.destroyed = a),
            (e.blockLen = i),
            (e.outputLen = s),
            (e.oHash = t._cloneInto(e.oHash)),
            (e.iHash = r._cloneInto(e.iHash)),
            e
          );
        }
        destroy() {
          (this.destroyed = !0), this.oHash.destroy(), this.iHash.destroy();
        }
        constructor(e, t) {
          super(), (this.finished = !1), (this.destroyed = !1), am(e);
          let r = aR(t);
          if (
            ((this.iHash = e.create()), "function" != typeof this.iHash.update)
          )
            throw Error("Expected instance of class which extends utils.Hash");
          (this.blockLen = this.iHash.blockLen),
            (this.outputLen = this.iHash.outputLen);
          let n = this.blockLen,
            a = new Uint8Array(n);
          a.set(r.length > n ? e.create().update(r).digest() : r);
          for (let e = 0; e < a.length; e++) a[e] ^= 54;
          this.iHash.update(a), (this.oHash = e.create());
          for (let e = 0; e < a.length; e++) a[e] ^= 106;
          this.oHash.update(a), a.fill(0);
        }
      }
      let oV = (e, t, r) => new oW(e, t).update(r).digest();
      function oH(e, t, r, n) {
        var a;
        let i,
          {
            c: s,
            dkLen: o,
            DK: l,
            PRF: c,
            PRFSalt: u,
          } = (function (e, t, r, n) {
            am(e);
            let {
              c: a,
              dkLen: i,
              asyncTick: s,
            } = aB({ dkLen: 32, asyncTick: 10 }, n);
            if ((ag(a), ag(i), ag(s), a < 1))
              throw Error("PBKDF2: iterations (c) should be >= 1");
            let o = aR(t),
              l = aR(r),
              c = new Uint8Array(i),
              u = oV.create(e, o),
              d = u._cloneInto().update(l);
            return { c: a, dkLen: i, asyncTick: s, DK: c, PRF: u, PRFSalt: d };
          })(e, t, r, n),
          d = new Uint8Array(4),
          f = aP(d),
          h = new Uint8Array(c.outputLen);
        for (let e = 1, t = 0; t < o; e++, t += c.outputLen) {
          let r = l.subarray(t, t + c.outputLen);
          f.setInt32(0, e, !1),
            (i = u._cloneInto(i)).update(d).digestInto(h),
            r.set(h.subarray(0, r.length));
          for (let e = 1; e < s; e++) {
            c._cloneInto(i).update(h).digestInto(h);
            for (let e = 0; e < r.length; e++) r[e] ^= h[e];
          }
        }
        return (
          (a = i), c.destroy(), u.destroy(), a && a.destroy(), h.fill(0), l
        );
      }
      oV.create = (e, t) => new oW(e, t);
      class oK extends aC {
        update(e) {
          ay(this);
          let { view: t, buffer: r, blockLen: n } = this,
            a = (e = aR(e)).length;
          for (let i = 0; i < a; ) {
            let s = Math.min(n - this.pos, a - i);
            if (s === n) {
              let t = aP(e);
              for (; n <= a - i; i += n) this.process(t, i);
              continue;
            }
            r.set(e.subarray(i, i + s), this.pos),
              (this.pos += s),
              (i += s),
              this.pos === n && (this.process(t, 0), (this.pos = 0));
          }
          return (this.length += e.length), this.roundClean(), this;
        }
        digestInto(e) {
          ay(this), aw(e, this), (this.finished = !0);
          let { buffer: t, view: r, blockLen: n, isLE: a } = this,
            { pos: i } = this;
          (t[i++] = 128),
            this.buffer.subarray(i).fill(0),
            this.padOffset > n - i && (this.process(r, 0), (i = 0));
          for (let e = i; e < n; e++) t[e] = 0;
          !(function (e, t, r, n) {
            if ("function" == typeof e.setBigUint64)
              return e.setBigUint64(t, r, n);
            let a = BigInt(32),
              i = BigInt(0xffffffff),
              s = Number((r >> a) & i),
              o = Number(r & i),
              l = 4 * !!n,
              c = 4 * !n;
            e.setUint32(t + l, s, n), e.setUint32(t + c, o, n);
          })(r, n - 8, BigInt(8 * this.length), a),
            this.process(r, 0);
          let s = aP(e),
            o = this.outputLen;
          if (o % 4) throw Error("_sha2: outputLen should be aligned to 32bit");
          let l = o / 4,
            c = this.get();
          if (l > c.length) throw Error("_sha2: outputLen bigger than state");
          for (let e = 0; e < l; e++) s.setUint32(4 * e, c[e], a);
        }
        digest() {
          let { buffer: e, outputLen: t } = this;
          this.digestInto(e);
          let r = e.slice(0, t);
          return this.destroy(), r;
        }
        _cloneInto(e) {
          e || (e = new this.constructor()), e.set(...this.get());
          let {
            blockLen: t,
            buffer: r,
            length: n,
            finished: a,
            destroyed: i,
            pos: s,
          } = this;
          return (
            (e.length = n),
            (e.pos = s),
            (e.finished = a),
            (e.destroyed = i),
            n % t && e.buffer.set(r),
            e
          );
        }
        constructor(e, t, r, n) {
          super(),
            (this.blockLen = e),
            (this.outputLen = t),
            (this.padOffset = r),
            (this.isLE = n),
            (this.finished = !1),
            (this.length = 0),
            (this.pos = 0),
            (this.destroyed = !1),
            (this.buffer = new Uint8Array(e)),
            (this.view = aP(this.buffer));
        }
      }
      let oq = (e, t, r) => (e & t) ^ (~e & r),
        oQ = (e, t, r) => (e & t) ^ (e & r) ^ (t & r),
        oJ = new Uint32Array([
          0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b,
          0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01,
          0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7,
          0xc19bf174, 0xe49b69c1, 0xefbe4786, 0xfc19dc6, 0x240ca1cc, 0x2de92c6f,
          0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d,
          0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x6ca6351, 0x14292967,
          0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354,
          0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b,
          0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585,
          0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,
          0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee,
          0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb,
          0xbef9a3f7, 0xc67178f2,
        ]),
        oZ = new Uint32Array([
          0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f,
          0x9b05688c, 0x1f83d9ab, 0x5be0cd19,
        ]),
        oY = new Uint32Array(64);
      class oX extends oK {
        get() {
          let { A: e, B: t, C: r, D: n, E: a, F: i, G: s, H: o } = this;
          return [e, t, r, n, a, i, s, o];
        }
        set(e, t, r, n, a, i, s, o) {
          (this.A = 0 | e),
            (this.B = 0 | t),
            (this.C = 0 | r),
            (this.D = 0 | n),
            (this.E = 0 | a),
            (this.F = 0 | i),
            (this.G = 0 | s),
            (this.H = 0 | o);
        }
        process(e, t) {
          for (let r = 0; r < 16; r++, t += 4) oY[r] = e.getUint32(t, !1);
          for (let e = 16; e < 64; e++) {
            let t = oY[e - 15],
              r = oY[e - 2],
              n = aT(t, 7) ^ aT(t, 18) ^ (t >>> 3),
              a = aT(r, 17) ^ aT(r, 19) ^ (r >>> 10);
            oY[e] = (a + oY[e - 7] + n + oY[e - 16]) | 0;
          }
          let { A: r, B: n, C: a, D: i, E: s, F: o, G: l, H: c } = this;
          for (let e = 0; e < 64; e++) {
            let t =
                (c +
                  (aT(s, 6) ^ aT(s, 11) ^ aT(s, 25)) +
                  oq(s, o, l) +
                  oJ[e] +
                  oY[e]) |
                0,
              u = ((aT(r, 2) ^ aT(r, 13) ^ aT(r, 22)) + oQ(r, n, a)) | 0;
            (c = l),
              (l = o),
              (o = s),
              (s = (i + t) | 0),
              (i = a),
              (a = n),
              (n = r),
              (r = (t + u) | 0);
          }
          (r = (r + this.A) | 0),
            (n = (n + this.B) | 0),
            (a = (a + this.C) | 0),
            (i = (i + this.D) | 0),
            (s = (s + this.E) | 0),
            (o = (o + this.F) | 0),
            (l = (l + this.G) | 0),
            (c = (c + this.H) | 0),
            this.set(r, n, a, i, s, o, l, c);
        }
        roundClean() {
          oY.fill(0);
        }
        destroy() {
          this.set(0, 0, 0, 0, 0, 0, 0, 0), this.buffer.fill(0);
        }
        constructor() {
          super(64, 32, 8, !1),
            (this.A = 0 | oZ[0]),
            (this.B = 0 | oZ[1]),
            (this.C = 0 | oZ[2]),
            (this.D = 0 | oZ[3]),
            (this.E = 0 | oZ[4]),
            (this.F = 0 | oZ[5]),
            (this.G = 0 | oZ[6]),
            (this.H = 0 | oZ[7]);
        }
      }
      let o$ = aU(() => new oX()),
        [o0, o1] = a_.split(
          [
            "0x428a2f98d728ae22",
            "0x7137449123ef65cd",
            "0xb5c0fbcfec4d3b2f",
            "0xe9b5dba58189dbbc",
            "0x3956c25bf348b538",
            "0x59f111f1b605d019",
            "0x923f82a4af194f9b",
            "0xab1c5ed5da6d8118",
            "0xd807aa98a3030242",
            "0x12835b0145706fbe",
            "0x243185be4ee4b28c",
            "0x550c7dc3d5ffb4e2",
            "0x72be5d74f27b896f",
            "0x80deb1fe3b1696b1",
            "0x9bdc06a725c71235",
            "0xc19bf174cf692694",
            "0xe49b69c19ef14ad2",
            "0xefbe4786384f25e3",
            "0x0fc19dc68b8cd5b5",
            "0x240ca1cc77ac9c65",
            "0x2de92c6f592b0275",
            "0x4a7484aa6ea6e483",
            "0x5cb0a9dcbd41fbd4",
            "0x76f988da831153b5",
            "0x983e5152ee66dfab",
            "0xa831c66d2db43210",
            "0xb00327c898fb213f",
            "0xbf597fc7beef0ee4",
            "0xc6e00bf33da88fc2",
            "0xd5a79147930aa725",
            "0x06ca6351e003826f",
            "0x142929670a0e6e70",
            "0x27b70a8546d22ffc",
            "0x2e1b21385c26c926",
            "0x4d2c6dfc5ac42aed",
            "0x53380d139d95b3df",
            "0x650a73548baf63de",
            "0x766a0abb3c77b2a8",
            "0x81c2c92e47edaee6",
            "0x92722c851482353b",
            "0xa2bfe8a14cf10364",
            "0xa81a664bbc423001",
            "0xc24b8b70d0f89791",
            "0xc76c51a30654be30",
            "0xd192e819d6ef5218",
            "0xd69906245565a910",
            "0xf40e35855771202a",
            "0x106aa07032bbd1b8",
            "0x19a4c116b8d2d0c8",
            "0x1e376c085141ab53",
            "0x2748774cdf8eeb99",
            "0x34b0bcb5e19b48a8",
            "0x391c0cb3c5c95a63",
            "0x4ed8aa4ae3418acb",
            "0x5b9cca4f7763e373",
            "0x682e6ff3d6b2b8a3",
            "0x748f82ee5defb2fc",
            "0x78a5636f43172f60",
            "0x84c87814a1f0ab72",
            "0x8cc702081a6439ec",
            "0x90befffa23631e28",
            "0xa4506cebde82bde9",
            "0xbef9a3f7b2c67915",
            "0xc67178f2e372532b",
            "0xca273eceea26619c",
            "0xd186b8c721c0c207",
            "0xeada7dd6cde0eb1e",
            "0xf57d4f7fee6ed178",
            "0x06f067aa72176fba",
            "0x0a637dc5a2c898a6",
            "0x113f9804bef90dae",
            "0x1b710b35131c471b",
            "0x28db77f523047d84",
            "0x32caab7b40c72493",
            "0x3c9ebe0a15c9bebc",
            "0x431d67c49c100d4c",
            "0x4cc5d4becb3e42b6",
            "0x597f299cfc657e2a",
            "0x5fcb6fab3ad6faec",
            "0x6c44198c4a475817",
          ].map((e) => BigInt(e))
        ),
        o2 = new Uint32Array(80),
        o3 = new Uint32Array(80);
      class o4 extends oK {
        get() {
          let {
            Ah: e,
            Al: t,
            Bh: r,
            Bl: n,
            Ch: a,
            Cl: i,
            Dh: s,
            Dl: o,
            Eh: l,
            El: c,
            Fh: u,
            Fl: d,
            Gh: f,
            Gl: h,
            Hh: p,
            Hl: x,
          } = this;
          return [e, t, r, n, a, i, s, o, l, c, u, d, f, h, p, x];
        }
        set(e, t, r, n, a, i, s, o, l, c, u, d, f, h, p, x) {
          (this.Ah = 0 | e),
            (this.Al = 0 | t),
            (this.Bh = 0 | r),
            (this.Bl = 0 | n),
            (this.Ch = 0 | a),
            (this.Cl = 0 | i),
            (this.Dh = 0 | s),
            (this.Dl = 0 | o),
            (this.Eh = 0 | l),
            (this.El = 0 | c),
            (this.Fh = 0 | u),
            (this.Fl = 0 | d),
            (this.Gh = 0 | f),
            (this.Gl = 0 | h),
            (this.Hh = 0 | p),
            (this.Hl = 0 | x);
        }
        process(e, t) {
          for (let r = 0; r < 16; r++, t += 4)
            (o2[r] = e.getUint32(t)), (o3[r] = e.getUint32((t += 4)));
          for (let e = 16; e < 80; e++) {
            let t = 0 | o2[e - 15],
              r = 0 | o3[e - 15],
              n = a_.rotrSH(t, r, 1) ^ a_.rotrSH(t, r, 8) ^ a_.shrSH(t, r, 7),
              a = a_.rotrSL(t, r, 1) ^ a_.rotrSL(t, r, 8) ^ a_.shrSL(t, r, 7),
              i = 0 | o2[e - 2],
              s = 0 | o3[e - 2],
              o = a_.rotrSH(i, s, 19) ^ a_.rotrBH(i, s, 61) ^ a_.shrSH(i, s, 6),
              l = a_.rotrSL(i, s, 19) ^ a_.rotrBL(i, s, 61) ^ a_.shrSL(i, s, 6),
              c = a_.add4L(a, l, o3[e - 7], o3[e - 16]),
              u = a_.add4H(c, n, o, o2[e - 7], o2[e - 16]);
            (o2[e] = 0 | u), (o3[e] = 0 | c);
          }
          let {
            Ah: r,
            Al: n,
            Bh: a,
            Bl: i,
            Ch: s,
            Cl: o,
            Dh: l,
            Dl: c,
            Eh: u,
            El: d,
            Fh: f,
            Fl: h,
            Gh: p,
            Gl: x,
            Hh: g,
            Hl: b,
          } = this;
          for (let e = 0; e < 80; e++) {
            let t =
                a_.rotrSH(u, d, 14) ^ a_.rotrSH(u, d, 18) ^ a_.rotrBH(u, d, 41),
              m =
                a_.rotrSL(u, d, 14) ^ a_.rotrSL(u, d, 18) ^ a_.rotrBL(u, d, 41),
              y = (u & f) ^ (~u & p),
              w = (d & h) ^ (~d & x),
              v = a_.add5L(b, m, w, o1[e], o3[e]),
              A = a_.add5H(v, g, t, y, o0[e], o2[e]),
              E = 0 | v,
              _ =
                a_.rotrSH(r, n, 28) ^ a_.rotrBH(r, n, 34) ^ a_.rotrBH(r, n, 39),
              k =
                a_.rotrSL(r, n, 28) ^ a_.rotrBL(r, n, 34) ^ a_.rotrBL(r, n, 39),
              N = (r & a) ^ (r & s) ^ (a & s),
              P = (n & i) ^ (n & o) ^ (i & o);
            (g = 0 | p),
              (b = 0 | x),
              (p = 0 | f),
              (x = 0 | h),
              (f = 0 | u),
              (h = 0 | d),
              ({ h: u, l: d } = a_.add(0 | l, 0 | c, 0 | A, 0 | E)),
              (l = 0 | s),
              (c = 0 | o),
              (s = 0 | a),
              (o = 0 | i),
              (a = 0 | r),
              (i = 0 | n);
            let T = a_.add3L(E, k, P);
            (r = a_.add3H(T, A, _, N)), (n = 0 | T);
          }
          ({ h: r, l: n } = a_.add(0 | this.Ah, 0 | this.Al, 0 | r, 0 | n)),
            ({ h: a, l: i } = a_.add(0 | this.Bh, 0 | this.Bl, 0 | a, 0 | i)),
            ({ h: s, l: o } = a_.add(0 | this.Ch, 0 | this.Cl, 0 | s, 0 | o)),
            ({ h: l, l: c } = a_.add(0 | this.Dh, 0 | this.Dl, 0 | l, 0 | c)),
            ({ h: u, l: d } = a_.add(0 | this.Eh, 0 | this.El, 0 | u, 0 | d)),
            ({ h: f, l: h } = a_.add(0 | this.Fh, 0 | this.Fl, 0 | f, 0 | h)),
            ({ h: p, l: x } = a_.add(0 | this.Gh, 0 | this.Gl, 0 | p, 0 | x)),
            ({ h: g, l: b } = a_.add(0 | this.Hh, 0 | this.Hl, 0 | g, 0 | b)),
            this.set(r, n, a, i, s, o, l, c, u, d, f, h, p, x, g, b);
        }
        roundClean() {
          o2.fill(0), o3.fill(0);
        }
        destroy() {
          this.buffer.fill(0),
            this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
        }
        constructor() {
          super(128, 64, 16, !1),
            (this.Ah = 0x6a09e667),
            (this.Al = -0xc4336f8),
            (this.Bh = -0x4498517b),
            (this.Bl = -0x7b3558c5),
            (this.Ch = 0x3c6ef372),
            (this.Cl = -0x16b07d5),
            (this.Dh = -0x5ab00ac6),
            (this.Dl = 0x5f1d36f1),
            (this.Eh = 0x510e527f),
            (this.El = -0x52197d2f),
            (this.Fh = -0x64fa9774),
            (this.Fl = 0x2b3e6c1f),
            (this.Gh = 0x1f83d9ab),
            (this.Gl = -0x4be4295),
            (this.Hh = 0x5be0cd19),
            (this.Hl = 0x137e2179);
        }
      }
      let o8 = aU(() => new o4()),
        o5 =
          "undefined" != typeof self
            ? self
            : "undefined" != typeof window
            ? window
            : globalThis,
        o6 = o5.crypto || o5.msCrypto;
      function o9(e) {
        switch (e) {
          case "sha256":
            return o$.create();
          case "sha512":
            return o8.create();
        }
        nh(!1, "invalid hashing algorithm name", "algorithm", e);
      }
      let o7 = !1,
        le = function (e, t, r) {
          return (function (e, t) {
            let r = { sha256: o$, sha512: o8 }[e];
            return (
              nh(null != r, "invalid hmac algorithm", "algorithm", e),
              oV.create(r, t)
            );
          })(e, t)
            .update(r)
            .digest();
        },
        lt = le;
      function lr(e, t, r) {
        let n = ny(t, "key"),
          a = ny(r, "data");
        return n_(lt(e, n, a));
      }
      (lr._ = le),
        (lr.lock = function () {
          o7 = !0;
        }),
        (lr.register = function (e) {
          if (o7) throw Error("computeHmac is locked");
          lt = e;
        }),
        Object.freeze(lr);
      let ln = !1,
        la = function (e) {
          return new Uint8Array(
            (function (e) {
              nf(
                null != o6,
                "platform does not support secure random numbers",
                "UNSUPPORTED_OPERATION",
                { operation: "randomBytes" }
              ),
                nh(
                  Number.isInteger(e) && e > 0 && e <= 1024,
                  "invalid length",
                  "length",
                  e
                );
              let t = new Uint8Array(e);
              return o6.getRandomValues(t), t;
            })(e)
          );
        },
        li = la;
      function ls(e) {
        return li(e);
      }
      (ls._ = la),
        (ls.lock = function () {
          ln = !0;
        }),
        (ls.register = function (e) {
          if (ln) throw Error("randomBytes is locked");
          li = e;
        }),
        Object.freeze(ls);
      let lo = new Uint8Array([
          7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
        ]),
        ll = Uint8Array.from({ length: 16 }, (e, t) => t),
        lc = ll.map((e) => (9 * e + 5) % 16),
        lu = [ll],
        ld = [lc];
      for (let e = 0; e < 4; e++)
        for (let t of [lu, ld]) t.push(t[e].map((e) => lo[e]));
      let lf = [
          [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],
          [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],
          [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],
          [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],
          [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],
        ].map((e) => new Uint8Array(e)),
        lh = lu.map((e, t) => e.map((e) => lf[t][e])),
        lp = ld.map((e, t) => e.map((e) => lf[t][e])),
        lx = new Uint32Array([
          0, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e,
        ]),
        lg = new Uint32Array([
          0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0,
        ]),
        lb = (e, t) => (e << t) | (e >>> (32 - t));
      function lm(e, t, r, n) {
        return 0 === e
          ? t ^ r ^ n
          : 1 === e
          ? (t & r) | (~t & n)
          : 2 === e
          ? (t | ~r) ^ n
          : 3 === e
          ? (t & n) | (r & ~n)
          : t ^ (r | ~n);
      }
      let ly = new Uint32Array(16);
      class lw extends oK {
        get() {
          let { h0: e, h1: t, h2: r, h3: n, h4: a } = this;
          return [e, t, r, n, a];
        }
        set(e, t, r, n, a) {
          (this.h0 = 0 | e),
            (this.h1 = 0 | t),
            (this.h2 = 0 | r),
            (this.h3 = 0 | n),
            (this.h4 = 0 | a);
        }
        process(e, t) {
          for (let r = 0; r < 16; r++, t += 4) ly[r] = e.getUint32(t, !0);
          let r = 0 | this.h0,
            n = r,
            a = 0 | this.h1,
            i = a,
            s = 0 | this.h2,
            o = s,
            l = 0 | this.h3,
            c = l,
            u = 0 | this.h4,
            d = u;
          for (let e = 0; e < 5; e++) {
            let t = 4 - e,
              f = lx[e],
              h = lg[e],
              p = lu[e],
              x = ld[e],
              g = lh[e],
              b = lp[e];
            for (let t = 0; t < 16; t++) {
              let n = (lb(r + lm(e, a, s, l) + ly[p[t]] + f, g[t]) + u) | 0;
              (r = u), (u = l), (l = 0 | lb(s, 10)), (s = a), (a = n);
            }
            for (let e = 0; e < 16; e++) {
              let r = (lb(n + lm(t, i, o, c) + ly[x[e]] + h, b[e]) + d) | 0;
              (n = d), (d = c), (c = 0 | lb(o, 10)), (o = i), (i = r);
            }
          }
          this.set(
            (this.h1 + s + c) | 0,
            (this.h2 + l + d) | 0,
            (this.h3 + u + n) | 0,
            (this.h4 + r + i) | 0,
            (this.h0 + a + o) | 0
          );
        }
        roundClean() {
          ly.fill(0);
        }
        destroy() {
          (this.destroyed = !0), this.buffer.fill(0), this.set(0, 0, 0, 0, 0);
        }
        constructor() {
          super(64, 20, 8, !0),
            (this.h0 = 0x67452301),
            (this.h1 = -0x10325477),
            (this.h2 = -0x67452302),
            (this.h3 = 0x10325476),
            (this.h4 = -0x3c2d1e10);
        }
      }
      let lv = aU(() => new lw()),
        lA = !1,
        lE = function (e) {
          return lv(e);
        },
        l_ = lE;
      function lk(e) {
        let t = ny(e, "data");
        return n_(l_(t));
      }
      (lk._ = lE),
        (lk.lock = function () {
          lA = !0;
        }),
        (lk.register = function (e) {
          if (lA) throw TypeError("ripemd160 is locked");
          l_ = e;
        }),
        Object.freeze(lk);
      let lN = function (e) {
          return o9("sha256").update(e).digest();
        },
        lP = function (e) {
          return o9("sha512").update(e).digest();
        },
        lT = lN,
        lS = lP,
        lO = !1,
        lR = !1;
      function lC(e) {
        let t = ny(e, "data");
        return n_(lT(t));
      }
      function lI(e) {
        let t = ny(e, "data");
        return n_(lS(t));
      }
      (lC._ = lN),
        (lC.lock = function () {
          lO = !0;
        }),
        (lC.register = function (e) {
          if (lO) throw Error("sha256 is locked");
          lT = e;
        }),
        Object.freeze(lC),
        (lI._ = lP),
        (lI.lock = function () {
          lR = !0;
        }),
        (lI.register = function (e) {
          if (lR) throw Error("sha512 is locked");
          lS = e;
        }),
        Object.freeze(lC);
      let lB = !1,
        lU = function (e, t, r, n, a) {
          let i = { sha256: o$, sha512: o8 }[a];
          return (
            nh(null != i, "invalid pbkdf2 algorithm", "algorithm", a),
            oH(i, e, t, { c: r, dkLen: n })
          );
        },
        lM = lU;
      function lj(e, t, r, n, a) {
        let i = ny(e, "password"),
          s = ny(t, "salt");
        return n_(lM(i, s, r, n, a));
      }
      (lj._ = lU),
        (lj.lock = function () {
          lB = !0;
        }),
        (lj.register = function (e) {
          if (lB) throw Error("pbkdf2 is locked");
          lM = e;
        }),
        Object.freeze(lj);
      let lF = (e, t) => (e << t) | (e >>> (32 - t));
      function lD(e, t, r, n, a, i) {
        let s = e[t++] ^ r[n++],
          o = e[t++] ^ r[n++],
          l = e[t++] ^ r[n++],
          c = e[t++] ^ r[n++],
          u = e[t++] ^ r[n++],
          d = e[t++] ^ r[n++],
          f = e[t++] ^ r[n++],
          h = e[t++] ^ r[n++],
          p = e[t++] ^ r[n++],
          x = e[t++] ^ r[n++],
          g = e[t++] ^ r[n++],
          b = e[t++] ^ r[n++],
          m = e[t++] ^ r[n++],
          y = e[t++] ^ r[n++],
          w = e[t++] ^ r[n++],
          v = e[t++] ^ r[n++],
          A = s,
          E = o,
          _ = l,
          k = c,
          N = u,
          P = d,
          T = f,
          S = h,
          O = p,
          R = x,
          C = g,
          I = b,
          B = m,
          U = y,
          M = w,
          j = v;
        for (let e = 0; e < 8; e += 2)
          (N ^= lF((A + B) | 0, 7)),
            (O ^= lF((N + A) | 0, 9)),
            (B ^= lF((O + N) | 0, 13)),
            (A ^= lF((B + O) | 0, 18)),
            (R ^= lF((P + E) | 0, 7)),
            (U ^= lF((R + P) | 0, 9)),
            (E ^= lF((U + R) | 0, 13)),
            (P ^= lF((E + U) | 0, 18)),
            (M ^= lF((C + T) | 0, 7)),
            (_ ^= lF((M + C) | 0, 9)),
            (T ^= lF((_ + M) | 0, 13)),
            (C ^= lF((T + _) | 0, 18)),
            (k ^= lF((j + I) | 0, 7)),
            (S ^= lF((k + j) | 0, 9)),
            (I ^= lF((S + k) | 0, 13)),
            (j ^= lF((I + S) | 0, 18)),
            (E ^= lF((A + k) | 0, 7)),
            (_ ^= lF((E + A) | 0, 9)),
            (k ^= lF((_ + E) | 0, 13)),
            (A ^= lF((k + _) | 0, 18)),
            (T ^= lF((P + N) | 0, 7)),
            (S ^= lF((T + P) | 0, 9)),
            (N ^= lF((S + T) | 0, 13)),
            (P ^= lF((N + S) | 0, 18)),
            (I ^= lF((C + R) | 0, 7)),
            (O ^= lF((I + C) | 0, 9)),
            (R ^= lF((O + I) | 0, 13)),
            (C ^= lF((R + O) | 0, 18)),
            (B ^= lF((j + M) | 0, 7)),
            (U ^= lF((B + j) | 0, 9)),
            (M ^= lF((U + B) | 0, 13)),
            (j ^= lF((M + U) | 0, 18));
        (a[i++] = (s + A) | 0),
          (a[i++] = (o + E) | 0),
          (a[i++] = (l + _) | 0),
          (a[i++] = (c + k) | 0),
          (a[i++] = (u + N) | 0),
          (a[i++] = (d + P) | 0),
          (a[i++] = (f + T) | 0),
          (a[i++] = (h + S) | 0),
          (a[i++] = (p + O) | 0),
          (a[i++] = (x + R) | 0),
          (a[i++] = (g + C) | 0),
          (a[i++] = (b + I) | 0),
          (a[i++] = (m + B) | 0),
          (a[i++] = (y + U) | 0),
          (a[i++] = (w + M) | 0),
          (a[i++] = (v + j) | 0);
      }
      function lL(e, t, r, n, a) {
        let i = n + 0,
          s = n + 16 * a;
        for (let n = 0; n < 16; n++) r[s + n] = e[t + (2 * a - 1) * 16 + n];
        for (let n = 0; n < a; n++, i += 16, t += 16)
          lD(r, s, e, t, r, i),
            n > 0 && (s += 16),
            lD(r, i, e, (t += 16), r, s);
      }
      function lz(e, t, r) {
        let {
          N: n,
          r: a,
          p: i,
          dkLen: s,
          asyncTick: o,
          maxmem: l,
          onProgress: c,
        } = aB({ dkLen: 32, asyncTick: 10, maxmem: 0x40000400 }, r);
        if (
          (ag(n),
          ag(a),
          ag(i),
          ag(s),
          ag(o),
          ag(l),
          void 0 !== c && "function" != typeof c)
        )
          throw Error("progressCb should be function");
        let u = 128 * a,
          d = u / 4;
        if (
          n <= 1 ||
          (n & (n - 1)) != 0 ||
          n >= 2 ** (u / 8) ||
          n > 0x100000000
        )
          throw Error(
            "Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32"
          );
        if (i < 0 || i > ((0x100000000 - 1) * 32) / u)
          throw Error(
            "Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)"
          );
        if (s < 0 || s > (0x100000000 - 1) * 32)
          throw Error(
            "Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32"
          );
        let f = u * (n + i);
        if (f > l)
          throw Error(
            "Scrypt: parameters too large, "
              .concat(f, " (128 * r * (N + p)) > ")
              .concat(l, " (maxmem)")
          );
        let h = oH(o$, e, t, { c: 1, dkLen: u * i }),
          p = aN(h),
          x = aN(new Uint8Array(u * n)),
          g = aN(new Uint8Array(u)),
          b = () => {};
        if (c) {
          let e = 2 * n * i,
            t = Math.max(Math.floor(e / 1e4), 1),
            r = 0;
          b = () => {
            r++, c && (!(r % t) || r === e) && c(r / e);
          };
        }
        return {
          N: n,
          r: a,
          p: i,
          dkLen: s,
          blockSize32: d,
          V: x,
          B32: p,
          B: h,
          tmp: g,
          blockMixCb: b,
          asyncTick: o,
        };
      }
      function lG(e, t, r, n, a) {
        let i = oH(o$, e, r, { c: 1, dkLen: t });
        return r.fill(0), n.fill(0), a.fill(0), i;
      }
      async function lW(e, t, r) {
        let {
          N: n,
          r: a,
          p: i,
          dkLen: s,
          blockSize32: o,
          V: l,
          B32: c,
          B: u,
          tmp: d,
          blockMixCb: f,
          asyncTick: h,
        } = lz(e, t, r);
        for (let e = 0; e < i; e++) {
          let t = o * e;
          for (let e = 0; e < o; e++) l[e] = c[t + e];
          let r = 0;
          await aO(n - 1, h, () => {
            lL(l, r, l, (r += o), a), f();
          }),
            lL(l, (n - 1) * o, c, t, a),
            f(),
            await aO(n, h, () => {
              let e = c[t + o - 16] % n;
              for (let r = 0; r < o; r++) d[r] = c[t + r] ^ l[e * o + r];
              lL(d, 0, c, t, a), f();
            });
        }
        return lG(e, s, u, l, d);
      }
      let lV = !1,
        lH = !1,
        lK = async function (e, t, r, n, a, i, s) {
          return await lW(e, t, { N: r, r: n, p: a, dkLen: i, onProgress: s });
        },
        lq = function (e, t, r, n, a, i) {
          return (function (e, t, r) {
            let {
              N: n,
              r: a,
              p: i,
              dkLen: s,
              blockSize32: o,
              V: l,
              B32: c,
              B: u,
              tmp: d,
              blockMixCb: f,
            } = lz(e, t, r);
            for (let e = 0; e < i; e++) {
              let t = o * e;
              for (let e = 0; e < o; e++) l[e] = c[t + e];
              for (let e = 0, t = 0; e < n - 1; e++)
                lL(l, t, l, (t += o), a), f();
              lL(l, (n - 1) * o, c, t, a), f();
              for (let e = 0; e < n; e++) {
                let e = c[t + o - 16] % n;
                for (let r = 0; r < o; r++) d[r] = c[t + r] ^ l[e * o + r];
                lL(d, 0, c, t, a), f();
              }
            }
            return lG(e, s, u, l, d);
          })(e, t, { N: r, r: n, p: a, dkLen: i });
        },
        lQ = lK,
        lJ = lq;
      async function lZ(e, t, r, n, a, i, s) {
        let o = ny(e, "passwd"),
          l = ny(t, "salt");
        return n_(await lQ(o, l, r, n, a, i, s));
      }
      function lY(e, t, r, n, a, i) {
        let s = ny(e, "passwd"),
          o = ny(t, "salt");
        return n_(lJ(s, o, r, n, a, i));
      }
      function lX() {
        lr.lock(),
          a1.lock(),
          lj.lock(),
          ls.lock(),
          lk.lock(),
          lZ.lock(),
          lY.lock(),
          lC.lock(),
          lI.lock(),
          ls.lock();
      }
      (lZ._ = lK),
        (lZ.lock = function () {
          lH = !0;
        }),
        (lZ.register = function (e) {
          if (lH) throw Error("scrypt is locked");
          lQ = e;
        }),
        Object.freeze(lZ),
        (lY._ = lq),
        (lY.lock = function () {
          lV = !0;
        }),
        (lY.register = function (e) {
          if (lV) throw Error("scryptSync is locked");
          lJ = e;
        }),
        Object.freeze(lY);
      let l$ = BigInt(0),
        l0 = BigInt(1),
        l1 = BigInt(2),
        l2 = BigInt(27),
        l3 = BigInt(28),
        l4 = BigInt(35),
        l8 = {};
      var l5 = new WeakMap(),
        l6 = new WeakMap(),
        l9 = new WeakMap(),
        l7 = new WeakMap();
      let ce = Symbol.for("nodejs.util.inspect.custom");
      class ct {
        get r() {
          return (0, te._)(this, l5);
        }
        set r(e) {
          nh(32 === nN(e), "invalid r", "value", e), (0, tr._)(this, l5, n_(e));
        }
        get s() {
          return (
            nh(
              8 > parseInt((0, te._)(this, l6).substring(0, 3)),
              "non-canonical s; use ._s",
              "s",
              (0, te._)(this, l6)
            ),
            (0, te._)(this, l6)
          );
        }
        set s(e) {
          nh(32 === nN(e), "invalid s", "value", e), (0, tr._)(this, l6, n_(e));
        }
        get _s() {
          return (0, te._)(this, l6);
        }
        isValid() {
          return 8 > parseInt((0, te._)(this, l6).substring(0, 3));
        }
        get v() {
          return (0, te._)(this, l9);
        }
        set v(e) {
          let t = nJ(e, "value");
          nh(27 === t || 28 === t, "invalid v", "v", e), (0, tr._)(this, l9, t);
        }
        get networkV() {
          return (0, te._)(this, l7);
        }
        get legacyChainId() {
          let e = this.networkV;
          return null == e ? null : ct.getChainId(e);
        }
        get yParity() {
          return +(27 !== this.v);
        }
        get yParityAndS() {
          let e = ny(this.s);
          return this.yParity && (e[0] |= 128), n_(e);
        }
        get compactSerialized() {
          return nk([this.r, this.yParityAndS]);
        }
        get serialized() {
          return nk([this.r, this.s, this.yParity ? "0x1c" : "0x1b"]);
        }
        [ce]() {
          return 'Signature { r: "'
            .concat(this.r, '", s: "')
            .concat(this._s, '"')
            .concat(this.isValid() ? "" : ', valid: "false"', ", yParity: ")
            .concat(this.yParity, ", networkV: ")
            .concat(this.networkV, " }");
        }
        clone() {
          let e = new ct(l8, this.r, this._s, this.v);
          return this.networkV && (0, tr._)(e, l7, this.networkV), e;
        }
        toJSON() {
          let e = this.networkV;
          return {
            _type: "signature",
            networkV: null != e ? e.toString() : null,
            r: this.r,
            s: this._s,
            v: this.v,
          };
        }
        static getChainId(e) {
          let t = nH(e, "v");
          return t == l2 || t == l3
            ? l$
            : (nh(t >= l4, "invalid EIP-155 v", "v", e), (t - l4) / l1);
        }
        static getChainIdV(e, t) {
          return nH(e) * l1 + BigInt(35 + t - 27);
        }
        static getNormalizedV(e) {
          let t = nH(e);
          return t === l$ || t === l2
            ? 27
            : t === l0 || t === l3
            ? 28
            : (nh(t >= l4, "invalid v", "v", e), t & l0 ? 27 : 28);
        }
        static from(e) {
          function t(t, r) {
            nh(t, r, "signature", e);
          }
          if (null == e) return new ct(l8, sX, sX, 27);
          if ("string" == typeof e) {
            let r = ny(e, "signature");
            if (64 === r.length) {
              let e = n_(r.slice(0, 32)),
                t = r.slice(32, 64),
                n = 128 & t[0] ? 28 : 27;
              return (t[0] &= 127), new ct(l8, e, n_(t), n);
            }
            if (65 === r.length) {
              let e = n_(r.slice(0, 32)),
                t = n_(r.slice(32, 64)),
                n = ct.getNormalizedV(r[64]);
              return new ct(l8, e, t, n);
            }
            t(!1, "invalid raw signature length");
          }
          if (e instanceof ct) return e.clone();
          let r = e.r;
          t(null != r, "missing r");
          let n = nO(nX(r), 32),
            a = (function (e, r) {
              if (null != e) return nO(nX(e), 32);
              if (null != r) {
                t(nv(r, 32), "invalid yParityAndS");
                let e = ny(r);
                return (e[0] &= 127), n_(e);
              }
              t(!1, "missing s");
            })(e.s, e.yParityAndS),
            { networkV: i, v: s } = (function (e, r, n) {
              if (null != e) {
                let t = nH(e);
                return {
                  networkV: t >= l4 ? t : void 0,
                  v: ct.getNormalizedV(t),
                };
              }
              if (null != r)
                return (
                  t(nv(r, 32), "invalid yParityAndS"),
                  { v: 128 & ny(r)[0] ? 28 : 27 }
                );
              if (null != n) {
                switch (nJ(n, "sig.yParity")) {
                  case 0:
                    return { v: 27 };
                  case 1:
                    return { v: 28 };
                }
                t(!1, "invalid yParity");
              }
              t(!1, "missing v");
            })(e.v, e.yParityAndS, e.yParity),
            o = new ct(l8, n, a, s);
          return (
            i && (0, tr._)(o, l7, i),
            t(
              null == e.yParity || nJ(e.yParity, "sig.yParity") === o.yParity,
              "yParity mismatch"
            ),
            t(
              null == e.yParityAndS || e.yParityAndS === o.yParityAndS,
              "yParityAndS mismatch"
            ),
            o
          );
        }
        constructor(e, t, r, n) {
          (0, tt._)(this, l5, { writable: !0, value: void 0 }),
            (0, tt._)(this, l6, { writable: !0, value: void 0 }),
            (0, tt._)(this, l9, { writable: !0, value: void 0 }),
            (0, tt._)(this, l7, { writable: !0, value: void 0 }),
            nb(e, l8, "Signature"),
            (0, tr._)(this, l5, t),
            (0, tr._)(this, l6, r),
            (0, tr._)(this, l9, n),
            (0, tr._)(this, l7, null);
        }
      }
      e.s(
        {
          bitGet: () => cw,
          bitLen: () => cy,
          bitMask: () => cA,
          bitSet: () => cv,
          bytesToHex: () => cs,
          bytesToNumberBE: () => cu,
          bytesToNumberLE: () => cd,
          concatBytes: () => cg,
          createHmacDrbg: () => ck,
          ensureBytes: () => cx,
          equalBytes: () => cb,
          hexToBytes: () => cc,
          hexToNumber: () => cl,
          numberToBytesBE: () => cf,
          numberToBytesLE: () => ch,
          numberToHexUnpadded: () => co,
          numberToVarBytesBE: () => cp,
          utf8ToBytes: () => cm,
          validateObject: () => cP,
        },
        180269
      );
      let cr = BigInt(0),
        cn = BigInt(1),
        ca = BigInt(2),
        ci = Array.from({ length: 256 }, (e, t) =>
          t.toString(16).padStart(2, "0")
        );
      function cs(e) {
        if (!(e instanceof Uint8Array)) throw Error("Uint8Array expected");
        let t = "";
        for (let r = 0; r < e.length; r++) t += ci[e[r]];
        return t;
      }
      function co(e) {
        let t = e.toString(16);
        return 1 & t.length ? "0".concat(t) : t;
      }
      function cl(e) {
        if ("string" != typeof e)
          throw Error("hex string expected, got " + typeof e);
        return BigInt("" === e ? "0" : "0x".concat(e));
      }
      function cc(e) {
        if ("string" != typeof e)
          throw Error("hex string expected, got " + typeof e);
        let t = e.length;
        if (t % 2)
          throw Error(
            "padded hex string expected, got unpadded hex of length " + t
          );
        let r = new Uint8Array(t / 2);
        for (let t = 0; t < r.length; t++) {
          let n = 2 * t,
            a = Number.parseInt(e.slice(n, n + 2), 16);
          if (Number.isNaN(a) || a < 0) throw Error("Invalid byte sequence");
          r[t] = a;
        }
        return r;
      }
      function cu(e) {
        return cl(cs(e));
      }
      function cd(e) {
        if (!(e instanceof Uint8Array)) throw Error("Uint8Array expected");
        return cl(cs(Uint8Array.from(e).reverse()));
      }
      function cf(e, t) {
        return cc(e.toString(16).padStart(2 * t, "0"));
      }
      function ch(e, t) {
        return cf(e, t).reverse();
      }
      function cp(e) {
        return cc(co(e));
      }
      function cx(e, t, r) {
        let n;
        if ("string" == typeof t)
          try {
            n = cc(t);
          } catch (r) {
            throw Error(
              ""
                .concat(e, ' must be valid hex string, got "')
                .concat(t, '". Cause: ')
                .concat(r)
            );
          }
        else if (t instanceof Uint8Array) n = Uint8Array.from(t);
        else throw Error("".concat(e, " must be hex string or Uint8Array"));
        let a = n.length;
        if ("number" == typeof r && a !== r)
          throw Error(
            "".concat(e, " expected ").concat(r, " bytes, got ").concat(a)
          );
        return n;
      }
      function cg() {
        for (var e = arguments.length, t = Array(e), r = 0; r < e; r++)
          t[r] = arguments[r];
        let n = new Uint8Array(t.reduce((e, t) => e + t.length, 0)),
          a = 0;
        return (
          t.forEach((e) => {
            if (!(e instanceof Uint8Array)) throw Error("Uint8Array expected");
            n.set(e, a), (a += e.length);
          }),
          n
        );
      }
      function cb(e, t) {
        if (e.length !== t.length) return !1;
        for (let r = 0; r < e.length; r++) if (e[r] !== t[r]) return !1;
        return !0;
      }
      function cm(e) {
        if ("string" != typeof e)
          throw Error("utf8ToBytes expected string, got ".concat(typeof e));
        return new Uint8Array(new TextEncoder().encode(e));
      }
      function cy(e) {
        let t;
        for (t = 0; e > cr; e >>= cn, t += 1);
        return t;
      }
      function cw(e, t) {
        return (e >> BigInt(t)) & cn;
      }
      let cv = (e, t, r) => e | ((r ? cn : cr) << BigInt(t)),
        cA = (e) => (ca << BigInt(e - 1)) - cn,
        cE = (e) => new Uint8Array(e),
        c_ = (e) => Uint8Array.from(e);
      function ck(e, t, r) {
        if ("number" != typeof e || e < 2)
          throw Error("hashLen must be a number");
        if ("number" != typeof t || t < 2)
          throw Error("qByteLen must be a number");
        if ("function" != typeof r) throw Error("hmacFn must be a function");
        let n = cE(e),
          a = cE(e),
          i = 0,
          s = () => {
            n.fill(1), a.fill(0), (i = 0);
          },
          o = function () {
            for (var e = arguments.length, t = Array(e), i = 0; i < e; i++)
              t[i] = arguments[i];
            return r(a, n, ...t);
          },
          l = function () {
            let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : cE();
            (a = o(c_([0]), e)),
              (n = o()),
              0 !== e.length && ((a = o(c_([1]), e)), (n = o()));
          },
          c = () => {
            if (i++ >= 1e3) throw Error("drbg: tried 1000 values");
            let e = 0,
              r = [];
            for (; e < t; ) {
              let t = (n = o()).slice();
              r.push(t), (e += n.length);
            }
            return cg(...r);
          };
        return (e, t) => {
          let r;
          for (s(), l(e); !(r = t(c())); ) l();
          return s(), r;
        };
      }
      let cN = {
        bigint: (e) => "bigint" == typeof e,
        function: (e) => "function" == typeof e,
        boolean: (e) => "boolean" == typeof e,
        string: (e) => "string" == typeof e,
        stringOrUint8Array: (e) =>
          "string" == typeof e || e instanceof Uint8Array,
        isSafeInteger: (e) => Number.isSafeInteger(e),
        array: (e) => Array.isArray(e),
        field: (e, t) => t.Fp.isValid(e),
        hash: (e) =>
          "function" == typeof e && Number.isSafeInteger(e.outputLen),
      };
      function cP(e, t) {
        let r =
            arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
          n = (t, r, n) => {
            let a = cN[r];
            if ("function" != typeof a)
              throw Error(
                'Invalid validator "'.concat(r, '", expected function')
              );
            let i = e[t];
            if ((!n || void 0 !== i) && !a(i, e))
              throw Error(
                "Invalid param "
                  .concat(String(t), "=")
                  .concat(i, " (")
                  .concat(typeof i, "), expected ")
                  .concat(r)
              );
          };
        for (let [e, r] of Object.entries(t)) n(e, r, !1);
        for (let [e, t] of Object.entries(r)) n(e, t, !0);
        return e;
      }
      let cT = BigInt(0),
        cS = BigInt(1),
        cO = BigInt(2),
        cR = BigInt(3),
        cC = BigInt(4),
        cI = BigInt(5),
        cB = BigInt(8);
      function cU(e, t) {
        let r = e % t;
        return r >= cT ? r : t + r;
      }
      function cM(e, t, r) {
        let n = e;
        for (; t-- > cT; ) (n *= n), (n %= r);
        return n;
      }
      function cj(e, t) {
        if (e === cT || t <= cT)
          throw Error(
            "invert: expected positive integers, got n="
              .concat(e, " mod=")
              .concat(t)
          );
        let r = cU(e, t),
          n = t,
          a = cT,
          i = cS,
          s = cS,
          o = cT;
        for (; r !== cT; ) {
          let e = n / r,
            t = n % r,
            l = a - s * e,
            c = i - o * e;
          (n = r), (r = t), (a = s), (i = o), (s = l), (o = c);
        }
        if (n !== cS) throw Error("invert: does not exist");
        return cU(a, t);
      }
      BigInt(9), BigInt(16);
      let cF = [
        "create",
        "isValid",
        "is0",
        "neg",
        "inv",
        "sqrt",
        "sqr",
        "eql",
        "add",
        "sub",
        "mul",
        "pow",
        "div",
        "addN",
        "subN",
        "mulN",
        "sqrN",
      ];
      function cD(e) {
        return cP(
          e,
          cF.reduce((e, t) => ((e[t] = "function"), e), {
            ORDER: "bigint",
            MASK: "bigint",
            BYTES: "isSafeInteger",
            BITS: "isSafeInteger",
          })
        );
      }
      function cL(e, t) {
        let r = void 0 !== t ? t : e.toString(2).length,
          n = Math.ceil(r / 8);
        return { nBitLength: r, nByteLength: n };
      }
      function cz(e) {
        if ("bigint" != typeof e) throw Error("field order must be bigint");
        return Math.ceil(e.toString(2).length / 8);
      }
      function cG(e) {
        let t = cz(e);
        return t + Math.ceil(t / 2);
      }
      var cW = e.i(180269);
      let cV = BigInt(0),
        cH = BigInt(1);
      function cK(e) {
        return (
          cD(e.Fp),
          cP(
            e,
            { n: "bigint", h: "bigint", Gx: "field", Gy: "field" },
            { nBitLength: "isSafeInteger", nByteLength: "isSafeInteger" }
          ),
          Object.freeze({
            ...cL(e.n, e.nBitLength),
            ...e,
            ...{ p: e.Fp.ORDER },
          })
        );
      }
      let { bytesToNumberBE: cq, hexToBytes: cQ } = cW,
        cJ = {
          Err: class extends Error {
            constructor(e = "") {
              super(e);
            }
          },
          _parseInt(e) {
            let { Err: t } = cJ;
            if (e.length < 2 || 2 !== e[0])
              throw new t("Invalid signature integer tag");
            let r = e[1],
              n = e.subarray(2, r + 2);
            if (!r || n.length !== r)
              throw new t("Invalid signature integer: wrong length");
            if (128 & n[0]) throw new t("Invalid signature integer: negative");
            if (0 === n[0] && !(128 & n[1]))
              throw new t(
                "Invalid signature integer: unnecessary leading zero"
              );
            return { d: cq(n), l: e.subarray(r + 2) };
          },
          toSig(e) {
            let { Err: t } = cJ,
              r = "string" == typeof e ? cQ(e) : e;
            if (!(r instanceof Uint8Array)) throw Error("ui8a expected");
            let n = r.length;
            if (n < 2 || 48 != r[0]) throw new t("Invalid signature tag");
            if (r[1] !== n - 2)
              throw new t("Invalid signature: incorrect length");
            let { d: a, l: i } = cJ._parseInt(r.subarray(2)),
              { d: s, l: o } = cJ._parseInt(i);
            if (o.length)
              throw new t("Invalid signature: left bytes after parsing");
            return { r: a, s };
          },
          hexFromSig(e) {
            let t = (e) => (8 & Number.parseInt(e[0], 16) ? "00" + e : e),
              r = (e) => {
                let t = e.toString(16);
                return 1 & t.length ? "0".concat(t) : t;
              },
              n = t(r(e.s)),
              a = t(r(e.r)),
              i = n.length / 2,
              s = a.length / 2,
              o = r(i),
              l = r(s);
            return "30"
              .concat(r(s + i + 4), "02")
              .concat(l)
              .concat(a, "02")
              .concat(o)
              .concat(n);
          },
        },
        cZ = BigInt(0),
        cY = BigInt(1),
        cX = BigInt(2),
        c$ = BigInt(3),
        c0 = BigInt(4),
        c1 = BigInt(
          "0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"
        ),
        c2 = BigInt(
          "0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"
        ),
        c3 = BigInt(1),
        c4 = BigInt(2),
        c8 = (e, t) => (e + t / c4) / t,
        c5 = (function (e, t) {
          let r =
              arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
            n =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : {};
          if (e <= cT) throw Error("Expected Field ORDER > 0, got ".concat(e));
          let { nBitLength: a, nByteLength: i } = cL(e, t);
          if (i > 2048)
            throw Error("Field lengths over 2048 bytes are not supported");
          let s = (function (e) {
              if (e % cC === cR) {
                let t = (e + cS) / cC;
                return function (e, r) {
                  let n = e.pow(r, t);
                  if (!e.eql(e.sqr(n), r))
                    throw Error("Cannot find square root");
                  return n;
                };
              }
              if (e % cB === cI) {
                let t = (e - cI) / cB;
                return function (e, r) {
                  let n = e.mul(r, cO),
                    a = e.pow(n, t),
                    i = e.mul(r, a),
                    s = e.mul(e.mul(i, cO), a),
                    o = e.mul(i, e.sub(s, e.ONE));
                  if (!e.eql(e.sqr(o), r))
                    throw Error("Cannot find square root");
                  return o;
                };
              }
              return (function (e) {
                let t,
                  r,
                  n,
                  a = (e - cS) / cO;
                for (t = e - cS, r = 0; t % cO === cT; t /= cO, r++);
                for (
                  n = cO;
                  n < e &&
                  (function (e, t, r) {
                    if (r <= cT || t < cT)
                      throw Error("Expected power/modulo > 0");
                    if (r === cS) return cT;
                    let n = cS;
                    for (; t > cT; )
                      t & cS && (n = (n * e) % r),
                        (e = (e * e) % r),
                        (t >>= cS);
                    return n;
                  })(n, a, e) !==
                    e - cS;
                  n++
                );
                if (1 === r) {
                  let t = (e + cS) / cC;
                  return function (e, r) {
                    let n = e.pow(r, t);
                    if (!e.eql(e.sqr(n), r))
                      throw Error("Cannot find square root");
                    return n;
                  };
                }
                let i = (t + cS) / cO;
                return function (e, s) {
                  if (e.pow(s, a) === e.neg(e.ONE))
                    throw Error("Cannot find square root");
                  let o = r,
                    l = e.pow(e.mul(e.ONE, n), t),
                    c = e.pow(s, i),
                    u = e.pow(s, t);
                  for (; !e.eql(u, e.ONE); ) {
                    if (e.eql(u, e.ZERO)) return e.ZERO;
                    let t = 1;
                    for (let r = e.sqr(u); t < o && !e.eql(r, e.ONE); t++)
                      r = e.sqr(r);
                    let r = e.pow(l, cS << BigInt(o - t - 1));
                    (l = e.sqr(r)),
                      (c = e.mul(c, r)),
                      (u = e.mul(u, l)),
                      (o = t);
                  }
                  return c;
                };
              })(e);
            })(e),
            o = Object.freeze({
              ORDER: e,
              BITS: a,
              BYTES: i,
              MASK: cA(a),
              ZERO: cT,
              ONE: cS,
              create: (t) => cU(t, e),
              isValid: (t) => {
                if ("bigint" != typeof t)
                  throw Error(
                    "Invalid field element: expected bigint, got ".concat(
                      typeof t
                    )
                  );
                return cT <= t && t < e;
              },
              is0: (e) => e === cT,
              isOdd: (e) => (e & cS) === cS,
              neg: (t) => cU(-t, e),
              eql: (e, t) => e === t,
              sqr: (t) => cU(t * t, e),
              add: (t, r) => cU(t + r, e),
              sub: (t, r) => cU(t - r, e),
              mul: (t, r) => cU(t * r, e),
              pow: (e, t) =>
                (function (e, t, r) {
                  if (r < cT) throw Error("Expected power > 0");
                  if (r === cT) return e.ONE;
                  if (r === cS) return t;
                  let n = e.ONE,
                    a = t;
                  for (; r > cT; )
                    r & cS && (n = e.mul(n, a)), (a = e.sqr(a)), (r >>= cS);
                  return n;
                })(o, e, t),
              div: (t, r) => cU(t * cj(r, e), e),
              sqrN: (e) => e * e,
              addN: (e, t) => e + t,
              subN: (e, t) => e - t,
              mulN: (e, t) => e * t,
              inv: (t) => cj(t, e),
              sqrt: n.sqrt || ((e) => s(o, e)),
              invertBatch: (e) =>
                (function (e, t) {
                  let r = Array(t.length),
                    n = t.reduce(
                      (t, n, a) => (e.is0(n) ? t : ((r[a] = t), e.mul(t, n))),
                      e.ONE
                    ),
                    a = e.inv(n);
                  return (
                    t.reduceRight(
                      (t, n, a) =>
                        e.is0(n) ? t : ((r[a] = e.mul(t, r[a])), e.mul(t, n)),
                      a
                    ),
                    r
                  );
                })(o, e),
              cmov: (e, t, r) => (r ? t : e),
              toBytes: (e) => (r ? ch(e, i) : cf(e, i)),
              fromBytes: (e) => {
                if (e.length !== i)
                  throw Error(
                    "Fp.fromBytes: expected "
                      .concat(i, ", got ")
                      .concat(e.length)
                  );
                return r ? cd(e) : cu(e);
              },
            });
          return Object.freeze(o);
        })(c1, void 0, void 0, {
          sqrt: function (e) {
            let t = BigInt(3),
              r = BigInt(6),
              n = BigInt(11),
              a = BigInt(22),
              i = BigInt(23),
              s = BigInt(44),
              o = BigInt(88),
              l = (e * e * e) % c1,
              c = (l * l * e) % c1,
              u = (cM(c, t, c1) * c) % c1,
              d = (cM(u, t, c1) * c) % c1,
              f = (cM(d, c4, c1) * l) % c1,
              h = (cM(f, n, c1) * f) % c1,
              p = (cM(h, a, c1) * h) % c1,
              x = (cM(p, s, c1) * p) % c1,
              g = (cM(x, o, c1) * x) % c1,
              b = (cM(g, s, c1) * p) % c1,
              m = (cM(b, t, c1) * c) % c1,
              y = (cM(m, i, c1) * h) % c1,
              w = (cM(y, r, c1) * l) % c1,
              v = cM(w, c4, c1);
            if (!c5.eql(c5.sqr(v), e)) throw Error("Cannot find square root");
            return v;
          },
        }),
        c6 = (function (e, t) {
          let r = (t) =>
            (function (e) {
              let t = (function (e) {
                  let t = cK(e);
                  return (
                    cW.validateObject(
                      t,
                      {
                        hash: "hash",
                        hmac: "function",
                        randomBytes: "function",
                      },
                      {
                        bits2int: "function",
                        bits2int_modN: "function",
                        lowS: "boolean",
                      }
                    ),
                    Object.freeze({ lowS: !0, ...t })
                  );
                })(e),
                { Fp: r, n: n } = t,
                a = r.BYTES + 1,
                i = 2 * r.BYTES + 1;
              function s(e) {
                return cU(e, n);
              }
              let {
                  ProjectivePoint: o,
                  normPrivateKeyToScalar: l,
                  weierstrassEquation: c,
                  isWithinCurveOrder: u,
                } = (function (e) {
                  let t = (function (e) {
                      let t = cK(e);
                      cW.validateObject(
                        t,
                        { a: "field", b: "field" },
                        {
                          allowedPrivateKeyLengths: "array",
                          wrapPrivateKey: "boolean",
                          isTorsionFree: "function",
                          clearCofactor: "function",
                          allowInfinityPoint: "boolean",
                          fromBytes: "function",
                          toBytes: "function",
                        }
                      );
                      let { endo: r, Fp: n, a } = t;
                      if (r) {
                        if (!n.eql(a, n.ZERO))
                          throw Error(
                            "Endomorphism can only be defined for Koblitz curves that have a=0"
                          );
                        if (
                          "object" != typeof r ||
                          "bigint" != typeof r.beta ||
                          "function" != typeof r.splitScalar
                        )
                          throw Error(
                            "Expected endomorphism with beta: bigint and splitScalar: function"
                          );
                      }
                      return Object.freeze({ ...t });
                    })(e),
                    { Fp: r } = t,
                    n =
                      t.toBytes ||
                      ((e, t, n) => {
                        let a = t.toAffine();
                        return cW.concatBytes(
                          Uint8Array.from([4]),
                          r.toBytes(a.x),
                          r.toBytes(a.y)
                        );
                      }),
                    a =
                      t.fromBytes ||
                      ((e) => {
                        let t = e.subarray(1);
                        return {
                          x: r.fromBytes(t.subarray(0, r.BYTES)),
                          y: r.fromBytes(t.subarray(r.BYTES, 2 * r.BYTES)),
                        };
                      });
                  function i(e) {
                    let { a: n, b: a } = t,
                      i = r.sqr(e),
                      s = r.mul(i, e);
                    return r.add(r.add(s, r.mul(e, n)), a);
                  }
                  if (!r.eql(r.sqr(t.Gy), i(t.Gx)))
                    throw Error("bad generator point: equation left != right");
                  function s(e) {
                    return "bigint" == typeof e && cZ < e && e < t.n;
                  }
                  function o(e) {
                    if (!s(e))
                      throw Error(
                        "Expected valid bigint: 0 < bigint < curve.n"
                      );
                  }
                  function l(e) {
                    let r,
                      {
                        allowedPrivateKeyLengths: n,
                        nByteLength: a,
                        wrapPrivateKey: i,
                        n: s,
                      } = t;
                    if (n && "bigint" != typeof e) {
                      if (
                        (e instanceof Uint8Array && (e = cW.bytesToHex(e)),
                        "string" != typeof e || !n.includes(e.length))
                      )
                        throw Error("Invalid key");
                      e = e.padStart(2 * a, "0");
                    }
                    try {
                      r =
                        "bigint" == typeof e
                          ? e
                          : cW.bytesToNumberBE(cx("private key", e, a));
                    } catch (t) {
                      throw Error(
                        "private key must be "
                          .concat(a, " bytes, hex or bigint, not ")
                          .concat(typeof e)
                      );
                    }
                    return i && (r = cU(r, s)), o(r), r;
                  }
                  let c = new Map();
                  function u(e) {
                    if (!(e instanceof d))
                      throw Error("ProjectivePoint expected");
                  }
                  class d {
                    static fromAffine(e) {
                      let { x: t, y: n } = e || {};
                      if (!e || !r.isValid(t) || !r.isValid(n))
                        throw Error("invalid affine point");
                      if (e instanceof d)
                        throw Error("projective point not allowed");
                      let a = (e) => r.eql(e, r.ZERO);
                      return a(t) && a(n) ? d.ZERO : new d(t, n, r.ONE);
                    }
                    get x() {
                      return this.toAffine().x;
                    }
                    get y() {
                      return this.toAffine().y;
                    }
                    static normalizeZ(e) {
                      let t = r.invertBatch(e.map((e) => e.pz));
                      return e
                        .map((e, r) => e.toAffine(t[r]))
                        .map(d.fromAffine);
                    }
                    static fromHex(e) {
                      let t = d.fromAffine(a(cx("pointHex", e)));
                      return t.assertValidity(), t;
                    }
                    static fromPrivateKey(e) {
                      return d.BASE.multiply(l(e));
                    }
                    _setWindowSize(e) {
                      (this._WINDOW_SIZE = e), c.delete(this);
                    }
                    assertValidity() {
                      if (this.is0()) {
                        if (t.allowInfinityPoint && !r.is0(this.py)) return;
                        throw Error("bad point: ZERO");
                      }
                      let { x: e, y: n } = this.toAffine();
                      if (!r.isValid(e) || !r.isValid(n))
                        throw Error("bad point: x or y not FE");
                      let a = r.sqr(n),
                        s = i(e);
                      if (!r.eql(a, s))
                        throw Error("bad point: equation left != right");
                      if (!this.isTorsionFree())
                        throw Error("bad point: not in prime-order subgroup");
                    }
                    hasEvenY() {
                      let { y: e } = this.toAffine();
                      if (r.isOdd) return !r.isOdd(e);
                      throw Error("Field doesn't support isOdd");
                    }
                    equals(e) {
                      u(e);
                      let { px: t, py: n, pz: a } = this,
                        { px: i, py: s, pz: o } = e,
                        l = r.eql(r.mul(t, o), r.mul(i, a)),
                        c = r.eql(r.mul(n, o), r.mul(s, a));
                      return l && c;
                    }
                    negate() {
                      return new d(this.px, r.neg(this.py), this.pz);
                    }
                    double() {
                      let { a: e, b: n } = t,
                        a = r.mul(n, c$),
                        { px: i, py: s, pz: o } = this,
                        l = r.ZERO,
                        c = r.ZERO,
                        u = r.ZERO,
                        f = r.mul(i, i),
                        h = r.mul(s, s),
                        p = r.mul(o, o),
                        x = r.mul(i, s);
                      return (
                        (x = r.add(x, x)),
                        (u = r.mul(i, o)),
                        (u = r.add(u, u)),
                        (l = r.mul(e, u)),
                        (c = r.mul(a, p)),
                        (c = r.add(l, c)),
                        (l = r.sub(h, c)),
                        (c = r.add(h, c)),
                        (c = r.mul(l, c)),
                        (l = r.mul(x, l)),
                        (u = r.mul(a, u)),
                        (p = r.mul(e, p)),
                        (x = r.sub(f, p)),
                        (x = r.mul(e, x)),
                        (x = r.add(x, u)),
                        (u = r.add(f, f)),
                        (f = r.add(u, f)),
                        (f = r.add(f, p)),
                        (f = r.mul(f, x)),
                        (c = r.add(c, f)),
                        (p = r.mul(s, o)),
                        (p = r.add(p, p)),
                        (f = r.mul(p, x)),
                        (l = r.sub(l, f)),
                        (u = r.mul(p, h)),
                        (u = r.add(u, u)),
                        new d(l, c, (u = r.add(u, u)))
                      );
                    }
                    add(e) {
                      u(e);
                      let { px: n, py: a, pz: i } = this,
                        { px: s, py: o, pz: l } = e,
                        c = r.ZERO,
                        f = r.ZERO,
                        h = r.ZERO,
                        p = t.a,
                        x = r.mul(t.b, c$),
                        g = r.mul(n, s),
                        b = r.mul(a, o),
                        m = r.mul(i, l),
                        y = r.add(n, a),
                        w = r.add(s, o);
                      (y = r.mul(y, w)),
                        (w = r.add(g, b)),
                        (y = r.sub(y, w)),
                        (w = r.add(n, i));
                      let v = r.add(s, l);
                      return (
                        (w = r.mul(w, v)),
                        (v = r.add(g, m)),
                        (w = r.sub(w, v)),
                        (v = r.add(a, i)),
                        (c = r.add(o, l)),
                        (v = r.mul(v, c)),
                        (c = r.add(b, m)),
                        (v = r.sub(v, c)),
                        (h = r.mul(p, w)),
                        (c = r.mul(x, m)),
                        (h = r.add(c, h)),
                        (c = r.sub(b, h)),
                        (h = r.add(b, h)),
                        (f = r.mul(c, h)),
                        (b = r.add(g, g)),
                        (b = r.add(b, g)),
                        (m = r.mul(p, m)),
                        (w = r.mul(x, w)),
                        (b = r.add(b, m)),
                        (m = r.sub(g, m)),
                        (m = r.mul(p, m)),
                        (w = r.add(w, m)),
                        (g = r.mul(b, w)),
                        (f = r.add(f, g)),
                        (g = r.mul(v, w)),
                        (c = r.mul(y, c)),
                        (c = r.sub(c, g)),
                        (g = r.mul(y, b)),
                        (h = r.mul(v, h)),
                        new d(c, f, (h = r.add(h, g)))
                      );
                    }
                    subtract(e) {
                      return this.add(e.negate());
                    }
                    is0() {
                      return this.equals(d.ZERO);
                    }
                    wNAF(e) {
                      return h.wNAFCached(this, c, e, (e) => {
                        let t = r.invertBatch(e.map((e) => e.pz));
                        return e
                          .map((e, r) => e.toAffine(t[r]))
                          .map(d.fromAffine);
                      });
                    }
                    multiplyUnsafe(e) {
                      let n = d.ZERO;
                      if (e === cZ) return n;
                      if ((o(e), e === cY)) return this;
                      let { endo: a } = t;
                      if (!a) return h.unsafeLadder(this, e);
                      let {
                          k1neg: i,
                          k1: s,
                          k2neg: l,
                          k2: c,
                        } = a.splitScalar(e),
                        u = n,
                        f = n,
                        p = this;
                      for (; s > cZ || c > cZ; )
                        s & cY && (u = u.add(p)),
                          c & cY && (f = f.add(p)),
                          (p = p.double()),
                          (s >>= cY),
                          (c >>= cY);
                      return (
                        i && (u = u.negate()),
                        l && (f = f.negate()),
                        (f = new d(r.mul(f.px, a.beta), f.py, f.pz)),
                        u.add(f)
                      );
                    }
                    multiply(e) {
                      let n, a;
                      o(e);
                      let { endo: i } = t;
                      if (i) {
                        let {
                            k1neg: t,
                            k1: s,
                            k2neg: o,
                            k2: l,
                          } = i.splitScalar(e),
                          { p: c, f: u } = this.wNAF(s),
                          { p: f, f: p } = this.wNAF(l);
                        (c = h.constTimeNegate(t, c)),
                          (f = h.constTimeNegate(o, f)),
                          (f = new d(r.mul(f.px, i.beta), f.py, f.pz)),
                          (n = c.add(f)),
                          (a = u.add(p));
                      } else {
                        let { p: t, f: r } = this.wNAF(e);
                        (n = t), (a = r);
                      }
                      return d.normalizeZ([n, a])[0];
                    }
                    multiplyAndAddUnsafe(e, t, r) {
                      let n = d.BASE,
                        a = (e, t) =>
                          t !== cZ && t !== cY && e.equals(n)
                            ? e.multiply(t)
                            : e.multiplyUnsafe(t),
                        i = a(this, t).add(a(e, r));
                      return i.is0() ? void 0 : i;
                    }
                    toAffine(e) {
                      let { px: t, py: n, pz: a } = this,
                        i = this.is0();
                      null == e && (e = i ? r.ONE : r.inv(a));
                      let s = r.mul(t, e),
                        o = r.mul(n, e),
                        l = r.mul(a, e);
                      if (i) return { x: r.ZERO, y: r.ZERO };
                      if (!r.eql(l, r.ONE)) throw Error("invZ was invalid");
                      return { x: s, y: o };
                    }
                    isTorsionFree() {
                      let { h: e, isTorsionFree: r } = t;
                      if (e === cY) return !0;
                      if (r) return r(d, this);
                      throw Error(
                        "isTorsionFree() has not been declared for the elliptic curve"
                      );
                    }
                    clearCofactor() {
                      let { h: e, clearCofactor: r } = t;
                      return e === cY
                        ? this
                        : r
                        ? r(d, this)
                        : this.multiplyUnsafe(t.h);
                    }
                    toRawBytes() {
                      let e =
                        !(arguments.length > 0) ||
                        void 0 === arguments[0] ||
                        arguments[0];
                      return this.assertValidity(), n(d, this, e);
                    }
                    toHex() {
                      let e =
                        !(arguments.length > 0) ||
                        void 0 === arguments[0] ||
                        arguments[0];
                      return cW.bytesToHex(this.toRawBytes(e));
                    }
                    constructor(e, t, n) {
                      if (
                        ((this.px = e),
                        (this.py = t),
                        (this.pz = n),
                        null == e || !r.isValid(e))
                      )
                        throw Error("x required");
                      if (null == t || !r.isValid(t)) throw Error("y required");
                      if (null == n || !r.isValid(n)) throw Error("z required");
                    }
                  }
                  (d.BASE = new d(t.Gx, t.Gy, r.ONE)),
                    (d.ZERO = new d(r.ZERO, r.ONE, r.ZERO));
                  let f = t.nBitLength,
                    h = (function (e, t) {
                      let r = (e, t) => {
                          let r = t.negate();
                          return e ? r : t;
                        },
                        n = (e) => ({
                          windows: Math.ceil(t / e) + 1,
                          windowSize: 2 ** (e - 1),
                        });
                      return {
                        constTimeNegate: r,
                        unsafeLadder(t, r) {
                          let n = e.ZERO,
                            a = t;
                          for (; r > cV; )
                            r & cH && (n = n.add(a)),
                              (a = a.double()),
                              (r >>= cH);
                          return n;
                        },
                        precomputeWindow(e, t) {
                          let { windows: r, windowSize: a } = n(t),
                            i = [],
                            s = e,
                            o = s;
                          for (let e = 0; e < r; e++) {
                            (o = s), i.push(o);
                            for (let e = 1; e < a; e++)
                              (o = o.add(s)), i.push(o);
                            s = o.double();
                          }
                          return i;
                        },
                        wNAF(t, a, i) {
                          let { windows: s, windowSize: o } = n(t),
                            l = e.ZERO,
                            c = e.BASE,
                            u = BigInt(2 ** t - 1),
                            d = 2 ** t,
                            f = BigInt(t);
                          for (let e = 0; e < s; e++) {
                            let t = e * o,
                              n = Number(i & u);
                            (i >>= f), n > o && ((n -= d), (i += cH));
                            let s = t + Math.abs(n) - 1,
                              h = e % 2 != 0,
                              p = n < 0;
                            0 === n
                              ? (c = c.add(r(h, a[t])))
                              : (l = l.add(r(p, a[s])));
                          }
                          return { p: l, f: c };
                        },
                        wNAFCached(e, t, r, n) {
                          let a = e._WINDOW_SIZE || 1,
                            i = t.get(e);
                          return (
                            i ||
                              ((i = this.precomputeWindow(e, a)),
                              1 !== a && t.set(e, n(i))),
                            this.wNAF(a, i, r)
                          );
                        },
                      };
                    })(d, t.endo ? Math.ceil(f / 2) : f);
                  return {
                    CURVE: t,
                    ProjectivePoint: d,
                    normPrivateKeyToScalar: l,
                    weierstrassEquation: i,
                    isWithinCurveOrder: s,
                  };
                })({
                  ...t,
                  toBytes(e, t, n) {
                    let a = t.toAffine(),
                      i = r.toBytes(a.x),
                      s = cW.concatBytes;
                    return n
                      ? s(Uint8Array.from([t.hasEvenY() ? 2 : 3]), i)
                      : s(Uint8Array.from([4]), i, r.toBytes(a.y));
                  },
                  fromBytes(e) {
                    let t = e.length,
                      n = e[0],
                      s = e.subarray(1);
                    if (t === a && (2 === n || 3 === n)) {
                      let e = cW.bytesToNumberBE(s);
                      if (!(cZ < e && e < r.ORDER))
                        throw Error("Point is not on curve");
                      let t = c(e),
                        a = r.sqrt(t);
                      return (
                        ((1 & n) == 1) != ((a & cY) === cY) && (a = r.neg(a)),
                        { x: e, y: a }
                      );
                    }
                    if (t === i && 4 === n)
                      return {
                        x: r.fromBytes(s.subarray(0, r.BYTES)),
                        y: r.fromBytes(s.subarray(r.BYTES, 2 * r.BYTES)),
                      };
                    throw Error(
                      "Point of length "
                        .concat(t, " was invalid. Expected ")
                        .concat(a, " compressed bytes or ")
                        .concat(i, " uncompressed bytes")
                    );
                  },
                }),
                d = (e) => cW.bytesToHex(cW.numberToBytesBE(e, t.nByteLength)),
                f = (e, t, r) => cW.bytesToNumberBE(e.slice(t, r));
              class h {
                static fromCompact(e) {
                  let r = t.nByteLength;
                  return new h(
                    f((e = cx("compactSignature", e, 2 * r)), 0, r),
                    f(e, r, 2 * r)
                  );
                }
                static fromDER(e) {
                  let { r: t, s: r } = cJ.toSig(cx("DER", e));
                  return new h(t, r);
                }
                assertValidity() {
                  if (!u(this.r)) throw Error("r must be 0 < r < CURVE.n");
                  if (!u(this.s)) throw Error("s must be 0 < s < CURVE.n");
                }
                addRecoveryBit(e) {
                  return new h(this.r, this.s, e);
                }
                recoverPublicKey(e) {
                  let { r: a, s: i, recovery: l } = this,
                    c = g(cx("msgHash", e));
                  if (null == l || ![0, 1, 2, 3].includes(l))
                    throw Error("recovery id invalid");
                  let u = 2 === l || 3 === l ? a + t.n : a;
                  if (u >= r.ORDER) throw Error("recovery id 2 or 3 invalid");
                  let f = (1 & l) == 0 ? "02" : "03",
                    h = o.fromHex(f + d(u)),
                    p = cj(u, n),
                    x = s(-c * p),
                    b = s(i * p),
                    m = o.BASE.multiplyAndAddUnsafe(h, x, b);
                  if (!m) throw Error("point at infinify");
                  return m.assertValidity(), m;
                }
                hasHighS() {
                  return this.s > n >> cY;
                }
                normalizeS() {
                  return this.hasHighS()
                    ? new h(this.r, s(-this.s), this.recovery)
                    : this;
                }
                toDERRawBytes() {
                  return cW.hexToBytes(this.toDERHex());
                }
                toDERHex() {
                  return cJ.hexFromSig({ r: this.r, s: this.s });
                }
                toCompactRawBytes() {
                  return cW.hexToBytes(this.toCompactHex());
                }
                toCompactHex() {
                  return d(this.r) + d(this.s);
                }
                constructor(e, t, r) {
                  (this.r = e),
                    (this.s = t),
                    (this.recovery = r),
                    this.assertValidity();
                }
              }
              function p(e) {
                let t = e instanceof Uint8Array,
                  r = "string" == typeof e,
                  n = (t || r) && e.length;
                return t
                  ? n === a || n === i
                  : r
                  ? n === 2 * a || n === 2 * i
                  : e instanceof o;
              }
              let x =
                  t.bits2int ||
                  function (e) {
                    let r = cW.bytesToNumberBE(e),
                      n = 8 * e.length - t.nBitLength;
                    return n > 0 ? r >> BigInt(n) : r;
                  },
                g =
                  t.bits2int_modN ||
                  function (e) {
                    return s(x(e));
                  },
                b = cW.bitMask(t.nBitLength);
              function m(e) {
                if ("bigint" != typeof e) throw Error("bigint expected");
                if (!(cZ <= e && e < b))
                  throw Error("bigint expected < 2^".concat(t.nBitLength));
                return cW.numberToBytesBE(e, t.nByteLength);
              }
              let y = { lowS: t.lowS, prehash: !1 },
                w = { lowS: t.lowS, prehash: !1 };
              return (
                o.BASE._setWindowSize(8),
                {
                  CURVE: t,
                  getPublicKey: function (e) {
                    let t =
                      !(arguments.length > 1) ||
                      void 0 === arguments[1] ||
                      arguments[1];
                    return o.fromPrivateKey(e).toRawBytes(t);
                  },
                  getSharedSecret: function (e, t) {
                    let r =
                      !(arguments.length > 2) ||
                      void 0 === arguments[2] ||
                      arguments[2];
                    if (p(e)) throw Error("first arg must be private key");
                    if (!p(t)) throw Error("second arg must be public key");
                    return o.fromHex(t).multiply(l(e)).toRawBytes(r);
                  },
                  sign: function (e, a) {
                    let i =
                        arguments.length > 2 && void 0 !== arguments[2]
                          ? arguments[2]
                          : y,
                      { seed: c, k2sig: d } = (function (e, a) {
                        let i =
                          arguments.length > 2 && void 0 !== arguments[2]
                            ? arguments[2]
                            : y;
                        if (["recovered", "canonical"].some((e) => e in i))
                          throw Error("sign() legacy options not supported");
                        let { hash: c, randomBytes: d } = t,
                          { lowS: f, prehash: p, extraEntropy: b } = i;
                        null == f && (f = !0),
                          (e = cx("msgHash", e)),
                          p && (e = cx("prehashed msgHash", c(e)));
                        let w = g(e),
                          v = l(a),
                          A = [m(v), m(w)];
                        if (null != b) {
                          let e = !0 === b ? d(r.BYTES) : b;
                          A.push(cx("extraEntropy", e));
                        }
                        return {
                          seed: cW.concatBytes(...A),
                          k2sig: function (e) {
                            var t;
                            let r = x(e);
                            if (!u(r)) return;
                            let a = cj(r, n),
                              i = o.BASE.multiply(r).toAffine(),
                              l = s(i.x);
                            if (l === cZ) return;
                            let c = s(a * s(w + l * v));
                            if (c === cZ) return;
                            let d = (2 * (i.x !== l)) | Number(i.y & cY),
                              p = c;
                            return (
                              f &&
                                c > n >> cY &&
                                ((p = (t = c) > n >> cY ? s(-t) : t), (d ^= 1)),
                              new h(l, p, d)
                            );
                          },
                        };
                      })(e, a, i);
                    return cW.createHmacDrbg(
                      t.hash.outputLen,
                      t.nByteLength,
                      t.hmac
                    )(c, d);
                  },
                  verify: function (e, r, a) {
                    var i;
                    let l,
                      c,
                      u =
                        arguments.length > 3 && void 0 !== arguments[3]
                          ? arguments[3]
                          : w;
                    if (
                      ((r = cx("msgHash", r)),
                      (a = cx("publicKey", a)),
                      "strict" in u)
                    )
                      throw Error("options.strict was renamed to lowS");
                    let { lowS: d, prehash: f } = u;
                    try {
                      if ("string" == typeof e || e instanceof Uint8Array)
                        try {
                          l = h.fromDER(e);
                        } catch (t) {
                          if (!(t instanceof cJ.Err)) throw t;
                          l = h.fromCompact(e);
                        }
                      else if (
                        "object" == typeof e &&
                        "bigint" == typeof e.r &&
                        "bigint" == typeof e.s
                      ) {
                        let { r: t, s: r } = e;
                        l = new h(t, r);
                      } else throw Error("PARSE");
                      c = o.fromHex(a);
                    } catch (e) {
                      if ("PARSE" === e.message)
                        throw Error(
                          "signature must be Signature instance, Uint8Array or hex string"
                        );
                      return !1;
                    }
                    if (d && l.hasHighS()) return !1;
                    f && (r = t.hash(r));
                    let { r: p, s: x } = l,
                      b = g(r),
                      m = cj(x, n),
                      y = s(b * m),
                      v = s(p * m),
                      A =
                        null == (i = o.BASE.multiplyAndAddUnsafe(c, y, v))
                          ? void 0
                          : i.toAffine();
                    return !!A && s(A.x) === p;
                  },
                  ProjectivePoint: o,
                  Signature: h,
                  utils: {
                    isValidPrivateKey(e) {
                      try {
                        return l(e), !0;
                      } catch (e) {
                        return !1;
                      }
                    },
                    normPrivateKeyToScalar: l,
                    randomPrivateKey: () => {
                      let e = cG(t.n);
                      return (function (e, t) {
                        let r =
                            arguments.length > 2 &&
                            void 0 !== arguments[2] &&
                            arguments[2],
                          n = e.length,
                          a = cz(t),
                          i = cG(t);
                        if (n < 16 || n < i || n > 1024)
                          throw Error(
                            "expected "
                              .concat(i, "-1024 bytes of input, got ")
                              .concat(n)
                          );
                        let s = cU(r ? cu(e) : cd(e), t - cS) + cS;
                        return r ? ch(s, a) : cf(s, a);
                      })(t.randomBytes(e), t.n);
                    },
                    precompute() {
                      let e =
                          arguments.length > 0 && void 0 !== arguments[0]
                            ? arguments[0]
                            : 8,
                        t =
                          arguments.length > 1 && void 0 !== arguments[1]
                            ? arguments[1]
                            : o.BASE;
                      return t._setWindowSize(e), t.multiply(BigInt(3)), t;
                    },
                  },
                }
              );
            })({
              ...e,
              hash: t,
              hmac: function (e) {
                for (
                  var r = arguments.length, n = Array(r > 1 ? r - 1 : 0), a = 1;
                  a < r;
                  a++
                )
                  n[a - 1] = arguments[a];
                return oV(
                  t,
                  e,
                  (function () {
                    for (
                      var e = arguments.length, t = Array(e), r = 0;
                      r < e;
                      r++
                    )
                      t[r] = arguments[r];
                    let n = new Uint8Array(t.reduce((e, t) => e + t.length, 0)),
                      a = 0;
                    return (
                      t.forEach((e) => {
                        if (!(e instanceof Uint8Array))
                          throw Error("Uint8Array expected");
                        n.set(e, a), (a += e.length);
                      }),
                      n
                    );
                  })(...n)
                );
              },
              randomBytes: aM,
            });
          return Object.freeze({ ...r(t), create: r });
        })(
          {
            a: BigInt(0),
            b: BigInt(7),
            Fp: c5,
            n: c2,
            Gx: BigInt(
              "55066263022277343669578718895168534326250603453777594175500187360389116729240"
            ),
            Gy: BigInt(
              "32670510020758816978083085130507043184471273380659243275938904335757337482424"
            ),
            h: BigInt(1),
            lowS: !0,
            endo: {
              beta: BigInt(
                "0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"
              ),
              splitScalar: (e) => {
                let t = BigInt("0x3086d221a7d46bcde86c90e49284eb15"),
                  r = -c3 * BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),
                  n = BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),
                  a = BigInt("0x100000000000000000000000000000000"),
                  i = c8(t * e, c2),
                  s = c8(-r * e, c2),
                  o = cU(e - i * t - s * n, c2),
                  l = cU(-i * r - s * t, c2),
                  c = o > a,
                  u = l > a;
                if ((c && (o = c2 - o), u && (l = c2 - l), o > a || l > a))
                  throw Error("splitScalar: Endomorphism failed, k=" + e);
                return { k1neg: c, k1: o, k2neg: u, k2: l };
              },
            },
          },
          o$
        ),
        c9 = BigInt(0);
      c6.ProjectivePoint;
      let c7 = (function (e, t) {
          let r = t.map((e) => Array.from(e).reverse());
          return (t, n) => {
            let [a, i, s, o] = r.map((r) =>
              r.reduce((r, n) => e.add(e.mul(r, t), n))
            );
            return (
              (t = e.div(a, i)), (n = e.mul(n, e.div(s, o))), { x: t, y: n }
            );
          };
        })(
          c5,
          [
            [
              "0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7",
              "0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581",
              "0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262",
              "0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c",
            ],
            [
              "0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b",
              "0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14",
              "0x0000000000000000000000000000000000000000000000000000000000000001",
            ],
            [
              "0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c",
              "0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3",
              "0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931",
              "0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84",
            ],
            [
              "0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b",
              "0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573",
              "0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f",
              "0x0000000000000000000000000000000000000000000000000000000000000001",
            ],
          ].map((e) => e.map((e) => BigInt(e)))
        ),
        ue = (function (e, t) {
          if ((cD(e), !e.isValid(t.A) || !e.isValid(t.B) || !e.isValid(t.Z)))
            throw Error("mapToCurveSimpleSWU: invalid opts");
          let r = (function (e, t) {
            let r = e.ORDER,
              n = cZ;
            for (let e = r - cY; e % cX === cZ; e /= cX) n += cY;
            let a = n,
              i = cX << (a - cY - cY),
              s = i * cX,
              o = (r - cY) / s,
              l = (o - cY) / cX,
              c = s - cY,
              u = e.pow(t, o),
              d = e.pow(t, (o + cY) / cX),
              f = (t, r) => {
                let n = u,
                  s = e.pow(r, c),
                  o = e.sqr(s);
                o = e.mul(o, r);
                let f = e.mul(t, o);
                (f = e.pow(f, l)),
                  (f = e.mul(f, s)),
                  (s = e.mul(f, r)),
                  (o = e.mul(f, t));
                let h = e.mul(o, s);
                f = e.pow(h, i);
                let p = e.eql(f, e.ONE);
                (s = e.mul(o, d)),
                  (f = e.mul(h, n)),
                  (o = e.cmov(s, o, p)),
                  (h = e.cmov(f, h, p));
                for (let t = a; t > cY; t--) {
                  let r = t - cX;
                  r = cX << (r - cY);
                  let a = e.pow(h, r),
                    i = e.eql(a, e.ONE);
                  (s = e.mul(o, n)),
                    (n = e.mul(n, n)),
                    (a = e.mul(h, n)),
                    (o = e.cmov(s, o, i)),
                    (h = e.cmov(a, h, i));
                }
                return { isValid: p, value: o };
              };
            if (e.ORDER % c0 === c$) {
              let r = (e.ORDER - c$) / c0,
                n = e.sqrt(e.neg(t));
              f = (t, a) => {
                let i = e.sqr(a),
                  s = e.mul(t, a);
                i = e.mul(i, s);
                let o = e.pow(i, r);
                o = e.mul(o, s);
                let l = e.mul(o, n),
                  c = e.mul(e.sqr(o), a),
                  u = e.eql(c, t),
                  d = e.cmov(l, o, u);
                return { isValid: u, value: d };
              };
            }
            return f;
          })(e, t.Z);
          if (!e.isOdd) throw Error("Fp.isOdd is not implemented!");
          return (n) => {
            let a, i, s, o, l, c, u, d;
            (a = e.sqr(n)),
              (a = e.mul(a, t.Z)),
              (i = e.sqr(a)),
              (i = e.add(i, a)),
              (s = e.add(i, e.ONE)),
              (s = e.mul(s, t.B)),
              (o = e.cmov(t.Z, e.neg(i), !e.eql(i, e.ZERO))),
              (o = e.mul(o, t.A)),
              (i = e.sqr(s)),
              (c = e.sqr(o)),
              (l = e.mul(c, t.A)),
              (i = e.add(i, l)),
              (i = e.mul(i, s)),
              (c = e.mul(c, o)),
              (l = e.mul(c, t.B)),
              (i = e.add(i, l)),
              (u = e.mul(a, s));
            let { isValid: f, value: h } = r(i, c);
            (d = e.mul(a, n)),
              (d = e.mul(d, h)),
              (u = e.cmov(u, s, f)),
              (d = e.cmov(d, h, f));
            let p = e.isOdd(n) === e.isOdd(d);
            return (d = e.cmov(e.neg(d), d, p)), { x: (u = e.div(u, o)), y: d };
          };
        })(c5, {
          A: BigInt(
            "0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533"
          ),
          B: BigInt("1771"),
          Z: c5.create(BigInt("-11")),
        });
      !(function (e, t, r) {
        if ("function" != typeof t) throw Error("mapToCurve() must be defined");
      })(
        c6.ProjectivePoint,
        (e) => {
          let { x: t, y: r } = ue(c5.create(e[0]));
          return c7(t, r);
        },
        c5.ORDER
      );
      var ut = new WeakMap();
      class ur {
        get privateKey() {
          return (0, te._)(this, ut);
        }
        get publicKey() {
          return ur.computePublicKey((0, te._)(this, ut));
        }
        get compressedPublicKey() {
          return ur.computePublicKey((0, te._)(this, ut), !0);
        }
        sign(e) {
          nh(32 === nN(e), "invalid digest length", "digest", e);
          let t = c6.sign(nw(e), nw((0, te._)(this, ut)), { lowS: !0 });
          return ct.from({
            r: nY(t.r, 32),
            s: nY(t.s, 32),
            v: t.recovery ? 28 : 27,
          });
        }
        computeSharedSecret(e) {
          let t = ur.computePublicKey(e);
          return n_(c6.getSharedSecret(nw((0, te._)(this, ut)), ny(t), !1));
        }
        static computePublicKey(e, t) {
          let r = ny(e, "key");
          if (32 === r.length) return n_(c6.getPublicKey(r, !!t));
          if (64 === r.length) {
            let e = new Uint8Array(65);
            (e[0] = 4), e.set(r, 1), (r = e);
          }
          return n_(c6.ProjectivePoint.fromHex(r).toRawBytes(t));
        }
        static recoverPublicKey(e, t) {
          nh(32 === nN(e), "invalid digest length", "digest", e);
          let r = ct.from(t),
            n = c6.Signature.fromCompact(nw(nk([r.r, r.s]))),
            a = (n = n.addRecoveryBit(r.yParity)).recoverPublicKey(nw(e));
          return (
            nh(null != a, "invalid signature for digest", "signature", t),
            "0x" + a.toHex(!1)
          );
        }
        static addPoints(e, t, r) {
          let n = c6.ProjectivePoint.fromHex(
              ur.computePublicKey(e).substring(2)
            ),
            a = c6.ProjectivePoint.fromHex(ur.computePublicKey(t).substring(2));
          return "0x" + n.add(a).toHex(!!r);
        }
        constructor(e) {
          (0, tt._)(this, ut, { writable: !0, value: void 0 }),
            nh(32 === nN(e), "invalid private key", "privateKey", "[REDACTED]"),
            (0, tr._)(this, ut, n_(e));
        }
      }
      let un = new Map([
        [8217, "apostrophe"],
        [8260, "fraction slash"],
        [12539, "middle dot"],
      ]);
      function ua(e) {
        var t;
        let r;
        return (
          (t = (function (e) {
            let t = 0;
            function r() {
              return (e[t++] << 8) | e[t++];
            }
            let n = r(),
              a = 1,
              i = [0, 1];
            for (let e = 1; e < n; e++) i.push((a += r()));
            let s = r(),
              o = t;
            t += s;
            let l = 0,
              c = 0;
            function u() {
              return (
                0 == l && ((c = (c << 8) | e[t++]), (l = 8)), (c >> --l) & 1
              );
            }
            let d = 0x80000000 - 1,
              f = 0;
            for (let e = 0; e < 31; e++) f = (f << 1) | u();
            let h = [],
              p = 0,
              x = 0x80000000;
            for (;;) {
              let e = Math.floor(((f - p + 1) * a - 1) / x),
                t = 0,
                r = n;
              for (; r - t > 1; ) {
                let n = (t + r) >>> 1;
                e < i[n] ? (r = n) : (t = n);
              }
              if (0 == t) break;
              h.push(t);
              let s = p + Math.floor((x * i[t]) / a),
                o = p + Math.floor((x * i[t + 1]) / a) - 1;
              for (; ((s ^ o) & 0x40000000) == 0; )
                (f = ((f << 1) & d) | u()),
                  (s = (s << 1) & d),
                  (o = ((o << 1) & d) | 1);
              for (; s & ~o & 0x20000000; )
                (f = (0x40000000 & f) | ((f << 1) & (d >>> 1)) | u()),
                  (s = (s << 1) ^ 0x40000000),
                  (o = ((0x40000000 ^ o) << 1) | 0x40000001);
              (p = s), (x = 1 + o - s);
            }
            let g = n - 4;
            return h.map((t) => {
              switch (t - g) {
                case 3:
                  return g + 65792 + ((e[o++] << 16) | (e[o++] << 8) | e[o++]);
                case 2:
                  return g + 256 + ((e[o++] << 8) | e[o++]);
                case 1:
                  return g + e[o++];
                default:
                  return t - 1;
              }
            });
          })(
            (function (e) {
              let t = [];
              [
                ..."ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
              ].forEach((e, r) => (t[e.charCodeAt(0)] = r));
              let r = e.length,
                n = new Uint8Array((6 * r) >> 3);
              for (let a = 0, i = 0, s = 0, o = 0; a < r; a++)
                (o = (o << 6) | t[e.charCodeAt(a)]),
                  (s += 6) >= 8 && (n[i++] = o >> (s -= 8));
              return n;
            })(e)
          )),
          (r = 0),
          () => t[r++]
        );
      }
      function ui(e) {
        let t =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0,
          r = [];
        for (;;) {
          let n = e(),
            a = e();
          if (!a) break;
          t += n;
          for (let e = 0; e < a; e++) r.push(t + e);
          t += a + 1;
        }
        return r;
      }
      function us(e) {
        return ul(() => {
          let t = ui(e);
          if (t.length) return t;
        });
      }
      function uo(e) {
        let t = [];
        for (;;) {
          let r = e();
          if (0 == r) break;
          t.push(
            (function (e, t) {
              let r = 1 + t(),
                n = t(),
                a = ul(t);
              return uc(a.length, 1 + e, t).flatMap((e, t) => {
                let [i, ...s] = e;
                return Array(a[t])
                  .fill()
                  .map((e, t) => {
                    let a = t * n;
                    return [i + t * r, s.map((e) => e + a)];
                  });
              });
            })(r, e)
          );
        }
        for (;;) {
          var r, n;
          let a = e() - 1;
          if (a < 0) break;
          t.push(
            ((r = a),
            uc(1 + (n = e)(), 1 + r, n).map((e) => [e[0], e.slice(1)]))
          );
        }
        return t.flat();
      }
      function ul(e) {
        let t = [];
        for (;;) {
          let r = e(t.length);
          if (!r) break;
          t.push(r);
        }
        return t;
      }
      function uc(e, t, r) {
        let n = Array(e)
          .fill()
          .map(() => []);
        for (let a = 0; a < t; a++)
          (function (e, t) {
            let r = Array(e);
            for (let a = 0, i = 0; a < e; a++) {
              var n;
              r[a] = i += 1 & (n = t()) ? ~n >> 1 : n >> 1;
            }
            return r;
          })(e, r).forEach((e, t) => n[t].push(e));
        return n;
      }
      function uu(e) {
        return "{".concat(e.toString(16).toUpperCase().padStart(2, "0"), "}");
      }
      function ud(e) {
        let t = e.length;
        if (t < 4096) return String.fromCodePoint(...e);
        let r = [];
        for (let n = 0; n < t; )
          r.push(String.fromCodePoint(...e.slice(n, (n += 4096))));
        return r.join("");
      }
      function uf(e, t) {
        let r = e.length,
          n = r - t.length;
        for (let a = 0; 0 == n && a < r; a++) n = e[a] - t[a];
        return n;
      }
      let uh = 55204;
      function up(e) {
        return (e >> 24) & 255;
      }
      function ux(e) {
        return 0xffffff & e;
      }
      function ug(e) {
        return e >= 44032 && e < uh;
      }
      function ub(e) {
        t ||
          (function () {
            let e = ua(
              "AEUDTAHBCFQATQDRADAAcgAgADQAFAAsABQAHwAOACQADQARAAoAFwAHABIACAAPAAUACwAFAAwABAAQAAMABwAEAAoABQAIAAIACgABAAQAFAALAAIACwABAAIAAQAHAAMAAwAEAAsADAAMAAwACgANAA0AAwAKAAkABAAdAAYAZwDSAdsDJgC0CkMB8xhZAqfoC190UGcThgBurwf7PT09Pb09AjgJum8OjDllxHYUKXAPxzq6tABAxgK8ysUvWAgMPT09PT09PSs6LT2HcgWXWwFLoSMEEEl5RFVMKvO0XQ8ExDdJMnIgsj26PTQyy8FfEQ8AY8IPAGcEbwRwBHEEcgRzBHQEdQR2BHcEeAR6BHsEfAR+BIAEgfndBQoBYgULAWIFDAFiBNcE2ATZBRAFEQUvBdALFAsVDPcNBw13DYcOMA4xDjMB4BllHI0B2grbAMDpHLkQ7QHVAPRNQQFnGRUEg0yEB2uaJF8AJpIBpob5AERSMAKNoAXqaQLUBMCzEiACnwRZEkkVsS7tANAsBG0RuAQLEPABv9HICTUBXigPZwRBApMDOwAamhtaABqEAY8KvKx3LQ4ArAB8UhwEBAVSagD8AEFZADkBIadVj2UMUgx5Il4ANQC9AxIB1BlbEPMAs30CGxlXAhwZKQIECBc6EbsCoxngzv7UzRQA8M0BawL6ZwkN7wABAD33OQRcsgLJCjMCjqUChtw/km+NAsXPAoP2BT84PwURAK0RAvptb6cApQS/OMMey5HJS84UdxpxTPkCogVFITaTOwERAK5pAvkNBOVyA7q3BKlOJSALAgUIBRcEdASpBXqzABXFSWZOawLCOqw//AolCZdvv3dSBkEQGyelEPcMMwG1ATsN7UvYBPEGOwTJH30ZGQ/NlZwIpS3dDO0m4y6hgFoj9SqDBe1L9DzdC01RaA9ZC2UJ4zpjgU4DIQENIosK3Q05CG0Q8wrJaw3lEUUHOQPVSZoApQcBCxEdNRW1JhBirAsJOXcG+xr2C48mrxMpevwF0xohBk0BKRr/AM8u54WwWjFcHE9fBgMLJSPHFKhQIA0lQLd4SBobBxUlqQKRQ3BKh1E2HpMh9jw9DWYuE1F8B/U8BRlPC4E8nkarRQ4R0j6NPUgiSUwsBDV/LC8niwnPD4UMuXxyAVkJIQmxDHETMREXN8UIOQcZLZckJxUIIUaVYJoE958D8xPRAwsFPwlBBxMDtRwtEy4VKQUNgSTXAvM21S6zAo9WgAEXBcsPJR/fEFBH4A7pCJsCZQODJesALRUhABcimwhDYwBfj9hTBS7LCMdqbCN0A2cU52ERcweRDlcHpxwzFb8c4XDIXguGCCijrwlbAXUJmQFfBOMICTVbjKAgQWdTi1gYmyBhQT9d/AIxDGUVn0S9h3gCiw9rEhsBNQFzBzkNAQJ3Ee0RaxCVCOuGBDW1M/g6JQRPIYMgEQonA09szgsnJvkM+GkBoxJiAww0PXfuZ6tgtiQX/QcZMsVBYCHxC5JPzQycGsEYQlQuGeQHvwPzGvMn6kFXBf8DowMTOk0z7gS9C2kIiwk/AEkOoxcH1xhqCnGM0AExiwG3mQNXkYMCb48GNwcLAGcLhwV55QAdAqcIowAFAM8DVwA5Aq0HnQAZAIVBAT0DJy8BIeUCjwOTCDHLAZUvAfMpBBvDDBUA9zduSgLDsQKAamaiBd1YAo4CSTUBTSUEBU5HUQOvceEA2wBLBhPfRwEVq0rLGuNDAd9vKwDHAPsABTUHBUEBzQHzbQC3AV8LMQmis7UBTekpAIMAFWsB1wKJAN0ANQB/8QFTAE0FWfkF0wJPSQERMRgrV2EBuwMfATMBDQB5BsuNpckHHwRtB9MCEBsV4QLvLge1AQMi3xPNQsUCvd5VoWACZIECYkJbTa9bNyACofcCaJgCZgkCn4Q4GwsCZjsCZiYEbgR/A38TA36SOQY5dxc5gjojIwJsHQIyNjgKAm3HAm2u74ozZ0UrAWcA3gDhAEoFB5gMjQD+C8IADbUCdy8CdqI/AnlLQwJ4uh1c20WuRtcCfD8CesgCfQkCfPAFWQUgSABIfWMkAoFtAoAAAoAFAn+uSVhKWxUXSswC0QEC0MxLJwOITwOH5kTFkTIC8qFdAwMDrkvOTC0lA89NTE2vAos/AorYwRsHHUNnBbcCjjcCjlxAl4ECjtkCjlx4UbRTNQpS1FSFApP7ApMMAOkAHFUeVa9V0AYsGymVhjLheGZFOzkCl58C77JYIagAWSUClo8ClnycAKlZrFoJgU0AOwKWtQKWTlxEXNECmcsCmWRcyl0HGQKcmznCOp0CnBYCn5sCnriKAB0PMSoPAp3xAp6SALU9YTRh7wKe0wKgbgGpAp6fHwKeTqVjyGQnJSsCJ68CJn4CoPsCoEwCot0CocQCpi8Cpc4Cp/8AfQKn8mh8aLEAA0lqHGrRAqzjAqyuAq1nAq0CAlcdAlXcArHh1wMfTmyXArK9DQKy6Bds4G1jbUhfAyXNArZcOz9ukAMpRQK4XgK5RxUCuSp3cDZw4QK9GQK72nCWAzIRAr6IcgIDM3ECvhpzInNPAsPLAsMEc4J0SzVFdOADPKcDPJoDPb8CxXwCxkcCxhCJAshpUQLIRALJTwLJLgJknQLd0nh5YXiueSVL0AMYo2cCAmH0GfOVJHsLXpJeuxECz2sCz2wvS1PS8xOfAMatAs9zASnqA04SfksFAtwnAtuKAtJPA1JcA1NfAQEDVYyAiT8AyxbtYEWCHILTgs6DjQLaxwLZ3oQQhEmnPAOGpQAvA2QOhnFZ+QBVAt9lAt64c3cC4i/tFAHzMCcB9JsB8tKHAuvzAulweQLq+QLq5AD5RwG5Au6JAuuclqqXAwLuPwOF4Jh5cOBxoQLzAwBpA44WmZMC9xMDkW4DkocC95gC+dkC+GaaHJqruzebHgOdgwL++gEbADmfHJ+zAwWNA6ZqA6bZANHFAwZqoYiiBQkDDEkCwAA/AwDhQRdTARHzA2sHl2cFAJMtK7evvdsBiZkUfxEEOQH7KQUhDp0JnwCS/SlXxQL3AZ0AtwW5AG8LbUEuFCaNLgFDAYD8AbUmAHUDDgRtACwCFgyhAAAKAj0CagPdA34EkQEgRQUhfAoABQBEABMANhICdwEABdUDa+8KxQIA9wqfJ7+xt+UBkSFBQgHpFH8RNMCJAAQAGwBaAkUChIsABjpTOpSNbQC4Oo860ACNOME63AClAOgAywE6gTo7Ofw5+Tt2iTpbO56JOm85GAFWATMBbAUvNV01njWtNWY1dTW2NcU1gjWRNdI14TWeNa017jX9NbI1wTYCNhE1xjXVNhY2JzXeNe02LjY9Ni41LSE2OjY9Njw2yTcIBJA8VzY4Nt03IDcPNsogN4k3MAoEsDxnNiQ3GTdsOo03IULUQwdC4EMLHA8PCZsobShRVQYA6X8A6bABFCnXAukBowC9BbcAbwNzBL8MDAMMAQgDAAkKCwsLCQoGBAVVBI/DvwDz9b29kaUCb0QtsRTNLt4eGBcSHAMZFhYZEhYEARAEBUEcQRxBHEEcQRxBHEEaQRxBHEFCSTxBPElISUhBNkM2QTYbNklISVmBVIgBFLWZAu0BhQCjBcEAbykBvwGJAaQcEZ0ePCklMAAhMvAIMAL54gC7Bm8EescjzQMpARQpKgDUABavAj626xQAJP0A3etzuf4NNRA7efy2Z9NQrCnC0OSyANz5BBIbJ5IFDR6miIavYS6tprjjmuKebxm5C74Q225X1pkaYYPb6f1DK4k3xMEBb9S2WMjEibTNWhsRJIA+vwNVEiXTE5iXs/wezV66oFLfp9NZGYW+Gk19J2+bCT6Ye2w6LDYdgzKMUabk595eLBCXANz9HUpWbATq9vqXVx9XDg+Pc9Xp4+bsS005SVM/BJBM4687WUuf+Uj9dEi8aDNaPxtpbDxcG1THTImUMZq4UCaaNYpsVqraNyKLJXDYsFZ/5jl7bLRtO88t7P3xZaAxhb5OdPMXqsSkp1WCieG8jXm1U99+blvLlXzPCS+M93VnJCiK+09LfaSaBAVBomyDgJua8dfUzR7ga34IvR2Nvj+A9heJ6lsl1KG4NkI1032Cnff1m1wof2B9oHJK4bi6JkEdSqeNeiuo6QoZZincoc73/TH9SXF8sCE7XyuYyW8WSgbGFCjPV0ihLKhdPs08Tx82fYAkLLc4I2wdl4apY7GU5lHRFzRWJep7Ww3wbeA3qmd59/86P4xuNaqDpygXt6M85glSBHOCGgJDnt+pN9bK7HApMguX6+06RZNjzVmcZJ+wcUrJ9//bpRNxNuKpNl9uFds+S9tdx7LaM5ZkIrPj6nIU9mnbFtVbs9s/uLgl8MVczAwet+iOEzzBlYW7RCMgE6gyNLeq6+1tIx4dpgZnd0DksJS5f+JNDpwwcPNXaaVspq1fbQajOrJgK0ofKtJ1Ne90L6VO4MOl5S886p7u6xo7OLjG8TGL+HU1JXGJgppg4nNbNJ5nlzSpuPYy21JUEcUA94PoFiZfjZue+QnyQ80ekOuZVkxx4g+cvhJfHgNl4hy1/a6+RKcKlar/J29y//EztlbVPHVUeQ1zX86eQVAjR/M3dA9w4W8LfaXp4EgM85wOWasli837PzVMOnsLzR+k3o75/lRPAJSE1xAKQzEi5v10ke+VBvRt1cwQRMd+U5mLCTGVd6XiZtgBG5cDi0w22GKcVNvHiu5LQbZEDVtz0onn7k5+heuKXVsZtSzilkLRAUmjMXEMB3J9YC50XBxPiz53SC+EhnPl9WsKCv92SM/OFFIMJZYfl0WW8tIO3UxYcwdMAj7FSmgrsZ2aAZO03BOhP1bNNZItyXYQFTpC3SG1VuPDqH9GkiCDmE+JwxyIVSO5siDErAOpEXFgjy6PQtOVDj+s6e1r8heWVvmZnTciuf4EiNZzCAd7SOMhXERIOlsHIMG399i9aLTy3m2hRLZjJVDNLS53iGIK11dPqQt0zBDyg6qc7YqkDm2M5Ve6dCWCaCbTXX2rToaIgz6+zh4lYUi/+6nqcFMAkQJKHYLK0wYk5N9szV6xihDbDDFr45lN1K4aCXBq/FitPSud9gLt5ZVn+ZqGX7cwm2z5EGMgfFpIFyhGGuDPmso6TItTMwny+7uPnLCf4W6goFQFV0oQSsc9VfMmVLcLr6ZetDZbaSFTLqnSO/bIPjA3/zAUoqgGFAEQS4IhuMzEp2I3jJzbzkk/IEmyax+rhZTwd6f+CGtwPixu8IvzACquPWPREu9ZvGkUzpRwvRRuaNN6cr0W1wWits9ICdYJ7ltbgMiSL3sTPeufgNcVqMVWFkCPDH4jG2jA0XcVgQj62Cb29v9f/z/+2KbYvIv/zzjpQAPkliaVDzNrW57TZ/ZOyZD0nlfMmAIBIAGAI0D3k/mdN4xr9v85ZbZbbqfH2jGd5hUqNZWwl5SPfoGmfElmazUIeNL1j/mkF7VNAzTq4jNt8JoQ11NQOcmhprXoxSxfRGJ9LDEOAQ+dmxAQH90iti9e2u/MoeuaGcDTHoC+xsmEeWmxEKefQuIzHbpw5Tc5cEocboAD09oipWQhtTO1wivf/O+DRe2rpl/E9wlrzBorjJsOeG1B/XPW4EaJEFdNlECEZga5ZoGRHXgYouGRuVkm8tDESiEyFNo+3s5M5puSdTyUL2llnINVHEt91XUNW4ewdMgJ4boJfEyt/iY5WXqbA+A2Fkt5Z0lutiWhe9nZIyIUjyXDC3UsaG1t+eNx6z4W/OYoTB7A6x+dNSTOi9AInctbESqm5gvOLww7OWXPrmHwVZasrl4eD113pm+JtT7JVOvnCXqdzzdTRHgJ0PiGTFYW5Gvt9R9LD6Lzfs0v/TZZHSmyVNq7viIHE6DBK7Qp07Iz55EM8SYtQvZf/obBniTWi5C2/ovHfw4VndkE5XYdjOhCMRjDeOEfXeN/CwfGduiUIfsoFeUxXeQXba7c7972XNv8w+dTjjUM0QeNAReW+J014dKAD/McQYXT7c0GQPIkn3Ll6R7gGjuiQoZD0TEeEqQpKoZ15g/0OPQI17QiSv9AUROa/V/TQN3dvLArec3RrsYlvBm1b8LWzltdugsC50lNKYLEp2a+ZZYqPejULRlOJh5zj/LVMyTDvwKhMxxwuDkxJ1QpoNI0OTWLom4Z71SNzI9TV1iXJrIu9Wcnd+MCaAw8o1jSXd94YU/1gnkrC9BUEOtQvEIQ7g0i6h+KL2JKk8Ydl7HruvgWMSAmNe+LshGhV4qnWHhO9/RIPQzY1tHRj2VqOyNsDpK0cww+56AdDC4gsWwY0XxoucIWIqs/GcwnWqlaT0KPr8mbK5U94/301i1WLt4YINTVvCFBrFZbIbY8eycOdeJ2teD5IfPLCRg7jjcFTwlMFNl9zdh/o3E/hHPwj7BWg0MU09pPrBLbrCgm54A6H+I6v27+jL5gkjWg/iYdks9jbfVP5y/n0dlgWEMlKasl7JvFZd56LfybW1eeaVO0gxTfXZwD8G4SI116yx7UKVRgui6Ya1YpixqXeNLc8IxtAwCU5IhwQgn+NqHnRaDv61CxKhOq4pOX7M6pkA+Pmpd4j1vn6ACUALoLLc4vpXci8VidLxzm7qFBe7s+quuJs6ETYmnpgS3LwSZxPIltgBDXz8M1k/W2ySNv2f9/NPhxLGK2D21dkHeSGmenRT3Yqcdl0m/h3OYr8V+lXNYGf8aCCpd4bWjE4QIPj7vUKN4Nrfs7ML6Y2OyS830JCnofg/k7lpFpt4SqZc5HGg1HCOrHvOdC8bP6FGDbE/VV0mX4IakzbdS/op+Kt3G24/8QbBV7y86sGSQ/vZzU8FXs7u6jIvwchsEP2BpIhW3G8uWNwa3HmjfH/ZjhhCWvluAcF+nMf14ClKg5hGgtPLJ98ueNAkc5Hs2WZlk2QHvfreCK1CCGO6nMZVSb99VM/ajr8WHTte9JSmkXq/i/U943HEbdzW6Re/S88dKgg8pGOLlAeNiqrcLkUR3/aClFpMXcOUP3rmETcWSfMXZE3TUOi8i+fqRnTYLflVx/Vb/6GJ7eIRZUA6k3RYR3iFSK9c4iDdNwJuZL2FKz/IK5VimcNWEqdXjSoxSgmF0UPlDoUlNrPcM7ftmA8Y9gKiqKEHuWN+AZRIwtVSxye2Kf8rM3lhJ5XcBXU9n4v0Oy1RU2M+4qM8AQPVwse8ErNSob5oFPWxuqZnVzo1qB/IBxkM3EVUKFUUlO3e51259GgNcJbCmlvrdjtoTW7rChm1wyCKzpCTwozUUEOIcWLneRLgMXh+SjGSFkAllzbGS5HK7LlfCMRNRDSvbQPjcXaenNYxCvu2Qyznz6StuxVj66SgI0T8B6/sfHAJYZaZ78thjOSIFumNWLQbeZixDCCC+v0YBtkxiBB3jefHqZ/dFHU+crbj6OvS1x/JDD7vlm7zOVPwpUC01nhxZuY/63E7g"
            );
            for (let [i, s] of ((t = new Map(
              us(e).flatMap((e, t) => e.map((e) => [e, (t + 1) << 24]))
            )),
            (r = new Set(ui(e))),
            (n = new Map()),
            (a = new Map()),
            uo(e))) {
              if (!r.has(i) && 2 == s.length) {
                let [e, t] = s,
                  r = a.get(e);
                r || ((r = new Map()), a.set(e, r)), r.set(t, i);
              }
              n.set(i, s.reverse());
            }
          })();
        let i = [],
          s = [],
          o = !1;
        function l(e) {
          let r = t.get(e);
          r && ((o = !0), (e |= r)), i.push(e);
        }
        for (let t of e)
          for (;;) {
            if (t < 128) i.push(t);
            else if (ug(t)) {
              let e = t - 44032,
                r = (e / 588) | 0,
                n = ((e % 588) / 28) | 0,
                a = e % 28;
              l(4352 + r), l(4449 + n), a > 0 && l(4519 + a);
            } else {
              let e = n.get(t);
              e ? s.push(...e) : l(t);
            }
            if (!s.length) break;
            t = s.pop();
          }
        if (o && i.length > 1) {
          let e = up(i[0]);
          for (let t = 1; t < i.length; t++) {
            let r = up(i[t]);
            if (0 == r || e <= r) {
              e = r;
              continue;
            }
            let n = t - 1;
            for (;;) {
              let t = i[n + 1];
              if (((i[n + 1] = i[n]), (i[n] = t), !n || (e = up(i[--n])) <= r))
                break;
            }
            e = up(i[t]);
          }
        }
        return i;
      }
      function um(e) {
        return (function (e) {
          let t = [],
            r = [],
            n = -1,
            i = 0;
          for (let s of e) {
            let e = up(s),
              o = ux(s);
            if (-1 == n) 0 == e ? (n = o) : t.push(o);
            else if (i > 0 && i >= e)
              0 == e ? (t.push(n, ...r), (r.length = 0), (n = o)) : r.push(o),
                (i = e);
            else {
              let s = (function (e, t) {
                if (e >= 4352 && e < 4371 && t >= 4449 && t < 4470)
                  return 44032 + (e - 4352) * 588 + (t - 4449) * 28;
                {
                  if (ug(e) && t > 4519 && t < 4547 && (e - 44032) % 28 == 0)
                    return e + (t - 4519);
                  let r = a.get(e);
                  return r && (r = r.get(t)) ? r : -1;
                }
              })(n, o);
              s >= 0
                ? (n = s)
                : 0 == i && 0 == e
                ? (t.push(n), (n = o))
                : (r.push(o), (i = e));
            }
          }
          return n >= 0 && t.push(n, ...r), t;
        })(ub(e));
      }
      let uy = (e) => Array.from(e);
      function uw(e, t) {
        return e.P.has(t) || e.Q.has(t);
      }
      class uv extends Array {
        get is_emoji() {
          return !0;
        }
      }
      function uA() {
        let e, t;
        if (i) return;
        let r = ua(
            ""
          ),
          n = () => ui(r),
          a = () => new Set(n()),
          g = (e, t) => t.forEach((t) => e.add(t));
        (i = new Map(uo(r))),
          (s = a()),
          (o = n()),
          (l = new Set(n().map((e) => o[e]))),
          (o = new Set(o)),
          (c = a()),
          a();
        let b = us(r),
          m = r(),
          y = () => {
            let e = new Set();
            return n().forEach((t) => g(e, b[t])), g(e, n()), e;
          };
        (u = ul((e) => {
          let t = ul(r).map((e) => e + 96);
          if (t.length) {
            let n = e >= m;
            (t[0] -= 32), (t = ud(t)), n && (t = "Restricted[".concat(t, "]"));
            let a = y();
            return { N: t, P: a, Q: y(), M: !r(), R: n };
          }
        })),
          (d = a()),
          (f = new Map());
        let w = n()
          .concat(uy(d))
          .sort((e, t) => e - t);
        for (let { V: e, M: t } of (w.forEach((e, t) => {
          let n = r(),
            a = (w[t] = n ? w[t - n] : { V: [], M: new Map() });
          a.V.push(e), d.has(e) || f.set(e, a);
        }),
        new Set(f.values()))) {
          let r = [];
          for (let t of e) {
            let e = u.filter((e) => uw(e, t)),
              n = r.find((t) => {
                let { G: r } = t;
                return e.some((e) => r.has(e));
              });
            n || ((n = { G: new Set(), V: [] }), r.push(n)),
              n.V.push(t),
              g(n.G, e);
          }
          let n = r.flatMap((e) => uy(e.G));
          for (let { G: e, V: a } of r) {
            let r = new Set(n.filter((t) => !e.has(t)));
            for (let e of a) t.set(e, r);
          }
        }
        h = new Set();
        let v = new Set(),
          A = (e) => (h.has(e) ? v.add(e) : h.add(e));
        for (let e of u) {
          for (let t of e.P) A(t);
          for (let t of e.Q) A(t);
        }
        for (let e of h) f.has(e) || v.has(e) || f.set(e, 1);
        for (let n of (g(h, ub(h).map(ux)),
        (p = ((e = []),
        (t = ui(r)),
        (function t(r, n, a) {
          let { S: i, B: s } = r;
          if (!(4 & i) || a !== n[n.length - 1])
            for (let r of (2 & i && (a = n[n.length - 1]),
            1 & i && e.push(n),
            s))
              for (let e of r.Q) t(r, [...n, e], a);
        })(
          (function e(n) {
            return {
              S: r(),
              B: ul(() => {
                let n = ui(r).map((e) => t[e]);
                if (n.length) return e(n);
              }),
              Q: n,
            };
          })([]),
          []
        ),
        e)
          .map((e) => uv.from(e))
          .sort(uf)),
        (x = new Map()),
        p)) {
          let e = [x];
          for (let t of n) {
            let r = e.map((e) => {
              let r = e.get(t);
              return r || ((r = new Map()), e.set(t, r)), r;
            });
            65039 === t ? e.push(...r) : (e = r);
          }
          for (let t of e) t.V = n;
        }
      }
      function uE(e) {
        return (uN(e) ? "" : "".concat(u_(uk([e])), " ")) + uu(e);
      }
      function u_(e) {
        return '"'.concat(e, '"‎');
      }
      function uk(e) {
        var t;
        let r =
            arguments.length > 1 && void 0 !== arguments[1]
              ? arguments[1]
              : 1 / 0,
          n =
            arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : uu,
          a = [];
        (t = e[0]),
          uA(),
          o.has(t) && a.push("◌"),
          e.length > r &&
            ((r >>= 1), (e = [...e.slice(0, r), 8230, ...e.slice(-r)]));
        let i = 0,
          s = e.length;
        for (let t = 0; t < s; t++) {
          let r = e[t];
          uN(r) && (a.push(ud(e.slice(i, t))), a.push(n(r)), (i = t + 1));
        }
        return a.push(ud(e.slice(i, s))), a.join("");
      }
      function uN(e) {
        return uA(), c.has(e);
      }
      function uP(e) {
        return Error("disallowed character: ".concat(uE(e)));
      }
      function uT(e, t) {
        let r = uE(t),
          n = u.find((e) => e.P.has(t));
        return (
          n && (r = "".concat(n.N, " ").concat(r)),
          Error("illegal mixture: ".concat(e.N, " + ").concat(r))
        );
      }
      function uS(e) {
        return Error("illegal placement: ".concat(e));
      }
      function uO(e) {
        return e.filter((e) => 65039 != e);
      }
      let uR = new Uint8Array(32);
      function uC(e) {
        return (
          nh(0 !== e.length, "invalid ENS name; empty component", "comp", e), e
        );
      }
      function uI(e) {
        let t = nU(uB(e)),
          r = [];
        if (0 === e.length) return r;
        let n = 0;
        for (let e = 0; e < t.length; e++)
          46 === t[e] && (r.push(uC(t.slice(n, e))), (n = e + 1));
        return (
          nh(n < t.length, "invalid ENS name; empty component", "name", e),
          r.push(uC(t.slice(n))),
          r
        );
      }
      function uB(e) {
        try {
          var t;
          if (0 === e.length) throw Error("empty label");
          return (t = (function (e, t, r) {
            if (!e) return [];
            uA();
            let n = 0;
            return e.split(".").map((e) => {
              let a = (function (e) {
                  let t = [];
                  for (let r = 0, n = e.length; r < n; ) {
                    let n = e.codePointAt(r);
                    (r += n < 65536 ? 1 : 2), t.push(n);
                  }
                  return t;
                })(e),
                c = { input: a, offset: n };
              n += a.length + 1;
              try {
                let e,
                  n = (c.tokens = (function (e, t, r) {
                    let n = [],
                      a = [];
                    for (e = e.slice().reverse(); e.length; ) {
                      let o = (function (e, t) {
                        let r,
                          n = x,
                          a = e.length;
                        for (; a && (n = n.get(e[--a])); ) {
                          let { V: t } = n;
                          t && ((r = t), (e.length = a));
                        }
                        return r;
                      })(e);
                      if (o) a.length && (n.push(t(a)), (a = [])), n.push(r(o));
                      else {
                        let t = e.pop();
                        if (h.has(t)) a.push(t);
                        else {
                          let e = i.get(t);
                          if (e) a.push(...e);
                          else if (!s.has(t)) throw uP(t);
                        }
                      }
                    }
                    return a.length && n.push(t(a)), n;
                  })(a, t, r)),
                  d = n.length;
                if (!d) throw Error("empty label");
                let p = (c.output = n.flat());
                for (let e = p.lastIndexOf(95); e > 0; )
                  if (95 !== p[--e])
                    throw Error("underscore allowed only at start");
                if (
                  !(c.emoji = d > 1 || n[0].is_emoji) &&
                  p.every((e) => e < 128)
                ) {
                  if (p.length >= 4 && 45 == p[2] && 45 == p[3])
                    throw Error(
                      'invalid label extension: "'.concat(
                        ud(p.slice(0, 4)),
                        '"'
                      )
                    );
                  e = "ASCII";
                } else {
                  let t = n.flatMap((e) => (e.is_emoji ? [] : e));
                  if (t.length) {
                    if (o.has(p[0])) throw uS("leading combining mark");
                    for (let e = 1; e < d; e++) {
                      let t = n[e];
                      if (!t.is_emoji && o.has(t[0]))
                        throw uS(
                          'emoji + combining mark: "'
                            .concat(ud(n[e - 1]), " + ")
                            .concat(uk([t[0]]), '"')
                        );
                    }
                    !(function (e) {
                      let t = e[0],
                        r = un.get(t);
                      if (r) throw uS("leading ".concat(r));
                      let n = e.length,
                        a = -1;
                      for (let i = 1; i < n; i++) {
                        t = e[i];
                        let n = un.get(t);
                        if (n) {
                          if (a == i) throw uS("".concat(r, " + ").concat(n));
                          (a = i + 1), (r = n);
                        }
                      }
                      if (a == n) throw uS("trailing ".concat(r));
                    })(p);
                    let r = uy(new Set(t)),
                      [a] = (function (e) {
                        let t = u;
                        for (let r of e) {
                          let e = t.filter((e) => uw(e, r));
                          if (!e.length)
                            if (u.some((e) => uw(e, r))) throw uT(t[0], r);
                            else throw uP(r);
                          if (((t = e), 1 == e.length)) break;
                        }
                        return t;
                      })(r);
                    (function (e, t) {
                      for (let r of t) if (!uw(e, r)) throw uT(e, r);
                      if (e.M) {
                        let e = ub(t).map(ux);
                        for (let t = 1, r = e.length; t < r; t++)
                          if (l.has(e[t])) {
                            let n = t + 1;
                            for (let a; n < r && l.has((a = e[n])); n++)
                              for (let r = t; r < n; r++)
                                if (e[r] == a)
                                  throw Error(
                                    "duplicate non-spacing marks: ".concat(
                                      uE(a)
                                    )
                                  );
                            if (n - t > 4)
                              throw Error(
                                "excessive non-spacing marks: "
                                  .concat(u_(uk(e.slice(t - 1, n))), " (")
                                  .concat(n - t, "/")
                                  .concat(4, ")")
                              );
                            t = n;
                          }
                      }
                    })(a, t),
                      (function (e, t) {
                        let r,
                          n = [];
                        for (let e of t) {
                          let t = f.get(e);
                          if (1 === t) return;
                          if (t) {
                            let n = t.M.get(e);
                            if (
                              !(r = r ? r.filter((e) => n.has(e)) : uy(n))
                                .length
                            )
                              return;
                          } else n.push(e);
                        }
                        if (r) {
                          for (let t of r)
                            if (n.every((e) => uw(t, e)))
                              throw Error(
                                "whole-script confusable: "
                                  .concat(e.N, "/")
                                  .concat(t.N)
                              );
                        }
                      })(a, r),
                      (e = a.N);
                  } else e = "Emoji";
                }
                c.type = e;
              } catch (e) {
                c.error = e;
              }
              return c;
            });
          })(e, um, uO))
            .map((e) => {
              let { input: r, error: n, output: a } = e;
              if (n) {
                let e = n.message;
                throw Error(
                  1 == t.length
                    ? e
                    : "Invalid label ".concat(u_(uk(r, 63)), ": ").concat(e)
                );
              }
              return ud(a);
            })
            .join(".");
        } catch (t) {
          nh(!1, "invalid ENS name (".concat(t.message, ")"), "name", e);
        }
      }
      function uU(e) {
        try {
          return 0 !== uI(e).length;
        } catch (e) {}
        return !1;
      }
      function uM(e) {
        nh("string" == typeof e, "invalid ENS name; not a string", "name", e),
          nh(e.length, "invalid ENS name (empty label)", "name", e);
        let t = uR,
          r = uI(e);
        for (; r.length; ) t = a1(nk([t, a1(r.pop())]));
        return n_(t);
      }
      function uj(e, t) {
        let r = null != t ? t : 63;
        return (
          nh(r <= 255, "DNS encoded label cannot exceed 255", "length", r),
          n_(
            nk(
              uI(e).map((t) => {
                nh(
                  t.length <= r,
                  "label "
                    .concat(JSON.stringify(e), " exceeds ")
                    .concat(r, " bytes"),
                  "name",
                  e
                );
                let n = new Uint8Array(t.length + 1);
                return n.set(t, 1), (n[0] = n.length - 1), n;
              })
            )
          ) + "00"
        );
      }
      function uF(e) {
        return a9(
          a1(
            "0x" +
              ("string" == typeof e
                ? ur.computePublicKey(e, !1)
                : e.publicKey
              ).substring(4)
          ).substring(26)
        );
      }
      function uD(e, t) {
        return uF(ur.recoverPublicKey(e, t));
      }
      function uL(e) {
        return (
          nh(
            "string" == typeof e.address,
            "invalid address for hashAuthorization",
            "auth.address",
            e
          ),
          a1(
            nk([
              "0x05",
              sD([
                null != e.chainId ? nX(e.chainId) : "0x",
                a9(e.address),
                null != e.nonce ? nX(e.nonce) : "0x",
              ]),
            ])
          )
        );
      }
      function uz(e, t) {
        return uD(uL(e), t);
      }
      function uG(e) {
        return (
          "string" == typeof e && (e = nU(e)),
          a1(nk([nU(s0), nU(String(e.length)), e]))
        );
      }
      function uW(e, t) {
        return uD(uG(e), t);
      }
      uR.fill(0);
      let uV = RegExp("^bytes([0-9]+)$"),
        uH = RegExp("^(u?int)([0-9]*)$"),
        uK = RegExp("^(.*)\\[([0-9]*)\\]$");
      function uq(e, t) {
        nh(
          e.length === t.length,
          "wrong number of values; expected ${ types.length }",
          "values",
          t
        );
        let r = [];
        return (
          e.forEach(function (e, n) {
            r.push(
              (function e(t, r, n) {
                switch (t) {
                  case "address":
                    if (n) return ny(nO(r, 32));
                    return ny(a9(r));
                  case "string":
                    return nU(r);
                  case "bytes":
                    return ny(r);
                  case "bool":
                    if (((r = r ? "0x01" : "0x00"), n)) return ny(nO(r, 32));
                    return ny(r);
                }
                let a = t.match(uH);
                if (a) {
                  let e = "int" === a[1],
                    i = parseInt(a[2] || "256");
                  return (
                    nh(
                      (!a[2] || a[2] === String(i)) &&
                        i % 8 == 0 &&
                        0 !== i &&
                        i <= 256,
                      "invalid number type",
                      "type",
                      t
                    ),
                    n && (i = 256),
                    e && (r = nW(r, i)),
                    ny(nO(nX(r), i / 8))
                  );
                }
                if ((a = t.match(uV))) {
                  let e = parseInt(a[1]);
                  return (nh(
                    String(e) === a[1] && 0 !== e && e <= 32,
                    "invalid bytes type",
                    "type",
                    t
                  ),
                  nh(nN(r) === e, "invalid value for ".concat(t), "value", r),
                  n)
                    ? ny(nR(r, 32))
                    : r;
                }
                if ((a = t.match(uK)) && Array.isArray(r)) {
                  let n = a[1];
                  nh(
                    parseInt(a[2] || String(r.length)) === r.length,
                    "invalid array length for ".concat(t),
                    "value",
                    r
                  );
                  let i = [];
                  return (
                    r.forEach(function (t) {
                      i.push(e(n, t, !0));
                    }),
                    ny(nk(i))
                  );
                }
                nh(!1, "invalid type", "type", t);
              })(e, t[n])
            );
          }),
          n_(nk(r))
        );
      }
      function uQ(e, t) {
        return a1(uq(e, t));
      }
      function uJ(e, t) {
        return lC(uq(e, t));
      }
      let uZ = new Uint8Array(32);
      uZ.fill(0);
      let uY = BigInt(-1),
        uX = BigInt(0),
        u$ = BigInt(1),
        u0 = BigInt(
          "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
        ),
        u1 = nY(u$, 32),
        u2 = nY(uX, 32),
        u3 = {
          name: "string",
          version: "string",
          chainId: "uint256",
          verifyingContract: "address",
          salt: "bytes32",
        },
        u4 = ["name", "version", "chainId", "verifyingContract", "salt"];
      function u8(e) {
        return function (t) {
          return (
            nh(
              "string" == typeof t,
              "invalid domain value for ".concat(JSON.stringify(e)),
              "domain.".concat(e),
              t
            ),
            t
          );
        };
      }
      let u5 = {
        name: u8("name"),
        version: u8("version"),
        chainId: function (e) {
          let t = nH(e, "domain.chainId");
          return (nh(t >= 0, "invalid chain ID", "domain.chainId", e),
          Number.isSafeInteger(t))
            ? Number(t)
            : n$(t);
        },
        verifyingContract: function (e) {
          try {
            return a9(e).toLowerCase();
          } catch (e) {}
          nh(
            !1,
            'invalid domain value "verifyingContract"',
            "domain.verifyingContract",
            e
          );
        },
        salt: function (e) {
          let t = ny(e, "domain.salt");
          return (
            nh(
              32 === t.length,
              'invalid domain value "salt"',
              "domain.salt",
              e
            ),
            n_(t)
          );
        },
      };
      function u6(e) {
        {
          let t = e.match(/^(u?)int(\d+)$/);
          if (t) {
            let r = "" === t[1],
              n = parseInt(t[2]);
            nh(
              n % 8 == 0 && 0 !== n && n <= 256 && t[2] === String(n),
              "invalid numeric width",
              "type",
              e
            );
            let a = nV(u0, r ? n - 1 : n),
              i = r ? (a + u$) * uY : uX;
            return function (t) {
              let n = nH(t, "value");
              return (
                nh(
                  n >= i && n <= a,
                  "value out-of-bounds for ".concat(e),
                  "value",
                  n
                ),
                nY(r ? nW(n, 256) : n, 32)
              );
            };
          }
        }
        {
          let t = e.match(/^bytes(\d+)$/);
          if (t) {
            let r = parseInt(t[1]);
            return (
              nh(
                0 !== r && r <= 32 && t[1] === String(r),
                "invalid bytes width",
                "type",
                e
              ),
              function (t) {
                nh(
                  ny(t).length === r,
                  "invalid length for ".concat(e),
                  "value",
                  t
                );
                let n = ny(t),
                  a = n.length % 32;
                return a ? nk([n, uZ.slice(a)]) : n_(n);
              }
            );
          }
        }
        switch (e) {
          case "address":
            return function (e) {
              return nO(a9(e), 32);
            };
          case "bool":
            return function (e) {
              return e ? u1 : u2;
            };
          case "bytes":
            return function (e) {
              return a1(e);
            };
          case "string":
            return function (e) {
              return iN(e);
            };
        }
        return null;
      }
      function u9(e, t) {
        return "".concat(e, "(").concat(
          t
            .map((e) => {
              let { name: t, type: r } = e;
              return r + " " + t;
            })
            .join(","),
          ")"
        );
      }
      function u7(e) {
        let t = e.match(/^([^\x5b]*)((\x5b\d*\x5d)*)(\x5b(\d*)\x5d)$/);
        return t
          ? {
              base: t[1],
              index: t[2] + t[4],
              array: {
                base: t[1],
                prefix: t[1] + t[2],
                count: t[5] ? parseInt(t[5]) : -1,
              },
            }
          : { base: e };
      }
      var de = new WeakMap(),
        dt = new WeakMap(),
        dr = new WeakMap(),
        dn = new WeakSet();
      class da {
        get types() {
          return JSON.parse((0, te._)(this, de));
        }
        getEncoder(e) {
          let t = (0, te._)(this, dr).get(e);
          return (
            t ||
              ((t = (0, tn._)(this, dn, di).call(this, e)),
              (0, te._)(this, dr).set(e, t)),
            t
          );
        }
        encodeType(e) {
          let t = (0, te._)(this, dt).get(e);
          return (
            nh(t, "unknown type: ".concat(JSON.stringify(e)), "name", e), t
          );
        }
        encodeData(e, t) {
          return this.getEncoder(e)(t);
        }
        hashStruct(e, t) {
          return a1(this.encodeData(e, t));
        }
        encode(e) {
          return this.encodeData(this.primaryType, e);
        }
        hash(e) {
          return this.hashStruct(this.primaryType, e);
        }
        _visit(e, t, r) {
          if (u6(e)) return r(e, t);
          let n = u7(e).array;
          if (n)
            return (
              nh(
                -1 === n.count || n.count === t.length,
                "array length mismatch; expected length ".concat(n.count),
                "value",
                t
              ),
              t.map((e) => this._visit(n.prefix, e, r))
            );
          let a = this.types[e];
          if (a)
            return a.reduce((e, n) => {
              let { name: a, type: i } = n;
              return (e[a] = this._visit(i, t[a], r)), e;
            }, {});
          nh(!1, "unknown type: ".concat(e), "type", e);
        }
        visit(e, t) {
          return this._visit(this.primaryType, e, t);
        }
        static from(e) {
          return new da(e);
        }
        static getPrimaryType(e) {
          return da.from(e).primaryType;
        }
        static hashStruct(e, t, r) {
          return da.from(t).hashStruct(e, r);
        }
        static hashDomain(e) {
          let t = [];
          for (let r in e) {
            if (null == e[r]) continue;
            let n = u3[r];
            nh(
              n,
              "invalid typed-data domain key: ".concat(JSON.stringify(r)),
              "domain",
              e
            ),
              t.push({ name: r, type: n });
          }
          return (
            t.sort((e, t) => u4.indexOf(e.name) - u4.indexOf(t.name)),
            da.hashStruct("EIP712Domain", { EIP712Domain: t }, e)
          );
        }
        static encode(e, t, r) {
          return nk(["0x1901", da.hashDomain(e), da.from(t).hash(r)]);
        }
        static hash(e, t, r) {
          return a1(da.encode(e, t, r));
        }
        static async resolveNames(e, t, r, n) {
          for (let t in (e = Object.assign({}, e))) null == e[t] && delete e[t];
          let a = {};
          e.verifyingContract &&
            !nv(e.verifyingContract, 20) &&
            (a[e.verifyingContract] = "0x");
          let i = da.from(t);
          for (let e in (i.visit(
            r,
            (e, t) => ("address" !== e || nv(t, 20) || (a[t] = "0x"), t)
          ),
          a))
            a[e] = await n(e);
          return (
            e.verifyingContract &&
              a[e.verifyingContract] &&
              (e.verifyingContract = a[e.verifyingContract]),
            (r = i.visit(r, (e, t) => ("address" === e && a[t] ? a[t] : t))),
            { domain: e, value: r }
          );
        }
        static getPayload(e, t, r) {
          da.hashDomain(e);
          let n = {},
            a = [];
          u4.forEach((t) => {
            let r = e[t];
            null != r && ((n[t] = u5[t](r)), a.push({ name: t, type: u3[t] }));
          });
          let i = da.from(t),
            s = Object.assign({}, (t = i.types));
          return (
            nh(
              null == s.EIP712Domain,
              "types must not contain EIP712Domain type",
              "types.EIP712Domain",
              t
            ),
            (s.EIP712Domain = a),
            i.encode(r),
            {
              types: s,
              domain: n,
              primaryType: i.primaryType,
              message: i.visit(r, (e, t) => {
                if (e.match(/^bytes(\d*)/)) return n_(ny(t));
                if (e.match(/^u?int/)) return nH(t).toString();
                switch (e) {
                  case "address":
                    return t.toLowerCase();
                  case "bool":
                    return !!t;
                  case "string":
                    return (
                      nh("string" == typeof t, "invalid string", "value", t), t
                    );
                }
                nh(!1, "unsupported type", "type", e);
              }),
            }
          );
        }
        constructor(e) {
          (0, ta._)(this, dn),
            (0, eU._)(this, "primaryType", void 0),
            (0, tt._)(this, de, { writable: !0, value: void 0 }),
            (0, tt._)(this, dt, { writable: !0, value: void 0 }),
            (0, tt._)(this, dr, { writable: !0, value: void 0 }),
            (0, tr._)(this, dt, new Map()),
            (0, tr._)(this, dr, new Map());
          let t = new Map(),
            r = new Map(),
            n = new Map(),
            a = {};
          for (let i in (Object.keys(e).forEach((i) => {
            (a[i] = e[i].map((t) => {
              let { name: r, type: n } = t,
                { base: a, index: i } = u7(n);
              return (
                "int" !== a || e.int || (a = "int256"),
                "uint" !== a || e.uint || (a = "uint256"),
                { name: r, type: a + (i || "") }
              );
            })),
              t.set(i, new Set()),
              r.set(i, []),
              n.set(i, new Set());
          }),
          (0, tr._)(this, de, JSON.stringify(a)),
          a)) {
            let n = new Set();
            for (let s of a[i]) {
              nh(
                !n.has(s.name),
                "duplicate variable name "
                  .concat(JSON.stringify(s.name), " in ")
                  .concat(JSON.stringify(i)),
                "types",
                e
              ),
                n.add(s.name);
              let a = u7(s.type).base;
              nh(
                a !== i,
                "circular type reference to ".concat(JSON.stringify(a)),
                "types",
                e
              ),
                u6(a) ||
                  (nh(
                    r.has(a),
                    "unknown type ".concat(JSON.stringify(a)),
                    "types",
                    e
                  ),
                  r.get(a).push(i),
                  t.get(i).add(a));
            }
          }
          let i = Array.from(r.keys()).filter((e) => 0 === r.get(e).length);
          for (let [s, o] of (nh(
            0 !== i.length,
            "missing primary type",
            "types",
            e
          ),
          nh(
            1 === i.length,
            "ambiguous primary types or unused types: ".concat(
              i.map((e) => JSON.stringify(e)).join(", ")
            ),
            "types",
            e
          ),
          no(this, { primaryType: i[0] }),
          !(function a(i, s) {
            for (let o of (nh(
              !s.has(i),
              "circular type reference to ".concat(JSON.stringify(i)),
              "types",
              e
            ),
            s.add(i),
            t.get(i)))
              if (r.has(o)) for (let e of (a(o, s), s)) n.get(e).add(o);
            s.delete(i);
          })(this.primaryType, new Set()),
          n)) {
            let e = Array.from(o);
            e.sort(),
              (0, te._)(this, dt).set(
                s,
                u9(s, a[s]) + e.map((e) => u9(e, a[e])).join("")
              );
          }
        }
      }
      function di(e) {
        {
          let t = u6(e);
          if (t) return t;
        }
        let t = u7(e).array;
        if (t) {
          let e = t.prefix,
            r = this.getEncoder(e);
          return (n) => {
            nh(
              -1 === t.count || t.count === n.length,
              "array length mismatch; expected length ".concat(t.count),
              "value",
              n
            );
            let a = n.map(r);
            return (0, te._)(this, dt).has(e) && (a = a.map(a1)), a1(nk(a));
          };
        }
        let r = this.types[e];
        if (r) {
          let t = iN((0, te._)(this, dt).get(e));
          return (e) => {
            let n = r.map((t) => {
              let { name: r, type: n } = t,
                a = this.getEncoder(n)(e[r]);
              return (0, te._)(this, dt).has(n) ? a1(a) : a;
            });
            return n.unshift(t), nk(n);
          };
        }
        nh(!1, "unknown type: ".concat(e), "type", e);
      }
      function ds(e, t, r, n) {
        return uD(da.hash(e, t, r), n);
      }
      function dl(e) {
        let t = new Uint8Array((e = atob(e)).length);
        for (let r = 0; r < e.length; r++) t[r] = e.charCodeAt(r);
        return ny(t);
      }
      function dc(e) {
        let t = ny(e),
          r = "";
        for (let e = 0; e < t.length; e++) r += String.fromCharCode(t[e]);
        return btoa(r);
      }
      function du(e) {
        return async function (t, r) {
          let n;
          nf(
            null == r || !r.cancelled,
            "request cancelled before sending",
            "CANCELLED"
          );
          let a = t.url.split(":")[0].toLowerCase();
          nf(
            "http" === a || "https" === a,
            "unsupported protocol ".concat(a),
            "UNSUPPORTED_OPERATION",
            { info: { protocol: a }, operation: "request" }
          ),
            nf(
              "https" === a || !t.credentials || t.allowInsecureAuthentication,
              "insecure authorized connections unsupported",
              "UNSUPPORTED_OPERATION",
              { operation: "request" }
            );
          let i = null,
            s = new AbortController(),
            o = setTimeout(() => {
              (i = nd("request timeout", "TIMEOUT")), s.abort();
            }, t.timeout);
          r &&
            r.addListener(() => {
              (i = nd("request cancelled", "CANCELLED")), s.abort();
            });
          let l = Object.assign({}, e, {
            method: t.method,
            headers: new Headers(Array.from(t)),
            body: t.body || void 0,
            signal: s.signal,
          });
          try {
            n = await fetch(t.url, l);
          } catch (e) {
            if ((clearTimeout(o), i)) throw i;
            throw e;
          }
          clearTimeout(o);
          let c = {};
          n.headers.forEach((e, t) => {
            c[t.toLowerCase()] = e;
          });
          let u = await n.arrayBuffer(),
            d = null == u ? null : new Uint8Array(u);
          return {
            statusCode: n.status,
            statusMessage: n.statusText,
            headers: c,
            body: d,
          };
        };
      }
      du({});
      let dd = du(),
        df = RegExp("^data:([^;:]*)?(;base64)?,(.*)$", "i"),
        dh = RegExp("^ipfs://(ipfs/)?(.*)$", "i"),
        dp = !1;
      async function dx(e, t) {
        try {
          var r;
          let t = e.match(df);
          if (!t) throw Error("invalid data");
          return new dq(
            200,
            "OK",
            { "content-type": t[1] || "text/plain" },
            t[2]
              ? dl(t[3])
              : ((r = t[3]),
                nU(
                  r.replace(/%([0-9a-f][0-9a-f])/gi, (e, t) =>
                    String.fromCharCode(parseInt(t, 16))
                  )
                ))
          );
        } catch (t) {
          return new dq(
            599,
            "BAD REQUEST (invalid data: URI)",
            {},
            null,
            new dD(e)
          );
        }
      }
      function dg(e) {
        return async function (t, r) {
          try {
            let r = t.match(dh);
            if (!r) throw Error("invalid link");
            return new dD("".concat(e).concat(r[2]));
          } catch (e) {
            return new dq(
              599,
              "BAD REQUEST (invalid IPFS URI)",
              {},
              null,
              new dD(t)
            );
          }
        };
      }
      let db = { data: dx, ipfs: dg("https://gateway.ipfs.io/ipfs/") },
        dm = new WeakMap();
      var dy = new WeakMap(),
        dw = new WeakMap();
      class dv {
        addListener(e) {
          nf(
            !(0, te._)(this, dw),
            "singal already cancelled",
            "UNSUPPORTED_OPERATION",
            { operation: "fetchCancelSignal.addCancelListener" }
          ),
            (0, te._)(this, dy).push(e);
        }
        get cancelled() {
          return (0, te._)(this, dw);
        }
        checkSignal() {
          nf(!this.cancelled, "cancelled", "CANCELLED", {});
        }
        constructor(e) {
          (0, tt._)(this, dy, { writable: !0, value: void 0 }),
            (0, tt._)(this, dw, { writable: !0, value: void 0 }),
            (0, tr._)(this, dy, []),
            (0, tr._)(this, dw, !1),
            dm.set(e, () => {
              if (!(0, te._)(this, dw)) {
                for (let e of ((0, tr._)(this, dw, !0), (0, te._)(this, dy)))
                  setTimeout(() => {
                    e();
                  }, 0);
                (0, tr._)(this, dy, []);
              }
            });
        }
      }
      function dA(e) {
        if (null == e) throw Error("missing signal; should not happen");
        return e.checkSignal(), e;
      }
      var dE = new WeakMap(),
        d_ = new WeakMap(),
        dk = new WeakMap(),
        dN = new WeakMap(),
        dP = new WeakMap(),
        dT = new WeakMap(),
        dS = new WeakMap(),
        dO = new WeakMap(),
        dR = new WeakMap(),
        dC = new WeakMap(),
        dI = new WeakMap(),
        dB = new WeakMap(),
        dU = new WeakMap(),
        dM = new WeakMap(),
        dj = new WeakMap(),
        dF = new WeakSet();
      class dD {
        get url() {
          return (0, te._)(this, dT);
        }
        set url(e) {
          (0, tr._)(this, dT, String(e));
        }
        get body() {
          return null == (0, te._)(this, dS)
            ? null
            : new Uint8Array((0, te._)(this, dS));
        }
        set body(e) {
          if (null == e)
            (0, tr._)(this, dS, void 0), (0, tr._)(this, dO, void 0);
          else if ("string" == typeof e)
            (0, tr._)(this, dS, nU(e)), (0, tr._)(this, dO, "text/plain");
          else if (e instanceof Uint8Array)
            (0, tr._)(this, dS, e),
              (0, tr._)(this, dO, "application/octet-stream");
          else if ("object" == typeof e)
            (0, tr._)(this, dS, nU(JSON.stringify(e))),
              (0, tr._)(this, dO, "application/json");
          else throw Error("invalid body");
        }
        hasBody() {
          return null != (0, te._)(this, dS);
        }
        get method() {
          return (0, te._)(this, dN)
            ? (0, te._)(this, dN)
            : this.hasBody()
            ? "POST"
            : "GET";
        }
        set method(e) {
          null == e && (e = ""), (0, tr._)(this, dN, String(e).toUpperCase());
        }
        get headers() {
          let e = Object.assign({}, (0, te._)(this, dk));
          return (
            (0, te._)(this, dR) &&
              (e.authorization = "Basic ".concat(dc(nU((0, te._)(this, dR))))),
            this.allowGzip && (e["accept-encoding"] = "gzip"),
            null == e["content-type"] &&
              (0, te._)(this, dO) &&
              (e["content-type"] = (0, te._)(this, dO)),
            this.body && (e["content-length"] = String(this.body.length)),
            e
          );
        }
        getHeader(e) {
          return this.headers[e.toLowerCase()];
        }
        setHeader(e, t) {
          (0, te._)(this, dk)[String(e).toLowerCase()] = String(t);
        }
        clearHeaders() {
          (0, tr._)(this, dk, {});
        }
        [Symbol.iterator]() {
          let e = this.headers,
            t = Object.keys(e),
            r = 0;
          return {
            next: () => {
              if (r < t.length) {
                let n = t[r++];
                return { value: [n, e[n]], done: !1 };
              }
              return { value: void 0, done: !0 };
            },
          };
        }
        get credentials() {
          return (0, te._)(this, dR) || null;
        }
        setCredentials(e, t) {
          nh(
            !e.match(/:/),
            "invalid basic authentication username",
            "username",
            "[REDACTED]"
          ),
            (0, tr._)(this, dR, "".concat(e, ":").concat(t));
        }
        get allowGzip() {
          return (0, te._)(this, d_);
        }
        set allowGzip(e) {
          (0, tr._)(this, d_, !!e);
        }
        get allowInsecureAuthentication() {
          return !!(0, te._)(this, dE);
        }
        set allowInsecureAuthentication(e) {
          (0, tr._)(this, dE, !!e);
        }
        get timeout() {
          return (0, te._)(this, dP);
        }
        set timeout(e) {
          nh(e >= 0, "timeout must be non-zero", "timeout", e),
            (0, tr._)(this, dP, e);
        }
        get preflightFunc() {
          return (0, te._)(this, dC) || null;
        }
        set preflightFunc(e) {
          (0, tr._)(this, dC, e);
        }
        get processFunc() {
          return (0, te._)(this, dI) || null;
        }
        set processFunc(e) {
          (0, tr._)(this, dI, e);
        }
        get retryFunc() {
          return (0, te._)(this, dB) || null;
        }
        set retryFunc(e) {
          (0, tr._)(this, dB, e);
        }
        get getUrlFunc() {
          return (0, te._)(this, dj) || dd;
        }
        set getUrlFunc(e) {
          (0, tr._)(this, dj, e);
        }
        toString() {
          return "<FetchRequest method="
            .concat(JSON.stringify(this.method), " url=")
            .concat(JSON.stringify(this.url), " headers=")
            .concat(JSON.stringify(this.headers), " body=")
            .concat(
              (0, te._)(this, dS) ? n_((0, te._)(this, dS)) : "null",
              ">"
            );
        }
        setThrottleParams(e) {
          null != e.slotInterval &&
            ((0, te._)(this, dM).slotInterval = e.slotInterval),
            null != e.maxAttempts &&
              ((0, te._)(this, dM).maxAttempts = e.maxAttempts);
        }
        send() {
          return (
            nf(
              null == (0, te._)(this, dU),
              "request already sent",
              "UNSUPPORTED_OPERATION",
              { operation: "fetchRequest.send" }
            ),
            (0, tr._)(this, dU, new dv(this)),
            (0, tn._)(this, dF, dL).call(
              this,
              0,
              dQ() + this.timeout,
              0,
              this,
              new dq(0, "", {}, null, this)
            )
          );
        }
        cancel() {
          nf(
            null != (0, te._)(this, dU),
            "request has not been sent",
            "UNSUPPORTED_OPERATION",
            { operation: "fetchRequest.cancel" }
          );
          let e = dm.get(this);
          if (!e) throw Error("missing signal; should not happen");
          e();
        }
        redirect(e) {
          let t = this.url.split(":")[0].toLowerCase(),
            r = e.split(":")[0].toLowerCase();
          nf(
            "GET" === this.method &&
              ("https" !== t || "http" !== r) &&
              e.match(/^https?:/),
            "unsupported redirect",
            "UNSUPPORTED_OPERATION",
            {
              operation: "redirect("
                .concat(this.method, " ")
                .concat(JSON.stringify(this.url), " => ")
                .concat(JSON.stringify(e), ")"),
            }
          );
          let n = new dD(e);
          return (
            (n.method = "GET"),
            (n.allowGzip = this.allowGzip),
            (n.timeout = this.timeout),
            (0, tr._)(n, dk, Object.assign({}, (0, te._)(this, dk))),
            (0, te._)(this, dS) &&
              (0, tr._)(n, dS, new Uint8Array((0, te._)(this, dS))),
            (0, tr._)(n, dO, (0, te._)(this, dO)),
            n
          );
        }
        clone() {
          let e = new dD(this.url);
          return (
            (0, tr._)(e, dN, (0, te._)(this, dN)),
            (0, te._)(this, dS) && (0, tr._)(e, dS, (0, te._)(this, dS)),
            (0, tr._)(e, dO, (0, te._)(this, dO)),
            (0, tr._)(e, dk, Object.assign({}, (0, te._)(this, dk))),
            (0, tr._)(e, dR, (0, te._)(this, dR)),
            this.allowGzip && (e.allowGzip = !0),
            (e.timeout = this.timeout),
            this.allowInsecureAuthentication &&
              (e.allowInsecureAuthentication = !0),
            (0, tr._)(e, dC, (0, te._)(this, dC)),
            (0, tr._)(e, dI, (0, te._)(this, dI)),
            (0, tr._)(e, dB, (0, te._)(this, dB)),
            (0, tr._)(e, dM, Object.assign({}, (0, te._)(this, dM))),
            (0, tr._)(e, dj, (0, te._)(this, dj)),
            e
          );
        }
        static lockConfig() {
          dp = !0;
        }
        static getGateway(e) {
          return db[e.toLowerCase()] || null;
        }
        static registerGateway(e, t) {
          if ("http" === (e = e.toLowerCase()) || "https" === e)
            throw Error("cannot intercept ".concat(e, "; use registerGetUrl"));
          if (dp) throw Error("gateways locked");
          db[e] = t;
        }
        static registerGetUrl(e) {
          if (dp) throw Error("gateways locked");
          dd = e;
        }
        static createGetUrlFunc(e) {
          return du(e);
        }
        static createDataGateway() {
          return dx;
        }
        static createIpfsGatewayFunc(e) {
          return dg(e);
        }
        constructor(e) {
          (0, ta._)(this, dF),
            (0, tt._)(this, dE, { writable: !0, value: void 0 }),
            (0, tt._)(this, d_, { writable: !0, value: void 0 }),
            (0, tt._)(this, dk, { writable: !0, value: void 0 }),
            (0, tt._)(this, dN, { writable: !0, value: void 0 }),
            (0, tt._)(this, dP, { writable: !0, value: void 0 }),
            (0, tt._)(this, dT, { writable: !0, value: void 0 }),
            (0, tt._)(this, dS, { writable: !0, value: void 0 }),
            (0, tt._)(this, dO, { writable: !0, value: void 0 }),
            (0, tt._)(this, dR, { writable: !0, value: void 0 }),
            (0, tt._)(this, dC, { writable: !0, value: void 0 }),
            (0, tt._)(this, dI, { writable: !0, value: void 0 }),
            (0, tt._)(this, dB, { writable: !0, value: void 0 }),
            (0, tt._)(this, dU, { writable: !0, value: void 0 }),
            (0, tt._)(this, dM, { writable: !0, value: void 0 }),
            (0, tt._)(this, dj, { writable: !0, value: void 0 }),
            (0, tr._)(this, dT, String(e)),
            (0, tr._)(this, dE, !1),
            (0, tr._)(this, d_, !0),
            (0, tr._)(this, dk, {}),
            (0, tr._)(this, dN, ""),
            (0, tr._)(this, dP, 3e5),
            (0, tr._)(this, dM, { slotInterval: 250, maxAttempts: 12 }),
            (0, tr._)(this, dj, null);
        }
      }
      async function dL(e, t, r, n, a) {
        var i, s, o, l;
        if (e >= (0, te._)(this, dM).maxAttempts)
          return a.makeServerError("exceeded maximum retry limit");
        nf(dQ() <= t, "timeout", "TIMEOUT", {
          operation: "request.send",
          reason: "timeout",
          request: n,
        }),
          r > 0 && (await ((l = r), new Promise((e) => setTimeout(e, l))));
        let c = this.clone(),
          u = (c.url.split(":")[0] || "").toLowerCase();
        if (u in db) {
          let e = await db[u](c.url, dA((0, te._)(n, dU)));
          if (e instanceof dq) {
            let t = e;
            if (this.processFunc) {
              dA((0, te._)(n, dU));
              try {
                t = await this.processFunc(c, t);
              } catch (e) {
                (null == e.throttle || "number" != typeof e.stall) &&
                  t
                    .makeServerError("error in post-processing function", e)
                    .assertOk();
              }
            }
            return t;
          }
          c = e;
        }
        this.preflightFunc && (c = await this.preflightFunc(c));
        let d = await this.getUrlFunc(c, dA((0, te._)(n, dU))),
          f = new dq(d.statusCode, d.statusMessage, d.headers, d.body, n);
        if (301 === f.statusCode || 302 === f.statusCode) {
          try {
            let r = f.headers.location || "";
            return (0, tn._)((i = c.redirect(r)), dF, dL).call(
              i,
              e + 1,
              t,
              0,
              n,
              f
            );
          } catch (e) {}
          return f;
        }
        if (
          429 === f.statusCode &&
          (null == this.retryFunc || (await this.retryFunc(c, f, e)))
        ) {
          let r = f.headers["retry-after"],
            a =
              (0, te._)(this, dM).slotInterval *
              Math.trunc(Math.random() * Math.pow(2, e));
          return (
            "string" == typeof r &&
              r.match(/^[1-9][0-9]*$/) &&
              (a = parseInt(r)),
            (0, tn._)((s = c.clone()), dF, dL).call(s, e + 1, t, a, n, f)
          );
        }
        if (this.processFunc) {
          dA((0, te._)(n, dU));
          try {
            f = await this.processFunc(c, f);
          } catch (a) {
            (null == a.throttle || "number" != typeof a.stall) &&
              f
                .makeServerError("error in post-processing function", a)
                .assertOk();
            let r =
              (0, te._)(this, dM).slotInterval *
              Math.trunc(Math.random() * Math.pow(2, e));
            return (
              a.stall >= 0 && (r = a.stall),
              (0, tn._)((o = c.clone()), dF, dL).call(o, e + 1, t, r, n, f)
            );
          }
        }
        return f;
      }
      var dz = new WeakMap(),
        dG = new WeakMap(),
        dW = new WeakMap(),
        dV = new WeakMap(),
        dH = new WeakMap(),
        dK = new WeakMap();
      class dq {
        toString() {
          return "<FetchResponse status="
            .concat(this.statusCode, " body=")
            .concat(
              (0, te._)(this, dV) ? n_((0, te._)(this, dV)) : "null",
              ">"
            );
        }
        get statusCode() {
          return (0, te._)(this, dz);
        }
        get statusMessage() {
          return (0, te._)(this, dG);
        }
        get headers() {
          return Object.assign({}, (0, te._)(this, dW));
        }
        get body() {
          return null == (0, te._)(this, dV)
            ? null
            : new Uint8Array((0, te._)(this, dV));
        }
        get bodyText() {
          try {
            return null == (0, te._)(this, dV) ? "" : nM((0, te._)(this, dV));
          } catch (e) {
            nf(
              !1,
              "response body is not valid UTF-8 data",
              "UNSUPPORTED_OPERATION",
              { operation: "bodyText", info: { response: this } }
            );
          }
        }
        get bodyJson() {
          try {
            return JSON.parse(this.bodyText);
          } catch (e) {
            nf(!1, "response body is not valid JSON", "UNSUPPORTED_OPERATION", {
              operation: "bodyJson",
              info: { response: this },
            });
          }
        }
        [Symbol.iterator]() {
          let e = this.headers,
            t = Object.keys(e),
            r = 0;
          return {
            next: () => {
              if (r < t.length) {
                let n = t[r++];
                return { value: [n, e[n]], done: !1 };
              }
              return { value: void 0, done: !0 };
            },
          };
        }
        makeServerError(e, t) {
          let r;
          e
            ? (r = "CLIENT ESCALATED SERVER ERROR ("
                .concat(this.statusCode, " ")
                .concat(this.statusMessage, "; ")
                .concat(e, ")"))
            : ((e = "".concat(this.statusCode, " ").concat(this.statusMessage)),
              (r = "CLIENT ESCALATED SERVER ERROR (".concat(e, ")")));
          let n = new dq(
            599,
            r,
            this.headers,
            this.body,
            (0, te._)(this, dH) || void 0
          );
          return (0, tr._)(n, dK, { message: e, error: t }), n;
        }
        throwThrottleError(e, t) {
          null == t
            ? (t = -1)
            : nh(
                Number.isInteger(t) && t >= 0,
                "invalid stall timeout",
                "stall",
                t
              );
          let r = Error(e || "throttling requests");
          throw (no(r, { stall: t, throttle: !0 }), r);
        }
        getHeader(e) {
          return this.headers[e.toLowerCase()];
        }
        hasBody() {
          return null != (0, te._)(this, dV);
        }
        get request() {
          return (0, te._)(this, dH);
        }
        ok() {
          return (
            "" === (0, te._)(this, dK).message &&
            this.statusCode >= 200 &&
            this.statusCode < 300
          );
        }
        assertOk() {
          if (this.ok()) return;
          let { message: e, error: t } = (0, te._)(this, dK);
          "" === e &&
            (e = "server response "
              .concat(this.statusCode, " ")
              .concat(this.statusMessage));
          let r = null;
          this.request && (r = this.request.url);
          let n = null;
          try {
            (0, te._)(this, dV) && (n = nM((0, te._)(this, dV)));
          } catch (e) {}
          nf(!1, e, "SERVER_ERROR", {
            request: this.request || "unknown request",
            response: this,
            error: t,
            info: {
              requestUrl: r,
              responseBody: n,
              responseStatus: ""
                .concat(this.statusCode, " ")
                .concat(this.statusMessage),
            },
          });
        }
        constructor(e, t, r, n, a) {
          (0, tt._)(this, dz, { writable: !0, value: void 0 }),
            (0, tt._)(this, dG, { writable: !0, value: void 0 }),
            (0, tt._)(this, dW, { writable: !0, value: void 0 }),
            (0, tt._)(this, dV, { writable: !0, value: void 0 }),
            (0, tt._)(this, dH, { writable: !0, value: void 0 }),
            (0, tt._)(this, dK, { writable: !0, value: void 0 }),
            (0, tr._)(this, dz, e),
            (0, tr._)(this, dG, t),
            (0, tr._)(
              this,
              dW,
              Object.keys(r).reduce(
                (e, t) => ((e[t.toLowerCase()] = String(r[t])), e),
                {}
              )
            ),
            (0, tr._)(this, dV, null == n ? null : new Uint8Array(n)),
            (0, tr._)(this, dH, a || null),
            (0, tr._)(this, dK, { message: "" });
        }
      }
      function dQ() {
        return new Date().getTime();
      }
      let dJ = new Set();
      function dZ(e) {
        dJ.has(e) ||
          (dJ.add(e),
          console.log("========= NOTICE ========="),
          console.log(
            "Request-Rate Exceeded for ".concat(
              e,
              " (this message will not be repeated)"
            )
          ),
          console.log(""),
          console.log(
            "The default API keys for each service are provided as a highly-throttled,"
          ),
          console.log(
            "community resource for low-traffic projects and early prototyping."
          ),
          console.log(""),
          console.log(
            "While your application will continue to function, we highly recommended"
          ),
          console.log(
            "signing up for your own API keys to improve performance, increase your"
          ),
          console.log(
            "request rate/limit and enable other perks, such as metrics and advanced APIs."
          ),
          console.log(""),
          console.log("For more details: https://docs.ethers.org/api-keys/"),
          console.log("=========================="));
      }
      class dY {
        clone() {
          return new dY(this.name);
        }
        constructor(e) {
          (0, eU._)(this, "name", void 0), no(this, { name: e });
        }
      }
      class dX extends dY {
        clone() {
          return new dX(this.effectiveBlock, this);
        }
        constructor(e, t) {
          null == e && (e = 0),
            super("org.ethers.network.plugins.GasCost#".concat(e || 0)),
            (0, eU._)(this, "effectiveBlock", void 0),
            (0, eU._)(this, "txBase", void 0),
            (0, eU._)(this, "txCreate", void 0),
            (0, eU._)(this, "txDataZero", void 0),
            (0, eU._)(this, "txDataNonzero", void 0),
            (0, eU._)(this, "txAccessListStorageKey", void 0),
            (0, eU._)(this, "txAccessListAddress", void 0);
          let r = { effectiveBlock: e };
          function n(e, n) {
            let a = (t || {})[e];
            null == a && (a = n),
              nh(
                "number" == typeof a,
                "invalud value for ".concat(e),
                "costs",
                t
              ),
              (r[e] = a);
          }
          n("txBase", 21e3),
            n("txCreate", 32e3),
            n("txDataZero", 4),
            n("txDataNonzero", 16),
            n("txAccessListStorageKey", 1900),
            n("txAccessListAddress", 2400),
            no(this, r);
        }
      }
      class d$ extends dY {
        clone() {
          return new d$(this.address, this.targetNetwork);
        }
        constructor(e, t) {
          super("org.ethers.plugins.network.Ens"),
            (0, eU._)(this, "address", void 0),
            (0, eU._)(this, "targetNetwork", void 0),
            no(this, {
              address: e || "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
              targetNetwork: null == t ? 1 : t,
            });
        }
      }
      var d0 = new WeakMap();
      class d1 extends dY {
        get feeDataFunc() {
          return (0, te._)(this, d0);
        }
        async getFeeData(e) {
          return await (0, te._)(this, d0).call(this, e);
        }
        clone() {
          return new d1((0, te._)(this, d0));
        }
        constructor(e) {
          super("org.ethers.plugins.network.FeeData"),
            (0, tt._)(this, d0, { writable: !0, value: void 0 }),
            (0, tr._)(this, d0, e);
        }
      }
      var d2 = new WeakMap(),
        d3 = new WeakMap();
      class d4 extends dY {
        get url() {
          return (0, te._)(this, d2);
        }
        get processFunc() {
          return (0, te._)(this, d3);
        }
        clone() {
          return this;
        }
        constructor(e, t) {
          super("org.ethers.plugins.network.FetchUrlFeeDataPlugin"),
            (0, tt._)(this, d2, { writable: !0, value: void 0 }),
            (0, tt._)(this, d3, { writable: !0, value: void 0 }),
            (0, tr._)(this, d2, e),
            (0, tr._)(this, d3, t);
        }
      }
      let d8 = new Map();
      var d5 = new WeakMap(),
        d6 = new WeakMap(),
        d9 = new WeakMap();
      class d7 {
        toJSON() {
          return { name: this.name, chainId: String(this.chainId) };
        }
        get name() {
          return (0, te._)(this, d5);
        }
        set name(e) {
          (0, tr._)(this, d5, e);
        }
        get chainId() {
          return (0, te._)(this, d6);
        }
        set chainId(e) {
          (0, tr._)(this, d6, nH(e, "chainId"));
        }
        matches(e) {
          if (null == e) return !1;
          if ("string" == typeof e) {
            try {
              return this.chainId === nH(e);
            } catch (e) {}
            return this.name === e;
          }
          if ("number" == typeof e || "bigint" == typeof e) {
            try {
              return this.chainId === nH(e);
            } catch (e) {}
            return !1;
          }
          if ("object" == typeof e) {
            if (null != e.chainId) {
              try {
                return this.chainId === nH(e.chainId);
              } catch (e) {}
              return !1;
            }
            if (null != e.name) return this.name === e.name;
          }
          return !1;
        }
        get plugins() {
          return Array.from((0, te._)(this, d9).values());
        }
        attachPlugin(e) {
          if ((0, te._)(this, d9).get(e.name))
            throw Error("cannot replace existing plugin: ".concat(e.name, " "));
          return (0, te._)(this, d9).set(e.name, e.clone()), this;
        }
        getPlugin(e) {
          return (0, te._)(this, d9).get(e) || null;
        }
        getPlugins(e) {
          return this.plugins.filter((t) => t.name.split("#")[0] === e);
        }
        clone() {
          let e = new d7(this.name, this.chainId);
          return (
            this.plugins.forEach((t) => {
              e.attachPlugin(t.clone());
            }),
            e
          );
        }
        computeIntrinsicGas(e) {
          let t =
              this.getPlugin("org.ethers.plugins.network.GasCost") || new dX(),
            r = t.txBase;
          if ((null == e.to && (r += t.txCreate), e.data))
            for (let n = 2; n < e.data.length; n += 2)
              "00" === e.data.substring(n, n + 2)
                ? (r += t.txDataZero)
                : (r += t.txDataNonzero);
          if (e.accessList) {
            let n = s2(e.accessList);
            for (let e in n)
              r +=
                t.txAccessListAddress +
                t.txAccessListStorageKey * n[e].storageKeys.length;
          }
          return r;
        }
        static from(e) {
          if (
            ((function () {
              fr ||
                ((fr = !0),
                e("mainnet", 1, { ensNetwork: 1, altNames: ["homestead"] }),
                e("ropsten", 3, { ensNetwork: 3 }),
                e("rinkeby", 4, { ensNetwork: 4 }),
                e("goerli", 5, { ensNetwork: 5 }),
                e("kovan", 42, { ensNetwork: 42 }),
                e("sepolia", 0xaa36a7, { ensNetwork: 0xaa36a7 }),
                e("holesky", 17e3, { ensNetwork: 17e3 }),
                e("classic", 61, {}),
                e("classicKotti", 6, {}),
                e("arbitrum", 42161, { ensNetwork: 1 }),
                e("arbitrum-goerli", 421613, {}),
                e("arbitrum-sepolia", 421614, {}),
                e("base", 8453, { ensNetwork: 1 }),
                e("base-goerli", 84531, {}),
                e("base-sepolia", 84532, {}),
                e("bnb", 56, { ensNetwork: 1 }),
                e("bnbt", 97, {}),
                e("linea", 59144, { ensNetwork: 1 }),
                e("linea-goerli", 59140, {}),
                e("linea-sepolia", 59141, {}),
                e("matic", 137, {
                  ensNetwork: 1,
                  plugins: [ft("https://gasstation.polygon.technology/v2")],
                }),
                e("matic-amoy", 80002, {}),
                e("matic-mumbai", 80001, {
                  altNames: ["maticMumbai", "maticmum"],
                  plugins: [
                    ft("https://gasstation-testnet.polygon.technology/v2"),
                  ],
                }),
                e("optimism", 10, { ensNetwork: 1, plugins: [] }),
                e("optimism-goerli", 420, {}),
                e("optimism-sepolia", 0xaa37dc, {}),
                e("xdai", 100, { ensNetwork: 1 }));
              function e(e, t, r) {
                let n = function () {
                  let n = new d7(e, t);
                  return (
                    null != r.ensNetwork &&
                      n.attachPlugin(new d$(null, r.ensNetwork)),
                    n.attachPlugin(new dX()),
                    (r.plugins || []).forEach((e) => {
                      n.attachPlugin(e);
                    }),
                    n
                  );
                };
                d7.register(e, n),
                  d7.register(t, n),
                  r.altNames &&
                    r.altNames.forEach((e) => {
                      d7.register(e, n);
                    });
              }
            })(),
            null == e)
          )
            return d7.from("mainnet");
          if (
            ("number" == typeof e && (e = BigInt(e)),
            "string" == typeof e || "bigint" == typeof e)
          ) {
            let t = d8.get(e);
            if (t) return t();
            if ("bigint" == typeof e) return new d7("unknown", e);
            nh(!1, "unknown network", "network", e);
          }
          if ("function" == typeof e.clone) return e.clone();
          if ("object" == typeof e) {
            nh(
              "string" == typeof e.name && "number" == typeof e.chainId,
              "invalid network object name or chainId",
              "network",
              e
            );
            let t = new d7(e.name, e.chainId);
            return (
              (e.ensAddress || null != e.ensNetwork) &&
                t.attachPlugin(new d$(e.ensAddress, e.ensNetwork)),
              t
            );
          }
          nh(!1, "invalid network", "network", e);
        }
        static register(e, t) {
          "number" == typeof e && (e = BigInt(e));
          let r = d8.get(e);
          r &&
            nh(
              !1,
              "conflicting network for ".concat(JSON.stringify(r.name)),
              "nameOrChainId",
              e
            ),
            d8.set(e, t);
        }
        constructor(e, t) {
          (0, tt._)(this, d5, { writable: !0, value: void 0 }),
            (0, tt._)(this, d6, { writable: !0, value: void 0 }),
            (0, tt._)(this, d9, { writable: !0, value: void 0 }),
            (0, tr._)(this, d5, e),
            (0, tr._)(this, d6, nH(t)),
            (0, tr._)(this, d9, new Map());
        }
      }
      function fe(e, t) {
        let r = String(e);
        if (!r.match(/^[0-9.]+$/))
          throw Error("invalid gwei value: ".concat(e));
        let n = r.split(".");
        if ((1 === n.length && n.push(""), 2 !== n.length))
          throw Error("invalid gwei value: ".concat(e));
        for (; n[1].length < t; ) n[1] += "0";
        if (n[1].length > 9) {
          let e = BigInt(n[1].substring(0, 9));
          !n[1].substring(9).match(/^0+$/) && e++, (n[1] = e.toString());
        }
        return BigInt(n[0] + n[1]);
      }
      function ft(e) {
        return new d4(e, async (e, t, r) => {
          let n;
          r.setHeader("User-Agent", "ethers");
          try {
            let [t, a] = await Promise.all([r.send(), e()]),
              i = (n = t).bodyJson.standard;
            return {
              gasPrice: a.gasPrice,
              maxFeePerGas: fe(i.maxFee, 9),
              maxPriorityFeePerGas: fe(i.maxPriorityFee, 9),
            };
          } catch (e) {
            nf(
              !1,
              "error encountered with polygon gas station (".concat(
                JSON.stringify(r.url),
                ")"
              ),
              "SERVER_ERROR",
              { request: r, response: n, error: e }
            );
          }
        });
      }
      let fr = !1;
      function fn(e) {
        return {
          address: a9(e.address),
          nonce: nH(null != e.nonce ? e.nonce : 0),
          chainId: nH(null != e.chainId ? e.chainId : 0),
          signature: ct.from(e.signature),
        };
      }
      function fa(e, t, r) {
        let n = 0;
        for (let a = 0; a < r; a++) n = 256 * n + e[t + a];
        return n;
      }
      function fi(e, t, r, n) {
        let a = [];
        for (; r < t + 1 + n; ) {
          let i = fs(e, r);
          a.push(i.result),
            nf(
              (r += i.consumed) <= t + 1 + n,
              "child data too short",
              "BUFFER_OVERRUN",
              { buffer: e, length: n, offset: t }
            );
        }
        return { consumed: 1 + n, result: a };
      }
      function fs(e, t) {
        nf(0 !== e.length, "data too short", "BUFFER_OVERRUN", {
          buffer: e,
          length: 0,
          offset: 1,
        });
        let r = (t) => {
          nf(t <= e.length, "data short segment too short", "BUFFER_OVERRUN", {
            buffer: e,
            length: e.length,
            offset: t,
          });
        };
        if (e[t] >= 248) {
          let n = e[t] - 247;
          r(t + 1 + n);
          let a = fa(e, t + 1, n);
          return r(t + 1 + n + a), fi(e, t, t + 1 + n, n + a);
        }
        if (e[t] >= 192) {
          let n = e[t] - 192;
          return r(t + 1 + n), fi(e, t, t + 1, n);
        }
        if (e[t] >= 184) {
          let n = e[t] - 183;
          r(t + 1 + n);
          let a = fa(e, t + 1, n);
          r(t + 1 + n + a);
          let i = n_(e.slice(t + 1 + n, t + 1 + n + a));
          return { consumed: 1 + n + a, result: i };
        }
        if (e[t] >= 128) {
          let n = e[t] - 128;
          r(t + 1 + n);
          let a = n_(e.slice(t + 1, t + 1 + n));
          return { consumed: 1 + n, result: a };
        }
        return {
          consumed: 1,
          result: (function (e) {
            let t = e.toString(16);
            for (; t.length < 2; ) t = "0" + t;
            return "0x" + t;
          })(e[t]),
        };
      }
      function fo(e) {
        let t = ny(e, "data"),
          r = fs(t, 0);
        return (
          nh(
            r.consumed === t.length,
            "unexpected junk after rlp payload",
            "data",
            e
          ),
          r.result
        );
      }
      let fl = BigInt(0),
        fc = BigInt(2),
        fu = BigInt(27),
        fd = BigInt(28),
        ff = BigInt(35),
        fh = BigInt(
          "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
        );
      function fp(e, t) {
        let r = e.toString(16);
        for (; r.length < 2; ) r = "0" + r;
        return "0x" + (r += lC(t).substring(4));
      }
      function fx(e) {
        return "0x" === e ? null : a9(e);
      }
      function fg(e, t) {
        try {
          return s2(e);
        } catch (r) {
          nh(!1, r.message, t, e);
        }
      }
      function fb(e, t) {
        return "0x" === e ? 0 : nJ(e, t);
      }
      function fm(e, t) {
        if ("0x" === e) return fl;
        let r = nH(e, t);
        return nh(r <= fh, "value exceeds uint size", t, r), r;
      }
      function fy(e, t) {
        let r = nH(e, "value"),
          n = nX(r);
        return nh(n.length <= 32, "value too large", "tx.".concat(t), r), n;
      }
      function fw(e) {
        return s2(e).map((e) => [e.address, e.storageKeys]);
      }
      function fv(e, t) {
        let r;
        try {
          if (((r = fb(t[0], "yParity")), 0 !== r && 1 !== r))
            throw Error("bad yParity");
        } catch (e) {
          nh(!1, "invalid yParity", "yParity", t[0]);
        }
        let n = nO(t[1], 32),
          a = nO(t[2], 32);
        e.signature = ct.from({ r: n, s: a, yParity: r });
      }
      var fA = new WeakMap(),
        fE = new WeakMap(),
        f_ = new WeakMap(),
        fk = new WeakMap(),
        fN = new WeakMap(),
        fP = new WeakMap(),
        fT = new WeakMap(),
        fS = new WeakMap(),
        fO = new WeakMap(),
        fR = new WeakMap(),
        fC = new WeakMap(),
        fI = new WeakMap(),
        fB = new WeakMap(),
        fU = new WeakMap(),
        fM = new WeakMap(),
        fj = new WeakMap(),
        fF = new WeakMap(),
        fD = new WeakSet();
      class fL {
        get type() {
          return (0, te._)(this, fA);
        }
        set type(e) {
          switch (e) {
            case null:
              (0, tr._)(this, fA, null);
              break;
            case 0:
            case "legacy":
              (0, tr._)(this, fA, 0);
              break;
            case 1:
            case "berlin":
            case "eip-2930":
              (0, tr._)(this, fA, 1);
              break;
            case 2:
            case "london":
            case "eip-1559":
              (0, tr._)(this, fA, 2);
              break;
            case 3:
            case "cancun":
            case "eip-4844":
              (0, tr._)(this, fA, 3);
              break;
            case 4:
            case "pectra":
            case "eip-7702":
              (0, tr._)(this, fA, 4);
              break;
            default:
              nh(!1, "unsupported transaction type", "type", e);
          }
        }
        get typeName() {
          switch (this.type) {
            case 0:
              return "legacy";
            case 1:
              return "eip-2930";
            case 2:
              return "eip-1559";
            case 3:
              return "eip-4844";
            case 4:
              return "eip-7702";
          }
          return null;
        }
        get to() {
          let e = (0, te._)(this, fE);
          return null == e && 3 === this.type ? sK : e;
        }
        set to(e) {
          (0, tr._)(this, fE, null == e ? null : a9(e));
        }
        get nonce() {
          return (0, te._)(this, fk);
        }
        set nonce(e) {
          (0, tr._)(this, fk, nJ(e, "value"));
        }
        get gasLimit() {
          return (0, te._)(this, fN);
        }
        set gasLimit(e) {
          (0, tr._)(this, fN, nH(e));
        }
        get gasPrice() {
          let e = (0, te._)(this, fP);
          return null == e && (0 === this.type || 1 === this.type) ? fl : e;
        }
        set gasPrice(e) {
          (0, tr._)(this, fP, null == e ? null : nH(e, "gasPrice"));
        }
        get maxPriorityFeePerGas() {
          let e = (0, te._)(this, fT);
          return null == e
            ? 2 === this.type || 3 === this.type
              ? fl
              : null
            : e;
        }
        set maxPriorityFeePerGas(e) {
          (0, tr._)(this, fT, null == e ? null : nH(e, "maxPriorityFeePerGas"));
        }
        get maxFeePerGas() {
          let e = (0, te._)(this, fS);
          return null == e
            ? 2 === this.type || 3 === this.type
              ? fl
              : null
            : e;
        }
        set maxFeePerGas(e) {
          (0, tr._)(this, fS, null == e ? null : nH(e, "maxFeePerGas"));
        }
        get data() {
          return (0, te._)(this, f_);
        }
        set data(e) {
          (0, tr._)(this, f_, n_(e));
        }
        get value() {
          return (0, te._)(this, fO);
        }
        set value(e) {
          (0, tr._)(this, fO, nH(e, "value"));
        }
        get chainId() {
          return (0, te._)(this, fR);
        }
        set chainId(e) {
          (0, tr._)(this, fR, nH(e));
        }
        get signature() {
          return (0, te._)(this, fC) || null;
        }
        set signature(e) {
          (0, tr._)(this, fC, null == e ? null : ct.from(e));
        }
        get accessList() {
          let e = (0, te._)(this, fI) || null;
          return null == e
            ? 1 === this.type || 2 === this.type || 3 === this.type
              ? []
              : null
            : e;
        }
        set accessList(e) {
          (0, tr._)(this, fI, null == e ? null : s2(e));
        }
        get authorizationList() {
          let e = (0, te._)(this, fF) || null;
          return null == e && 4 === this.type ? [] : e;
        }
        set authorizationList(e) {
          (0, tr._)(this, fF, null == e ? null : e.map((e) => fn(e)));
        }
        get maxFeePerBlobGas() {
          let e = (0, te._)(this, fB);
          return null == e && 3 === this.type ? fl : e;
        }
        set maxFeePerBlobGas(e) {
          (0, tr._)(this, fB, null == e ? null : nH(e, "maxFeePerBlobGas"));
        }
        get blobVersionedHashes() {
          let e = (0, te._)(this, fU);
          return null == e && 3 === this.type ? [] : e;
        }
        set blobVersionedHashes(e) {
          if (null != e) {
            nh(
              Array.isArray(e),
              "blobVersionedHashes must be an Array",
              "value",
              e
            ),
              (e = e.slice());
            for (let t = 0; t < e.length; t++)
              nh(
                nv(e[t], 32),
                "invalid blobVersionedHash",
                "value[".concat(t, "]"),
                e[t]
              );
          }
          (0, tr._)(this, fU, e);
        }
        get blobs() {
          return null == (0, te._)(this, fj)
            ? null
            : (0, te._)(this, fj).map((e) => Object.assign({}, e));
        }
        set blobs(e) {
          if (null == e) return void (0, tr._)(this, fj, null);
          let t = [],
            r = [];
          for (let n = 0; n < e.length; n++) {
            let a = e[n];
            if (nA(a)) {
              nf(
                (0, te._)(this, fM),
                "adding a raw blob requires a KZG library",
                "UNSUPPORTED_OPERATION",
                { operation: "set blobs()" }
              );
              let e = ny(a);
              if (
                (nh(
                  e.length <= 131072,
                  "blob is too large",
                  "blobs[".concat(n, "]"),
                  a
                ),
                131072 !== e.length)
              ) {
                let t = new Uint8Array(131072);
                t.set(e), (e = t);
              }
              let i = (0, te._)(this, fM).blobToKzgCommitment(e),
                s = n_((0, te._)(this, fM).computeBlobKzgProof(e, i));
              t.push({ data: n_(e), commitment: n_(i), proof: s }),
                r.push(fp(1, i));
            } else {
              let e = n_(a.commitment);
              t.push({ data: n_(a.data), commitment: e, proof: n_(a.proof) }),
                r.push(fp(1, e));
            }
          }
          (0, tr._)(this, fj, t), (0, tr._)(this, fU, r);
        }
        get kzg() {
          return (0, te._)(this, fM);
        }
        set kzg(e) {
          if (null == e) (0, tr._)(this, fM, null);
          else
            (0, tr._)(this, fM, {
              blobToKzgCommitment: (t) => {
                if ("computeBlobProof" in e) {
                  if (
                    "blobToKzgCommitment" in e &&
                    "function" == typeof e.blobToKzgCommitment
                  )
                    return ny(e.blobToKzgCommitment(n_(t)));
                } else if (
                  "blobToKzgCommitment" in e &&
                  "function" == typeof e.blobToKzgCommitment
                )
                  return ny(e.blobToKzgCommitment(t));
                if (
                  "blobToKZGCommitment" in e &&
                  "function" == typeof e.blobToKZGCommitment
                )
                  return ny(e.blobToKZGCommitment(n_(t)));
                nh(!1, "unsupported KZG library", "kzg", e);
              },
              computeBlobKzgProof: (t, r) =>
                "computeBlobProof" in e &&
                "function" == typeof e.computeBlobProof
                  ? ny(e.computeBlobProof(n_(t), n_(r)))
                  : "computeBlobKzgProof" in e &&
                    "function" == typeof e.computeBlobKzgProof
                  ? e.computeBlobKzgProof(t, r)
                  : "computeBlobKZGProof" in e &&
                    "function" == typeof e.computeBlobKZGProof
                  ? ny(e.computeBlobKZGProof(n_(t), n_(r)))
                  : void nh(!1, "unsupported KZG library", "kzg", e),
            });
        }
        get hash() {
          return null == this.signature
            ? null
            : a1((0, tn._)(this, fD, fz).call(this, !0, !1));
        }
        get unsignedHash() {
          return a1(this.unsignedSerialized);
        }
        get from() {
          return null == this.signature
            ? null
            : uD(this.unsignedHash, this.signature);
        }
        get fromPublicKey() {
          return null == this.signature
            ? null
            : ur.recoverPublicKey(this.unsignedHash, this.signature);
        }
        isSigned() {
          return null != this.signature;
        }
        get serialized() {
          return (0, tn._)(this, fD, fz).call(this, !0, !0);
        }
        get unsignedSerialized() {
          return (0, tn._)(this, fD, fz).call(this, !1, !1);
        }
        inferType() {
          let e = this.inferTypes();
          return e.indexOf(2) >= 0 ? 2 : e.pop();
        }
        inferTypes() {
          let e = null != this.gasPrice,
            t = null != this.maxFeePerGas || null != this.maxPriorityFeePerGas,
            r = null != this.accessList,
            n = null != (0, te._)(this, fB) || (0, te._)(this, fU);
          null != this.maxFeePerGas &&
            null != this.maxPriorityFeePerGas &&
            nf(
              this.maxFeePerGas >= this.maxPriorityFeePerGas,
              "priorityFee cannot be more than maxFee",
              "BAD_DATA",
              { value: this }
            ),
            nf(
              !t || (0 !== this.type && 1 !== this.type),
              "transaction type cannot have maxFeePerGas or maxPriorityFeePerGas",
              "BAD_DATA",
              { value: this }
            ),
            nf(
              0 !== this.type || !r,
              "legacy transaction cannot have accessList",
              "BAD_DATA",
              { value: this }
            );
          let a = [];
          return (
            null != this.type
              ? a.push(this.type)
              : this.authorizationList && this.authorizationList.length
              ? a.push(4)
              : t
              ? a.push(2)
              : e
              ? (a.push(1), r || a.push(0))
              : r
              ? (a.push(1), a.push(2))
              : ((n && this.to) || (a.push(0), a.push(1), a.push(2)),
                a.push(3)),
            a.sort(),
            a
          );
        }
        isLegacy() {
          return 0 === this.type;
        }
        isBerlin() {
          return 1 === this.type;
        }
        isLondon() {
          return 2 === this.type;
        }
        isCancun() {
          return 3 === this.type;
        }
        clone() {
          return fL.from(this);
        }
        toJSON() {
          let e = (e) => (null == e ? null : e.toString());
          return {
            type: this.type,
            to: this.to,
            data: this.data,
            nonce: this.nonce,
            gasLimit: e(this.gasLimit),
            gasPrice: e(this.gasPrice),
            maxPriorityFeePerGas: e(this.maxPriorityFeePerGas),
            maxFeePerGas: e(this.maxFeePerGas),
            value: e(this.value),
            chainId: e(this.chainId),
            sig: this.signature ? this.signature.toJSON() : null,
            accessList: this.accessList,
          };
        }
        static from(e) {
          if (null == e) return new fL();
          if ("string" == typeof e) {
            let t = ny(e);
            if (t[0] >= 127)
              return fL.from(
                (function (e) {
                  let t = fo(e);
                  nh(
                    Array.isArray(t) && (9 === t.length || 6 === t.length),
                    "invalid field count for legacy transaction",
                    "data",
                    e
                  );
                  let r = {
                    type: 0,
                    nonce: fb(t[0], "nonce"),
                    gasPrice: fm(t[1], "gasPrice"),
                    gasLimit: fm(t[2], "gasLimit"),
                    to: fx(t[3]),
                    value: fm(t[4], "value"),
                    data: n_(t[5]),
                    chainId: fl,
                  };
                  if (6 === t.length) return r;
                  let n = fm(t[6], "v"),
                    a = fm(t[7], "r"),
                    i = fm(t[8], "s");
                  if (a === fl && i === fl) r.chainId = n;
                  else {
                    let e = (n - ff) / fc;
                    e < fl && (e = fl),
                      (r.chainId = e),
                      nh(
                        e !== fl || n === fu || n === fd,
                        "non-canonical legacy v",
                        "v",
                        t[6]
                      ),
                      (r.signature = ct.from({
                        r: nO(t[7], 32),
                        s: nO(t[8], 32),
                        v: n,
                      }));
                  }
                  return r;
                })(t)
              );
            switch (t[0]) {
              case 1:
                return fL.from(
                  (function (e) {
                    let t = fo(ny(e).slice(1));
                    nh(
                      Array.isArray(t) && (8 === t.length || 11 === t.length),
                      "invalid field count for transaction type: 1",
                      "data",
                      n_(e)
                    );
                    let r = {
                      type: 1,
                      chainId: fm(t[0], "chainId"),
                      nonce: fb(t[1], "nonce"),
                      gasPrice: fm(t[2], "gasPrice"),
                      gasLimit: fm(t[3], "gasLimit"),
                      to: fx(t[4]),
                      value: fm(t[5], "value"),
                      data: n_(t[6]),
                      accessList: fg(t[7], "accessList"),
                    };
                    return 8 === t.length || fv(r, t.slice(8)), r;
                  })(t)
                );
              case 2:
                return fL.from(
                  (function (e) {
                    let t = fo(ny(e).slice(1));
                    nh(
                      Array.isArray(t) && (9 === t.length || 12 === t.length),
                      "invalid field count for transaction type: 2",
                      "data",
                      n_(e)
                    );
                    let r = {
                      type: 2,
                      chainId: fm(t[0], "chainId"),
                      nonce: fb(t[1], "nonce"),
                      maxPriorityFeePerGas: fm(t[2], "maxPriorityFeePerGas"),
                      maxFeePerGas: fm(t[3], "maxFeePerGas"),
                      gasPrice: null,
                      gasLimit: fm(t[4], "gasLimit"),
                      to: fx(t[5]),
                      value: fm(t[6], "value"),
                      data: n_(t[7]),
                      accessList: fg(t[8], "accessList"),
                    };
                    return 9 === t.length || fv(r, t.slice(9)), r;
                  })(t)
                );
              case 3:
                return fL.from(
                  (function (e) {
                    let t = fo(ny(e).slice(1)),
                      r = "3",
                      n = null;
                    if (4 === t.length && Array.isArray(t[0])) {
                      r = "3 (network format)";
                      let e = t[1],
                        a = t[2],
                        i = t[3];
                      nh(
                        Array.isArray(e),
                        "invalid network format: blobs not an array",
                        "fields[1]",
                        e
                      ),
                        nh(
                          Array.isArray(a),
                          "invalid network format: commitments not an array",
                          "fields[2]",
                          a
                        ),
                        nh(
                          Array.isArray(i),
                          "invalid network format: proofs not an array",
                          "fields[3]",
                          i
                        ),
                        nh(
                          e.length === a.length,
                          "invalid network format: blobs/commitments length mismatch",
                          "fields",
                          t
                        ),
                        nh(
                          e.length === i.length,
                          "invalid network format: blobs/proofs length mismatch",
                          "fields",
                          t
                        ),
                        (n = []);
                      for (let r = 0; r < t[1].length; r++)
                        n.push({ data: e[r], commitment: a[r], proof: i[r] });
                      t = t[0];
                    }
                    nh(
                      Array.isArray(t) && (11 === t.length || 14 === t.length),
                      "invalid field count for transaction type: ".concat(r),
                      "data",
                      n_(e)
                    );
                    let a = {
                      type: 3,
                      chainId: fm(t[0], "chainId"),
                      nonce: fb(t[1], "nonce"),
                      maxPriorityFeePerGas: fm(t[2], "maxPriorityFeePerGas"),
                      maxFeePerGas: fm(t[3], "maxFeePerGas"),
                      gasPrice: null,
                      gasLimit: fm(t[4], "gasLimit"),
                      to: fx(t[5]),
                      value: fm(t[6], "value"),
                      data: n_(t[7]),
                      accessList: fg(t[8], "accessList"),
                      maxFeePerBlobGas: fm(t[9], "maxFeePerBlobGas"),
                      blobVersionedHashes: t[10],
                    };
                    n && (a.blobs = n),
                      nh(
                        null != a.to,
                        "invalid address for transaction type: ".concat(r),
                        "data",
                        e
                      ),
                      nh(
                        Array.isArray(a.blobVersionedHashes),
                        "invalid blobVersionedHashes: must be an array",
                        "data",
                        e
                      );
                    for (let t = 0; t < a.blobVersionedHashes.length; t++)
                      nh(
                        nv(a.blobVersionedHashes[t], 32),
                        "invalid blobVersionedHash at index ".concat(
                          t,
                          ": must be length 32"
                        ),
                        "data",
                        e
                      );
                    return 11 === t.length || fv(a, t.slice(11)), a;
                  })(t)
                );
              case 4:
                return fL.from(
                  (function (e) {
                    let t = fo(ny(e).slice(1));
                    nh(
                      Array.isArray(t) && (10 === t.length || 13 === t.length),
                      "invalid field count for transaction type: 4",
                      "data",
                      n_(e)
                    );
                    let r = {
                      type: 4,
                      chainId: fm(t[0], "chainId"),
                      nonce: fb(t[1], "nonce"),
                      maxPriorityFeePerGas: fm(t[2], "maxPriorityFeePerGas"),
                      maxFeePerGas: fm(t[3], "maxFeePerGas"),
                      gasPrice: null,
                      gasLimit: fm(t[4], "gasLimit"),
                      to: fx(t[5]),
                      value: fm(t[6], "value"),
                      data: n_(t[7]),
                      accessList: fg(t[8], "accessList"),
                      authorizationList: (function (e, t) {
                        try {
                          if (!Array.isArray(e))
                            throw Error("authorizationList: invalid array");
                          let t = [];
                          for (let r = 0; r < e.length; r++) {
                            let n = e[r];
                            if (!Array.isArray(n))
                              throw Error(
                                "authorization[".concat(r, "]: invalid array")
                              );
                            if (6 !== n.length)
                              throw Error(
                                "authorization[".concat(r, "]: wrong length")
                              );
                            if (!n[1])
                              throw Error(
                                "authorization[".concat(r, "]: null address")
                              );
                            t.push({
                              address: fx(n[1]),
                              nonce: fm(n[2], "nonce"),
                              chainId: fm(n[0], "chainId"),
                              signature: ct.from({
                                yParity: fb(n[3], "yParity"),
                                r: nO(n[4], 32),
                                s: nO(n[5], 32),
                              }),
                            });
                          }
                          return t;
                        } catch (r) {
                          nh(!1, r.message, t, e);
                        }
                      })(t[9], "authorizationList"),
                    };
                    return 10 === t.length || fv(r, t.slice(10)), r;
                  })(t)
                );
            }
            nf(!1, "unsupported transaction type", "UNSUPPORTED_OPERATION", {
              operation: "from",
            });
          }
          let t = new fL();
          return (
            null != e.type && (t.type = e.type),
            null != e.to && (t.to = e.to),
            null != e.nonce && (t.nonce = e.nonce),
            null != e.gasLimit && (t.gasLimit = e.gasLimit),
            null != e.gasPrice && (t.gasPrice = e.gasPrice),
            null != e.maxPriorityFeePerGas &&
              (t.maxPriorityFeePerGas = e.maxPriorityFeePerGas),
            null != e.maxFeePerGas && (t.maxFeePerGas = e.maxFeePerGas),
            null != e.maxFeePerBlobGas &&
              (t.maxFeePerBlobGas = e.maxFeePerBlobGas),
            null != e.data && (t.data = e.data),
            null != e.value && (t.value = e.value),
            null != e.chainId && (t.chainId = e.chainId),
            null != e.signature && (t.signature = ct.from(e.signature)),
            null != e.accessList && (t.accessList = e.accessList),
            null != e.authorizationList &&
              (t.authorizationList = e.authorizationList),
            null != e.blobVersionedHashes &&
              (t.blobVersionedHashes = e.blobVersionedHashes),
            null != e.kzg && (t.kzg = e.kzg),
            null != e.blobs && (t.blobs = e.blobs),
            null != e.hash &&
              (nh(
                t.isSigned(),
                "unsigned transaction cannot define '.hash'",
                "tx",
                e
              ),
              nh(t.hash === e.hash, "hash mismatch", "tx", e)),
            null != e.from &&
              (nh(
                t.isSigned(),
                "unsigned transaction cannot define '.from'",
                "tx",
                e
              ),
              nh(
                t.from.toLowerCase() === (e.from || "").toLowerCase(),
                "from mismatch",
                "tx",
                e
              )),
            t
          );
        }
        constructor() {
          (0, ta._)(this, fD),
            (0, tt._)(this, fA, { writable: !0, value: void 0 }),
            (0, tt._)(this, fE, { writable: !0, value: void 0 }),
            (0, tt._)(this, f_, { writable: !0, value: void 0 }),
            (0, tt._)(this, fk, { writable: !0, value: void 0 }),
            (0, tt._)(this, fN, { writable: !0, value: void 0 }),
            (0, tt._)(this, fP, { writable: !0, value: void 0 }),
            (0, tt._)(this, fT, { writable: !0, value: void 0 }),
            (0, tt._)(this, fS, { writable: !0, value: void 0 }),
            (0, tt._)(this, fO, { writable: !0, value: void 0 }),
            (0, tt._)(this, fR, { writable: !0, value: void 0 }),
            (0, tt._)(this, fC, { writable: !0, value: void 0 }),
            (0, tt._)(this, fI, { writable: !0, value: void 0 }),
            (0, tt._)(this, fB, { writable: !0, value: void 0 }),
            (0, tt._)(this, fU, { writable: !0, value: void 0 }),
            (0, tt._)(this, fM, { writable: !0, value: void 0 }),
            (0, tt._)(this, fj, { writable: !0, value: void 0 }),
            (0, tt._)(this, fF, { writable: !0, value: void 0 }),
            (0, tr._)(this, fA, null),
            (0, tr._)(this, fE, null),
            (0, tr._)(this, fk, 0),
            (0, tr._)(this, fN, fl),
            (0, tr._)(this, fP, null),
            (0, tr._)(this, fT, null),
            (0, tr._)(this, fS, null),
            (0, tr._)(this, f_, "0x"),
            (0, tr._)(this, fO, fl),
            (0, tr._)(this, fR, fl),
            (0, tr._)(this, fC, null),
            (0, tr._)(this, fI, null),
            (0, tr._)(this, fB, null),
            (0, tr._)(this, fU, null),
            (0, tr._)(this, fM, null),
            (0, tr._)(this, fj, null),
            (0, tr._)(this, fF, null);
        }
      }
      function fz(e, t) {
        nf(
          !e || null != this.signature,
          "cannot serialize unsigned transaction; maybe you meant .unsignedSerialized",
          "UNSUPPORTED_OPERATION",
          { operation: ".serialized" }
        );
        let r = e ? this.signature : null;
        switch (this.inferType()) {
          case 0:
            return (function (e, t) {
              let r = [
                  fy(e.nonce, "nonce"),
                  fy(e.gasPrice || 0, "gasPrice"),
                  fy(e.gasLimit, "gasLimit"),
                  e.to || "0x",
                  fy(e.value, "value"),
                  e.data,
                ],
                n = fl;
              if (e.chainId != fl)
                (n = nH(e.chainId, "tx.chainId")),
                  nh(
                    !t || null == t.networkV || t.legacyChainId === n,
                    "tx.chainId/sig.v mismatch",
                    "sig",
                    t
                  );
              else if (e.signature) {
                let t = e.signature.legacyChainId;
                null != t && (n = t);
              }
              if (!t)
                return (
                  n !== fl && (r.push(nX(n)), r.push("0x"), r.push("0x")), sD(r)
                );
              let a = BigInt(27 + t.yParity);
              return (
                n !== fl
                  ? (a = ct.getChainIdV(n, t.v))
                  : BigInt(t.v) !== a &&
                    nh(!1, "tx.chainId/sig.v mismatch", "sig", t),
                r.push(nX(a)),
                r.push(nX(t.r)),
                r.push(nX(t.s)),
                sD(r)
              );
            })(this, r);
          case 1:
            let n = [
              fy(this.chainId, "chainId"),
              fy(this.nonce, "nonce"),
              fy(this.gasPrice || 0, "gasPrice"),
              fy(this.gasLimit, "gasLimit"),
              this.to || "0x",
              fy(this.value, "value"),
              this.data,
              fw(this.accessList || []),
            ];
            return (
              r &&
                (n.push(fy(r.yParity, "recoveryParam")),
                n.push(nX(r.r)),
                n.push(nX(r.s))),
              nk(["0x01", sD(n)])
            );
          case 2:
            let a = [
              fy(this.chainId, "chainId"),
              fy(this.nonce, "nonce"),
              fy(this.maxPriorityFeePerGas || 0, "maxPriorityFeePerGas"),
              fy(this.maxFeePerGas || 0, "maxFeePerGas"),
              fy(this.gasLimit, "gasLimit"),
              this.to || "0x",
              fy(this.value, "value"),
              this.data,
              fw(this.accessList || []),
            ];
            return (
              r &&
                (a.push(fy(r.yParity, "yParity")),
                a.push(nX(r.r)),
                a.push(nX(r.s))),
              nk(["0x02", sD(a)])
            );
          case 3:
            return (function (e, t, r) {
              let n = [
                fy(e.chainId, "chainId"),
                fy(e.nonce, "nonce"),
                fy(e.maxPriorityFeePerGas || 0, "maxPriorityFeePerGas"),
                fy(e.maxFeePerGas || 0, "maxFeePerGas"),
                fy(e.gasLimit, "gasLimit"),
                e.to || sK,
                fy(e.value, "value"),
                e.data,
                fw(e.accessList || []),
                fy(e.maxFeePerBlobGas || 0, "maxFeePerBlobGas"),
                (function (e, t) {
                  nh(Array.isArray(e), "invalid ".concat(t), "value", e);
                  for (let t = 0; t < e.length; t++)
                    nh(
                      nv(e[t], 32),
                      "invalid ${ param } hash",
                      "value[".concat(t, "]"),
                      e[t]
                    );
                  return e;
                })(e.blobVersionedHashes || [], "blobVersionedHashes"),
              ];
              return t &&
                (n.push(fy(t.yParity, "yParity")),
                n.push(nX(t.r)),
                n.push(nX(t.s)),
                r)
                ? nk([
                    "0x03",
                    sD([
                      n,
                      r.map((e) => e.data),
                      r.map((e) => e.commitment),
                      r.map((e) => e.proof),
                    ]),
                  ])
                : nk(["0x03", sD(n)]);
            })(this, r, t ? this.blobs : null);
          case 4:
            let i = [
              fy(this.chainId, "chainId"),
              fy(this.nonce, "nonce"),
              fy(this.maxPriorityFeePerGas || 0, "maxPriorityFeePerGas"),
              fy(this.maxFeePerGas || 0, "maxFeePerGas"),
              fy(this.gasLimit, "gasLimit"),
              this.to || "0x",
              fy(this.value, "value"),
              this.data,
              fw(this.accessList || []),
              (this.authorizationList || []).map((e) => [
                fy(e.chainId, "chainId"),
                e.address,
                fy(e.nonce, "nonce"),
                fy(e.signature.yParity, "yParity"),
                nX(e.signature.r),
                nX(e.signature.s),
              ]),
            ];
            return (
              r &&
                (i.push(fy(r.yParity, "yParity")),
                i.push(nX(r.r)),
                i.push(nX(r.s))),
              nk(["0x04", sD(i)])
            );
        }
        nf(!1, "unsupported transaction type", "UNSUPPORTED_OPERATION", {
          operation: ".serialized",
        });
      }
      var fG = e.i(605073);
      let fW = "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",
        fV = null,
        fH = BigInt(0),
        fK = BigInt(58);
      function fq(e) {
        let t = ny(e),
          r = nQ(t),
          n = "";
        for (; r; ) (n = fW[Number(r % fK)] + n), (r /= fK);
        for (let e = 0; e < t.length && !t[e]; e++) n = fW[0] + n;
        return n;
      }
      function fQ(e) {
        let t = fH;
        for (let r = 0; r < e.length; r++)
          (t *= fK),
            (t += (function (e) {
              if (null == fV) {
                fV = {};
                for (let e = 0; e < fW.length; e++) fV[fW[e]] = BigInt(e);
              }
              let t = fV[e];
              return nh(null != t, "invalid base58 value", "letter", e), t;
            })(e[r]));
        return t;
      }
      function fJ(e) {
        return (
          e.match(/^ipfs:\/\/ipfs\//i)
            ? (e = e.substring(12))
            : e.match(/^ipfs:\/\//i)
            ? (e = e.substring(7))
            : nh(!1, "unsupported IPFS format", "link", e),
          "https://gateway.ipfs.io/ipfs/".concat(e)
        );
      }
      class fZ {
        connect(e) {
          return this;
        }
        supportsCoinType(e) {
          return !1;
        }
        async encodeAddress(e, t) {
          throw Error("unsupported coin");
        }
        async decodeAddress(e, t) {
          throw Error("unsupported coin");
        }
        constructor(e) {
          (0, eU._)(this, "name", void 0), no(this, { name: e });
        }
      }
      let fY = RegExp("^(ipfs)://(.*)$", "i"),
        fX = [
          RegExp("^(https)://(.*)$", "i"),
          RegExp("^(data):(.*)$", "i"),
          fY,
          RegExp("^eip155:[0-9]+/(erc[0-9]+):(.*)$", "i"),
        ];
      var f$ = new WeakMap(),
        f0 = new WeakMap(),
        f1 = new WeakSet();
      class f2 {
        async supportsWildcard() {
          return (
            null == (0, te._)(this, f$) &&
              (0, tr._)(
                this,
                f$,
                (async () => {
                  try {
                    return await (0, te._)(this, f0).supportsInterface(
                      "0x9061b923"
                    );
                  } catch (e) {
                    if (nc(e, "CALL_EXCEPTION")) return !1;
                    throw ((0, tr._)(this, f$, null), e);
                  }
                })()
              ),
            await (0, te._)(this, f$)
          );
        }
        async getAddress(e) {
          if ((null == e && (e = 60), 60 === e))
            try {
              let e = await (0, tn._)(this, f1, f3).call(this, "addr(bytes32)");
              if (null == e || e === sK) return null;
              return e;
            } catch (e) {
              if (nc(e, "CALL_EXCEPTION")) return null;
              throw e;
            }
          if (e >= 0 && e < 0x80000000) {
            let t = e + 0x80000000,
              r = await (0, tn._)(this, f1, f3).call(
                this,
                "addr(bytes32,uint)",
                [t]
              );
            if (nv(r, 20)) return a9(r);
          }
          let t = null;
          for (let r of this.provider.plugins)
            if (r instanceof fZ && r.supportsCoinType(e)) {
              t = r;
              break;
            }
          if (null == t) return null;
          let r = await (0, tn._)(this, f1, f3).call(
            this,
            "addr(bytes32,uint)",
            [e]
          );
          if (null == r || "0x" === r) return null;
          let n = await t.decodeAddress(e, r);
          if (null != n) return n;
          nf(!1, "invalid coin data", "UNSUPPORTED_OPERATION", {
            operation: "getAddress(".concat(e, ")"),
            info: { coinType: e, data: r },
          });
        }
        async getText(e) {
          let t = await (0, tn._)(this, f1, f3).call(
            this,
            "text(bytes32,string)",
            [e]
          );
          return null == t || "0x" === t ? null : t;
        }
        async getContentHash() {
          let e = await (0, tn._)(this, f1, f3).call(
            this,
            "contenthash(bytes32)"
          );
          if (null == e || "0x" === e) return null;
          let t = e.match(
            /^0x(e3010170|e5010172)(([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f]*))$/
          );
          if (t) {
            let e = "e3010170" === t[1] ? "ipfs" : "ipns",
              r = parseInt(t[4], 16);
            if (t[5].length === 2 * r)
              return "".concat(e, "://").concat(fq("0x" + t[2]));
          }
          let r = e.match(/^0xe40101fa011b20([0-9a-f]*)$/);
          if (r && 64 === r[1].length) return "bzz://".concat(r[1]);
          nf(
            !1,
            "invalid or unsupported content hash data",
            "UNSUPPORTED_OPERATION",
            { operation: "getContentHash()", info: { data: e } }
          );
        }
        async getAvatar() {
          return (await this._getAvatar()).url;
        }
        async _getAvatar() {
          let e = [{ type: "name", value: this.name }];
          try {
            let t = await this.getText("avatar");
            if (null == t)
              return (
                e.push({ type: "!avatar", value: "" }),
                { url: null, linkage: e }
              );
            e.push({ type: "avatar", value: t });
            for (let r = 0; r < fX.length; r++) {
              let n = t.match(fX[r]);
              if (null == n) continue;
              let a = n[1].toLowerCase();
              switch (a) {
                case "https":
                case "data":
                  return (
                    e.push({ type: "url", value: t }), { linkage: e, url: t }
                  );
                case "ipfs": {
                  let r = fJ(t);
                  return (
                    e.push({ type: "ipfs", value: t }),
                    e.push({ type: "url", value: r }),
                    { linkage: e, url: r }
                  );
                }
                case "erc721":
                case "erc1155": {
                  let r = "erc721" === a ? "tokenURI(uint256)" : "uri(uint256)";
                  e.push({ type: a, value: t });
                  let i = await this.getAddress();
                  if (null == i)
                    return (
                      e.push({ type: "!owner", value: "" }),
                      { url: null, linkage: e }
                    );
                  let s = (n[2] || "").split("/");
                  if (2 !== s.length)
                    return (
                      e.push({
                        type: "!".concat(a, "caip"),
                        value: n[2] || "",
                      }),
                      { url: null, linkage: e }
                    );
                  let o = s[1],
                    l = new oz(
                      s[0],
                      [
                        "function tokenURI(uint) view returns (string)",
                        "function ownerOf(uint) view returns (address)",
                        "function uri(uint) view returns (string)",
                        "function balanceOf(address, uint256) view returns (uint)",
                      ],
                      this.provider
                    );
                  if ("erc721" === a) {
                    let t = await l.ownerOf(o);
                    if (i !== t)
                      return (
                        e.push({ type: "!owner", value: t }),
                        { url: null, linkage: e }
                      );
                    e.push({ type: "owner", value: t });
                  } else if ("erc1155" === a) {
                    let t = await l.balanceOf(i, o);
                    if (!t)
                      return (
                        e.push({ type: "!balance", value: "0" }),
                        { url: null, linkage: e }
                      );
                    e.push({ type: "balance", value: t.toString() });
                  }
                  let c = await l[r](o);
                  if (null == c || "0x" === c)
                    return (
                      e.push({ type: "!metadata-url", value: "" }),
                      { url: null, linkage: e }
                    );
                  e.push({ type: "metadata-url-base", value: c }),
                    "erc1155" === a &&
                      ((c = c.replace("{id}", nY(o, 32).substring(2))),
                      e.push({ type: "metadata-url-expanded", value: c })),
                    c.match(/^ipfs:/i) && (c = fJ(c)),
                    e.push({ type: "metadata-url", value: c });
                  let u = {},
                    d = await new dD(c).send();
                  d.assertOk();
                  try {
                    u = d.bodyJson;
                  } catch (t) {
                    try {
                      e.push({ type: "!metadata", value: d.bodyText });
                    } catch (r) {
                      let t = d.body;
                      t && e.push({ type: "!metadata", value: n_(t) });
                    }
                    return { url: null, linkage: e };
                  }
                  if (!u)
                    return (
                      e.push({ type: "!metadata", value: "" }),
                      { url: null, linkage: e }
                    );
                  e.push({ type: "metadata", value: JSON.stringify(u) });
                  let f = u.image;
                  if ("string" != typeof f)
                    return (
                      e.push({ type: "!imageUrl", value: "" }),
                      { url: null, linkage: e }
                    );
                  if (f.match(/^(https:\/\/|data:)/i));
                  else {
                    let t = f.match(fY);
                    if (null == t)
                      return (
                        e.push({ type: "!imageUrl-ipfs", value: f }),
                        { url: null, linkage: e }
                      );
                    e.push({ type: "imageUrl-ipfs", value: f }), (f = fJ(f));
                  }
                  return (
                    e.push({ type: "url", value: f }), { linkage: e, url: f }
                  );
                }
              }
            }
          } catch (e) {}
          return { linkage: e, url: null };
        }
        static async getEnsAddress(e) {
          let t = await e.getNetwork(),
            r = t.getPlugin("org.ethers.plugins.network.Ens");
          return (
            nf(r, "network does not support ENS", "UNSUPPORTED_OPERATION", {
              operation: "getEnsAddress",
              info: { network: t },
            }),
            r.address
          );
        }
        static async fromName(e, t) {
          let r = t;
          for (;;) {
            if ("" === r || "." === r || ("eth" !== t && "eth" === r))
              return null;
            let n = await (0, fG._)(f2, f2, f4).call(f2, e, r);
            if (null != n) {
              let a = new f2(e, n, t);
              if (r !== t && !(await a.supportsWildcard())) return null;
              return a;
            }
            r = r.split(".").slice(1).join(".");
          }
        }
        constructor(e, t, r) {
          (0, ta._)(this, f1),
            (0, eU._)(this, "provider", void 0),
            (0, eU._)(this, "address", void 0),
            (0, eU._)(this, "name", void 0),
            (0, tt._)(this, f$, { writable: !0, value: void 0 }),
            (0, tt._)(this, f0, { writable: !0, value: void 0 }),
            no(this, { provider: e, address: t, name: r }),
            (0, tr._)(this, f$, null),
            (0, tr._)(
              this,
              f0,
              new oz(
                t,
                [
                  "function supportsInterface(bytes4) view returns (bool)",
                  "function resolve(bytes, bytes) view returns (bytes)",
                  "function addr(bytes32) view returns (address)",
                  "function addr(bytes32, uint) view returns (bytes)",
                  "function text(bytes32, string) view returns (string)",
                  "function contenthash(bytes32) view returns (bytes)",
                ],
                e
              )
            );
        }
      }
      async function f3(e, t) {
        t = (t || []).slice();
        let r = (0, te._)(this, f0).interface;
        t.unshift(uM(this.name));
        let n = null;
        (await this.supportsWildcard()) &&
          (nf((n = r.getFunction(e)), "missing fragment", "UNKNOWN_ERROR", {
            info: { funcName: e },
          }),
          (t = [uj(this.name, 255), r.encodeFunctionData(n, t)]),
          (e = "resolve(bytes,bytes)")),
          t.push({ enableCcipRead: !0 });
        try {
          let a = await (0, te._)(this, f0)[e](...t);
          if (n) return r.decodeFunctionResult(n, a)[0];
          return a;
        } catch (e) {
          if (!nc(e, "CALL_EXCEPTION")) throw e;
        }
        return null;
      }
      async function f4(e, t) {
        let r = await f2.getEnsAddress(e);
        try {
          let n = new oz(
              r,
              ["function resolver(bytes32) view returns (address)"],
              e
            ),
            a = await n.resolver(uM(t), { enableCcipRead: !0 });
          if (a === sK) return null;
          return a;
        } catch (e) {
          throw e;
        }
      }
      let f8 = BigInt(0);
      function f5(e, t) {
        return function (r) {
          return null == r ? t : e(r);
        };
      }
      function f6(e, t) {
        return (r) => {
          if (t && null == r) return null;
          if (!Array.isArray(r)) throw Error("not an array");
          return r.map((t) => e(t));
        };
      }
      function f9(e, t) {
        return (r) => {
          let n = {};
          for (let a in e) {
            let i = a;
            if (t && a in t && !(i in r)) {
              for (let e of t[a])
                if (e in r) {
                  i = e;
                  break;
                }
            }
            try {
              let t = e[a](r[i]);
              void 0 !== t && (n[a] = t);
            } catch (t) {
              let e = t instanceof Error ? t.message : "not-an-error";
              nf(
                !1,
                "invalid value for value.".concat(a, " (").concat(e, ")"),
                "BAD_DATA",
                { value: r }
              );
            }
          }
          return n;
        };
      }
      function f7(e) {
        return nh(nv(e, !0), "invalid data", "value", e), e;
      }
      function he(e) {
        return nh(nv(e, 32), "invalid hash", "value", e), e;
      }
      let ht = f9(
          {
            address: a9,
            blockHash: he,
            blockNumber: nJ,
            data: f7,
            index: nJ,
            removed: f5(function (e) {
              switch (e) {
                case !0:
                case "true":
                  return !0;
                case !1:
                case "false":
                  return !1;
              }
              nh(!1, "invalid boolean; ".concat(JSON.stringify(e)), "value", e);
            }, !1),
            topics: f6(he),
            transactionHash: he,
            transactionIndex: nJ,
          },
          { index: ["logIndex"] }
        ),
        hr = f9(
          {
            hash: f5(he),
            parentHash: he,
            parentBeaconBlockRoot: f5(he, null),
            number: nJ,
            timestamp: nJ,
            nonce: f5(f7),
            difficulty: nH,
            gasLimit: nH,
            gasUsed: nH,
            stateRoot: f5(he, null),
            receiptsRoot: f5(he, null),
            blobGasUsed: f5(nH, null),
            excessBlobGas: f5(nH, null),
            miner: f5(a9),
            prevRandao: f5(he, null),
            extraData: f7,
            baseFeePerGas: f5(nH),
          },
          { prevRandao: ["mixHash"] }
        ),
        hn = f9(
          {
            transactionIndex: nJ,
            blockNumber: nJ,
            transactionHash: he,
            address: a9,
            topics: f6(he),
            data: f7,
            index: nJ,
            blockHash: he,
          },
          { index: ["logIndex"] }
        ),
        ha = f9(
          {
            to: f5(a9, null),
            from: f5(a9, null),
            contractAddress: f5(a9, null),
            index: nJ,
            root: f5(n_),
            gasUsed: nH,
            blobGasUsed: f5(nH, null),
            logsBloom: f5(f7),
            blockHash: he,
            hash: he,
            logs: f6(function (e) {
              return hn(e);
            }),
            blockNumber: nJ,
            cumulativeGasUsed: nH,
            effectiveGasPrice: f5(nH),
            blobGasPrice: f5(nH, null),
            status: f5(nJ),
            type: f5(nJ, 0),
          },
          {
            effectiveGasPrice: ["gasPrice"],
            hash: ["transactionHash"],
            index: ["transactionIndex"],
          }
        );
      function hi(e) {
        e.to &&
          nH(e.to) === f8 &&
          (e.to = "0x0000000000000000000000000000000000000000");
        let t = f9(
          {
            hash: he,
            index: f5(nJ, void 0),
            type: (e) => ("0x" === e || null == e ? 0 : nJ(e)),
            accessList: f5(s2, null),
            blobVersionedHashes: f5(f6(he, !0), null),
            authorizationList: f5(
              f6((e) => {
                let t;
                if (e.signature) t = e.signature;
                else {
                  let r = e.yParity;
                  "0x1b" === r ? (r = 0) : "0x1c" === r && (r = 1),
                    (t = Object.assign({}, e, { yParity: r }));
                }
                return {
                  address: a9(e.address),
                  chainId: nH(e.chainId),
                  nonce: nH(e.nonce),
                  signature: ct.from(t),
                };
              }, !1),
              null
            ),
            blockHash: f5(he, null),
            blockNumber: f5(nJ, null),
            transactionIndex: f5(nJ, null),
            from: a9,
            gasPrice: f5(nH),
            maxPriorityFeePerGas: f5(nH),
            maxFeePerGas: f5(nH),
            maxFeePerBlobGas: f5(nH, null),
            gasLimit: nH,
            to: f5(a9, null),
            value: nH,
            nonce: nJ,
            data: f7,
            creates: f5(a9, null),
            chainId: f5(nH, null),
          },
          { data: ["input"], gasLimit: ["gas"], index: ["transactionIndex"] }
        )(e);
        if (
          (null == t.to && null == t.creates && (t.creates = sL(t)),
          (1 === e.type || 2 === e.type) &&
            null == e.accessList &&
            (t.accessList = []),
          e.signature
            ? (t.signature = ct.from(e.signature))
            : (t.signature = ct.from(e)),
          null == t.chainId)
        ) {
          let e = t.signature.legacyChainId;
          null != e && (t.chainId = e);
        }
        return t.blockHash && nH(t.blockHash) === f8 && (t.blockHash = null), t;
      }
      function hs(e) {
        return JSON.parse(JSON.stringify(e));
      }
      var ho = new WeakMap(),
        hl = new WeakMap(),
        hc = new WeakMap(),
        hu = new WeakMap(),
        hd = new WeakSet();
      class hf {
        get pollingInterval() {
          return (0, te._)(this, hc);
        }
        set pollingInterval(e) {
          (0, tr._)(this, hc, e);
        }
        start() {
          (0, te._)(this, hl) ||
            ((0, tr._)(
              this,
              hl,
              (0, te._)(this, ho)._setTimeout(
                (0, tn._)(this, hd, hh).bind(this),
                (0, te._)(this, hc)
              )
            ),
            (0, tn._)(this, hd, hh).call(this));
        }
        stop() {
          (0, te._)(this, hl) &&
            ((0, te._)(this, ho)._clearTimeout((0, te._)(this, hl)),
            (0, tr._)(this, hl, null));
        }
        pause(e) {
          this.stop(), e && (0, tr._)(this, hu, -2);
        }
        resume() {
          this.start();
        }
        constructor(e) {
          (0, ta._)(this, hd),
            (0, tt._)(this, ho, { writable: !0, value: void 0 }),
            (0, tt._)(this, hl, { writable: !0, value: void 0 }),
            (0, tt._)(this, hc, { writable: !0, value: void 0 }),
            (0, tt._)(this, hu, { writable: !0, value: void 0 }),
            (0, tr._)(this, ho, e),
            (0, tr._)(this, hl, null),
            (0, tr._)(this, hc, 4e3),
            (0, tr._)(this, hu, -2);
        }
      }
      async function hh() {
        try {
          let e = await (0, te._)(this, ho).getBlockNumber();
          if (-2 === (0, te._)(this, hu)) return void (0, tr._)(this, hu, e);
          if (e !== (0, te._)(this, hu)) {
            for (let t = (0, te._)(this, hu) + 1; t <= e; t++) {
              if (null == (0, te._)(this, hl)) return;
              await (0, te._)(this, ho).emit("block", t);
            }
            (0, tr._)(this, hu, e);
          }
        } catch (e) {}
        null != (0, te._)(this, hl) &&
          (0, tr._)(
            this,
            hl,
            (0, te._)(this, ho)._setTimeout(
              (0, tn._)(this, hd, hh).bind(this),
              (0, te._)(this, hc)
            )
          );
      }
      var hp = new WeakMap(),
        hx = new WeakMap(),
        hg = new WeakMap();
      class hb {
        async _poll(e, t) {
          throw Error("sub-classes must override this");
        }
        start() {
          (0, te._)(this, hg) ||
            ((0, tr._)(this, hg, !0),
            (0, te._)(this, hx).call(this, -2),
            (0, te._)(this, hp).on("block", (0, te._)(this, hx)));
        }
        stop() {
          (0, te._)(this, hg) &&
            ((0, tr._)(this, hg, !1),
            (0, te._)(this, hp).off("block", (0, te._)(this, hx)));
        }
        pause(e) {
          this.stop();
        }
        resume() {
          this.start();
        }
        constructor(e) {
          (0, tt._)(this, hp, { writable: !0, value: void 0 }),
            (0, tt._)(this, hx, { writable: !0, value: void 0 }),
            (0, tt._)(this, hg, { writable: !0, value: void 0 }),
            (0, tr._)(this, hp, e),
            (0, tr._)(this, hg, !1),
            (0, tr._)(this, hx, (e) => {
              this._poll(e, (0, te._)(this, hp));
            });
        }
      }
      var hm = new WeakMap(),
        hy = new WeakMap();
      class hw extends hb {
        pause(e) {
          e && (0, tr._)(this, hy, -2), super.pause(e);
        }
        async _poll(e, t) {
          let r = await t.getBlock((0, te._)(this, hm));
          null != r &&
            (-2 === (0, te._)(this, hy)
              ? (0, tr._)(this, hy, r.number)
              : r.number > (0, te._)(this, hy) &&
                (t.emit((0, te._)(this, hm), r.number),
                (0, tr._)(this, hy, r.number)));
        }
        constructor(e, t) {
          super(e),
            (0, tt._)(this, hm, { writable: !0, value: void 0 }),
            (0, tt._)(this, hy, { writable: !0, value: void 0 }),
            (0, tr._)(this, hm, t),
            (0, tr._)(this, hy, -2);
        }
      }
      var hv = new WeakMap();
      class hA extends hb {
        async _poll(e, t) {
          throw Error("@TODO");
        }
        constructor(e, t) {
          super(e),
            (0, tt._)(this, hv, { writable: !0, value: void 0 }),
            (0, tr._)(this, hv, hs(t));
        }
      }
      var hE = new WeakMap();
      class h_ extends hb {
        async _poll(e, t) {
          let r = await t.getTransactionReceipt((0, te._)(this, hE));
          r && t.emit((0, te._)(this, hE), r);
        }
        constructor(e, t) {
          super(e),
            (0, tt._)(this, hE, { writable: !0, value: void 0 }),
            (0, tr._)(this, hE, t);
        }
      }
      var hk = new WeakMap(),
        hN = new WeakMap(),
        hP = new WeakMap(),
        hT = new WeakMap(),
        hS = new WeakMap(),
        hO = new WeakSet();
      class hR {
        start() {
          (0, te._)(this, hT) ||
            ((0, tr._)(this, hT, !0),
            -2 === (0, te._)(this, hS) &&
              (0, te._)(this, hk)
                .getBlockNumber()
                .then((e) => {
                  (0, tr._)(this, hS, e);
                }),
            (0, te._)(this, hk).on("block", (0, te._)(this, hP)));
        }
        stop() {
          (0, te._)(this, hT) &&
            ((0, tr._)(this, hT, !1),
            (0, te._)(this, hk).off("block", (0, te._)(this, hP)));
        }
        pause(e) {
          this.stop(), e && (0, tr._)(this, hS, -2);
        }
        resume() {
          this.start();
        }
        constructor(e, t) {
          (0, ta._)(this, hO),
            (0, tt._)(this, hk, { writable: !0, value: void 0 }),
            (0, tt._)(this, hN, { writable: !0, value: void 0 }),
            (0, tt._)(this, hP, { writable: !0, value: void 0 }),
            (0, tt._)(this, hT, { writable: !0, value: void 0 }),
            (0, tt._)(this, hS, { writable: !0, value: void 0 }),
            (0, tr._)(this, hk, e),
            (0, tr._)(this, hN, hs(t)),
            (0, tr._)(this, hP, (0, tn._)(this, hO, hC).bind(this)),
            (0, tr._)(this, hT, !1),
            (0, tr._)(this, hS, -2);
        }
      }
      async function hC(e) {
        if (-2 === (0, te._)(this, hS)) return;
        let t = hs((0, te._)(this, hN));
        (t.fromBlock = (0, te._)(this, hS) + 1), (t.toBlock = e);
        let r = await (0, te._)(this, hk).getLogs(t);
        if (0 === r.length) {
          (0, te._)(this, hS) < e - 60 && (0, tr._)(this, hS, e - 60);
          return;
        }
        for (let e of r)
          (0, te._)(this, hk).emit((0, te._)(this, hN), e),
            (0, tr._)(this, hS, e.blockNumber);
      }
      let hI = BigInt(2);
      function hB(e) {
        return e && "function" == typeof e.then;
      }
      function hU(e, t) {
        return (
          e +
          ":" +
          JSON.stringify(t, (e, t) => {
            if (null == t) return "null";
            if ("bigint" == typeof t) return "bigint:".concat(t.toString());
            if ("string" == typeof t) return t.toLowerCase();
            if ("object" == typeof t && !Array.isArray(t)) {
              let e = Object.keys(t);
              return e.sort(), e.reduce((e, r) => ((e[r] = t[r]), e), {});
            }
            return t;
          })
        );
      }
      class hM {
        start() {}
        stop() {}
        pause(e) {}
        resume() {}
        constructor(e) {
          (0, eU._)(this, "name", void 0), no(this, { name: e });
        }
      }
      function hj(e) {
        return (e = Array.from(new Set(e).values())).sort(), e;
      }
      async function hF(e, t) {
        if (null == e) throw Error("invalid event");
        if ((Array.isArray(e) && (e = { topics: e }), "string" == typeof e))
          switch (e) {
            case "block":
            case "debug":
            case "error":
            case "finalized":
            case "network":
            case "pending":
            case "safe":
              return { type: e, tag: e };
          }
        if (nv(e, 32)) {
          let t = e.toLowerCase();
          return { type: "transaction", tag: hU("tx", { hash: t }), hash: t };
        }
        if (e.orphan) {
          let t = e;
          return {
            type: "orphan",
            tag: hU("orphan", t),
            filter: JSON.parse(JSON.stringify(t)),
          };
        }
        if (e.address || e.topics) {
          let r = e,
            n = {
              topics: (r.topics || []).map((e) =>
                null == e
                  ? null
                  : Array.isArray(e)
                  ? hj(e.map((e) => e.toLowerCase()))
                  : e.toLowerCase()
              ),
            };
          if (r.address) {
            let e = [],
              a = [],
              i = (r) => {
                nv(r)
                  ? e.push(r)
                  : a.push(
                      (async () => {
                        e.push(await sH(r, t));
                      })()
                    );
              };
            Array.isArray(r.address) ? r.address.forEach(i) : i(r.address),
              a.length && (await Promise.all(a)),
              (n.address = hj(e.map((e) => e.toLowerCase())));
          }
          return { filter: n, tag: hU("event", n), type: "event" };
        }
        nh(!1, "unknown ProviderEvent", "event", e);
      }
      function hD() {
        return new Date().getTime();
      }
      let hL = { cacheTimeout: 250, pollingInterval: 4e3 };
      var hz = new WeakMap(),
        hG = new WeakMap(),
        hW = new WeakMap(),
        hV = new WeakMap(),
        hH = new WeakMap(),
        hK = new WeakMap(),
        hq = new WeakMap(),
        hQ = new WeakMap(),
        hJ = new WeakMap(),
        hZ = new WeakMap(),
        hY = new WeakMap(),
        hX = new WeakMap(),
        h$ = new WeakSet(),
        h0 = new WeakSet(),
        h1 = new WeakSet(),
        h2 = new WeakSet(),
        h3 = new WeakSet(),
        h4 = new WeakSet(),
        h8 = new WeakSet();
      class h5 {
        get pollingInterval() {
          return (0, te._)(this, hX).pollingInterval;
        }
        get provider() {
          return this;
        }
        get plugins() {
          return Array.from((0, te._)(this, hG).values());
        }
        attachPlugin(e) {
          if ((0, te._)(this, hG).get(e.name))
            throw Error("cannot replace existing plugin: ".concat(e.name, " "));
          return (0, te._)(this, hG).set(e.name, e.connect(this)), this;
        }
        getPlugin(e) {
          return (0, te._)(this, hG).get(e) || null;
        }
        get disableCcipRead() {
          return (0, te._)(this, hY);
        }
        set disableCcipRead(e) {
          (0, tr._)(this, hY, !!e);
        }
        async ccipReadFetch(e, t, r) {
          if (this.disableCcipRead || 0 === r.length || null == e.to)
            return null;
          let n = e.to.toLowerCase(),
            a = t.toLowerCase(),
            i = [];
          for (let t = 0; t < r.length; t++) {
            let s,
              o = r[t],
              l = new dD(o.replace("{sender}", n).replace("{data}", a));
            -1 === o.indexOf("{data}") && (l.body = { data: a, sender: n }),
              this.emit("debug", {
                action: "sendCcipReadFetchRequest",
                request: l,
                index: t,
                urls: r,
              });
            let c = "unknown error";
            try {
              s = await l.send();
            } catch (e) {
              i.push(e.message),
                this.emit("debug", {
                  action: "receiveCcipReadFetchError",
                  request: l,
                  result: { error: e },
                });
              continue;
            }
            try {
              let e = s.bodyJson;
              if (e.data)
                return (
                  this.emit("debug", {
                    action: "receiveCcipReadFetchResult",
                    request: l,
                    result: e,
                  }),
                  e.data
                );
              e.message && (c = e.message),
                this.emit("debug", {
                  action: "receiveCcipReadFetchError",
                  request: l,
                  result: e,
                });
            } catch (e) {}
            nf(
              s.statusCode < 400 || s.statusCode >= 500,
              "response not found during CCIP fetch: ".concat(c),
              "OFFCHAIN_FAULT",
              {
                reason: "404_MISSING_RESOURCE",
                transaction: e,
                info: { url: o, errorMessage: c },
              }
            ),
              i.push(c);
          }
          nf(
            !1,
            "error encountered during CCIP fetch: ".concat(
              i.map((e) => JSON.stringify(e)).join(", ")
            ),
            "OFFCHAIN_FAULT",
            {
              reason: "500_SERVER_ERROR",
              transaction: e,
              info: { urls: r, errorMessages: i },
            }
          );
        }
        _wrapBlock(e, t) {
          return new s7(
            (function (e) {
              let t = hr(e);
              return (
                (t.transactions = e.transactions.map((e) =>
                  "string" == typeof e ? e : hi(e)
                )),
                t
              );
            })(e),
            this
          );
        }
        _wrapLog(e, t) {
          return new oe(ht(e), this);
        }
        _wrapTransactionReceipt(e, t) {
          return new or(ha(e), this);
        }
        _wrapTransactionResponse(e, t) {
          return new oa(hi(e), this);
        }
        _detectNetwork() {
          nf(!1, "sub-classes must implement this", "UNSUPPORTED_OPERATION", {
            operation: "_detectNetwork",
          });
        }
        async _perform(e) {
          nf(
            !1,
            "unsupported method: ".concat(e.method),
            "UNSUPPORTED_OPERATION",
            { operation: e.method, info: e }
          );
        }
        async getBlockNumber() {
          let e = nJ(
            await (0, tn._)(this, h$, h6).call(this, {
              method: "getBlockNumber",
            }),
            "%response"
          );
          return (0, te._)(this, hQ) >= 0 && (0, tr._)(this, hQ, e), e;
        }
        _getAddress(e) {
          return sH(e, this);
        }
        _getBlockTag(e) {
          if (null == e) return "latest";
          switch (e) {
            case "earliest":
              return "0x0";
            case "finalized":
            case "latest":
            case "pending":
            case "safe":
              return e;
          }
          return nv(e)
            ? nv(e, 32)
              ? e
              : n$(e)
            : ("bigint" == typeof e && (e = nJ(e, "blockTag")),
              "number" == typeof e)
            ? e >= 0
              ? n$(e)
              : (0, te._)(this, hQ) >= 0
              ? n$((0, te._)(this, hQ) + e)
              : this.getBlockNumber().then((t) => n$(t + e))
            : void nh(!1, "invalid blockTag", "blockTag", e);
        }
        _getFilter(e) {
          let t,
            r,
            n = (e.topics || []).map((e) =>
              null == e
                ? null
                : Array.isArray(e)
                ? hj(e.map((e) => e.toLowerCase()))
                : e.toLowerCase()
            ),
            a = "blockHash" in e ? e.blockHash : void 0,
            i = (e, t, r) => {
              let i;
              switch (e.length) {
                case 0:
                  break;
                case 1:
                  i = e[0];
                  break;
                default:
                  e.sort(), (i = e);
              }
              if (a && (null != t || null != r)) throw Error("invalid filter");
              let s = {};
              return (
                i && (s.address = i),
                n.length && (s.topics = n),
                t && (s.fromBlock = t),
                r && (s.toBlock = r),
                a && (s.blockHash = a),
                s
              );
            },
            s = [];
          if (e.address)
            if (Array.isArray(e.address))
              for (let t of e.address) s.push(this._getAddress(t));
            else s.push(this._getAddress(e.address));
          return (
            "fromBlock" in e && (t = this._getBlockTag(e.fromBlock)),
            ("toBlock" in e && (r = this._getBlockTag(e.toBlock)),
            s.filter((e) => "string" != typeof e).length ||
              (null != t && "string" != typeof t) ||
              (null != r && "string" != typeof r))
              ? Promise.all([Promise.all(s), t, r]).then((e) =>
                  i(e[0], e[1], e[2])
                )
              : i(s, t, r)
          );
        }
        _getTransactionRequest(e) {
          let t = s6(e),
            r = [];
          if (
            (["to", "from"].forEach((e) => {
              if (null == t[e]) return;
              let n = sH(t[e], this);
              hB(n)
                ? r.push(
                    (async function () {
                      t[e] = await n;
                    })()
                  )
                : (t[e] = n);
            }),
            null != t.blockTag)
          ) {
            let e = this._getBlockTag(t.blockTag);
            hB(e)
              ? r.push(
                  (async function () {
                    t.blockTag = await e;
                  })()
                )
              : (t.blockTag = e);
          }
          return r.length
            ? (async function () {
                return await Promise.all(r), t;
              })()
            : t;
        }
        async getNetwork() {
          if (null == (0, te._)(this, hH)) {
            let e = (async () => {
              try {
                let e = await this._detectNetwork();
                return this.emit("network", e, null), e;
              } catch (t) {
                throw (
                  ((0, te._)(this, hH) === e && (0, tr._)(this, hH, null), t)
                );
              }
            })();
            return (0, tr._)(this, hH, e), (await e).clone();
          }
          let e = (0, te._)(this, hH),
            [t, r] = await Promise.all([e, this._detectNetwork()]);
          return (
            t.chainId !== r.chainId &&
              ((0, te._)(this, hK)
                ? (this.emit("network", r, t),
                  (0, te._)(this, hH) === e &&
                    (0, tr._)(this, hH, Promise.resolve(r)))
                : nf(
                    !1,
                    "network changed: "
                      .concat(t.chainId, " => ")
                      .concat(r.chainId, " "),
                    "NETWORK_ERROR",
                    { event: "changed" }
                  )),
            t.clone()
          );
        }
        async getFeeData() {
          let e = await this.getNetwork(),
            t = async () => {
              let {
                  _block: t,
                  gasPrice: r,
                  priorityFee: n,
                } = await ns({
                  _block: (0, tn._)(this, h3, pt).call(this, "latest", !1),
                  gasPrice: (async () => {
                    try {
                      let e = await (0, tn._)(this, h$, h6).call(this, {
                        method: "getGasPrice",
                      });
                      return nH(e, "%response");
                    } catch (e) {}
                    return null;
                  })(),
                  priorityFee: (async () => {
                    try {
                      let e = await (0, tn._)(this, h$, h6).call(this, {
                        method: "getPriorityFee",
                      });
                      return nH(e, "%response");
                    } catch (e) {}
                    return null;
                  })(),
                }),
                a = null,
                i = null,
                s = this._wrapBlock(t, e);
              return (
                s &&
                  s.baseFeePerGas &&
                  ((i = null != n ? n : BigInt("1000000000")),
                  (a = s.baseFeePerGas * hI + i)),
                new s5(r, a, i)
              );
            },
            r = e.getPlugin("org.ethers.plugins.network.FetchUrlFeeDataPlugin");
          if (r) {
            let e = new dD(r.url),
              n = await r.processFunc(t, this, e);
            return new s5(n.gasPrice, n.maxFeePerGas, n.maxPriorityFeePerGas);
          }
          return await t();
        }
        async estimateGas(e) {
          let t = this._getTransactionRequest(e);
          return (
            hB(t) && (t = await t),
            nH(
              await (0, tn._)(this, h$, h6).call(this, {
                method: "estimateGas",
                transaction: t,
              }),
              "%response"
            )
          );
        }
        async call(e) {
          let { tx: t, blockTag: r } = await ns({
            tx: this._getTransactionRequest(e),
            blockTag: this._getBlockTag(e.blockTag),
          });
          return await (0, tn._)(this, h1, h7).call(
            this,
            (0, tn._)(this, h0, h9).call(this, t, r, e.enableCcipRead ? 0 : -1)
          );
        }
        async getBalance(e, t) {
          return nH(
            await (0, tn._)(this, h2, pe).call(
              this,
              { method: "getBalance" },
              e,
              t
            ),
            "%response"
          );
        }
        async getTransactionCount(e, t) {
          return nJ(
            await (0, tn._)(this, h2, pe).call(
              this,
              { method: "getTransactionCount" },
              e,
              t
            ),
            "%response"
          );
        }
        async getCode(e, t) {
          return n_(
            await (0, tn._)(this, h2, pe).call(
              this,
              { method: "getCode" },
              e,
              t
            )
          );
        }
        async getStorage(e, t, r) {
          let n = nH(t, "position");
          return n_(
            await (0, tn._)(this, h2, pe).call(
              this,
              { method: "getStorage", position: n },
              e,
              r
            )
          );
        }
        async broadcastTransaction(e) {
          let {
              blockNumber: t,
              hash: r,
              network: n,
            } = await ns({
              blockNumber: this.getBlockNumber(),
              hash: this._perform({
                method: "broadcastTransaction",
                signedTransaction: e,
              }),
              network: this.getNetwork(),
            }),
            a = fL.from(e);
          if (a.hash !== r)
            throw Error("@TODO: the returned hash did not match");
          return this._wrapTransactionResponse(a, n).replaceableTransaction(t);
        }
        async getBlock(e, t) {
          let { network: r, params: n } = await ns({
            network: this.getNetwork(),
            params: (0, tn._)(this, h3, pt).call(this, e, !!t),
          });
          return null == n ? null : this._wrapBlock(n, r);
        }
        async getTransaction(e) {
          let { network: t, params: r } = await ns({
            network: this.getNetwork(),
            params: (0, tn._)(this, h$, h6).call(this, {
              method: "getTransaction",
              hash: e,
            }),
          });
          return null == r ? null : this._wrapTransactionResponse(r, t);
        }
        async getTransactionReceipt(e) {
          let { network: t, params: r } = await ns({
            network: this.getNetwork(),
            params: (0, tn._)(this, h$, h6).call(this, {
              method: "getTransactionReceipt",
              hash: e,
            }),
          });
          if (null == r) return null;
          if (null == r.gasPrice && null == r.effectiveGasPrice) {
            let t = await (0, tn._)(this, h$, h6).call(this, {
              method: "getTransaction",
              hash: e,
            });
            if (null == t)
              throw Error(
                "report this; could not find tx or effectiveGasPrice"
              );
            r.effectiveGasPrice = t.gasPrice;
          }
          return this._wrapTransactionReceipt(r, t);
        }
        async getTransactionResult(e) {
          let { result: t } = await ns({
            network: this.getNetwork(),
            result: (0, tn._)(this, h$, h6).call(this, {
              method: "getTransactionResult",
              hash: e,
            }),
          });
          return null == t ? null : n_(t);
        }
        async getLogs(e) {
          let t = this._getFilter(e);
          hB(t) && (t = await t);
          let { network: r, params: n } = await ns({
            network: this.getNetwork(),
            params: (0, tn._)(this, h$, h6).call(this, {
              method: "getLogs",
              filter: t,
            }),
          });
          return n.map((e) => this._wrapLog(e, r));
        }
        _getProvider(e) {
          nf(
            !1,
            "provider cannot connect to target network",
            "UNSUPPORTED_OPERATION",
            { operation: "_getProvider()" }
          );
        }
        async getResolver(e) {
          return await f2.fromName(this, e);
        }
        async getAvatar(e) {
          let t = await this.getResolver(e);
          return t ? await t.getAvatar() : null;
        }
        async resolveName(e) {
          let t = await this.getResolver(e);
          return t ? await t.getAddress() : null;
        }
        async lookupAddress(e) {
          let t = uM((e = a9(e)).substring(2).toLowerCase() + ".addr.reverse");
          try {
            let r = await f2.getEnsAddress(this),
              n = new oz(
                r,
                ["function resolver(bytes32) view returns (address)"],
                this
              ),
              a = await n.resolver(t);
            if (null == a || a === sK) return null;
            let i = new oz(
                a,
                ["function name(bytes32) view returns (string)"],
                this
              ),
              s = await i.name(t);
            if ((await this.resolveName(s)) !== e) return null;
            return s;
          } catch (e) {
            if (
              (nc(e, "BAD_DATA") && "0x" === e.value) ||
              nc(e, "CALL_EXCEPTION")
            )
              return null;
            throw e;
          }
        }
        async waitForTransaction(e, t, r) {
          let n = null != t ? t : 1;
          return 0 === n
            ? this.getTransactionReceipt(e)
            : new Promise(async (t, a) => {
                let i = null,
                  s = async (r) => {
                    try {
                      let a = await this.getTransactionReceipt(e);
                      if (null != a && r - a.blockNumber + 1 >= n) {
                        t(a), i && (clearTimeout(i), (i = null));
                        return;
                      }
                    } catch (e) {
                      console.log("EEE", e);
                    }
                    this.once("block", s);
                  };
                null != r &&
                  (i = setTimeout(() => {
                    null != i &&
                      ((i = null),
                      this.off("block", s),
                      a(nd("timeout", "TIMEOUT", { reason: "timeout" })));
                  }, r)),
                  s(await this.getBlockNumber());
              });
        }
        async waitForBlock(e) {
          nf(!1, "not implemented yet", "NOT_IMPLEMENTED", {
            operation: "waitForBlock",
          });
        }
        _clearTimeout(e) {
          let t = (0, te._)(this, hZ).get(e);
          t &&
            (t.timer && clearTimeout(t.timer), (0, te._)(this, hZ).delete(e));
        }
        _setTimeout(e, t) {
          null == t && (t = 0);
          let r = (0, ik._)(this, hJ).value++,
            n = () => {
              (0, te._)(this, hZ).delete(r), e();
            };
          if (this.paused)
            (0, te._)(this, hZ).set(r, { timer: null, func: n, time: t });
          else {
            let e = setTimeout(n, t);
            (0, te._)(this, hZ).set(r, { timer: e, func: n, time: hD() });
          }
          return r;
        }
        _forEachSubscriber(e) {
          for (let t of (0, te._)(this, hz).values()) e(t.subscriber);
        }
        _getSubscriber(e) {
          switch (e.type) {
            case "debug":
            case "error":
            case "network":
              return new hM(e.type);
            case "block": {
              let e = new hf(this);
              return (e.pollingInterval = this.pollingInterval), e;
            }
            case "safe":
            case "finalized":
              return new hw(this, e.type);
            case "event":
              return new hR(this, e.filter);
            case "transaction":
              return new h_(this, e.hash);
            case "orphan":
              return new hA(this, e.filter);
          }
          throw Error("unsupported event: ".concat(e.type));
        }
        _recoverSubscriber(e, t) {
          for (let r of (0, te._)(this, hz).values())
            if (r.subscriber === e) {
              r.started && r.subscriber.stop(),
                (r.subscriber = t),
                r.started && t.start(),
                null != (0, te._)(this, hW) && t.pause((0, te._)(this, hW));
              break;
            }
        }
        async on(e, t) {
          let r = await (0, tn._)(this, h8, pn).call(this, e);
          return (
            r.listeners.push({ listener: t, once: !1 }),
            r.started ||
              (r.subscriber.start(),
              (r.started = !0),
              null != (0, te._)(this, hW) &&
                r.subscriber.pause((0, te._)(this, hW))),
            this
          );
        }
        async once(e, t) {
          let r = await (0, tn._)(this, h8, pn).call(this, e);
          return (
            r.listeners.push({ listener: t, once: !0 }),
            r.started ||
              (r.subscriber.start(),
              (r.started = !0),
              null != (0, te._)(this, hW) &&
                r.subscriber.pause((0, te._)(this, hW))),
            this
          );
        }
        async emit(e) {
          for (
            var t = arguments.length, r = Array(t > 1 ? t - 1 : 0), n = 1;
            n < t;
            n++
          )
            r[n - 1] = arguments[n];
          let a = await (0, tn._)(this, h4, pr).call(this, e, r);
          if (!a || 0 === a.listeners.length) return !1;
          let i = a.listeners.length;
          return (
            (a.listeners = a.listeners.filter((t) => {
              let { listener: n, once: a } = t,
                i = new ol(this, a ? null : n, e);
              try {
                n.call(this, ...r, i);
              } catch (e) {}
              return !a;
            })),
            0 === a.listeners.length &&
              (a.started && a.subscriber.stop(),
              (0, te._)(this, hz).delete(a.tag)),
            i > 0
          );
        }
        async listenerCount(e) {
          if (e) {
            let t = await (0, tn._)(this, h4, pr).call(this, e);
            return t ? t.listeners.length : 0;
          }
          let t = 0;
          for (let { listeners: e } of (0, te._)(this, hz).values())
            t += e.length;
          return t;
        }
        async listeners(e) {
          if (e) {
            let t = await (0, tn._)(this, h4, pr).call(this, e);
            return t
              ? t.listeners.map((e) => {
                  let { listener: t } = e;
                  return t;
                })
              : [];
          }
          let t = [];
          for (let { listeners: e } of (0, te._)(this, hz).values())
            t = t.concat(
              e.map((e) => {
                let { listener: t } = e;
                return t;
              })
            );
          return t;
        }
        async off(e, t) {
          let r = await (0, tn._)(this, h4, pr).call(this, e);
          if (!r) return this;
          if (t) {
            let e = r.listeners
              .map((e) => {
                let { listener: t } = e;
                return t;
              })
              .indexOf(t);
            e >= 0 && r.listeners.splice(e, 1);
          }
          return (
            (t && 0 !== r.listeners.length) ||
              (r.started && r.subscriber.stop(),
              (0, te._)(this, hz).delete(r.tag)),
            this
          );
        }
        async removeAllListeners(e) {
          if (e) {
            let {
              tag: t,
              started: r,
              subscriber: n,
            } = await (0, tn._)(this, h8, pn).call(this, e);
            r && n.stop(), (0, te._)(this, hz).delete(t);
          } else
            for (let [e, { started: t, subscriber: r }] of (0, te._)(this, hz))
              t && r.stop(), (0, te._)(this, hz).delete(e);
          return this;
        }
        async addListener(e, t) {
          return await this.on(e, t);
        }
        async removeListener(e, t) {
          return this.off(e, t);
        }
        get destroyed() {
          return (0, te._)(this, hV);
        }
        destroy() {
          for (let e of (this.removeAllListeners(), (0, te._)(this, hZ).keys()))
            this._clearTimeout(e);
          (0, tr._)(this, hV, !0);
        }
        get paused() {
          return null != (0, te._)(this, hW);
        }
        set paused(e) {
          !!e !== this.paused && (this.paused ? this.resume() : this.pause(!1));
        }
        pause(e) {
          if (((0, tr._)(this, hQ, -1), null != (0, te._)(this, hW))) {
            if ((0, te._)(this, hW) == !!e) return;
            nf(
              !1,
              "cannot change pause type; resume first",
              "UNSUPPORTED_OPERATION",
              { operation: "pause" }
            );
          }
          for (let t of (this._forEachSubscriber((t) => t.pause(e)),
          (0, tr._)(this, hW, !!e),
          (0, te._)(this, hZ).values()))
            t.timer && clearTimeout(t.timer), (t.time = hD() - t.time);
        }
        resume() {
          if (null != (0, te._)(this, hW))
            for (let e of (this._forEachSubscriber((e) => e.resume()),
            (0, tr._)(this, hW, null),
            (0, te._)(this, hZ).values())) {
              let t = e.time;
              t < 0 && (t = 0), (e.time = hD()), setTimeout(e.func, t);
            }
        }
        constructor(e, t) {
          if (
            ((0, ta._)(this, h$),
            (0, ta._)(this, h0),
            (0, ta._)(this, h1),
            (0, ta._)(this, h2),
            (0, ta._)(this, h3),
            (0, ta._)(this, h4),
            (0, ta._)(this, h8),
            (0, tt._)(this, hz, { writable: !0, value: void 0 }),
            (0, tt._)(this, hG, { writable: !0, value: void 0 }),
            (0, tt._)(this, hW, { writable: !0, value: void 0 }),
            (0, tt._)(this, hV, { writable: !0, value: void 0 }),
            (0, tt._)(this, hH, { writable: !0, value: void 0 }),
            (0, tt._)(this, hK, { writable: !0, value: void 0 }),
            (0, tt._)(this, hq, { writable: !0, value: void 0 }),
            (0, tt._)(this, hQ, { writable: !0, value: void 0 }),
            (0, tt._)(this, hJ, { writable: !0, value: void 0 }),
            (0, tt._)(this, hZ, { writable: !0, value: void 0 }),
            (0, tt._)(this, hY, { writable: !0, value: void 0 }),
            (0, tt._)(this, hX, { writable: !0, value: void 0 }),
            (0, tr._)(this, hX, Object.assign({}, hL, t || {})),
            "any" === e)
          )
            (0, tr._)(this, hK, !0), (0, tr._)(this, hH, null);
          else if (e) {
            let t = d7.from(e);
            (0, tr._)(this, hK, !1),
              (0, tr._)(this, hH, Promise.resolve(t)),
              setTimeout(() => {
                this.emit("network", t, null);
              }, 0);
          } else (0, tr._)(this, hK, !1), (0, tr._)(this, hH, null);
          (0, tr._)(this, hQ, -1),
            (0, tr._)(this, hq, new Map()),
            (0, tr._)(this, hz, new Map()),
            (0, tr._)(this, hG, new Map()),
            (0, tr._)(this, hW, null),
            (0, tr._)(this, hV, !1),
            (0, tr._)(this, hJ, 1),
            (0, tr._)(this, hZ, new Map()),
            (0, tr._)(this, hY, !1);
        }
      }
      async function h6(e) {
        let t = (0, te._)(this, hX).cacheTimeout;
        if (t < 0) return await this._perform(e);
        let r = hU(e.method, e),
          n = (0, te._)(this, hq).get(r);
        return (
          n ||
            ((n = this._perform(e)),
            (0, te._)(this, hq).set(r, n),
            setTimeout(() => {
              (0, te._)(this, hq).get(r) === n && (0, te._)(this, hq).delete(r);
            }, t)),
          await n
        );
      }
      async function h9(e, t, r) {
        nf(
          r < 10,
          "CCIP read exceeded maximum redirections",
          "OFFCHAIN_FAULT",
          {
            reason: "TOO_MANY_REDIRECTS",
            transaction: Object.assign({}, e, {
              blockTag: t,
              enableCcipRead: !0,
            }),
          }
        );
        let n = s6(e);
        try {
          return n_(
            await this._perform({ method: "call", transaction: n, blockTag: t })
          );
        } catch (e) {
          if (
            !this.disableCcipRead &&
            nu(e) &&
            e.data &&
            r >= 0 &&
            "latest" === t &&
            null != n.to &&
            "0x556f1830" === nP(e.data, 0, 4)
          ) {
            let a,
              i = e.data,
              s = await sH(n.to, this);
            try {
              a = (function (e) {
                let t = {
                  sender: "",
                  urls: [],
                  calldata: "",
                  selector: "",
                  extraData: "",
                  errorArgs: [],
                };
                nf(
                  nN(e) >= 160,
                  "insufficient OffchainLookup data",
                  "OFFCHAIN_FAULT",
                  { reason: "insufficient OffchainLookup data" }
                );
                let r = nP(e, 0, 32);
                nf(
                  nP(r, 0, 12) === nP(po, 0, 12),
                  "corrupt OffchainLookup sender",
                  "OFFCHAIN_FAULT",
                  { reason: "corrupt OffchainLookup sender" }
                ),
                  (t.sender = nP(r, 12));
                try {
                  let r = [],
                    n = nJ(nP(e, 32, 64)),
                    a = nJ(nP(e, n, n + 32)),
                    i = nP(e, n + 32);
                  for (let e = 0; e < a; e++) {
                    let t = (function (e, t) {
                      try {
                        let r = pa(e, t);
                        if (r) return nM(r);
                      } catch (e) {}
                      return null;
                    })(i, 32 * e);
                    if (null == t) throw Error("abort");
                    r.push(t);
                  }
                  t.urls = r;
                } catch (e) {
                  nf(!1, "corrupt OffchainLookup urls", "OFFCHAIN_FAULT", {
                    reason: "corrupt OffchainLookup urls",
                  });
                }
                try {
                  let r = pa(e, 64);
                  if (null == r) throw Error("abort");
                  t.calldata = r;
                } catch (e) {
                  nf(!1, "corrupt OffchainLookup calldata", "OFFCHAIN_FAULT", {
                    reason: "corrupt OffchainLookup calldata",
                  });
                }
                nf(
                  nP(e, 100, 128) === nP(po, 0, 28),
                  "corrupt OffchainLookup callbaackSelector",
                  "OFFCHAIN_FAULT",
                  { reason: "corrupt OffchainLookup callbaackSelector" }
                ),
                  (t.selector = nP(e, 96, 100));
                try {
                  let r = pa(e, 128);
                  if (null == r) throw Error("abort");
                  t.extraData = r;
                } catch (e) {
                  nf(!1, "corrupt OffchainLookup extraData", "OFFCHAIN_FAULT", {
                    reason: "corrupt OffchainLookup extraData",
                  });
                }
                return (
                  (t.errorArgs = "sender,urls,calldata,selector,extraData"
                    .split(/,/)
                    .map((e) => t[e])),
                  t
                );
              })(nP(e.data, 4));
            } catch (e) {
              nf(!1, e.message, "OFFCHAIN_FAULT", {
                reason: "BAD_DATA",
                transaction: n,
                info: { data: i },
              });
            }
            nf(
              a.sender.toLowerCase() === s.toLowerCase(),
              "CCIP Read sender mismatch",
              "CALL_EXCEPTION",
              {
                action: "call",
                data: i,
                reason: "OffchainLookup",
                transaction: n,
                invocation: null,
                revert: {
                  signature:
                    "OffchainLookup(address,string[],bytes,bytes4,bytes)",
                  name: "OffchainLookup",
                  args: a.errorArgs,
                },
              }
            );
            let o = await this.ccipReadFetch(n, a.calldata, a.urls);
            nf(null != o, "CCIP Read failed to fetch data", "OFFCHAIN_FAULT", {
              reason: "FETCH_FAILED",
              transaction: n,
              info: { data: e.data, errorArgs: a.errorArgs },
            });
            let l = {
              to: s,
              data: nk([
                a.selector,
                (function (e) {
                  let t = [],
                    r = 0;
                  for (let n = 0; n < e.length; n++) t.push(ps), (r += 32);
                  for (let n = 0; n < e.length; n++) {
                    let a = ny(e[n]);
                    (t[n] = pi(r)),
                      t.push(pi(a.length)),
                      t.push(
                        (function (e) {
                          if (e.length % 32 == 0) return e;
                          let t = new Uint8Array(32 * Math.ceil(e.length / 32));
                          return t.set(e), t;
                        })(a)
                      ),
                      (r += 32 + 32 * Math.ceil(a.length / 32));
                  }
                  return nk(t);
                })([o, a.extraData]),
              ]),
            };
            this.emit("debug", { action: "sendCcipReadCall", transaction: l });
            try {
              let e = await (0, tn._)(this, h0, h9).call(this, l, t, r + 1);
              return (
                this.emit("debug", {
                  action: "receiveCcipReadCallResult",
                  transaction: Object.assign({}, l),
                  result: e,
                }),
                e
              );
            } catch (e) {
              throw (
                (this.emit("debug", {
                  action: "receiveCcipReadCallError",
                  transaction: Object.assign({}, l),
                  error: e,
                }),
                e)
              );
            }
          }
          throw e;
        }
      }
      async function h7(e) {
        let { value: t } = await ns({ network: this.getNetwork(), value: e });
        return t;
      }
      async function pe(e, t, r) {
        let n = this._getAddress(t),
          a = this._getBlockTag(r);
        return (
          ("string" != typeof n || "string" != typeof a) &&
            ([n, a] = await Promise.all([n, a])),
          await (0, tn._)(this, h1, h7).call(
            this,
            (0, tn._)(this, h$, h6).call(
              this,
              Object.assign(e, { address: n, blockTag: a })
            )
          )
        );
      }
      async function pt(e, t) {
        if (nv(e, 32))
          return await (0, tn._)(this, h$, h6).call(this, {
            method: "getBlock",
            blockHash: e,
            includeTransactions: t,
          });
        let r = this._getBlockTag(e);
        return (
          "string" != typeof r && (r = await r),
          await (0, tn._)(this, h$, h6).call(this, {
            method: "getBlock",
            blockTag: r,
            includeTransactions: t,
          })
        );
      }
      async function pr(e, t) {
        let r = await hF(e, this);
        return (
          "event" === r.type &&
            t &&
            t.length > 0 &&
            !0 === t[0].removed &&
            (r = await hF({ orphan: "drop-log", log: t[0] }, this)),
          (0, te._)(this, hz).get(r.tag) || null
        );
      }
      async function pn(e) {
        let t = await hF(e, this),
          r = t.tag,
          n = (0, te._)(this, hz).get(r);
        if (!n) {
          let e = this._getSubscriber(t);
          (n = {
            subscriber: e,
            tag: r,
            addressableMap: new WeakMap(),
            nameMap: new Map(),
            started: !1,
            listeners: [],
          }),
            (0, te._)(this, hz).set(r, n);
        }
        return n;
      }
      function pa(e, t) {
        if ("0x" === e) return null;
        try {
          let r = nJ(nP(e, t, t + 32)),
            n = nJ(nP(e, r, r + 32));
          return nP(e, r + 32, r + 32 + n);
        } catch (e) {}
        return null;
      }
      function pi(e) {
        let t = nX(e);
        if (t.length > 32) throw Error("internal; should not happen");
        let r = new Uint8Array(32);
        return r.set(t, 32 - t.length), r;
      }
      let ps = new Uint8Array([]),
        po =
          "0x0000000000000000000000000000000000000000000000000000000000000000";
      function pl(e, t) {
        if (e.provider) return e.provider;
        nf(!1, "missing provider", "UNSUPPORTED_OPERATION", { operation: t });
      }
      async function pc(e, t) {
        let r = s6(t);
        if ((null != r.to && (r.to = sH(r.to, e)), null != r.from)) {
          let t = r.from;
          r.from = Promise.all([e.getAddress(), sH(t, e)]).then((e) => {
            let [t, r] = e;
            return (
              nh(
                t.toLowerCase() === r.toLowerCase(),
                "transaction from mismatch",
                "tx.from",
                r
              ),
              t
            );
          });
        } else r.from = e.getAddress();
        return await ns(r);
      }
      class pu {
        async getNonce(e) {
          return pl(this, "getTransactionCount").getTransactionCount(
            await this.getAddress(),
            e
          );
        }
        async populateCall(e) {
          return await pc(this, e);
        }
        async populateTransaction(e) {
          let t = pl(this, "populateTransaction"),
            r = await pc(this, e);
          null == r.nonce && (r.nonce = await this.getNonce("pending")),
            null == r.gasLimit && (r.gasLimit = await this.estimateGas(r));
          let n = await this.provider.getNetwork();
          null != r.chainId
            ? nh(
                nH(r.chainId) === n.chainId,
                "transaction chainId mismatch",
                "tx.chainId",
                e.chainId
              )
            : (r.chainId = n.chainId);
          let a = null != r.maxFeePerGas || null != r.maxPriorityFeePerGas;
          if (
            (null != r.gasPrice && (2 === r.type || a)
              ? nh(!1, "eip-1559 transaction do not support gasPrice", "tx", e)
              : (0 === r.type || 1 === r.type) &&
                a &&
                nh(
                  !1,
                  "pre-eip-1559 transaction do not support maxFeePerGas/maxPriorityFeePerGas",
                  "tx",
                  e
                ),
            (2 === r.type || null == r.type) &&
              null != r.maxFeePerGas &&
              null != r.maxPriorityFeePerGas)
          )
            r.type = 2;
          else if (0 === r.type || 1 === r.type) {
            let e = await t.getFeeData();
            nf(
              null != e.gasPrice,
              "network does not support gasPrice",
              "UNSUPPORTED_OPERATION",
              { operation: "getGasPrice" }
            ),
              null == r.gasPrice && (r.gasPrice = e.gasPrice);
          } else {
            let e = await t.getFeeData();
            if (null == r.type)
              if (null != e.maxFeePerGas && null != e.maxPriorityFeePerGas)
                if (
                  (r.authorizationList && r.authorizationList.length
                    ? (r.type = 4)
                    : (r.type = 2),
                  null != r.gasPrice)
                ) {
                  let e = r.gasPrice;
                  delete r.gasPrice,
                    (r.maxFeePerGas = e),
                    (r.maxPriorityFeePerGas = e);
                } else
                  null == r.maxFeePerGas && (r.maxFeePerGas = e.maxFeePerGas),
                    null == r.maxPriorityFeePerGas &&
                      (r.maxPriorityFeePerGas = e.maxPriorityFeePerGas);
              else
                null != e.gasPrice
                  ? (nf(
                      !a,
                      "network does not support EIP-1559",
                      "UNSUPPORTED_OPERATION",
                      { operation: "populateTransaction" }
                    ),
                    null == r.gasPrice && (r.gasPrice = e.gasPrice),
                    (r.type = 0))
                  : nf(
                      !1,
                      "failed to get consistent fee data",
                      "UNSUPPORTED_OPERATION",
                      { operation: "signer.getFeeData" }
                    );
            else
              (2 === r.type || 3 === r.type || 4 === r.type) &&
                (null == r.maxFeePerGas && (r.maxFeePerGas = e.maxFeePerGas),
                null == r.maxPriorityFeePerGas &&
                  (r.maxPriorityFeePerGas = e.maxPriorityFeePerGas));
          }
          return await ns(r);
        }
        async populateAuthorization(e) {
          let t = Object.assign({}, e);
          return (
            null == t.chainId &&
              (t.chainId = (await pl(this, "getNetwork").getNetwork()).chainId),
            null == t.nonce && (t.nonce = await this.getNonce()),
            t
          );
        }
        async estimateGas(e) {
          return pl(this, "estimateGas").estimateGas(
            await this.populateCall(e)
          );
        }
        async call(e) {
          return pl(this, "call").call(await this.populateCall(e));
        }
        async resolveName(e) {
          let t = pl(this, "resolveName");
          return await t.resolveName(e);
        }
        async sendTransaction(e) {
          let t = pl(this, "sendTransaction"),
            r = await this.populateTransaction(e);
          delete r.from;
          let n = fL.from(r);
          return await t.broadcastTransaction(await this.signTransaction(n));
        }
        authorize(e) {
          nf(
            !1,
            "authorization not implemented for this signer",
            "UNSUPPORTED_OPERATION",
            { operation: "authorize" }
          );
        }
        constructor(e) {
          (0, eU._)(this, "provider", void 0),
            no(this, { provider: e || null });
        }
      }
      var pd = new WeakSet();
      class pf extends pu {
        async getAddress() {
          return this.address;
        }
        connect(e) {
          return new pf(this.address, e);
        }
        async signTransaction(e) {
          (0, tn._)(this, pd, ph).call(this, "transactions", "signTransaction");
        }
        async signMessage(e) {
          (0, tn._)(this, pd, ph).call(this, "messages", "signMessage");
        }
        async signTypedData(e, t, r) {
          (0, tn._)(this, pd, ph).call(this, "typed-data", "signTypedData");
        }
        constructor(e, t) {
          super(t),
            (0, ta._)(this, pd),
            (0, eU._)(this, "address", void 0),
            no(this, { address: e });
        }
      }
      function ph(e, t) {
        nf(!1, "VoidSigner cannot sign ".concat(e), "UNSUPPORTED_OPERATION", {
          operation: t,
        });
      }
      var pp = new WeakMap(),
        px = new WeakMap(),
        pg = new WeakMap(),
        pb = new WeakMap(),
        pm = new WeakMap(),
        py = new WeakMap(),
        pw = new WeakSet(),
        pv = new WeakSet();
      class pA {
        _subscribe(e) {
          throw Error("subclasses must override this");
        }
        _emitResults(e, t) {
          throw Error("subclasses must override this");
        }
        _recover(e) {
          throw Error("subclasses must override this");
        }
        start() {
          (0, te._)(this, pb) ||
            ((0, tr._)(this, pb, !0), (0, tn._)(this, pw, pE).call(this, -2));
        }
        stop() {
          (0, te._)(this, pb) &&
            ((0, tr._)(this, pb, !1),
            (0, tr._)(this, py, !0),
            (0, tn._)(this, pv, p_).call(this),
            (0, te._)(this, pp).off("block", (0, te._)(this, pg)));
        }
        pause(e) {
          e && (0, tn._)(this, pv, p_).call(this),
            (0, te._)(this, pp).off("block", (0, te._)(this, pg));
        }
        resume() {
          this.start();
        }
        constructor(e) {
          (0, ta._)(this, pw),
            (0, ta._)(this, pv),
            (0, tt._)(this, pp, { writable: !0, value: void 0 }),
            (0, tt._)(this, px, { writable: !0, value: void 0 }),
            (0, tt._)(this, pg, { writable: !0, value: void 0 }),
            (0, tt._)(this, pb, { writable: !0, value: void 0 }),
            (0, tt._)(this, pm, { writable: !0, value: void 0 }),
            (0, tt._)(this, py, { writable: !0, value: void 0 }),
            (0, tr._)(this, pp, e),
            (0, tr._)(this, px, null),
            (0, tr._)(this, pg, (0, tn._)(this, pw, pE).bind(this)),
            (0, tr._)(this, pb, !1),
            (0, tr._)(this, pm, null),
            (0, tr._)(this, py, !1);
        }
      }
      async function pE(e) {
        try {
          null == (0, te._)(this, px) &&
            (0, tr._)(this, px, this._subscribe((0, te._)(this, pp)));
          let e = null;
          try {
            e = await (0, te._)(this, px);
          } catch (e) {
            if (
              !nc(e, "UNSUPPORTED_OPERATION") ||
              "eth_newFilter" !== e.operation
            )
              throw e;
          }
          if (null == e) {
            (0, tr._)(this, px, null),
              (0, te._)(this, pp)._recoverSubscriber(
                this,
                this._recover((0, te._)(this, pp))
              );
            return;
          }
          let t = await (0, te._)(this, pp).getNetwork();
          if (
            ((0, te._)(this, pm) || (0, tr._)(this, pm, t),
            (0, te._)(this, pm).chainId !== t.chainId)
          )
            throw Error("chaid changed");
          if ((0, te._)(this, py)) return;
          let r = await (0, te._)(this, pp).send("eth_getFilterChanges", [e]);
          await this._emitResults((0, te._)(this, pp), r);
        } catch (e) {
          console.log("@TODO", e);
        }
        (0, te._)(this, pp).once("block", (0, te._)(this, pg));
      }
      function p_() {
        let e = (0, te._)(this, px);
        e &&
          ((0, tr._)(this, px, null),
          e.then((e) => {
            (0, te._)(this, pp).destroyed ||
              (0, te._)(this, pp).send("eth_uninstallFilter", [e]);
          }));
      }
      var pk = new WeakMap();
      class pN extends pA {
        _recover(e) {
          return new hR(e, (0, te._)(this, pk));
        }
        async _subscribe(e) {
          return await e.send("eth_newFilter", [(0, te._)(this, pk)]);
        }
        async _emitResults(e, t) {
          for (let r of t)
            e.emit((0, te._)(this, pk), e._wrapLog(r, e._network));
        }
        constructor(e, t) {
          super(e),
            (0, tt._)(this, pk, { writable: !0, value: void 0 }),
            (0, tr._)(this, pk, JSON.parse(JSON.stringify(t)));
        }
      }
      class pP extends pA {
        async _subscribe(e) {
          return await e.send("eth_newPendingTransactionFilter", []);
        }
        async _emitResults(e, t) {
          for (let r of t) e.emit("pending", r);
        }
      }
      let pT = "bigint,boolean,function,number,string,symbol".split(/,/g);
      function pS(e) {
        if (
          null == e ||
          pT.indexOf(typeof e) >= 0 ||
          "function" == typeof e.getAddress
        )
          return e;
        if (Array.isArray(e)) return e.map(pS);
        if ("object" == typeof e)
          return Object.keys(e).reduce((t, r) => ((t[r] = e[r]), t), {});
        throw Error(
          "should not happen: ".concat(e, " (").concat(typeof e, ")")
        );
      }
      function pO(e) {
        return e ? e.toLowerCase() : e;
      }
      function pR(e) {
        return e && "number" == typeof e.pollingInterval;
      }
      let pC = {
        polling: !1,
        staticNetwork: null,
        batchStallTime: 10,
        batchMaxSize: 1048576,
        batchMaxCount: 100,
        cacheTimeout: 250,
        pollingInterval: 4e3,
      };
      class pI extends pu {
        connect(e) {
          nf(!1, "cannot reconnect JsonRpcSigner", "UNSUPPORTED_OPERATION", {
            operation: "signer.connect",
          });
        }
        async getAddress() {
          return this.address;
        }
        async populateTransaction(e) {
          return await this.populateCall(e);
        }
        async sendUncheckedTransaction(e) {
          let t = pS(e),
            r = [];
          if (t.from) {
            let n = t.from;
            r.push(
              (async () => {
                let r = await sH(n, this.provider);
                nh(
                  null != r && r.toLowerCase() === this.address.toLowerCase(),
                  "from address mismatch",
                  "transaction",
                  e
                ),
                  (t.from = r);
              })()
            );
          } else t.from = this.address;
          if (
            (null == t.gasLimit &&
              r.push(
                (async () => {
                  t.gasLimit = await this.provider.estimateGas({
                    ...t,
                    from: this.address,
                  });
                })()
              ),
            null != t.to)
          ) {
            let e = t.to;
            r.push(
              (async () => {
                t.to = await sH(e, this.provider);
              })()
            );
          }
          r.length && (await Promise.all(r));
          let n = this.provider.getRpcTransaction(t);
          return this.provider.send("eth_sendTransaction", [n]);
        }
        async sendTransaction(e) {
          let t = await this.provider.getBlockNumber(),
            r = await this.sendUncheckedTransaction(e);
          return await new Promise((e, n) => {
            let a = [1e3, 100],
              i = 0,
              s = async () => {
                try {
                  let n = await this.provider.getTransaction(r);
                  if (null != n) return void e(n.replaceableTransaction(t));
                } catch (e) {
                  if (
                    nc(e, "CANCELLED") ||
                    nc(e, "BAD_DATA") ||
                    nc(e, "NETWORK_ERROR") ||
                    nc(e, "UNSUPPORTED_OPERATION")
                  ) {
                    null == e.info && (e.info = {}),
                      (e.info.sendTransactionHash = r),
                      n(e);
                    return;
                  }
                  if (
                    nc(e, "INVALID_ARGUMENT") &&
                    (i++,
                    null == e.info && (e.info = {}),
                    (e.info.sendTransactionHash = r),
                    i > 10)
                  )
                    return void n(e);
                  this.provider.emit(
                    "error",
                    nd(
                      "failed to fetch transation after sending (will try again)",
                      "UNKNOWN_ERROR",
                      { error: e }
                    )
                  );
                }
                this.provider._setTimeout(() => {
                  s();
                }, a.pop() || 4e3);
              };
            s();
          });
        }
        async signTransaction(e) {
          let t = pS(e);
          if (t.from) {
            let r = await sH(t.from, this.provider);
            nh(
              null != r && r.toLowerCase() === this.address.toLowerCase(),
              "from address mismatch",
              "transaction",
              e
            ),
              (t.from = r);
          } else t.from = this.address;
          let r = this.provider.getRpcTransaction(t);
          return await this.provider.send("eth_signTransaction", [r]);
        }
        async signMessage(e) {
          let t = "string" == typeof e ? nU(e) : e;
          return await this.provider.send("personal_sign", [
            n_(t),
            this.address.toLowerCase(),
          ]);
        }
        async signTypedData(e, t, r) {
          let n = pS(r),
            a = await da.resolveNames(e, t, n, async (e) => {
              let t = await sH(e);
              return (
                nh(
                  null != t,
                  "TypedData does not support null address",
                  "value",
                  e
                ),
                t
              );
            });
          return await this.provider.send("eth_signTypedData_v4", [
            this.address.toLowerCase(),
            JSON.stringify(da.getPayload(a.domain, t, a.value)),
          ]);
        }
        async unlock(e) {
          return this.provider.send("personal_unlockAccount", [
            this.address.toLowerCase(),
            e,
            null,
          ]);
        }
        async _legacySignMessage(e) {
          let t = "string" == typeof e ? nU(e) : e;
          return await this.provider.send("eth_sign", [
            this.address.toLowerCase(),
            n_(t),
          ]);
        }
        constructor(e, t) {
          super(e),
            (0, eU._)(this, "address", void 0),
            no(this, { address: (t = a9(t)) });
        }
      }
      var pB = new WeakMap(),
        pU = new WeakMap(),
        pM = new WeakMap(),
        pj = new WeakMap(),
        pF = new WeakMap(),
        pD = new WeakMap(),
        pL = new WeakMap(),
        pz = new WeakSet();
      class pG extends h5 {
        _getOption(e) {
          return (0, te._)(this, pB)[e];
        }
        get _network() {
          return (
            nf(
              (0, te._)(this, pD),
              "network is not available yet",
              "NETWORK_ERROR"
            ),
            (0, te._)(this, pD)
          );
        }
        async _perform(e) {
          if ("call" === e.method || "estimateGas" === e.method) {
            let t = e.transaction;
            if (
              t &&
              null != t.type &&
              nH(t.type) &&
              null == t.maxFeePerGas &&
              null == t.maxPriorityFeePerGas
            ) {
              let r = await this.getFeeData();
              null == r.maxFeePerGas &&
                null == r.maxPriorityFeePerGas &&
                (e = Object.assign({}, e, {
                  transaction: Object.assign({}, t, { type: void 0 }),
                }));
            }
          }
          let t = this.getRpcRequest(e);
          return null != t
            ? await this.send(t.method, t.args)
            : super._perform(e);
        }
        async _detectNetwork() {
          let e = this._getOption("staticNetwork");
          if (e) {
            if (!0 !== e) return e;
            else if ((0, te._)(this, pD)) return (0, te._)(this, pD);
          }
          return (
            (0, te._)(this, pL) ||
              (this.ready
                ? (0, tr._)(
                    this,
                    pL,
                    (async () => {
                      try {
                        let e = d7.from(nH(await this.send("eth_chainId", [])));
                        return (0, tr._)(this, pL, null), e;
                      } catch (e) {
                        throw ((0, tr._)(this, pL, null), e);
                      }
                    })()
                  )
                : (0, tr._)(
                    this,
                    pL,
                    (async () => {
                      let e,
                        t = {
                          id: (0, ik._)(this, pU).value++,
                          method: "eth_chainId",
                          params: [],
                          jsonrpc: "2.0",
                        };
                      this.emit("debug", {
                        action: "sendRpcPayload",
                        payload: t,
                      });
                      try {
                        (e = (await this._send(t))[0]),
                          (0, tr._)(this, pL, null);
                      } catch (e) {
                        throw (
                          ((0, tr._)(this, pL, null),
                          this.emit("debug", {
                            action: "receiveRpcError",
                            error: e,
                          }),
                          e)
                        );
                      }
                      if (
                        (this.emit("debug", {
                          action: "receiveRpcResult",
                          result: e,
                        }),
                        "result" in e)
                      )
                        return d7.from(nH(e.result));
                      throw this.getRpcError(t, e);
                    })()
                  )),
            await (0, te._)(this, pL)
          );
        }
        _start() {
          null != (0, te._)(this, pF) &&
            null != (0, te._)(this, pF).resolve &&
            ((0, te._)(this, pF).resolve(),
            (0, tr._)(this, pF, null),
            (async () => {
              for (; null == (0, te._)(this, pD) && !this.destroyed; )
                try {
                  (0, tr._)(this, pD, await this._detectNetwork());
                } catch (e) {
                  if (this.destroyed) break;
                  console.log(
                    "JsonRpcProvider failed to detect network and cannot start up; retry in 1s (perhaps the URL is wrong or the node is not started)"
                  ),
                    this.emit(
                      "error",
                      nd(
                        "failed to bootstrap network detection",
                        "NETWORK_ERROR",
                        {
                          event: "initial-network-discovery",
                          info: { error: e },
                        }
                      )
                    ),
                    await new Promise((e) => {
                      setTimeout(e, 1e3);
                    });
                }
              (0, tn._)(this, pz, pW).call(this);
            })());
        }
        async _waitUntilReady() {
          if (null != (0, te._)(this, pF))
            return await (0, te._)(this, pF).promise;
        }
        _getSubscriber(e) {
          return "pending" === e.type
            ? new pP(this)
            : "event" === e.type
            ? this._getOption("polling")
              ? new hR(this, e.filter)
              : new pN(this, e.filter)
            : "orphan" === e.type && "drop-log" === e.filter.orphan
            ? new hM("orphan")
            : super._getSubscriber(e);
        }
        get ready() {
          return null == (0, te._)(this, pF);
        }
        getRpcTransaction(e) {
          let t = {};
          return (
            [
              "chainId",
              "gasLimit",
              "gasPrice",
              "type",
              "maxFeePerGas",
              "maxPriorityFeePerGas",
              "nonce",
              "value",
            ].forEach((r) => {
              if (null == e[r]) return;
              let n = r;
              "gasLimit" === r && (n = "gas"),
                (t[n] = n$(nH(e[r], "tx.".concat(r))));
            }),
            ["from", "to", "data"].forEach((r) => {
              null != e[r] && (t[r] = n_(e[r]));
            }),
            e.accessList && (t.accessList = s2(e.accessList)),
            e.blobVersionedHashes &&
              (t.blobVersionedHashes = e.blobVersionedHashes.map((e) =>
                e.toLowerCase()
              )),
            e.authorizationList &&
              (t.authorizationList = e.authorizationList.map((e) => {
                let t = fn(e);
                return {
                  address: t.address,
                  nonce: n$(t.nonce),
                  chainId: n$(t.chainId),
                  yParity: n$(t.signature.yParity),
                  r: n$(t.signature.r),
                  s: n$(t.signature.s),
                };
              })),
            t
          );
        }
        getRpcRequest(e) {
          switch (e.method) {
            case "chainId":
              return { method: "eth_chainId", args: [] };
            case "getBlockNumber":
              return { method: "eth_blockNumber", args: [] };
            case "getGasPrice":
              return { method: "eth_gasPrice", args: [] };
            case "getPriorityFee":
              return { method: "eth_maxPriorityFeePerGas", args: [] };
            case "getBalance":
              return {
                method: "eth_getBalance",
                args: [pO(e.address), e.blockTag],
              };
            case "getTransactionCount":
              return {
                method: "eth_getTransactionCount",
                args: [pO(e.address), e.blockTag],
              };
            case "getCode":
              return {
                method: "eth_getCode",
                args: [pO(e.address), e.blockTag],
              };
            case "getStorage":
              return {
                method: "eth_getStorageAt",
                args: [
                  pO(e.address),
                  "0x" + e.position.toString(16),
                  e.blockTag,
                ],
              };
            case "broadcastTransaction":
              return {
                method: "eth_sendRawTransaction",
                args: [e.signedTransaction],
              };
            case "getBlock":
              if ("blockTag" in e)
                return {
                  method: "eth_getBlockByNumber",
                  args: [e.blockTag, !!e.includeTransactions],
                };
              if ("blockHash" in e)
                return {
                  method: "eth_getBlockByHash",
                  args: [e.blockHash, !!e.includeTransactions],
                };
              break;
            case "getTransaction":
              return { method: "eth_getTransactionByHash", args: [e.hash] };
            case "getTransactionReceipt":
              return { method: "eth_getTransactionReceipt", args: [e.hash] };
            case "call":
              return {
                method: "eth_call",
                args: [this.getRpcTransaction(e.transaction), e.blockTag],
              };
            case "estimateGas":
              return {
                method: "eth_estimateGas",
                args: [this.getRpcTransaction(e.transaction)],
              };
            case "getLogs":
              return (
                e.filter &&
                  null != e.filter.address &&
                  (Array.isArray(e.filter.address)
                    ? (e.filter.address = e.filter.address.map(pO))
                    : (e.filter.address = pO(e.filter.address))),
                { method: "eth_getLogs", args: [e.filter] }
              );
          }
          return null;
        }
        getRpcError(e, t) {
          let { method: r } = e,
            { error: n } = t;
          if ("eth_estimateGas" === r && n.message) {
            let t = n.message;
            if (!t.match(/revert/i) && t.match(/insufficient funds/i))
              return nd("insufficient funds", "INSUFFICIENT_FUNDS", {
                transaction: e.params[0],
                info: { payload: e, error: n },
              });
            if (t.match(/nonce/i) && t.match(/too low/i))
              return nd("nonce has already been used", "NONCE_EXPIRED", {
                transaction: e.params[0],
                info: { payload: e, error: n },
              });
          }
          if ("eth_call" === r || "eth_estimateGas" === r) {
            let t = (function e(t) {
                if (null == t) return null;
                if (
                  "string" == typeof t.message &&
                  t.message.match(/revert/i) &&
                  nv(t.data)
                )
                  return { message: t.message, data: t.data };
                if ("object" == typeof t) {
                  for (let r in t) {
                    let n = e(t[r]);
                    if (n) return n;
                  }
                  return null;
                }
                if ("string" == typeof t)
                  try {
                    return e(JSON.parse(t));
                  } catch (e) {}
                return null;
              })(n),
              a = sw.getBuiltinCallException(
                "eth_call" === r ? "call" : "estimateGas",
                e.params[0],
                t ? t.data : null
              );
            return (a.info = { error: n, payload: e }), a;
          }
          let a = JSON.stringify(
            (function (e) {
              let t = [];
              return (
                !(function e(t, r) {
                  if (null != t) {
                    if (
                      ("string" == typeof t.message && r.push(t.message),
                      "object" == typeof t)
                    )
                      for (let n in t) e(t[n], r);
                    if ("string" == typeof t)
                      try {
                        return e(JSON.parse(t), r);
                      } catch (e) {}
                  }
                })(e, t),
                t
              );
            })(n)
          );
          if (
            "string" == typeof n.message &&
            n.message.match(/user denied|ethers-user-denied/i)
          )
            return nd("user rejected action", "ACTION_REJECTED", {
              action:
                {
                  eth_sign: "signMessage",
                  personal_sign: "signMessage",
                  eth_signTypedData_v4: "signTypedData",
                  eth_signTransaction: "signTransaction",
                  eth_sendTransaction: "sendTransaction",
                  eth_requestAccounts: "requestAccess",
                  wallet_requestAccounts: "requestAccess",
                }[r] || "unknown",
              reason: "rejected",
              info: { payload: e, error: n },
            });
          if ("eth_sendRawTransaction" === r || "eth_sendTransaction" === r) {
            let t = e.params[0];
            if (a.match(/insufficient funds|base fee exceeds gas limit/i))
              return nd(
                "insufficient funds for intrinsic transaction cost",
                "INSUFFICIENT_FUNDS",
                { transaction: t, info: { error: n } }
              );
            if (a.match(/nonce/i) && a.match(/too low/i))
              return nd("nonce has already been used", "NONCE_EXPIRED", {
                transaction: t,
                info: { error: n },
              });
            if (a.match(/replacement transaction/i) && a.match(/underpriced/i))
              return nd("replacement fee too low", "REPLACEMENT_UNDERPRICED", {
                transaction: t,
                info: { error: n },
              });
            if (a.match(/only replay-protected/i))
              return nd(
                "legacy pre-eip-155 transactions not supported",
                "UNSUPPORTED_OPERATION",
                { operation: r, info: { transaction: t, info: { error: n } } }
              );
          }
          let i = !!a.match(/the method .* does not exist/i);
          return (!i &&
            n &&
            n.details &&
            n.details.startsWith("Unauthorized method:") &&
            (i = !0),
          i)
            ? nd("unsupported operation", "UNSUPPORTED_OPERATION", {
                operation: e.method,
                info: { error: n, payload: e },
              })
            : nd("could not coalesce error", "UNKNOWN_ERROR", {
                error: n,
                payload: e,
              });
        }
        send(e, t) {
          if (this.destroyed)
            return Promise.reject(
              nd(
                "provider destroyed; cancelled request",
                "UNSUPPORTED_OPERATION",
                { operation: e }
              )
            );
          let r = (0, ik._)(this, pU).value++,
            n = new Promise((n, a) => {
              (0, te._)(this, pM).push({
                resolve: n,
                reject: a,
                payload: { method: e, params: t, id: r, jsonrpc: "2.0" },
              });
            });
          return (0, tn._)(this, pz, pW).call(this), n;
        }
        async getSigner(e) {
          null == e && (e = 0);
          let t = this.send("eth_accounts", []);
          if ("number" == typeof e) {
            let r = await t;
            if (e >= r.length) throw Error("no such account");
            return new pI(this, r[e]);
          }
          let { accounts: r } = await ns({
            network: this.getNetwork(),
            accounts: t,
          });
          for (let t of ((e = a9(e)), r))
            if (a9(t) === e) return new pI(this, e);
          throw Error("invalid account");
        }
        async listAccounts() {
          return (await this.send("eth_accounts", [])).map(
            (e) => new pI(this, e)
          );
        }
        destroy() {
          for (let { payload: e, reject: t } of ((0, te._)(this, pj) &&
            (clearTimeout((0, te._)(this, pj)), (0, tr._)(this, pj, null)),
          (0, te._)(this, pM)))
            t(
              nd(
                "provider destroyed; cancelled request",
                "UNSUPPORTED_OPERATION",
                { operation: e.method }
              )
            );
          (0, tr._)(this, pM, []), super.destroy();
        }
        constructor(e, t) {
          super(e, t),
            (0, ta._)(this, pz),
            (0, tt._)(this, pB, { writable: !0, value: void 0 }),
            (0, tt._)(this, pU, { writable: !0, value: void 0 }),
            (0, tt._)(this, pM, { writable: !0, value: void 0 }),
            (0, tt._)(this, pj, { writable: !0, value: void 0 }),
            (0, tt._)(this, pF, { writable: !0, value: void 0 }),
            (0, tt._)(this, pD, { writable: !0, value: void 0 }),
            (0, tt._)(this, pL, { writable: !0, value: void 0 }),
            (0, tr._)(this, pU, 1),
            (0, tr._)(this, pB, Object.assign({}, pC, t || {})),
            (0, tr._)(this, pM, []),
            (0, tr._)(this, pj, null),
            (0, tr._)(this, pD, null),
            (0, tr._)(this, pL, null);
          {
            let e = null,
              t = new Promise((t) => {
                e = t;
              });
            (0, tr._)(this, pF, { promise: t, resolve: e });
          }
          let r = this._getOption("staticNetwork");
          "boolean" == typeof r
            ? (nh(
                !r || "any" !== e,
                "staticNetwork cannot be used on special network 'any'",
                "options",
                t
              ),
              r && null != e && (0, tr._)(this, pD, d7.from(e)))
            : r &&
              (nh(
                null == e || r.matches(e),
                "staticNetwork MUST match network object",
                "options",
                t
              ),
              (0, tr._)(this, pD, r));
        }
      }
      function pW() {
        if ((0, te._)(this, pj)) return;
        let e =
          1 === this._getOption("batchMaxCount")
            ? 0
            : this._getOption("batchStallTime");
        (0, tr._)(
          this,
          pj,
          setTimeout(() => {
            (0, tr._)(this, pj, null);
            let e = (0, te._)(this, pM);
            for ((0, tr._)(this, pM, []); e.length; ) {
              let t = [e.shift()];
              for (
                ;
                e.length && t.length !== (0, te._)(this, pB).batchMaxCount;

              )
                if (
                  (t.push(e.shift()),
                  JSON.stringify(t.map((e) => e.payload)).length >
                    (0, te._)(this, pB).batchMaxSize)
                ) {
                  e.unshift(t.pop());
                  break;
                }
              (async () => {
                let e = 1 === t.length ? t[0].payload : t.map((e) => e.payload);
                this.emit("debug", { action: "sendRpcPayload", payload: e });
                try {
                  let r = await this._send(e);
                  for (let { resolve: e, reject: n, payload: a } of (this.emit(
                    "debug",
                    { action: "receiveRpcResult", result: r }
                  ),
                  t)) {
                    if (this.destroyed) {
                      n(
                        nd(
                          "provider destroyed; cancelled request",
                          "UNSUPPORTED_OPERATION",
                          { operation: a.method }
                        )
                      );
                      continue;
                    }
                    let t = r.filter((e) => e.id === a.id)[0];
                    if (null == t) {
                      let e = nd("missing response for request", "BAD_DATA", {
                        value: r,
                        info: { payload: a },
                      });
                      this.emit("error", e), n(e);
                      continue;
                    }
                    if ("error" in t) {
                      n(this.getRpcError(a, t));
                      continue;
                    }
                    e(t.result);
                  }
                } catch (e) {
                  for (let { reject: r } of (this.emit("debug", {
                    action: "receiveRpcError",
                    error: e,
                  }),
                  t))
                    r(e);
                }
              })();
            }
          }, e)
        );
      }
      var pV = new WeakMap();
      class pH extends pG {
        _getSubscriber(e) {
          let t = super._getSubscriber(e);
          return pR(t) && (t.pollingInterval = (0, te._)(this, pV)), t;
        }
        get pollingInterval() {
          return (0, te._)(this, pV);
        }
        set pollingInterval(e) {
          if (!Number.isInteger(e) || e < 0) throw Error("invalid interval");
          (0, tr._)(this, pV, e),
            this._forEachSubscriber((e) => {
              pR(e) && (e.pollingInterval = (0, te._)(this, pV));
            });
        }
        constructor(e, t) {
          super(e, t), (0, tt._)(this, pV, { writable: !0, value: void 0 });
          let r = this._getOption("pollingInterval");
          null == r && (r = pC.pollingInterval), (0, tr._)(this, pV, r);
        }
      }
      var pK = new WeakMap();
      class pq extends pH {
        _getConnection() {
          return (0, te._)(this, pK).clone();
        }
        async send(e, t) {
          return await this._start(), await super.send(e, t);
        }
        async _send(e) {
          let t = this._getConnection();
          (t.body = JSON.stringify(e)),
            t.setHeader("content-type", "application/json");
          let r = await t.send();
          r.assertOk();
          let n = r.bodyJson;
          return Array.isArray(n) || (n = [n]), n;
        }
        constructor(e, t, r) {
          null == e && (e = "http://localhost:8545"),
            super(t, r),
            (0, tt._)(this, pK, { writable: !0, value: void 0 }),
            "string" == typeof e
              ? (0, tr._)(this, pK, new dD(e))
              : (0, tr._)(this, pK, e.clone());
        }
      }
      let pQ =
        "9f7d929b018cdffb338517efa06f58359e86ff1ffd350bc889738523659e7972";
      class pJ extends pq {
        _getProvider(e) {
          try {
            return new pJ(e, this.apiKey);
          } catch (e) {}
          return super._getProvider(e);
        }
        static getRequest(e, t) {
          null == t && (t = pQ);
          let r = new dD(
            "https://"
              .concat(
                (function (e) {
                  switch (e) {
                    case "mainnet":
                      return "rpc.ankr.com/eth";
                    case "goerli":
                      return "rpc.ankr.com/eth_goerli";
                    case "sepolia":
                      return "rpc.ankr.com/eth_sepolia";
                    case "arbitrum":
                      return "rpc.ankr.com/arbitrum";
                    case "base":
                      return "rpc.ankr.com/base";
                    case "base-goerli":
                      return "rpc.ankr.com/base_goerli";
                    case "base-sepolia":
                      return "rpc.ankr.com/base_sepolia";
                    case "bnb":
                      return "rpc.ankr.com/bsc";
                    case "bnbt":
                      return "rpc.ankr.com/bsc_testnet_chapel";
                    case "matic":
                      return "rpc.ankr.com/polygon";
                    case "matic-mumbai":
                      return "rpc.ankr.com/polygon_mumbai";
                    case "optimism":
                      return "rpc.ankr.com/optimism";
                    case "optimism-goerli":
                      return "rpc.ankr.com/optimism_testnet";
                    case "optimism-sepolia":
                      return "rpc.ankr.com/optimism_sepolia";
                  }
                  nh(!1, "unsupported network", "network", e);
                })(e.name),
                "/"
              )
              .concat(t)
          );
          return (
            (r.allowGzip = !0),
            t === pQ &&
              (r.retryFunc = async (e, t, r) => (dZ("AnkrProvider"), !0)),
            r
          );
        }
        getRpcError(e, t) {
          return (
            "eth_sendRawTransaction" === e.method &&
              t &&
              t.error &&
              "INTERNAL_ERROR: could not replace existing tx" ===
                t.error.message &&
              (t.error.message = "replacement transaction underpriced"),
            super.getRpcError(e, t)
          );
        }
        isCommunityResource() {
          return this.apiKey === pQ;
        }
        constructor(e, t) {
          null == e && (e = "mainnet");
          let r = d7.from(e);
          null == t && (t = pQ),
            super(pJ.getRequest(r, t), r, { polling: !0, staticNetwork: r }),
            (0, eU._)(this, "apiKey", void 0),
            no(this, { apiKey: t });
        }
      }
      let pZ = "_gg7wSSi0KMBsdKnGVfHDueq6xMB9EkC";
      class pY extends pq {
        _getProvider(e) {
          try {
            return new pY(e, this.apiKey);
          } catch (e) {}
          return super._getProvider(e);
        }
        async _perform(e) {
          if ("getTransactionResult" === e.method) {
            let t,
              { trace: r, tx: n } = await ns({
                trace: this.send("trace_transaction", [e.hash]),
                tx: this.getTransaction(e.hash),
              });
            if (null == r || null == n) return null;
            let a = !1;
            try {
              (t = r[0].result.output), (a = "Reverted" === r[0].error);
            } catch (e) {}
            if (t)
              return (
                nf(
                  !a,
                  "an error occurred during transaction executions",
                  "CALL_EXCEPTION",
                  {
                    action: "getTransactionResult",
                    data: t,
                    reason: null,
                    transaction: n,
                    invocation: null,
                    revert: null,
                  }
                ),
                t
              );
            nf(!1, "could not parse trace result", "BAD_DATA", { value: r });
          }
          return await super._perform(e);
        }
        isCommunityResource() {
          return this.apiKey === pZ;
        }
        static getRequest(e, t) {
          null == t && (t = pZ);
          let r = new dD(
            "https://"
              .concat(
                (function (e) {
                  switch (e) {
                    case "mainnet":
                      return "eth-mainnet.alchemyapi.io";
                    case "goerli":
                      return "eth-goerli.g.alchemy.com";
                    case "sepolia":
                      return "eth-sepolia.g.alchemy.com";
                    case "arbitrum":
                      return "arb-mainnet.g.alchemy.com";
                    case "arbitrum-goerli":
                      return "arb-goerli.g.alchemy.com";
                    case "arbitrum-sepolia":
                      return "arb-sepolia.g.alchemy.com";
                    case "base":
                      return "base-mainnet.g.alchemy.com";
                    case "base-goerli":
                      return "base-goerli.g.alchemy.com";
                    case "base-sepolia":
                      return "base-sepolia.g.alchemy.com";
                    case "matic":
                      return "polygon-mainnet.g.alchemy.com";
                    case "matic-amoy":
                      return "polygon-amoy.g.alchemy.com";
                    case "matic-mumbai":
                      return "polygon-mumbai.g.alchemy.com";
                    case "optimism":
                      return "opt-mainnet.g.alchemy.com";
                    case "optimism-goerli":
                      return "opt-goerli.g.alchemy.com";
                    case "optimism-sepolia":
                      return "opt-sepolia.g.alchemy.com";
                  }
                  nh(!1, "unsupported network", "network", e);
                })(e.name),
                "/v2/"
              )
              .concat(t)
          );
          return (
            (r.allowGzip = !0),
            t === pZ && (r.retryFunc = async (e, t, r) => (dZ("alchemy"), !0)),
            r
          );
        }
        constructor(e, t) {
          null == e && (e = "mainnet");
          let r = d7.from(e);
          null == t && (t = pZ),
            super(pY.getRequest(r, t), r, { staticNetwork: r }),
            (0, eU._)(this, "apiKey", void 0),
            no(this, { apiKey: t });
        }
      }
      function pX(e) {
        switch (e) {
          case "mainnet":
            return "39f1d67cedf8b7831010a665328c9197";
          case "arbitrum":
            return "0550c209db33c3abf4cc927e1e18cea1";
          case "bnb":
            return "98b5a77e531614387366f6fc5da097f8";
          case "matic":
            return "cd9d4d70377471aa7c142ec4a4205249";
        }
        nh(!1, "unsupported network", "network", e);
      }
      class p$ extends pq {
        _getProvider(e) {
          try {
            return new p$(e, this.apiKey);
          } catch (e) {}
          return super._getProvider(e);
        }
        isCommunityResource() {
          return this.apiKey === pX(this._network.name);
        }
        static getRequest(e, t) {
          null == t && (t = pX(e.name));
          let r = new dD(
            "https://"
              .concat(
                (function (e) {
                  switch (e) {
                    case "mainnet":
                      return "ethereum-mainnet.core.chainstack.com";
                    case "arbitrum":
                      return "arbitrum-mainnet.core.chainstack.com";
                    case "bnb":
                      return "bsc-mainnet.core.chainstack.com";
                    case "matic":
                      return "polygon-mainnet.core.chainstack.com";
                  }
                  nh(!1, "unsupported network", "network", e);
                })(e.name),
                "/"
              )
              .concat(t)
          );
          return (
            (r.allowGzip = !0),
            t === pX(e.name) &&
              (r.retryFunc = async (e, t, r) => (dZ("ChainstackProvider"), !0)),
            r
          );
        }
        constructor(e, t) {
          null == e && (e = "mainnet");
          let r = d7.from(e);
          null == t && (t = pX(r.name)),
            super(p$.getRequest(r, t), r, { staticNetwork: r }),
            (0, eU._)(this, "apiKey", void 0),
            no(this, { apiKey: t });
        }
      }
      class p0 extends pq {
        constructor(e) {
          null == e && (e = "mainnet");
          let t = d7.from(e);
          nh("mainnet" === t.name, "unsupported network", "network", e),
            super("https://cloudflare-eth.com/", t, { staticNetwork: t });
        }
      }
      let p1 = "org.ethers.plugins.provider.Etherscan";
      class p2 extends dY {
        clone() {
          return new p2(this.baseUrl);
        }
        constructor(e) {
          super(p1),
            (0, eU._)(this, "baseUrl", void 0),
            no(this, { baseUrl: e });
        }
      }
      let p3 = ["enableCcipRead"],
        p4 = 1;
      var p8 = new WeakMap();
      class p5 extends h5 {
        getBaseUrl() {
          if ((0, te._)(this, p8)) return (0, te._)(this, p8).baseUrl;
          switch (this.network.name) {
            case "mainnet":
              return "https://api.etherscan.io";
            case "goerli":
              return "https://api-goerli.etherscan.io";
            case "sepolia":
              return "https://api-sepolia.etherscan.io";
            case "holesky":
              return "https://api-holesky.etherscan.io";
            case "arbitrum":
              return "https://api.arbiscan.io";
            case "arbitrum-goerli":
              return "https://api-goerli.arbiscan.io";
            case "base":
              return "https://api.basescan.org";
            case "base-sepolia":
              return "https://api-sepolia.basescan.org";
            case "bnb":
              return "https://api.bscscan.com";
            case "bnbt":
              return "https://api-testnet.bscscan.com";
            case "matic":
              return "https://api.polygonscan.com";
            case "matic-amoy":
              return "https://api-amoy.polygonscan.com";
            case "matic-mumbai":
              return "https://api-testnet.polygonscan.com";
            case "optimism":
              return "https://api-optimistic.etherscan.io";
            case "optimism-goerli":
              return "https://api-goerli-optimistic.etherscan.io";
          }
          nh(!1, "unsupported network", "network", this.network);
        }
        getUrl(e, t) {
          let r = Object.keys(t).reduce((e, r) => {
            let n = t[r];
            return null != n && (e += "&".concat(r, "=").concat(n)), e;
          }, "");
          return (
            this.apiKey && (r += "&apikey=".concat(this.apiKey)),
            "https://api.etherscan.io/v2/api?chainid="
              .concat(this.network.chainId, "&module=")
              .concat(e)
              .concat(r)
          );
        }
        getPostUrl() {
          return "https://api.etherscan.io/v2/api?chainid=".concat(
            this.network.chainId
          );
        }
        getPostData(e, t) {
          return (
            (t.module = e),
            (t.apikey = this.apiKey),
            (t.chainid = this.network.chainId),
            t
          );
        }
        async detectNetwork() {
          return this.network;
        }
        async fetch(e, t, r) {
          let n = p4++,
            a = r ? this.getPostUrl() : this.getUrl(e, t),
            i = r ? this.getPostData(e, t) : null;
          this.emit("debug", {
            action: "sendRequest",
            id: n,
            url: a,
            payload: i,
          });
          let s = new dD(a);
          s.setThrottleParams({ slotInterval: 1e3 }),
            (s.retryFunc = (e, t, r) => (
              this.isCommunityResource() && dZ("Etherscan"), Promise.resolve(!0)
            )),
            (s.processFunc = async (t, r) => {
              let a = r.hasBody() ? JSON.parse(nM(r.body)) : {},
                i =
                  ("string" == typeof a.result ? a.result : "")
                    .toLowerCase()
                    .indexOf("rate limit") >= 0;
              return (
                "proxy" === e
                  ? a &&
                    0 == a.status &&
                    "NOTOK" == a.message &&
                    i &&
                    (this.emit("debug", {
                      action: "receiveError",
                      id: n,
                      reason: "proxy-NOTOK",
                      error: a,
                    }),
                    r.throwThrottleError(a.result, 2e3))
                  : i &&
                    (this.emit("debug", {
                      action: "receiveError",
                      id: n,
                      reason: "null result",
                      error: a.result,
                    }),
                    r.throwThrottleError(a.result, 2e3)),
                r
              );
            }),
            i &&
              (s.setHeader(
                "content-type",
                "application/x-www-form-urlencoded; charset=UTF-8"
              ),
              (s.body = Object.keys(i)
                .map((e) => "".concat(e, "=").concat(i[e]))
                .join("&")));
          let o = await s.send();
          try {
            o.assertOk();
          } catch (e) {
            this.emit("debug", {
              action: "receiveError",
              id: n,
              error: e,
              reason: "assertOk",
            }),
              nf(!1, "response error", "SERVER_ERROR", {
                request: s,
                response: o,
              });
          }
          o.hasBody() ||
            (this.emit("debug", {
              action: "receiveError",
              id: n,
              error: "missing body",
              reason: "null body",
            }),
            nf(!1, "missing response", "SERVER_ERROR", {
              request: s,
              response: o,
            }));
          let l = JSON.parse(nM(o.body));
          return (
            "proxy" === e
              ? ("2.0" != l.jsonrpc &&
                  (this.emit("debug", {
                    action: "receiveError",
                    id: n,
                    result: l,
                    reason: "invalid JSON-RPC",
                  }),
                  nf(
                    !1,
                    "invalid JSON-RPC response (missing jsonrpc='2.0')",
                    "SERVER_ERROR",
                    { request: s, response: o, info: { result: l } }
                  )),
                l.error &&
                  (this.emit("debug", {
                    action: "receiveError",
                    id: n,
                    result: l,
                    reason: "JSON-RPC error",
                  }),
                  nf(!1, "error response", "SERVER_ERROR", {
                    request: s,
                    response: o,
                    info: { result: l },
                  })))
              : (0 == l.status &&
                  ("No records found" === l.message ||
                    "No transactions found" === l.message)) ||
                (1 == l.status &&
                  ("string" != typeof l.message || l.message.match(/^OK/))) ||
                (this.emit("debug", {
                  action: "receiveError",
                  id: n,
                  result: l,
                }),
                nf(!1, "error response", "SERVER_ERROR", {
                  request: s,
                  response: o,
                  info: { result: l },
                })),
            this.emit("debug", { action: "receiveRequest", id: n, result: l }),
            l.result
          );
        }
        _getTransactionPostData(e) {
          let t = {};
          for (let r in e) {
            if (p3.indexOf(r) >= 0 || null == e[r]) continue;
            let n = e[r];
            if (
              ("type" !== r || 0 !== n) &&
              ("blockTag" !== r || "latest" !== n)
            ) {
              if (
                {
                  type: !0,
                  gasLimit: !0,
                  gasPrice: !0,
                  maxFeePerGs: !0,
                  maxPriorityFeePerGas: !0,
                  nonce: !0,
                  value: !0,
                }[r]
              )
                n = n$(n);
              else if ("accessList" === r)
                n =
                  "[" +
                  s2(n)
                    .map((e) =>
                      '{address:"'
                        .concat(e.address, '",storageKeys:["')
                        .concat(e.storageKeys.join('","'), '"]}')
                    )
                    .join(",") +
                  "]";
              else if ("blobVersionedHashes" === r) {
                if (0 === n.length) continue;
                nf(
                  !1,
                  "Etherscan API does not support blobVersionedHashes",
                  "UNSUPPORTED_OPERATION",
                  {
                    operation: "_getTransactionPostData",
                    info: { transaction: e },
                  }
                );
              } else n = n_(n);
              t[r] = n;
            }
          }
          return t;
        }
        _checkError(e, t, r) {
          let n = "";
          if (nc(t, "SERVER_ERROR")) {
            try {
              n = t.info.result.error.message;
            } catch (e) {}
            if (!n)
              try {
                n = t.info.message;
              } catch (e) {}
          }
          if (
            ("estimateGas" === e.method &&
              !n.match(/revert/i) &&
              n.match(/insufficient funds/i) &&
              nf(!1, "insufficient funds", "INSUFFICIENT_FUNDS", {
                transaction: e.transaction,
              }),
            ("call" === e.method || "estimateGas" === e.method) &&
              n.match(/execution reverted/i))
          ) {
            let r = "";
            try {
              r = t.info.result.error.data;
            } catch (e) {}
            let n = sw.getBuiltinCallException(e.method, e.transaction, r);
            throw ((n.info = { request: e, error: t }), n);
          }
          if (n && "broadcastTransaction" === e.method) {
            let t = fL.from(e.signedTransaction);
            n.match(/replacement/i) &&
              n.match(/underpriced/i) &&
              nf(!1, "replacement fee too low", "REPLACEMENT_UNDERPRICED", {
                transaction: t,
              }),
              n.match(/insufficient funds/) &&
                nf(
                  !1,
                  "insufficient funds for intrinsic transaction cost",
                  "INSUFFICIENT_FUNDS",
                  { transaction: t }
                ),
              n.match(
                /same hash was already imported|transaction nonce is too low|nonce too low/
              ) &&
                nf(!1, "nonce has already been used", "NONCE_EXPIRED", {
                  transaction: t,
                });
          }
          throw t;
        }
        async _detectNetwork() {
          return this.network;
        }
        async _perform(e) {
          switch (e.method) {
            case "chainId":
              return this.network.chainId;
            case "getBlockNumber":
              return this.fetch("proxy", { action: "eth_blockNumber" });
            case "getGasPrice":
              return this.fetch("proxy", { action: "eth_gasPrice" });
            case "getPriorityFee":
              if ("mainnet" === this.network.name) return "1000000000";
              if ("optimism" === this.network.name) return "1000000";
              throw Error("fallback onto the AbstractProvider default");
            case "getBalance":
              return this.fetch("account", {
                action: "balance",
                address: e.address,
                tag: e.blockTag,
              });
            case "getTransactionCount":
              return this.fetch("proxy", {
                action: "eth_getTransactionCount",
                address: e.address,
                tag: e.blockTag,
              });
            case "getCode":
              return this.fetch("proxy", {
                action: "eth_getCode",
                address: e.address,
                tag: e.blockTag,
              });
            case "getStorage":
              return this.fetch("proxy", {
                action: "eth_getStorageAt",
                address: e.address,
                position: e.position,
                tag: e.blockTag,
              });
            case "broadcastTransaction":
              return this.fetch(
                "proxy",
                { action: "eth_sendRawTransaction", hex: e.signedTransaction },
                !0
              ).catch((t) => this._checkError(e, t, e.signedTransaction));
            case "getBlock":
              if ("blockTag" in e)
                return this.fetch("proxy", {
                  action: "eth_getBlockByNumber",
                  tag: e.blockTag,
                  boolean: e.includeTransactions ? "true" : "false",
                });
              nf(
                !1,
                "getBlock by blockHash not supported by Etherscan",
                "UNSUPPORTED_OPERATION",
                { operation: "getBlock(blockHash)" }
              );
            case "getTransaction":
              return this.fetch("proxy", {
                action: "eth_getTransactionByHash",
                txhash: e.hash,
              });
            case "getTransactionReceipt":
              return this.fetch("proxy", {
                action: "eth_getTransactionReceipt",
                txhash: e.hash,
              });
            case "call": {
              if ("latest" !== e.blockTag)
                throw Error(
                  "EtherscanProvider does not support blockTag for call"
                );
              let t = this._getTransactionPostData(e.transaction);
              (t.module = "proxy"), (t.action = "eth_call");
              try {
                return await this.fetch("proxy", t, !0);
              } catch (t) {
                return this._checkError(e, t, e.transaction);
              }
            }
            case "estimateGas": {
              let t = this._getTransactionPostData(e.transaction);
              (t.module = "proxy"), (t.action = "eth_estimateGas");
              try {
                return await this.fetch("proxy", t, !0);
              } catch (t) {
                return this._checkError(e, t, e.transaction);
              }
            }
          }
          return super._perform(e);
        }
        async getNetwork() {
          return this.network;
        }
        async getEtherPrice() {
          return "mainnet" !== this.network.name
            ? 0
            : parseFloat(
                (await this.fetch("stats", { action: "ethprice" })).ethusd
              );
        }
        async getContract(e) {
          var t;
          let r = this._getAddress(e);
          (t = r) && "function" == typeof t.then && (r = await r);
          try {
            let e = await this.fetch("contract", {
                action: "getabi",
                address: r,
              }),
              t = JSON.parse(e);
            return new oz(r, t, this);
          } catch (e) {
            return null;
          }
        }
        isCommunityResource() {
          return null == this.apiKey;
        }
        constructor(e, t) {
          super(),
            (0, eU._)(this, "network", void 0),
            (0, eU._)(this, "apiKey", void 0),
            (0, tt._)(this, p8, { writable: !0, value: void 0 });
          let r = d7.from(e);
          (0, tr._)(this, p8, r.getPlugin(p1)),
            no(this, { apiKey: null != t ? t : null, network: r });
        }
      }
      let p6 = (
        "undefined" != typeof self
          ? self
          : "undefined" != typeof window
          ? window
          : globalThis
      ).WebSocket;
      var p9 = new WeakMap(),
        p7 = new WeakMap(),
        xe = new WeakMap(),
        xt = new WeakMap(),
        xr = new WeakMap();
      class xn {
        get filter() {
          return JSON.parse((0, te._)(this, p7));
        }
        start() {
          (0, tr._)(
            this,
            xe,
            (0, te._)(this, p9)
              .send("eth_subscribe", this.filter)
              .then((e) => ((0, te._)(this, p9)._register(e, this), e))
          );
        }
        stop() {
          (0, te._)(this, xe).then((e) => {
            (0, te._)(this, p9).destroyed ||
              (0, te._)(this, p9).send("eth_unsubscribe", [e]);
          }),
            (0, tr._)(this, xe, null);
        }
        pause(e) {
          nf(
            e,
            "preserve logs while paused not supported by SocketSubscriber yet",
            "UNSUPPORTED_OPERATION",
            { operation: "pause(false)" }
          ),
            (0, tr._)(this, xt, !!e);
        }
        resume() {
          (0, tr._)(this, xt, null);
        }
        _handleMessage(e) {
          if (null != (0, te._)(this, xe) && null === (0, te._)(this, xt)) {
            let t = (0, te._)(this, xr);
            (t =
              null == t
                ? this._emit((0, te._)(this, p9), e)
                : t.then(async () => {
                    await this._emit((0, te._)(this, p9), e);
                  })),
              (0, tr._)(
                this,
                xr,
                t.then(() => {
                  (0, te._)(this, xr) === t && (0, tr._)(this, xr, null);
                })
              );
          }
        }
        async _emit(e, t) {
          throw Error("sub-classes must implemente this; _emit");
        }
        constructor(e, t) {
          (0, tt._)(this, p9, { writable: !0, value: void 0 }),
            (0, tt._)(this, p7, { writable: !0, value: void 0 }),
            (0, tt._)(this, xe, { writable: !0, value: void 0 }),
            (0, tt._)(this, xt, { writable: !0, value: void 0 }),
            (0, tt._)(this, xr, { writable: !0, value: void 0 }),
            (0, tr._)(this, p9, e),
            (0, tr._)(this, p7, JSON.stringify(t)),
            (0, tr._)(this, xe, null),
            (0, tr._)(this, xt, null),
            (0, tr._)(this, xr, null);
        }
      }
      class xa extends xn {
        async _emit(e, t) {
          e.emit("block", parseInt(t.number));
        }
        constructor(e) {
          super(e, ["newHeads"]);
        }
      }
      class xi extends xn {
        async _emit(e, t) {
          e.emit("pending", t);
        }
        constructor(e) {
          super(e, ["newPendingTransactions"]);
        }
      }
      var xs = new WeakMap();
      class xo extends xn {
        get logFilter() {
          return JSON.parse((0, te._)(this, xs));
        }
        async _emit(e, t) {
          e.emit(this.logFilter, e._wrapLog(t, e._network));
        }
        constructor(e, t) {
          super(e, ["logs", t]),
            (0, tt._)(this, xs, { writable: !0, value: void 0 }),
            (0, tr._)(this, xs, JSON.stringify(t));
        }
      }
      var xl = new WeakMap(),
        xc = new WeakMap(),
        xu = new WeakMap();
      class xd extends pG {
        _getSubscriber(e) {
          switch (e.type) {
            case "close":
              return new hM("close");
            case "block":
              return new xa(this);
            case "pending":
              return new xi(this);
            case "event":
              return new xo(this, e.filter);
            case "orphan":
              if ("drop-log" === e.filter.orphan) return new hM("drop-log");
          }
          return super._getSubscriber(e);
        }
        _register(e, t) {
          (0, te._)(this, xc).set(e, t);
          let r = (0, te._)(this, xu).get(e);
          if (r) {
            for (let e of r) t._handleMessage(e);
            (0, te._)(this, xu).delete(e);
          }
        }
        async _send(e) {
          nh(
            !Array.isArray(e),
            "WebSocket does not support batch send",
            "payload",
            e
          );
          let t = new Promise((t, r) => {
            (0, te._)(this, xl).set(e.id, {
              payload: e,
              resolve: t,
              reject: r,
            });
          });
          return (
            await this._waitUntilReady(),
            await this._write(JSON.stringify(e)),
            [await t]
          );
        }
        async _processMessage(e) {
          let t = JSON.parse(e);
          if (t && "object" == typeof t && "id" in t) {
            let e = (0, te._)(this, xl).get(t.id);
            if (null == e)
              return void this.emit(
                "error",
                nd("received result for unknown id", "UNKNOWN_ERROR", {
                  reasonCode: "UNKNOWN_ID",
                  result: t,
                })
              );
            (0, te._)(this, xl).delete(t.id), e.resolve(t);
          } else {
            if (!t || "eth_subscription" !== t.method)
              return void this.emit(
                "error",
                nd("received unexpected message", "UNKNOWN_ERROR", {
                  reasonCode: "UNEXPECTED_MESSAGE",
                  result: t,
                })
              );
            let e = t.params.subscription,
              r = (0, te._)(this, xc).get(e);
            if (r) r._handleMessage(t.params.result);
            else {
              let r = (0, te._)(this, xu).get(e);
              null == r && ((r = []), (0, te._)(this, xu).set(e, r)),
                r.push(t.params.result);
            }
          }
        }
        async _write(e) {
          throw Error("sub-classes must override this");
        }
        constructor(e, t) {
          let r = Object.assign({}, null != t ? t : {});
          nh(
            null == r.batchMaxCount || 1 === r.batchMaxCount,
            "sockets-based providers do not support batches",
            "options.batchMaxCount",
            t
          ),
            (r.batchMaxCount = 1),
            null == r.staticNetwork && (r.staticNetwork = !0),
            super(e, r),
            (0, tt._)(this, xl, { writable: !0, value: void 0 }),
            (0, tt._)(this, xc, { writable: !0, value: void 0 }),
            (0, tt._)(this, xu, { writable: !0, value: void 0 }),
            (0, tr._)(this, xl, new Map()),
            (0, tr._)(this, xc, new Map()),
            (0, tr._)(this, xu, new Map());
        }
      }
      var xf = new WeakMap(),
        xh = new WeakMap();
      class xp extends xd {
        get websocket() {
          if (null == (0, te._)(this, xh)) throw Error("websocket closed");
          return (0, te._)(this, xh);
        }
        async _write(e) {
          this.websocket.send(e);
        }
        async destroy() {
          null != (0, te._)(this, xh) &&
            ((0, te._)(this, xh).close(), (0, tr._)(this, xh, null)),
            super.destroy();
        }
        constructor(e, t, r) {
          super(t, r),
            (0, tt._)(this, xf, { writable: !0, value: void 0 }),
            (0, tt._)(this, xh, { writable: !0, value: void 0 }),
            "string" == typeof e
              ? ((0, tr._)(this, xf, () => new p6(e)),
                (0, tr._)(this, xh, (0, te._)(this, xf).call(this)))
              : "function" == typeof e
              ? ((0, tr._)(this, xf, e), (0, tr._)(this, xh, e()))
              : ((0, tr._)(this, xf, null), (0, tr._)(this, xh, e)),
            (this.websocket.onopen = async () => {
              try {
                await this._start(), this.resume();
              } catch (e) {
                console.log("failed to start WebsocketProvider", e);
              }
            }),
            (this.websocket.onmessage = (e) => {
              this._processMessage(e.data);
            });
        }
      }
      let xx = "84842078b09946638c03157f83405213";
      class xg extends xp {
        isCommunityResource() {
          return this.projectId === xx;
        }
        constructor(e, t) {
          let r = new xb(e, t),
            n = r._getConnection();
          nf(
            !n.credentials,
            "INFURA WebSocket project secrets unsupported",
            "UNSUPPORTED_OPERATION",
            { operation: "InfuraProvider.getWebSocketProvider()" }
          ),
            super(
              n.url.replace(/^http/i, "ws").replace("/v3/", "/ws/v3/"),
              r._network
            ),
            (0, eU._)(this, "projectId", void 0),
            (0, eU._)(this, "projectSecret", void 0),
            no(this, {
              projectId: r.projectId,
              projectSecret: r.projectSecret,
            });
        }
      }
      class xb extends pq {
        _getProvider(e) {
          try {
            return new xb(e, this.projectId, this.projectSecret);
          } catch (e) {}
          return super._getProvider(e);
        }
        isCommunityResource() {
          return this.projectId === xx;
        }
        static getWebSocketProvider(e, t) {
          return new xg(e, t);
        }
        static getRequest(e, t, r) {
          null == t && (t = xx), null == r && (r = null);
          let n = new dD(
            "https://"
              .concat(
                (function (e) {
                  switch (e) {
                    case "mainnet":
                      return "mainnet.infura.io";
                    case "goerli":
                      return "goerli.infura.io";
                    case "sepolia":
                      return "sepolia.infura.io";
                    case "arbitrum":
                      return "arbitrum-mainnet.infura.io";
                    case "arbitrum-goerli":
                      return "arbitrum-goerli.infura.io";
                    case "arbitrum-sepolia":
                      return "arbitrum-sepolia.infura.io";
                    case "base":
                      return "base-mainnet.infura.io";
                    case "base-goerlia":
                    case "base-goerli":
                      return "base-goerli.infura.io";
                    case "base-sepolia":
                      return "base-sepolia.infura.io";
                    case "bnb":
                      return "bsc-mainnet.infura.io";
                    case "bnbt":
                      return "bsc-testnet.infura.io";
                    case "linea":
                      return "linea-mainnet.infura.io";
                    case "linea-goerli":
                      return "linea-goerli.infura.io";
                    case "linea-sepolia":
                      return "linea-sepolia.infura.io";
                    case "matic":
                      return "polygon-mainnet.infura.io";
                    case "matic-amoy":
                      return "polygon-amoy.infura.io";
                    case "matic-mumbai":
                      return "polygon-mumbai.infura.io";
                    case "optimism":
                      return "optimism-mainnet.infura.io";
                    case "optimism-goerli":
                      return "optimism-goerli.infura.io";
                    case "optimism-sepolia":
                      return "optimism-sepolia.infura.io";
                  }
                  nh(!1, "unsupported network", "network", e);
                })(e.name),
                "/v3/"
              )
              .concat(t)
          );
          return (
            (n.allowGzip = !0),
            r && n.setCredentials("", r),
            t === xx &&
              (n.retryFunc = async (e, t, r) => (dZ("InfuraProvider"), !0)),
            n
          );
        }
        constructor(e, t, r) {
          null == e && (e = "mainnet");
          let n = d7.from(e);
          null == t && (t = xx),
            null == r && (r = null),
            super(xb.getRequest(n, t, r), n, { staticNetwork: n }),
            (0, eU._)(this, "projectId", void 0),
            (0, eU._)(this, "projectSecret", void 0),
            no(this, { projectId: t, projectSecret: r });
        }
      }
      let xm = "919b412a057b5e9c9b6dce193c5a60242d6efadb";
      class xy extends pq {
        _getProvider(e) {
          try {
            return new xy(e, this.token);
          } catch (e) {}
          return super._getProvider(e);
        }
        isCommunityResource() {
          return this.token === xm;
        }
        static getRequest(e, t) {
          null == t && (t = xm);
          let r = new dD(
            "https://"
              .concat(
                (function (e) {
                  switch (e) {
                    case "mainnet":
                      return "ethers.quiknode.pro";
                    case "goerli":
                      return "ethers.ethereum-goerli.quiknode.pro";
                    case "sepolia":
                      return "ethers.ethereum-sepolia.quiknode.pro";
                    case "holesky":
                      return "ethers.ethereum-holesky.quiknode.pro";
                    case "arbitrum":
                      return "ethers.arbitrum-mainnet.quiknode.pro";
                    case "arbitrum-goerli":
                      return "ethers.arbitrum-goerli.quiknode.pro";
                    case "arbitrum-sepolia":
                      return "ethers.arbitrum-sepolia.quiknode.pro";
                    case "base":
                      return "ethers.base-mainnet.quiknode.pro";
                    case "base-goerli":
                      return "ethers.base-goerli.quiknode.pro";
                    case "base-spolia":
                      return "ethers.base-sepolia.quiknode.pro";
                    case "bnb":
                      return "ethers.bsc.quiknode.pro";
                    case "bnbt":
                      return "ethers.bsc-testnet.quiknode.pro";
                    case "matic":
                      return "ethers.matic.quiknode.pro";
                    case "matic-mumbai":
                      return "ethers.matic-testnet.quiknode.pro";
                    case "optimism":
                      return "ethers.optimism.quiknode.pro";
                    case "optimism-goerli":
                      return "ethers.optimism-goerli.quiknode.pro";
                    case "optimism-sepolia":
                      return "ethers.optimism-sepolia.quiknode.pro";
                    case "xdai":
                      return "ethers.xdai.quiknode.pro";
                  }
                  nh(!1, "unsupported network", "network", e);
                })(e.name),
                "/"
              )
              .concat(t)
          );
          return (
            (r.allowGzip = !0),
            t === xm &&
              (r.retryFunc = async (e, t, r) => (dZ("QuickNodeProvider"), !0)),
            r
          );
        }
        constructor(e, t) {
          null == e && (e = "mainnet");
          let r = d7.from(e);
          null == t && (t = xm),
            super(xy.getRequest(r, t), r, { staticNetwork: r }),
            (0, eU._)(this, "token", void 0),
            no(this, { token: t });
        }
      }
      let xw = BigInt("1"),
        xv = BigInt("2");
      function xA() {
        return new Date().getTime();
      }
      function xE(e) {
        return JSON.stringify(e, (e, t) =>
          "bigint" == typeof t ? { type: "bigint", value: t.toString() } : t
        );
      }
      let x_ = { stallTimeout: 400, priority: 1, weight: 1 },
        xk = {
          blockNumber: -2,
          requests: 0,
          lateResponses: 0,
          errorResponses: 0,
          outOfSync: -1,
          unsupportedEvents: 0,
          rollingDuration: 0,
          score: 0,
          _network: null,
          _updateNumber: null,
          _totalTime: 0,
          _lastFatalError: null,
          _lastFatalErrorTimestamp: 0,
        };
      async function xN(e, t) {
        for (
          ;
          (e.blockNumber < 0 || e.blockNumber < t) &&
          (e._updateNumber ||
            (e._updateNumber = (async () => {
              try {
                let t = await e.provider.getBlockNumber();
                t > e.blockNumber && (e.blockNumber = t);
              } catch (t) {
                (e.blockNumber = -2),
                  (e._lastFatalError = t),
                  (e._lastFatalErrorTimestamp = xA());
              }
              e._updateNumber = null;
            })()),
          await e._updateNumber,
          e.outOfSync++,
          !e._lastFatalError);

        );
      }
      function xP(e) {
        if (null == e) return "null";
        if (Array.isArray(e)) return "[" + e.map(xP).join(",") + "]";
        if ("object" == typeof e && "function" == typeof e.toJSON)
          return xP(e.toJSON());
        switch (typeof e) {
          case "boolean":
          case "symbol":
            return e.toString();
          case "bigint":
          case "number":
            return BigInt(e).toString();
          case "string":
            return JSON.stringify(e);
          case "object": {
            let t = Object.keys(e);
            return (
              t.sort(),
              "{" +
                t
                  .map((t) =>
                    "".concat(JSON.stringify(t), ":").concat(xP(e[t]))
                  )
                  .join(",") +
                "}"
            );
          }
        }
        throw (console.log("Could not serialize", e), Error("Hmm..."));
      }
      function xT(e, t) {
        if ("error" in t) {
          let e = t.error;
          return {
            tag: nc(e, "CALL_EXCEPTION")
              ? xP(
                  Object.assign({}, e, {
                    shortMessage: void 0,
                    reason: void 0,
                    info: void 0,
                  })
                )
              : xP(e),
            value: e,
          };
        }
        let r = t.result;
        return { tag: xP(r), value: r };
      }
      function xS(e, t) {
        let r = new Map();
        for (let { value: e, tag: n, weight: a } of t) {
          let t = r.get(n) || { value: e, weight: 0 };
          (t.weight += a), r.set(n, t);
        }
        let n = null;
        for (let t of r.values())
          t.weight >= e && (!n || t.weight > n.weight) && (n = t);
        if (n) return n.value;
      }
      function xO(e, t) {
        let r = 0,
          n = new Map(),
          a = null,
          i = [];
        for (let { value: e, tag: s, weight: o } of t)
          if (e instanceof Error) {
            let t = n.get(s) || { value: e, weight: 0 };
            (t.weight += o),
              n.set(s, t),
              (null == a || t.weight > a.weight) && (a = t);
          } else i.push(BigInt(e)), (r += o);
        if (r < e) return a && a.weight >= e ? a.value : void 0;
        i.sort((e, t) => (e < t ? -1 : +(t > e)));
        let s = Math.floor(i.length / 2);
        return i.length % 2 ? i[s] : (i[s - 1] + i[s] + xw) / xv;
      }
      function xR(e, t) {
        let r = xS(e, t);
        if (void 0 !== r) return r;
        for (let e of t) if (e.value) return e.value;
      }
      var xC = new WeakMap(),
        xI = new WeakMap(),
        xB = new WeakMap(),
        xU = new WeakSet(),
        xM = new WeakSet(),
        xj = new WeakSet(),
        xF = new WeakSet(),
        xD = new WeakSet();
      class xL extends h5 {
        get providerConfigs() {
          return (0, te._)(this, xC).map((e) => {
            let t = Object.assign({}, e);
            for (let e in t) "_" === e[0] && delete t[e];
            return t;
          });
        }
        async _detectNetwork() {
          return d7.from(nH(await this._perform({ method: "chainId" })));
        }
        async _translatePerform(e, t) {
          switch (t.method) {
            case "broadcastTransaction":
              return await e.broadcastTransaction(t.signedTransaction);
            case "call":
              return await e.call(
                Object.assign({}, t.transaction, { blockTag: t.blockTag })
              );
            case "chainId":
              return (await e.getNetwork()).chainId;
            case "estimateGas":
              return await e.estimateGas(t.transaction);
            case "getBalance":
              return await e.getBalance(t.address, t.blockTag);
            case "getBlock": {
              let r = "blockHash" in t ? t.blockHash : t.blockTag;
              return await e.getBlock(r, t.includeTransactions);
            }
            case "getBlockNumber":
              return await e.getBlockNumber();
            case "getCode":
              return await e.getCode(t.address, t.blockTag);
            case "getGasPrice":
              return (await e.getFeeData()).gasPrice;
            case "getPriorityFee":
              return (await e.getFeeData()).maxPriorityFeePerGas;
            case "getLogs":
              return await e.getLogs(t.filter);
            case "getStorage":
              return await e.getStorage(t.address, t.position, t.blockTag);
            case "getTransaction":
              return await e.getTransaction(t.hash);
            case "getTransactionCount":
              return await e.getTransactionCount(t.address, t.blockTag);
            case "getTransactionReceipt":
              return await e.getTransactionReceipt(t.hash);
            case "getTransactionResult":
              return await e.getTransactionResult(t.hash);
          }
        }
        async _perform(e) {
          if ("broadcastTransaction" === e.method) {
            let t = (0, te._)(this, xC).map((e) => null),
              r = (0, te._)(this, xC).map(async (r, n) => {
                let { provider: a, weight: i } = r;
                try {
                  let r = await a._perform(e);
                  t[n] = Object.assign(xT(e.method, { result: r }), {
                    weight: i,
                  });
                } catch (r) {
                  t[n] = Object.assign(xT(e.method, { error: r }), {
                    weight: i,
                  });
                }
              });
            for (;;) {
              for (let { value: e } of t.filter((e) => null != e))
                if (!(e instanceof Error)) return e;
              let e = xS(
                this.quorum,
                t.filter((e) => null != e)
              );
              if (nc(e, "INSUFFICIENT_FUNDS")) throw e;
              let n = r.filter((e, r) => null == t[r]);
              if (0 === n.length) break;
              await Promise.race(n);
            }
            let n = xR(this.quorum, t);
            if (
              (nf(void 0 !== n, "problem multi-broadcasting", "SERVER_ERROR", {
                request: "%sub-requests",
                info: { request: e, results: t.map(xE) },
              }),
              n instanceof Error)
            )
              throw n;
            return n;
          }
          await (0, tn._)(this, xj, xW).call(this);
          let t = new Set(),
            r = 0;
          for (;;) {
            let n = (0, tn._)(this, xM, xG).call(this, t, e);
            if (null == n || (r += n.config.weight) >= this.quorum) break;
          }
          let n = await (0, tn._)(this, xD, xH).call(this, t, e);
          for (let e of t)
            e.perform && null == e.result && e.config.lateResponses++;
          return n;
        }
        async destroy() {
          for (let { provider: e } of (0, te._)(this, xC)) e.destroy();
          super.destroy();
        }
        constructor(e, t, r) {
          super(t, r),
            (0, ta._)(this, xU),
            (0, ta._)(this, xM),
            (0, ta._)(this, xj),
            (0, ta._)(this, xF),
            (0, ta._)(this, xD),
            (0, eU._)(this, "quorum", void 0),
            (0, eU._)(this, "eventQuorum", void 0),
            (0, eU._)(this, "eventWorkers", void 0),
            (0, tt._)(this, xC, { writable: !0, value: void 0 }),
            (0, tt._)(this, xI, { writable: !0, value: void 0 }),
            (0, tt._)(this, xB, { writable: !0, value: void 0 }),
            (0, tr._)(
              this,
              xC,
              e.map((e) =>
                e instanceof h5
                  ? Object.assign({ provider: e }, x_, xk)
                  : Object.assign({}, x_, e, xk)
              )
            ),
            (0, tr._)(this, xI, -2),
            (0, tr._)(this, xB, null),
            r && null != r.quorum
              ? (this.quorum = r.quorum)
              : (this.quorum = Math.ceil(
                  (0, te._)(this, xC).reduce((e, t) => (e += t.weight), 0) / 2
                )),
            (this.eventQuorum = 1),
            (this.eventWorkers = 1),
            nh(
              this.quorum <=
                (0, te._)(this, xC).reduce((e, t) => e + t.weight, 0),
              "quorum exceed provider weight",
              "quorum",
              this.quorum
            );
        }
      }
      function xz(e) {
        let t = Array.from(e).map((e) => e.config),
          r = (0, te._)(this, xC).slice();
        for (let e = r.length - 1; e > 0; e--) {
          let t = Math.floor(Math.random() * (e + 1)),
            n = r[e];
          (r[e] = r[t]), (r[t] = n);
        }
        for (let e of (r.sort((e, t) => e.priority - t.priority), r))
          if (!e._lastFatalError && -1 === t.indexOf(e)) return e;
        return null;
      }
      function xG(e, t) {
        let r = (0, tn._)(this, xU, xz).call(this, e);
        if (null == r) return null;
        let n = {
            config: r,
            result: null,
            didBump: !1,
            perform: null,
            staller: null,
          },
          a = xA();
        return (
          (n.perform = (async () => {
            try {
              r.requests++,
                (n.result = {
                  result: await this._translatePerform(r.provider, t),
                });
            } catch (e) {
              r.errorResponses++, (n.result = { error: e });
            }
            let e = xA() - a;
            (r._totalTime += e),
              (r.rollingDuration = 0.95 * r.rollingDuration + 0.05 * e),
              (n.perform = null);
          })()),
          (n.staller = (async () => {
            var e;
            await ((e = r.stallTimeout),
            new Promise((t) => {
              setTimeout(t, e);
            })),
              (n.staller = null);
          })()),
          e.add(n),
          n
        );
      }
      async function xW() {
        let e = (0, te._)(this, xB);
        if (!e) {
          let t = [];
          (0, te._)(this, xC).forEach((e) => {
            t.push(
              (async () => {
                await xN(e, 0),
                  e._lastFatalError ||
                    (e._network = await e.provider.getNetwork());
              })()
            );
          }),
            (0, tr._)(
              this,
              xB,
              (e = (async () => {
                await Promise.all(t);
                let e = null;
                for (let t of (0, te._)(this, xC)) {
                  if (t._lastFatalError) continue;
                  let r = t._network;
                  null == e
                    ? (e = r.chainId)
                    : r.chainId !== e &&
                      nf(
                        !1,
                        "cannot mix providers on different networks",
                        "UNSUPPORTED_OPERATION",
                        { operation: "new FallbackProvider" }
                      );
                }
              })())
            );
        }
        await e;
      }
      async function xV(e, t) {
        let r = [];
        for (let n of e)
          if (null != n.result) {
            let { tag: e, value: a } = xT(t.method, n.result);
            r.push({ tag: e, value: a, weight: n.config.weight });
          }
        if (!(r.reduce((e, t) => e + t.weight, 0) < this.quorum)) {
          switch (t.method) {
            case "getBlockNumber": {
              -2 === (0, te._)(this, xI) &&
                (0, tr._)(
                  this,
                  xI,
                  Math.ceil(
                    nJ(
                      xO(
                        this.quorum,
                        (0, te._)(this, xC)
                          .filter((e) => !e._lastFatalError)
                          .map((e) => ({
                            value: e.blockNumber,
                            tag: nJ(e.blockNumber).toString(),
                            weight: e.weight,
                          }))
                      )
                    )
                  )
                );
              let e = (function (e, t) {
                let r;
                if (1 === e) return nJ(xO(e, t), "%internal");
                let n = new Map(),
                  a = (e, t) => {
                    let r = n.get(e) || { result: e, weight: 0 };
                    (r.weight += t), n.set(e, r);
                  };
                for (let { weight: e, value: r } of t) {
                  let t = nJ(r);
                  a(t - 1, e), a(t, e), a(t + 1, e);
                }
                let i = 0;
                for (let { weight: t, result: a } of n.values())
                  t >= e &&
                    (t > i || (null != r && t === i && a > r)) &&
                    ((i = t), (r = a));
                return r;
              })(this.quorum, r);
              if (void 0 === e) return;
              return (
                e > (0, te._)(this, xI) && (0, tr._)(this, xI, e),
                (0, te._)(this, xI)
              );
            }
            case "getGasPrice":
            case "getPriorityFee":
            case "estimateGas":
              return xO(this.quorum, r);
            case "getBlock":
              if ("blockTag" in t && "pending" === t.blockTag)
                return xR(this.quorum, r);
              return xS(this.quorum, r);
            case "call":
            case "chainId":
            case "getBalance":
            case "getTransactionCount":
            case "getCode":
            case "getStorage":
            case "getTransaction":
            case "getTransactionReceipt":
            case "getLogs":
              return xS(this.quorum, r);
            case "broadcastTransaction":
              return xR(this.quorum, r);
          }
          nf(!1, "unsupported method", "UNSUPPORTED_OPERATION", {
            operation: "_perform(".concat(xE(t.method), ")"),
          });
        }
      }
      async function xH(e, t) {
        if (0 === e.size) throw Error("no runners?!");
        let r = [],
          n = 0;
        for (let t of e) {
          if ((t.perform && r.push(t.perform), t.staller)) {
            r.push(t.staller);
            continue;
          }
          !t.didBump && ((t.didBump = !0), n++);
        }
        let a = await (0, tn._)(this, xF, xV).call(this, e, t);
        if (void 0 !== a) {
          if (a instanceof Error) throw a;
          return a;
        }
        for (let r = 0; r < n; r++) (0, tn._)(this, xM, xG).call(this, e, t);
        return (
          nf(r.length > 0, "quorum not met", "SERVER_ERROR", {
            request: "%sub-requests",
            info: {
              request: t,
              results: Array.from(e).map((e) => xE(e.result)),
            },
          }),
          await Promise.race(r),
          await (0, tn._)(this, xD, xH).call(this, e, t)
        );
      }
      let xK =
        "goerli kovan sepolia classicKotti optimism-goerli arbitrum-goerli matic-mumbai bnbt".split(
          " "
        );
      function xq(e, t) {
        null == t && (t = {});
        let r = (e) =>
          "-" !== t[e] &&
          ("string" == typeof t.exclusive
            ? e === t.exclusive
            : !Array.isArray(t.exclusive) || -1 !== t.exclusive.indexOf(e));
        if ("string" == typeof e && e.match(/^https?:/)) return new pq(e);
        if (
          ("string" == typeof e && e.match(/^wss?:/)) ||
          (e && "function" == typeof e.send && "function" == typeof e.close)
        )
          return new xp(e);
        let n = null;
        try {
          n = d7.from(e);
        } catch (e) {}
        let a = [];
        if (
          (r("publicPolygon") &&
            n &&
            ("matic" === n.name
              ? a.push(
                  new pq("https://polygon-rpc.com/", n, { staticNetwork: n })
                )
              : "matic-amoy" === n.name &&
                a.push(
                  new pq("https://rpc-amoy.polygon.technology/", n, {
                    staticNetwork: n,
                  })
                )),
          r("alchemy"))
        )
          try {
            a.push(new pY(e, t.alchemy));
          } catch (e) {}
        if (r("ankr") && null != t.ankr)
          try {
            a.push(new pJ(e, t.ankr));
          } catch (e) {}
        if (r("chainstack"))
          try {
            a.push(new p$(e, t.chainstack));
          } catch (e) {}
        if (r("cloudflare"))
          try {
            a.push(new p0(e));
          } catch (e) {}
        if (r("etherscan"))
          try {
            a.push(new p5(e, t.etherscan));
          } catch (e) {}
        if (r("infura"))
          try {
            let r,
              n = t.infura;
            "object" == typeof n && ((r = n.projectSecret), (n = n.projectId)),
              a.push(new xb(e, n, r));
          } catch (e) {}
        if (r("quicknode"))
          try {
            let r = t.quicknode;
            a.push(new xy(e, r));
          } catch (e) {}
        if (
          (nf(
            a.length,
            "unsupported default network",
            "UNSUPPORTED_OPERATION",
            { operation: "getDefaultProvider" }
          ),
          1 === a.length)
        )
          return a[0];
        let i = Math.floor(a.length / 2);
        return (
          i > 2 && (i = 2),
          n && -1 !== xK.indexOf(n.name) && (i = 1),
          t && t.quorum && (i = t.quorum),
          new xL(a, void 0, { quorum: i })
        );
      }
      var xQ = new WeakMap(),
        xJ = new WeakMap();
      class xZ extends pu {
        async getAddress() {
          return this.signer.getAddress();
        }
        connect(e) {
          return new xZ(this.signer.connect(e));
        }
        async getNonce(e) {
          if ("pending" === e) {
            null == (0, te._)(this, xQ) &&
              (0, tr._)(this, xQ, super.getNonce("pending"));
            let e = (0, te._)(this, xJ);
            return (await (0, te._)(this, xQ)) + e;
          }
          return super.getNonce(e);
        }
        increment() {
          (0, ik._)(this, xJ).value++;
        }
        reset() {
          (0, tr._)(this, xJ, 0), (0, tr._)(this, xQ, null);
        }
        async sendTransaction(e) {
          let t = this.getNonce("pending");
          return (
            this.increment(),
            ((e = await this.signer.populateTransaction(e)).nonce = await t),
            await this.signer.sendTransaction(e)
          );
        }
        signTransaction(e) {
          return this.signer.signTransaction(e);
        }
        signMessage(e) {
          return this.signer.signMessage(e);
        }
        signTypedData(e, t, r) {
          return this.signer.signTypedData(e, t, r);
        }
        constructor(e) {
          super(e.provider),
            (0, eU._)(this, "signer", void 0),
            (0, tt._)(this, xQ, { writable: !0, value: void 0 }),
            (0, tt._)(this, xJ, { writable: !0, value: void 0 }),
            no(this, { signer: e }),
            (0, tr._)(this, xQ, null),
            (0, tr._)(this, xJ, 0);
        }
      }
      var xY = new WeakMap(),
        xX = new WeakMap();
      class x$ extends pH {
        get providerInfo() {
          return (0, te._)(this, xX);
        }
        async send(e, t) {
          return await this._start(), await super.send(e, t);
        }
        async _send(e) {
          nh(
            !Array.isArray(e),
            "EIP-1193 does not support batch request",
            "payload",
            e
          );
          try {
            let t = await (0, te._)(this, xY).call(
              this,
              e.method,
              e.params || []
            );
            return [{ id: e.id, result: t }];
          } catch (t) {
            return [
              {
                id: e.id,
                error: { code: t.code, data: t.data, message: t.message },
              },
            ];
          }
        }
        getRpcError(e, t) {
          switch ((t = JSON.parse(JSON.stringify(t))).error.code || -1) {
            case 4001:
              t.error.message = "ethers-user-denied: ".concat(t.error.message);
              break;
            case 4200:
              t.error.message = "ethers-unsupported: ".concat(t.error.message);
          }
          return super.getRpcError(e, t);
        }
        async hasSigner(e) {
          null == e && (e = 0);
          let t = await this.send("eth_accounts", []);
          return "number" == typeof e
            ? t.length > e
            : ((e = e.toLowerCase()),
              0 !== t.filter((t) => t.toLowerCase() === e).length);
        }
        async getSigner(e) {
          if ((null == e && (e = 0), !(await this.hasSigner(e))))
            try {
              await (0, te._)(this, xY).call(this, "eth_requestAccounts", []);
            } catch (t) {
              let e = t.payload;
              throw this.getRpcError(e, { id: e.id, error: t });
            }
          return await super.getSigner(e);
        }
        static async discover(e) {
          if ((null == e && (e = {}), e.provider)) return new x$(e.provider);
          let t = e.window
            ? e.window
            : "undefined" != typeof window
            ? window
            : null;
          if (null == t) return null;
          let r = e.anyProvider;
          if (r && t.ethereum) return new x$(t.ethereum);
          if (
            !(
              "addEventListener" in t &&
              "dispatchEvent" in t &&
              "removeEventListener" in t
            )
          )
            return null;
          let n = e.timeout ? e.timeout : 300;
          return 0 === n
            ? null
            : await new Promise((a, i) => {
                let s = [],
                  o = (e) => {
                    s.push(e.detail), r && l();
                  },
                  l = () => {
                    if ((clearTimeout(c), s.length))
                      if (e && e.filter) {
                        let t = e.filter(
                          s.map((e) => Object.assign({}, e.info))
                        );
                        if (null == t) a(null);
                        else if (t instanceof x$) a(t);
                        else {
                          let e = null;
                          if (
                            (t.uuid &&
                              (e = s.filter((e) => t.uuid === e.info.uuid)[0]),
                            e)
                          ) {
                            let { provider: t, info: r } = e;
                            a(new x$(t, void 0, { providerInfo: r }));
                          } else
                            i(
                              nd(
                                "filter returned unknown info",
                                "UNSUPPORTED_OPERATION",
                                { value: t }
                              )
                            );
                        }
                      } else {
                        let { provider: e, info: t } = s[0];
                        a(new x$(e, void 0, { providerInfo: t }));
                      }
                    else a(null);
                    t.removeEventListener("eip6963:announceProvider", o);
                  },
                  c = setTimeout(() => {
                    l();
                  }, n);
                t.addEventListener("eip6963:announceProvider", o),
                  t.dispatchEvent(new Event("eip6963:requestProvider"));
              });
        }
        constructor(e, t, r) {
          let n = Object.assign({}, null != r ? r : {}, { batchMaxCount: 1 });
          nh(e && e.request, "invalid EIP-1193 provider", "ethereum", e),
            super(t, n),
            (0, tt._)(this, xY, { writable: !0, value: void 0 }),
            (0, tt._)(this, xX, { writable: !0, value: void 0 }),
            (0, tr._)(this, xX, null),
            r && r.providerInfo && (0, tr._)(this, xX, r.providerInfo),
            (0, tr._)(this, xY, async (t, r) => {
              let n = { method: t, params: r };
              this.emit("debug", { action: "sendEip1193Request", payload: n });
              try {
                let t = await e.request(n);
                return (
                  this.emit("debug", {
                    action: "receiveEip1193Result",
                    result: t,
                  }),
                  t
                );
              } catch (t) {
                let e = Error(t.message);
                throw (
                  ((e.code = t.code),
                  (e.data = t.data),
                  (e.payload = n),
                  this.emit("debug", {
                    action: "receiveEip1193Error",
                    error: e,
                  }),
                  e)
                );
              }
            });
        }
      }
      class x0 extends pq {
        _getProvider(e) {
          try {
            return new x0(e, this.apiKey);
          } catch (e) {}
          return super._getProvider(e);
        }
        isCommunityResource() {
          return null === this.apiKey;
        }
        getRpcRequest(e) {
          let t = super.getRpcRequest(e);
          return (
            t &&
              "eth_estimateGas" === t.method &&
              1 == t.args.length &&
              ((t.args = t.args.slice()), t.args.push("latest")),
            t
          );
        }
        getRpcError(e, t) {
          let r = t ? t.error : null;
          if (r && -32015 === r.code && !nv(r.data || "", !0)) {
            let e = {
                "assert(false)": "01",
                "arithmetic underflow or overflow": "11",
                "division or modulo by zero": "12",
                "out-of-bounds array access; popping on an empty array": "31",
                "out-of-bounds access of an array or bytesN": "32",
              },
              t = "";
            "VM execution error." === r.message
              ? (t = e[r.data] || "")
              : e[r.message || ""] && (t = e[r.message || ""]),
              t &&
                ((r.message += " (reverted: ".concat(r.data, ")")),
                (r.data =
                  "0x4e487b7100000000000000000000000000000000000000000000000000000000000000" +
                  t));
          } else
            r &&
              -32e3 === r.code &&
              "wrong transaction nonce" === r.message &&
              (r.message += " (nonce too low)");
          return super.getRpcError(e, t);
        }
        static getRequest(e) {
          let t = new dD(
            (function (e) {
              switch (e) {
                case "mainnet":
                  return "https://eth.blockscout.com/api/eth-rpc";
                case "sepolia":
                  return "https://eth-sepolia.blockscout.com/api/eth-rpc";
                case "holesky":
                  return "https://eth-holesky.blockscout.com/api/eth-rpc";
                case "classic":
                  return "https://etc.blockscout.com/api/eth-rpc";
                case "arbitrum":
                  return "https://arbitrum.blockscout.com/api/eth-rpc";
                case "base":
                  return "https://base.blockscout.com/api/eth-rpc";
                case "base-sepolia":
                  return "https://base-sepolia.blockscout.com/api/eth-rpc";
                case "matic":
                  return "https://polygon.blockscout.com/api/eth-rpc";
                case "optimism":
                  return "https://optimism.blockscout.com/api/eth-rpc";
                case "optimism-sepolia":
                  return "https://optimism-sepolia.blockscout.com/api/eth-rpc";
                case "xdai":
                  return "https://gnosis.blockscout.com/api/eth-rpc";
              }
              nh(!1, "unsupported network", "network", e);
            })(e.name)
          );
          return (t.allowGzip = !0), t;
        }
        constructor(e, t) {
          null == e && (e = "mainnet");
          let r = d7.from(e);
          null == t && (t = null),
            super(x0.getRequest(r), r, { staticNetwork: r }),
            (0, eU._)(this, "apiKey", void 0),
            no(this, { apiKey: t });
        }
      }
      let x1 = "62e1ad51b37b8e00394bda3b";
      class x2 extends pq {
        _getProvider(e) {
          try {
            return new x2(e, this.applicationId, this.applicationSecret);
          } catch (e) {}
          return super._getProvider(e);
        }
        static getRequest(e, t, r) {
          null == t && (t = x1);
          let n = new dD(
            "https://"
              .concat(
                (function (e) {
                  switch (e) {
                    case "mainnet":
                      return "eth-mainnet.gateway.pokt.network";
                    case "goerli":
                      return "eth-goerli.gateway.pokt.network";
                    case "matic":
                      return "poly-mainnet.gateway.pokt.network";
                    case "matic-mumbai":
                      return "polygon-mumbai-rpc.gateway.pokt.network";
                  }
                  nh(!1, "unsupported network", "network", e);
                })(e.name),
                "/v1/lb/"
              )
              .concat(t)
          );
          return (
            (n.allowGzip = !0),
            r && n.setCredentials("", r),
            t === x1 &&
              (n.retryFunc = async (e, t, r) => (dZ("PocketProvider"), !0)),
            n
          );
        }
        isCommunityResource() {
          return this.applicationId === x1;
        }
        constructor(e, t, r) {
          null == e && (e = "mainnet");
          let n = d7.from(e);
          null == t && (t = x1),
            null == r && (r = null),
            super(x2.getRequest(n, t, r), n, { staticNetwork: n }),
            (0, eU._)(this, "applicationId", void 0),
            (0, eU._)(this, "applicationSecret", void 0),
            no(this, { applicationId: t, applicationSecret: r });
        }
      }
      let x3 = void 0,
        x4 = BigInt(-1),
        x8 = BigInt(0),
        x5 = BigInt(1),
        x6 = BigInt(5),
        x9 = {},
        x7 = "0000";
      for (; x7.length < 80; ) x7 += x7;
      function ge(e) {
        let t = x7;
        for (; t.length < e; ) t += t;
        return BigInt("1" + t.substring(0, e));
      }
      function gt(e, t, r) {
        let n = BigInt(t.width);
        if (t.signed) {
          let t = x5 << (n - x5);
          nf(null == r || (e >= -t && e < t), "overflow", "NUMERIC_FAULT", {
            operation: r,
            fault: "overflow",
            value: e,
          }),
            (e = e > x8 ? nG(nV(e, n), n) : -nG(nV(-e, n), n));
        } else {
          let t = x5 << n;
          nf(null == r || (e >= 0 && e < t), "overflow", "NUMERIC_FAULT", {
            operation: r,
            fault: "overflow",
            value: e,
          }),
            (e = ((e % t) + t) % t & (t - x5));
        }
        return e;
      }
      function gr(e) {
        "number" == typeof e && (e = "fixed128x".concat(e));
        let t = !0,
          r = 128,
          n = 18;
        if ("string" == typeof e)
          if ("fixed" === e);
          else if ("ufixed" === e) t = !1;
          else {
            let a = e.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);
            nh(a, "invalid fixed format", "format", e),
              (t = "u" !== a[1]),
              (r = parseInt(a[2])),
              (n = parseInt(a[3]));
          }
        else if (e) {
          let a = e,
            i = (e, t, r) =>
              null == a[e]
                ? r
                : (nh(
                    typeof a[e] === t,
                    "invalid fixed format (" + e + " not " + t + ")",
                    "format." + e,
                    a[e]
                  ),
                  a[e]);
          (t = i("signed", "boolean", t)),
            (r = i("width", "number", r)),
            (n = i("decimals", "number", n));
        }
        nh(
          r % 8 == 0,
          "invalid FixedNumber width (not byte aligned)",
          "format.width",
          r
        ),
          nh(
            n <= 80,
            "invalid FixedNumber decimals (too large)",
            "format.decimals",
            n
          );
        let a = (t ? "" : "u") + "fixed" + String(r) + "x" + String(n);
        return { signed: t, width: r, decimals: n, name: a };
      }
      var gn = new WeakMap(),
        ga = new WeakMap(),
        gi = new WeakMap(),
        gs = new WeakSet(),
        go = new WeakSet(),
        gl = new WeakSet(),
        gc = new WeakSet(),
        gu = new WeakSet(),
        gd = new WeakSet();
      class gf {
        get signed() {
          return (0, te._)(this, gn).signed;
        }
        get width() {
          return (0, te._)(this, gn).width;
        }
        get decimals() {
          return (0, te._)(this, gn).decimals;
        }
        get value() {
          return (0, te._)(this, ga);
        }
        addUnsafe(e) {
          return (0, tn._)(this, gl, gx).call(this, e);
        }
        add(e) {
          return (0, tn._)(this, gl, gx).call(this, e, "add");
        }
        subUnsafe(e) {
          return (0, tn._)(this, gc, gg).call(this, e);
        }
        sub(e) {
          return (0, tn._)(this, gc, gg).call(this, e, "sub");
        }
        mulUnsafe(e) {
          return (0, tn._)(this, gu, gb).call(this, e);
        }
        mul(e) {
          return (0, tn._)(this, gu, gb).call(this, e, "mul");
        }
        mulSignal(e) {
          (0, tn._)(this, gs, gh).call(this, e);
          let t = (0, te._)(this, ga) * (0, te._)(e, ga);
          return (
            nf(
              t % (0, te._)(this, gi) === x8,
              "precision lost during signalling mul",
              "NUMERIC_FAULT",
              { operation: "mulSignal", fault: "underflow", value: this }
            ),
            (0, tn._)(this, go, gp).call(
              this,
              t / (0, te._)(this, gi),
              "mulSignal"
            )
          );
        }
        divUnsafe(e) {
          return (0, tn._)(this, gd, gm).call(this, e);
        }
        div(e) {
          return (0, tn._)(this, gd, gm).call(this, e, "div");
        }
        divSignal(e) {
          nf((0, te._)(e, ga) !== x8, "division by zero", "NUMERIC_FAULT", {
            operation: "div",
            fault: "divide-by-zero",
            value: this,
          }),
            (0, tn._)(this, gs, gh).call(this, e);
          let t = (0, te._)(this, ga) * (0, te._)(this, gi);
          return (
            nf(
              t % (0, te._)(e, ga) === x8,
              "precision lost during signalling div",
              "NUMERIC_FAULT",
              { operation: "divSignal", fault: "underflow", value: this }
            ),
            (0, tn._)(this, go, gp).call(
              this,
              t / (0, te._)(e, ga),
              "divSignal"
            )
          );
        }
        cmp(e) {
          let t = this.value,
            r = e.value,
            n = this.decimals - e.decimals;
          return (n > 0 ? (r *= ge(n)) : n < 0 && (t *= ge(-n)), t < r)
            ? -1
            : +(t > r);
        }
        eq(e) {
          return 0 === this.cmp(e);
        }
        lt(e) {
          return 0 > this.cmp(e);
        }
        lte(e) {
          return 0 >= this.cmp(e);
        }
        gt(e) {
          return this.cmp(e) > 0;
        }
        gte(e) {
          return this.cmp(e) >= 0;
        }
        floor() {
          let e = (0, te._)(this, ga);
          return (
            (0, te._)(this, ga) < x8 && (e -= (0, te._)(this, gi) - x5),
            (e =
              ((0, te._)(this, ga) / (0, te._)(this, gi)) *
              (0, te._)(this, gi)),
            (0, tn._)(this, go, gp).call(this, e, "floor")
          );
        }
        ceiling() {
          let e = (0, te._)(this, ga);
          return (
            (0, te._)(this, ga) > x8 && (e += (0, te._)(this, gi) - x5),
            (e =
              ((0, te._)(this, ga) / (0, te._)(this, gi)) *
              (0, te._)(this, gi)),
            (0, tn._)(this, go, gp).call(this, e, "ceiling")
          );
        }
        round(e) {
          if ((null == e && (e = 0), e >= this.decimals)) return this;
          let t = this.decimals - e,
            r = x6 * ge(t - 1),
            n = this.value + r,
            a = ge(t);
          return (
            gt((n = (n / a) * a), (0, te._)(this, gn), "round"),
            new gf(x9, n, (0, te._)(this, gn))
          );
        }
        isZero() {
          return (0, te._)(this, ga) === x8;
        }
        isNegative() {
          return (0, te._)(this, ga) < x8;
        }
        toString() {
          return this._value;
        }
        toUnsafeFloat() {
          return parseFloat(this.toString());
        }
        toFormat(e) {
          return gf.fromString(this.toString(), e);
        }
        static fromValue(e, t, r) {
          let n = null == t ? 0 : nJ(t),
            a = gr(r),
            i = nH(e, "value"),
            s = n - a.decimals;
          if (s > 0) {
            let t = ge(s);
            nf(
              i % t === x8,
              "value loses precision for format",
              "NUMERIC_FAULT",
              { operation: "fromValue", fault: "underflow", value: e }
            ),
              (i /= t);
          } else s < 0 && (i *= ge(-s));
          return gt(i, a, "fromValue"), new gf(x9, i, a);
        }
        static fromString(e, t) {
          let r = e.match(/^(-?)([0-9]*)\.?([0-9]*)$/);
          nh(
            r && r[2].length + r[3].length > 0,
            "invalid FixedNumber string value",
            "value",
            e
          );
          let n = gr(t),
            a = r[2] || "0",
            i = r[3] || "";
          for (; i.length < n.decimals; ) i += x7;
          nf(
            i.substring(n.decimals).match(/^0*$/),
            "too many decimals for format",
            "NUMERIC_FAULT",
            { operation: "fromString", fault: "underflow", value: e }
          ),
            (i = i.substring(0, n.decimals));
          let s = BigInt(r[1] + a + i);
          return gt(s, n, "fromString"), new gf(x9, s, n);
        }
        static fromBytes(e, t) {
          let r = nQ(ny(e, "value")),
            n = gr(t);
          return (
            n.signed && (r = nG(r, n.width)),
            gt(r, n, "fromBytes"),
            new gf(x9, r, n)
          );
        }
        constructor(e, t, r) {
          (0, ta._)(this, gs),
            (0, ta._)(this, go),
            (0, ta._)(this, gl),
            (0, ta._)(this, gc),
            (0, ta._)(this, gu),
            (0, ta._)(this, gd),
            (0, eU._)(this, "format", void 0),
            (0, tt._)(this, gn, { writable: !0, value: void 0 }),
            (0, tt._)(this, ga, { writable: !0, value: void 0 }),
            (0, tt._)(this, gi, { writable: !0, value: void 0 }),
            (0, eU._)(this, "_value", void 0),
            nb(e, x9, "FixedNumber"),
            (0, tr._)(this, ga, t),
            (0, tr._)(this, gn, r);
          let n = (function (e, t) {
            let r = "";
            e < x8 && ((r = "-"), (e *= x4));
            let n = e.toString();
            if (0 === t) return r + n;
            for (; n.length <= t; ) n = x7 + n;
            let a = n.length - t;
            for (
              n = n.substring(0, a) + "." + n.substring(a);
              "0" === n[0] && "." !== n[1];

            )
              n = n.substring(1);
            for (; "0" === n[n.length - 1] && "." !== n[n.length - 2]; )
              n = n.substring(0, n.length - 1);
            return r + n;
          })(t, r.decimals);
          no(this, { format: r.name, _value: n }),
            (0, tr._)(this, gi, ge(r.decimals));
        }
      }
      function gh(e) {
        nh(
          this.format === e.format,
          "incompatible format; use fixedNumber.toFormat",
          "other",
          e
        );
      }
      function gp(e, t) {
        return new gf(
          x9,
          (e = gt(e, (0, te._)(this, gn), t)),
          (0, te._)(this, gn)
        );
      }
      function gx(e, t) {
        return (
          (0, tn._)(this, gs, gh).call(this, e),
          (0, tn._)(this, go, gp).call(
            this,
            (0, te._)(this, ga) + (0, te._)(e, ga),
            t
          )
        );
      }
      function gg(e, t) {
        return (
          (0, tn._)(this, gs, gh).call(this, e),
          (0, tn._)(this, go, gp).call(
            this,
            (0, te._)(this, ga) - (0, te._)(e, ga),
            t
          )
        );
      }
      function gb(e, t) {
        return (
          (0, tn._)(this, gs, gh).call(this, e),
          (0, tn._)(this, go, gp).call(
            this,
            ((0, te._)(this, ga) * (0, te._)(e, ga)) / (0, te._)(this, gi),
            t
          )
        );
      }
      function gm(e, t) {
        return (
          nf((0, te._)(e, ga) !== x8, "division by zero", "NUMERIC_FAULT", {
            operation: "div",
            fault: "divide-by-zero",
            value: this,
          }),
          (0, tn._)(this, gs, gh).call(this, e),
          (0, tn._)(this, go, gp).call(
            this,
            ((0, te._)(this, ga) * (0, te._)(this, gi)) / (0, te._)(e, ga),
            t
          )
        );
      }
      let gy = ["wei", "kwei", "mwei", "gwei", "szabo", "finney", "ether"];
      function gw(e, t) {
        let r = 18;
        if ("string" == typeof t) {
          let e = gy.indexOf(t);
          nh(e >= 0, "invalid unit", "unit", t), (r = 3 * e);
        } else null != t && (r = nJ(t, "unit"));
        return gf.fromValue(e, r, { decimals: r, width: 512 }).toString();
      }
      function gv(e, t) {
        nh("string" == typeof e, "value must be a string", "value", e);
        let r = 18;
        if ("string" == typeof t) {
          let e = gy.indexOf(t);
          nh(e >= 0, "invalid unit", "unit", t), (r = 3 * e);
        } else null != t && (r = nJ(t, "unit"));
        return gf.fromString(e, { decimals: r, width: 512 }).value;
      }
      function gA(e) {
        return gw(e, 18);
      }
      function gE(e) {
        return gv(e, 18);
      }
      function g_(e) {
        let t = ny(e, "randomBytes");
        (t[6] = (15 & t[6]) | 64), (t[8] = (63 & t[8]) | 128);
        let r = n_(t);
        return [
          r.substring(2, 10),
          r.substring(10, 14),
          r.substring(14, 18),
          r.substring(18, 22),
          r.substring(22, 34),
        ].join("-");
      }
      let gk = " !#$%&'()*+,-./<=>?@[]^_`{|}~",
        gN = /^[a-z]*$/i;
      function gP(e, t) {
        let r = 97;
        return e.reduce(
          (e, n) => (
            n === t
              ? r++
              : n.match(gN)
              ? e.push(String.fromCharCode(r) + n)
              : ((r = 97), e.push(n)),
            e
          ),
          []
        );
      }
      function gT(e) {
        return (
          nh("0" === e[0], "unsupported auwl data", "data", e),
          (function (e, t) {
            for (let r = gk.length - 1; r >= 0; r--)
              e = e.split(gk[r]).join(t.substring(2 * r, 2 * r + 2));
            let r = [],
              n = e.replace(/(:|([0-9])|([A-Z][a-z]*))/g, (e, t, n, a) => {
                if (n) for (let e = parseInt(n); e >= 0; e--) r.push(";");
                else r.push(t.toLowerCase());
                return "";
              });
            if (n) throw Error("leftovers: ".concat(JSON.stringify(n)));
            return gP(gP(r, ";"), ":");
          })(e.substring(1 + 2 * gk.length), e.substring(1, 1 + 2 * gk.length))
        );
      }
      class gS {
        split(e) {
          return e.toLowerCase().split(/\s+/g);
        }
        join(e) {
          return e.join(" ");
        }
        constructor(e) {
          (0, eU._)(this, "locale", void 0), no(this, { locale: e });
        }
      }
      var gO = new WeakMap(),
        gR = new WeakMap(),
        gC = new WeakMap(),
        gI = new WeakSet();
      class gB extends gS {
        get _data() {
          return (0, te._)(this, gO);
        }
        _decodeWords() {
          return gT((0, te._)(this, gO));
        }
        getWord(e) {
          let t = (0, tn._)(this, gI, gU).call(this);
          return (
            nh(
              e >= 0 && e < t.length,
              "invalid word index: ".concat(e),
              "index",
              e
            ),
            t[e]
          );
        }
        getWordIndex(e) {
          return (0, tn._)(this, gI, gU).call(this).indexOf(e);
        }
        constructor(e, t, r) {
          super(e),
            (0, ta._)(this, gI),
            (0, tt._)(this, gO, { writable: !0, value: void 0 }),
            (0, tt._)(this, gR, { writable: !0, value: void 0 }),
            (0, tt._)(this, gC, { writable: !0, value: void 0 }),
            (0, tr._)(this, gO, t),
            (0, tr._)(this, gR, r),
            (0, tr._)(this, gC, null);
        }
      }
      function gU() {
        if (null == (0, te._)(this, gC)) {
          let e = this._decodeWords();
          if (iN(e.join("\n") + "\n") !== (0, te._)(this, gR))
            throw Error("BIP39 Wordlist for ".concat(this.locale, " FAILED"));
          (0, tr._)(this, gC, e);
        }
        return (0, te._)(this, gC);
      }
      let gM = null;
      class gj extends gB {
        static wordlist() {
          return null == gM && (gM = new gj()), gM;
        }
        constructor() {
          super(
            "en",
            "0erleonalorenseinceregesticitStanvetearctssi#ch2Athck&tneLl0And#Il.yLeOutO=S|S%b/ra@SurdU'0Ce[Cid|CountCu'Hie=IdOu,-Qui*Ro[TT]T%T*[Tu$0AptDD-tD*[Ju,M.UltV<)Vi)0Rob-0FairF%dRaid0A(EEntRee0Ead0MRRp%tS!_rmBumCoholErtI&LLeyLowMo,O}PhaReadySoT Ways0A>urAz(gOngOuntU'd0Aly,Ch%Ci|G G!GryIm$K!Noun)Nu$O` Sw T&naTiqueXietyY1ArtOlogyPe?P!Pro=Ril1ChCt-EaEnaGueMMedM%MyOundR<+Re,Ri=RowTTefa@Ti,Tw%k0KPe@SaultSetSi,SumeThma0H!>OmTa{T&dT.udeTra@0Ct]D.Gu,NtTh%ToTumn0Era+OcadoOid0AkeA*AyEsomeFulKw?d0Is:ByChel%C#D+GL<)Lc#y~MbooN<aNn RRelyRga(R*lSeS-SketTt!3A^AnAutyCau'ComeEfF%eG(Ha=H(dLie=LowLtN^Nef./TrayTt Twe&Y#d3Cyc!DKeNdOlogyRdR`Tt _{AdeAmeAnketA,EakE[IndOodO[omOu'UeUrUsh_rdAtDyIlMbNeNusOkO,Rd R(gRrowSsTtomUn)XY_{etA(AndA[A=EadEezeI{Id+IefIghtIngIskOccoliOk&OnzeOomO` OwnUsh2Bb!DdyD+tFf$oIldLbLkL!tNd!Nk Rd&Rg R,SS(e[SyTt Y Zz:Bba+B(B!CtusGeKe~LmM aMpNN$N)lNdyNn#NoeNvasNy#Pab!P.$Pta(RRb#RdRgoRpetRryRtSeShS(o/!Su$TT$ogT^Teg%yTt!UghtU'Ut]Ve3Il(gL yM|NsusNturyRe$Rta(_irAlkAmp]An+AosApt Ar+A'AtEapE{Ee'EfErryE,I{&IefIldIm}yOi)Oo'R#-U{!UnkUrn0G?Nnam#Rc!Tiz&TyVil_imApArifyAwAyE<ErkEv I{I|IffImbIn-IpO{OgO'O`OudOwnUbUmpU, Ut^_^A,C#utDeFfeeIlInL!@L%LumnMb(eMeMf%tM-Mm#Mp<yNc tNdu@NfirmNg*[N}@Nsid NtrolNv()OkOlPp PyR$ReRnR*@/Tt#U^UntryUp!Ur'Us(V Yo>_{Ad!AftAmA}AshAt AwlAzyEamEd.EekEwI{etImeIspIt-OpO[Ou^OwdUci$UelUi'Umb!Un^UshYY,$2BeLtu*PPbo?dRiousRr|Rta(R=Sh]/omTe3C!:DMa+MpN)Ng R(gShUght WnY3AlBa>BrisCadeCemb CideCl(eC%a>C*a'ErF&'F(eFyG*eLayLiv M<dMi'Ni$Nti,NyP?tP&dPos.P`PutyRi=ScribeS tSignSkSpair/royTailTe@VelopVi)Vo>3AgramAlAm#dAryCeE'lEtFf G.$Gn.yLemmaNn NosaurRe@RtSag*eScov Sea'ShSmi[S%d Splay/<)V tVideV%)Zzy5Ct%Cum|G~Lph(Ma(Na>NkeyN%OrSeUb!Ve_ftAg#AmaA,-AwEamE[IftIllInkIpI=OpUmY2CkMbNeR(g/T^Ty1Arf1Nam-:G G!RlyRnR`Sily/Sy1HoOlogyOnomy0GeItUca>1F%t0G1GhtTh 2BowD E@r-Eg<tEm|Eph<tEvat%I>Se0B?kBodyBra)Er+Ot]PloyPow Pty0Ab!A@DD![D%'EmyErgyF%)Ga+G(eH<)JoyLi,OughR-hRollSu*T Ti*TryVelope1Isode0U$Uip0AA'OdeOs]R%Upt0CapeSayS&)Ta>0Ern$H-s1Id&)IlOkeOl=1A@Amp!Ce[Ch<+C.eCludeCu'Ecu>Erci'Hau,Hib.I!I,ItOt-P<dPe@Pi*Pla(Po'P*[T&dTra0EEbrow:Br-CeCultyDeIntI`~L'MeMilyMousNNcyNtasyRmSh]TT$Th TigueUltV%.e3Atu*Bru?yD $EEdElMa!N)/iv$T^V W3B Ct]EldGu*LeLmLt N$NdNeNg NishReRmR,Sc$ShTT}[X_gAmeAshAtAv%EeIghtIpOatO{O%Ow UidUshY_mCusGIlLd~owOdOtR)Re,R+tRkRtu}RumRw?dSsil/ UndX_gi!AmeEqu|EshI&dIn+OgOntO,OwnOz&U.2ElNNnyRna)RyTu*:D+tInLaxy~ yMePRa+Rba+Rd&Rl-Rm|SSpTeTh U+Ze3N $NiusN*Nt!Nu(e/u*2O,0AntFtGg!Ng RaffeRlVe_dAn)A*A[IdeImp'ObeOomOryO=OwUe_tDde[LdOdO'RillaSpelSsipV nWn_bA)A(AntApeA[Av.yEatE&IdIefItOc yOupOwUnt_rdE[IdeIltIt?N3M:B.IrLfMm M, NdPpyRb%RdRshR=,TVeWkZ?d3AdAl`ArtAvyD+hogIght~oLmetLpNRo3Dd&Gh~NtPRe/%y5BbyCkeyLdLeLiday~owMeNeyOdPeRnRr%R'Sp.$/TelUrV 5BGeM<Mb!M%Nd*dNgryNtRd!RryRtSb<d3Brid:1EOn0EaEntifyLe2N%e4LLeg$L}[0A+Ita>M&'Mu}Pa@Po'Pro=Pul'0ChCludeComeC*a'DexD-a>Do%Du,ryF<tFl-tF%mHa!H .Iti$Je@JuryMa>N Noc|PutQuiryS<eSe@SideSpi*/$lTa@T e,ToVe,V.eVol=3On0L<dOla>Sue0Em1Ory:CketGu?RZz3AlousAns~yWel9BInKeUr}yY5D+I)MpNg!Ni%Nk/:Ng?oo3EnEpT^upY3CkDD}yNdNgdomSsTT^&TeTt&Wi4EeIfeO{Ow:BBelB%Dd DyKeMpNgua+PtopR+T T(UghUndryVaWWnWsu.Y Zy3Ad AfArnA=Ctu*FtGG$G&dIsu*M#NdNg`NsOp?dSs#Tt Vel3ArB tyBr?yC&'FeFtGhtKeMbM.NkOnQuid/Tt!VeZ?d5AdAnB, C$CkG-NelyNgOpTt yUdUn+VeY$5CkyGga+Mb N?N^Xury3R-s:Ch(eDG-G}tIdIlInJ%KeMm$NNa+Nda>NgoNs]Nu$P!Rb!R^Rg(R(eRketRria+SkSs/ T^T i$ThTrixTt XimumZe3AdowAnAsu*AtCh<-D$DiaLodyLtMb M%yNt]NuRcyR+R.RryShSsa+T$Thod3Dd!DnightLk~]M-NdNimumN%Nu>Rac!Rr%S ySs/akeXXedXtu*5Bi!DelDifyMM|N.%NkeyN, N`OnR$ReRn(gSqu.oTh T]T%Unta(U'VeVie5ChFf(LeLtiplySc!SeumShroomS-/Tu$3Self/ yTh:I=MePk(Rrow/yT]Tu*3ArCkEdGati=G!@I` PhewR=/TTw%kUtr$V WsXt3CeGht5B!I'M(eeOd!Rm$R`SeTab!TeTh(gTi)VelW5C!?Mb R'T:K0EyJe@Li+Scu*S =Ta(Vious0CurE<Tob 0Or1FF Fi)T&2L1Ay0DI=Ymp-0It0CeEI#L(eLy1EnEraIn]Po'T]1An+B.Ch?dD D(?yG<I|Ig($Ph<0Tr-h0H 0Tdo%T TputTside0AlEnEr0NN 0Yg&0/ 0O}:CtDd!GeIrLa)LmNdaNelN-N` P RadeR|RkRrotRtySsT^ThTi|TrolTt nU'VeYm|3A)AnutArAs<tL-<NN$tyNcilOp!Pp Rfe@Rm.Rs#T2O}OtoRa'Ys-$0AnoCn-Ctu*E)GGe#~LotNkO} Pe/olT^Zza_)A}tA,-A>AyEa'Ed+U{UgUn+2EmEtIntL?LeLi)NdNyOlPul?Rt]S.]Ssib!/TatoTt yV tyWd W _@i)Ai'Ed-tEf Epa*Es|EttyEv|I)IdeIm?yIntI%.yIs#Iva>IzeOb!mO)[Odu)Of.OgramOje@Omo>OofOp tyOsp O>@OudOvide2Bl-Dd(g~LpL'Mpk(N^PilPpyR^a'R.yRpo'R'ShTZz!3Ramid:99Al.yAntumArt E,]I{ItIzO>:Bb.Cco#CeCkD?DioIlInI'~yMpN^NdomN+PidReTeTh V&WZ%3AdyAlAs#BelBuildC$lCei=CipeC%dCyc!Du)F!@F%mFu'G]G*tGul?Je@LaxLea'LiefLyMa(Memb M(dMo=Nd NewNtOp&PairPeatPla)P%tQui*ScueSemb!Si,Sour)Sp#'SultTi*T*atTurnUn]Ve$ViewW?d2Y`m0BBb#CeChDeD+F!GhtGidNgOtPp!SkTu$V$V 5AdA,BotBu,CketM<)OfOkieOmSeTa>UghUndU>Y$5Bb DeGLeNNwayR$:DDd!D}[FeIlLadLm#L#LtLu>MeMp!NdTisfyToshiU)Usa+VeY1A!AnA*Att E}HemeHoolI&)I[%sOrp]OutRapRe&RiptRub1AAr^As#AtC#dC*tCt]Cur.yEdEkGm|Le@~M(?Ni%N'Nt&)RiesRvi)Ss]Tt!TupV&_dowAftAllowA*EdEllEriffIeldIftI}IpIv O{OeOotOpOrtOuld O=RimpRugUff!Y0Bl(gCkDeE+GhtGnL|Lk~yLv Mil?Mp!N)NgR&/ Tua>XZe1A>Et^IIllInIrtUll0AbAmEepEnd I)IdeIghtImOg<OtOwUsh0AllArtI!OkeOo`0A{AkeApIffOw0ApCc Ci$CkDaFtL?Ldi LidLut]L=Me#eNgOnRryRtUlUndUpUr)U`0A)A*Ati$AwnEakEci$EedEllEndH eI)Id IkeInIr.L.OilOns%O#OrtOtRayReadR(gY0Ua*UeezeUir*l_b!AdiumAffA+AirsAmpAndArtA>AyEakEelEmEpE*oI{IllIngO{Oma^O}OolOryO=Ra>gyReetRikeR#gRugg!Ud|UffUmb!Y!0Bje@Bm.BwayC)[ChDd&Ff G?G+,ItMm NNnyN'tP PplyP*meReRfa)R+Rpri'RroundR=ySpe@/a(1AllowAmpApArmE?EetIftImIngIt^Ord1MbolMptomRup/em:B!Ck!GIlL|LkNkPeR+tSk/eTtooXi3A^Am~NN<tNnisNtRm/Xt_nkAtEmeEnE%yE*EyIngIsOughtReeRi=RowUmbUnd 0CketDeG LtMb MeNyPRedSsueT!5A,BaccoDayDdl EGe` I!tK&MatoM%rowNeNgueNightOlO`PP-Pp!R^RnadoRtoi'SsT$Uri,W?dW WnY_{AdeAff-Ag-A(Ansf ApAshA=lAyEatEeEndI$IbeI{Igg ImIpOphyOub!U{UeUlyUmpetU,U`Y2BeIt]Mb!NaN}lRkeyRnRt!1El=EntyI)InI,O1PeP-$:5Ly5B*lla0Ab!Awa*C!Cov D DoFairFoldHappyIf%mIqueItIv 'KnownLo{TilUsu$Veil1Da>GradeHoldOnP Set1B<Ge0A+EEdEfulE![U$0Il.y:C<tCuumGueLidL!yL=NNishP%Rious/Ult3H-!L=tNd%Ntu*NueRbRifyRs]RyS'lT <3Ab!Br<tCiousCt%yDeoEw~a+Nta+Ol(Rtu$RusSaS.Su$T$Vid5C$I)IdLc<oLumeTeYa+:GeG#ItLk~LnutNtRfa*RmRri%ShSp/eT VeY3Al`Ap#ArA'lA` BDd(gEk&dIrdLcome/T_!AtEatEelEnE*IpIsp 0DeD`FeLd~NNdowNeNgNkNn Nt ReSdomSeShT}[5LfM<Nd OdOlRdRkRldRryR`_pE{E,!I,I>Ong::Rd3Ar~ow9UUngU`:3BraRo9NeO",
            "0x3c8acc1e7b08d8e76f9fda015ef48dc8c710a73cb7e0f77b2c18a9b5a7adde60"
          );
        }
      }
      function gF(e) {
        return (((1 << e) - 1) << (8 - e)) & 255;
      }
      function gD(e, t) {
        ng("NFKD"), null == t && (t = gj.wordlist());
        let r = t.split(e);
        nh(
          r.length % 3 == 0 && r.length >= 12 && r.length <= 24,
          "invalid mnemonic length",
          "mnemonic",
          "[ REDACTED ]"
        );
        let n = new Uint8Array(Math.ceil((11 * r.length) / 8)),
          a = 0;
        for (let e = 0; e < r.length; e++) {
          let i = t.getWordIndex(r[e].normalize("NFKD"));
          nh(
            i >= 0,
            "invalid mnemonic word at index ".concat(e),
            "mnemonic",
            "[ REDACTED ]"
          );
          for (let e = 0; e < 11; e++)
            i & (1 << (10 - e)) && (n[a >> 3] |= 1 << (7 - (a % 8))), a++;
        }
        let i = (32 * r.length) / 3,
          s = gF(r.length / 3);
        return (
          nh(
            (ny(lC(n.slice(0, i / 8)))[0] & s) == (n[n.length - 1] & s),
            "invalid mnemonic checksum",
            "mnemonic",
            "[ REDACTED ]"
          ),
          n_(n.slice(0, i / 8))
        );
      }
      function gL(e, t) {
        nh(
          e.length % 4 == 0 && e.length >= 16 && e.length <= 32,
          "invalid entropy size",
          "entropy",
          "[ REDACTED ]"
        ),
          null == t && (t = gj.wordlist());
        let r = [0],
          n = 11;
        for (let t = 0; t < e.length; t++)
          n > 8
            ? ((r[r.length - 1] <<= 8), (r[r.length - 1] |= e[t]), (n -= 8))
            : ((r[r.length - 1] <<= n),
              (r[r.length - 1] |= e[t] >> (8 - n)),
              r.push(e[t] & (((1 << (8 - n)) - 1) & 255)),
              (n += 3));
        let a = e.length / 4,
          i = parseInt(lC(e).substring(2, 4), 16) & gF(a);
        return (
          (r[r.length - 1] <<= a),
          (r[r.length - 1] |= i >> (8 - a)),
          t.join(r.map((e) => t.getWord(e)))
        );
      }
      let gz = {};
      class gG {
        computeSeed() {
          let e = nU("mnemonic" + this.password, "NFKD");
          return lj(nU(this.phrase, "NFKD"), e, 2048, 64, "sha512");
        }
        static fromPhrase(e, t, r) {
          let n = gD(e, r);
          return (e = gL(ny(n), r)), new gG(gz, n, e, t, r);
        }
        static fromEntropy(e, t, r) {
          let n = ny(e, "entropy"),
            a = gL(n, r);
          return new gG(gz, n_(n), a, t, r);
        }
        static entropyToPhrase(e, t) {
          return gL(ny(e, "entropy"), t);
        }
        static phraseToEntropy(e, t) {
          return gD(e, t);
        }
        static isValidMnemonic(e, t) {
          try {
            return gD(e, t), !0;
          } catch (e) {}
          return !1;
        }
        constructor(e, t, r, n, a) {
          (0, eU._)(this, "phrase", void 0),
            (0, eU._)(this, "password", void 0),
            (0, eU._)(this, "wordlist", void 0),
            (0, eU._)(this, "entropy", void 0),
            null == n && (n = ""),
            null == a && (a = gj.wordlist()),
            nb(e, gz, "Mnemonic"),
            no(this, { phrase: r, password: n, wordlist: a, entropy: t });
        }
      }
      var gW = new WeakMap();
      class gV extends pu {
        get signingKey() {
          return (0, te._)(this, gW);
        }
        get privateKey() {
          return this.signingKey.privateKey;
        }
        async getAddress() {
          return this.address;
        }
        connect(e) {
          return new gV((0, te._)(this, gW), e);
        }
        async signTransaction(e) {
          e = s6(e);
          let { to: t, from: r } = await ns({
            to: e.to ? sH(e.to, this) : void 0,
            from: e.from ? sH(e.from, this) : void 0,
          });
          null != t && (e.to = t),
            null != r && (e.from = r),
            null != e.from &&
              (nh(
                a9(e.from) === this.address,
                "transaction from address mismatch",
                "tx.from",
                e.from
              ),
              delete e.from);
          let n = fL.from(e);
          return (
            (n.signature = this.signingKey.sign(n.unsignedHash)), n.serialized
          );
        }
        async signMessage(e) {
          return this.signMessageSync(e);
        }
        signMessageSync(e) {
          return this.signingKey.sign(uG(e)).serialized;
        }
        authorizeSync(e) {
          nh(
            "string" == typeof e.address,
            "invalid address for authorizeSync",
            "auth.address",
            e
          );
          let t = this.signingKey.sign(uL(e));
          return Object.assign(
            {},
            {
              address: a9(e.address),
              nonce: nH(e.nonce || 0),
              chainId: nH(e.chainId || 0),
            },
            { signature: t }
          );
        }
        async authorize(e) {
          return (
            (e = Object.assign({}, e, { address: await sH(e.address, this) })),
            this.authorizeSync(await this.populateAuthorization(e))
          );
        }
        async signTypedData(e, t, r) {
          let n = await da.resolveNames(e, t, r, async (e) => {
            nf(
              null != this.provider,
              "cannot resolve ENS names without a provider",
              "UNSUPPORTED_OPERATION",
              { operation: "resolveName", info: { name: e } }
            );
            let t = await this.provider.resolveName(e);
            return (
              nf(null != t, "unconfigured ENS name", "UNCONFIGURED_NAME", {
                value: e,
              }),
              t
            );
          });
          return this.signingKey.sign(da.hash(n.domain, t, n.value)).serialized;
        }
        constructor(e, t) {
          super(t),
            (0, eU._)(this, "address", void 0),
            (0, tt._)(this, gW, { writable: !0, value: void 0 }),
            nh(
              e && "function" == typeof e.sign,
              "invalid private key",
              "privateKey",
              "[ REDACTED ]"
            ),
            (0, tr._)(this, gW, e),
            no(this, { address: uF(this.signingKey.publicKey) });
        }
      }
      var gH = function (e, t, r, n) {
          if ("a" === r && !n)
            throw TypeError("Private accessor was defined without a getter");
          if ("function" == typeof t ? e !== t || !n : !t.has(e))
            throw TypeError(
              "Cannot read private member from an object whose class did not declare it"
            );
          return "m" === r ? n : "a" === r ? n.call(e) : n ? n.value : t.get(e);
        },
        gK = function (e, t, r, n, a) {
          if ("m" === n) throw TypeError("Private method is not writable");
          if ("a" === n && !a)
            throw TypeError("Private accessor was defined without a setter");
          if ("function" == typeof t ? e !== t || !a : !t.has(e))
            throw TypeError(
              "Cannot write private member to an object whose class did not declare it"
            );
          return "a" === n ? a.call(e, r) : a ? (a.value = r) : t.set(e, r), r;
        };
      let gq = { 16: 10, 24: 12, 32: 14 },
        gQ = [
          1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94,
          188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145,
        ],
        gJ = [
          99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171,
          118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156,
          164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241,
          113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226,
          235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179,
          41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190,
          57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2,
          127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182,
          218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196,
          167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136,
          70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92,
          194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213,
          78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28,
          166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181,
          102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248,
          152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140,
          161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22,
        ],
        gZ = [
          82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215,
          251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222,
          233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66,
          250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73,
          109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164,
          92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94,
          21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10,
          247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2,
          193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234,
          151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173,
          53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29,
          41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75,
          198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221,
          168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81,
          127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160,
          224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97,
          23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125,
        ],
        gY = [
          0xc66363a5, 0xf87c7c84, 0xee777799, 0xf67b7b8d, 0xfff2f20d,
          0xd66b6bbd, 0xde6f6fb1, 0x91c5c554, 0x60303050, 0x2010103, 0xce6767a9,
          0x562b2b7d, 0xe7fefe19, 0xb5d7d762, 0x4dababe6, 0xec76769a,
          0x8fcaca45, 0x1f82829d, 0x89c9c940, 0xfa7d7d87, 0xeffafa15,
          0xb25959eb, 0x8e4747c9, 0xfbf0f00b, 0x41adadec, 0xb3d4d467,
          0x5fa2a2fd, 0x45afafea, 0x239c9cbf, 0x53a4a4f7, 0xe4727296,
          0x9bc0c05b, 0x75b7b7c2, 0xe1fdfd1c, 0x3d9393ae, 0x4c26266a,
          0x6c36365a, 0x7e3f3f41, 0xf5f7f702, 0x83cccc4f, 0x6834345c,
          0x51a5a5f4, 0xd1e5e534, 0xf9f1f108, 0xe2717193, 0xabd8d873,
          0x62313153, 0x2a15153f, 0x804040c, 0x95c7c752, 0x46232365, 0x9dc3c35e,
          0x30181828, 0x379696a1, 0xa05050f, 0x2f9a9ab5, 0xe070709, 0x24121236,
          0x1b80809b, 0xdfe2e23d, 0xcdebeb26, 0x4e272769, 0x7fb2b2cd,
          0xea75759f, 0x1209091b, 0x1d83839e, 0x582c2c74, 0x341a1a2e,
          0x361b1b2d, 0xdc6e6eb2, 0xb45a5aee, 0x5ba0a0fb, 0xa45252f6,
          0x763b3b4d, 0xb7d6d661, 0x7db3b3ce, 0x5229297b, 0xdde3e33e,
          0x5e2f2f71, 0x13848497, 0xa65353f5, 0xb9d1d168, 0, 0xc1eded2c,
          0x40202060, 0xe3fcfc1f, 0x79b1b1c8, 0xb65b5bed, 0xd46a6abe,
          0x8dcbcb46, 0x67bebed9, 0x7239394b, 0x944a4ade, 0x984c4cd4,
          0xb05858e8, 0x85cfcf4a, 0xbbd0d06b, 0xc5efef2a, 0x4faaaae5,
          0xedfbfb16, 0x864343c5, 0x9a4d4dd7, 0x66333355, 0x11858594,
          0x8a4545cf, 0xe9f9f910, 0x4020206, 0xfe7f7f81, 0xa05050f0, 0x783c3c44,
          0x259f9fba, 0x4ba8a8e3, 0xa25151f3, 0x5da3a3fe, 0x804040c0, 0x58f8f8a,
          0x3f9292ad, 0x219d9dbc, 0x70383848, 0xf1f5f504, 0x63bcbcdf,
          0x77b6b6c1, 0xafdada75, 0x42212163, 0x20101030, 0xe5ffff1a,
          0xfdf3f30e, 0xbfd2d26d, 0x81cdcd4c, 0x180c0c14, 0x26131335,
          0xc3ecec2f, 0xbe5f5fe1, 0x359797a2, 0x884444cc, 0x2e171739,
          0x93c4c457, 0x55a7a7f2, 0xfc7e7e82, 0x7a3d3d47, 0xc86464ac,
          0xba5d5de7, 0x3219192b, 0xe6737395, 0xc06060a0, 0x19818198,
          0x9e4f4fd1, 0xa3dcdc7f, 0x44222266, 0x542a2a7e, 0x3b9090ab, 0xb888883,
          0x8c4646ca, 0xc7eeee29, 0x6bb8b8d3, 0x2814143c, 0xa7dede79,
          0xbc5e5ee2, 0x160b0b1d, 0xaddbdb76, 0xdbe0e03b, 0x64323256,
          0x743a3a4e, 0x140a0a1e, 0x924949db, 0xc06060a, 0x4824246c, 0xb85c5ce4,
          0x9fc2c25d, 0xbdd3d36e, 0x43acacef, 0xc46262a6, 0x399191a8,
          0x319595a4, 0xd3e4e437, 0xf279798b, 0xd5e7e732, 0x8bc8c843,
          0x6e373759, 0xda6d6db7, 0x18d8d8c, 0xb1d5d564, 0x9c4e4ed2, 0x49a9a9e0,
          0xd86c6cb4, 0xac5656fa, 0xf3f4f407, 0xcfeaea25, 0xca6565af,
          0xf47a7a8e, 0x47aeaee9, 0x10080818, 0x6fbabad5, 0xf0787888,
          0x4a25256f, 0x5c2e2e72, 0x381c1c24, 0x57a6a6f1, 0x73b4b4c7,
          0x97c6c651, 0xcbe8e823, 0xa1dddd7c, 0xe874749c, 0x3e1f1f21,
          0x964b4bdd, 0x61bdbddc, 0xd8b8b86, 0xf8a8a85, 0xe0707090, 0x7c3e3e42,
          0x71b5b5c4, 0xcc6666aa, 0x904848d8, 0x6030305, 0xf7f6f601, 0x1c0e0e12,
          0xc26161a3, 0x6a35355f, 0xae5757f9, 0x69b9b9d0, 0x17868691,
          0x99c1c158, 0x3a1d1d27, 0x279e9eb9, 0xd9e1e138, 0xebf8f813,
          0x2b9898b3, 0x22111133, 0xd26969bb, 0xa9d9d970, 0x78e8e89, 0x339494a7,
          0x2d9b9bb6, 0x3c1e1e22, 0x15878792, 0xc9e9e920, 0x87cece49,
          0xaa5555ff, 0x50282878, 0xa5dfdf7a, 0x38c8c8f, 0x59a1a1f8, 0x9898980,
          0x1a0d0d17, 0x65bfbfda, 0xd7e6e631, 0x844242c6, 0xd06868b8,
          0x824141c3, 0x299999b0, 0x5a2d2d77, 0x1e0f0f11, 0x7bb0b0cb,
          0xa85454fc, 0x6dbbbbd6, 0x2c16163a,
        ],
        gX = [
          0xa5c66363, 0x84f87c7c, 0x99ee7777, 0x8df67b7b, 0xdfff2f2, 0xbdd66b6b,
          0xb1de6f6f, 0x5491c5c5, 0x50603030, 0x3020101, 0xa9ce6767, 0x7d562b2b,
          0x19e7fefe, 0x62b5d7d7, 0xe64dabab, 0x9aec7676, 0x458fcaca,
          0x9d1f8282, 0x4089c9c9, 0x87fa7d7d, 0x15effafa, 0xebb25959,
          0xc98e4747, 0xbfbf0f0, 0xec41adad, 0x67b3d4d4, 0xfd5fa2a2, 0xea45afaf,
          0xbf239c9c, 0xf753a4a4, 0x96e47272, 0x5b9bc0c0, 0xc275b7b7,
          0x1ce1fdfd, 0xae3d9393, 0x6a4c2626, 0x5a6c3636, 0x417e3f3f, 0x2f5f7f7,
          0x4f83cccc, 0x5c683434, 0xf451a5a5, 0x34d1e5e5, 0x8f9f1f1, 0x93e27171,
          0x73abd8d8, 0x53623131, 0x3f2a1515, 0xc080404, 0x5295c7c7, 0x65462323,
          0x5e9dc3c3, 0x28301818, 0xa1379696, 0xf0a0505, 0xb52f9a9a, 0x90e0707,
          0x36241212, 0x9b1b8080, 0x3ddfe2e2, 0x26cdebeb, 0x694e2727,
          0xcd7fb2b2, 0x9fea7575, 0x1b120909, 0x9e1d8383, 0x74582c2c,
          0x2e341a1a, 0x2d361b1b, 0xb2dc6e6e, 0xeeb45a5a, 0xfb5ba0a0,
          0xf6a45252, 0x4d763b3b, 0x61b7d6d6, 0xce7db3b3, 0x7b522929,
          0x3edde3e3, 0x715e2f2f, 0x97138484, 0xf5a65353, 0x68b9d1d1, 0,
          0x2cc1eded, 0x60402020, 0x1fe3fcfc, 0xc879b1b1, 0xedb65b5b,
          0xbed46a6a, 0x468dcbcb, 0xd967bebe, 0x4b723939, 0xde944a4a,
          0xd4984c4c, 0xe8b05858, 0x4a85cfcf, 0x6bbbd0d0, 0x2ac5efef,
          0xe54faaaa, 0x16edfbfb, 0xc5864343, 0xd79a4d4d, 0x55663333,
          0x94118585, 0xcf8a4545, 0x10e9f9f9, 0x6040202, 0x81fe7f7f, 0xf0a05050,
          0x44783c3c, 0xba259f9f, 0xe34ba8a8, 0xf3a25151, 0xfe5da3a3,
          0xc0804040, 0x8a058f8f, 0xad3f9292, 0xbc219d9d, 0x48703838, 0x4f1f5f5,
          0xdf63bcbc, 0xc177b6b6, 0x75afdada, 0x63422121, 0x30201010,
          0x1ae5ffff, 0xefdf3f3, 0x6dbfd2d2, 0x4c81cdcd, 0x14180c0c, 0x35261313,
          0x2fc3ecec, 0xe1be5f5f, 0xa2359797, 0xcc884444, 0x392e1717,
          0x5793c4c4, 0xf255a7a7, 0x82fc7e7e, 0x477a3d3d, 0xacc86464,
          0xe7ba5d5d, 0x2b321919, 0x95e67373, 0xa0c06060, 0x98198181,
          0xd19e4f4f, 0x7fa3dcdc, 0x66442222, 0x7e542a2a, 0xab3b9090,
          0x830b8888, 0xca8c4646, 0x29c7eeee, 0xd36bb8b8, 0x3c281414,
          0x79a7dede, 0xe2bc5e5e, 0x1d160b0b, 0x76addbdb, 0x3bdbe0e0,
          0x56643232, 0x4e743a3a, 0x1e140a0a, 0xdb924949, 0xa0c0606, 0x6c482424,
          0xe4b85c5c, 0x5d9fc2c2, 0x6ebdd3d3, 0xef43acac, 0xa6c46262,
          0xa8399191, 0xa4319595, 0x37d3e4e4, 0x8bf27979, 0x32d5e7e7,
          0x438bc8c8, 0x596e3737, 0xb7da6d6d, 0x8c018d8d, 0x64b1d5d5,
          0xd29c4e4e, 0xe049a9a9, 0xb4d86c6c, 0xfaac5656, 0x7f3f4f4, 0x25cfeaea,
          0xafca6565, 0x8ef47a7a, 0xe947aeae, 0x18100808, 0xd56fbaba,
          0x88f07878, 0x6f4a2525, 0x725c2e2e, 0x24381c1c, 0xf157a6a6,
          0xc773b4b4, 0x5197c6c6, 0x23cbe8e8, 0x7ca1dddd, 0x9ce87474,
          0x213e1f1f, 0xdd964b4b, 0xdc61bdbd, 0x860d8b8b, 0x850f8a8a,
          0x90e07070, 0x427c3e3e, 0xc471b5b5, 0xaacc6666, 0xd8904848, 0x5060303,
          0x1f7f6f6, 0x121c0e0e, 0xa3c26161, 0x5f6a3535, 0xf9ae5757, 0xd069b9b9,
          0x91178686, 0x5899c1c1, 0x273a1d1d, 0xb9279e9e, 0x38d9e1e1,
          0x13ebf8f8, 0xb32b9898, 0x33221111, 0xbbd26969, 0x70a9d9d9,
          0x89078e8e, 0xa7339494, 0xb62d9b9b, 0x223c1e1e, 0x92158787,
          0x20c9e9e9, 0x4987cece, 0xffaa5555, 0x78502828, 0x7aa5dfdf,
          0x8f038c8c, 0xf859a1a1, 0x80098989, 0x171a0d0d, 0xda65bfbf,
          0x31d7e6e6, 0xc6844242, 0xb8d06868, 0xc3824141, 0xb0299999,
          0x775a2d2d, 0x111e0f0f, 0xcb7bb0b0, 0xfca85454, 0xd66dbbbb,
          0x3a2c1616,
        ],
        g$ = [
          0x63a5c663, 0x7c84f87c, 0x7799ee77, 0x7b8df67b, 0xf20dfff2,
          0x6bbdd66b, 0x6fb1de6f, 0xc55491c5, 0x30506030, 0x1030201, 0x67a9ce67,
          0x2b7d562b, 0xfe19e7fe, 0xd762b5d7, 0xabe64dab, 0x769aec76,
          0xca458fca, 0x829d1f82, 0xc94089c9, 0x7d87fa7d, 0xfa15effa,
          0x59ebb259, 0x47c98e47, 0xf00bfbf0, 0xadec41ad, 0xd467b3d4,
          0xa2fd5fa2, 0xafea45af, 0x9cbf239c, 0xa4f753a4, 0x7296e472,
          0xc05b9bc0, 0xb7c275b7, 0xfd1ce1fd, 0x93ae3d93, 0x266a4c26,
          0x365a6c36, 0x3f417e3f, 0xf702f5f7, 0xcc4f83cc, 0x345c6834,
          0xa5f451a5, 0xe534d1e5, 0xf108f9f1, 0x7193e271, 0xd873abd8,
          0x31536231, 0x153f2a15, 0x40c0804, 0xc75295c7, 0x23654623, 0xc35e9dc3,
          0x18283018, 0x96a13796, 0x50f0a05, 0x9ab52f9a, 0x7090e07, 0x12362412,
          0x809b1b80, 0xe23ddfe2, 0xeb26cdeb, 0x27694e27, 0xb2cd7fb2,
          0x759fea75, 0x91b1209, 0x839e1d83, 0x2c74582c, 0x1a2e341a, 0x1b2d361b,
          0x6eb2dc6e, 0x5aeeb45a, 0xa0fb5ba0, 0x52f6a452, 0x3b4d763b,
          0xd661b7d6, 0xb3ce7db3, 0x297b5229, 0xe33edde3, 0x2f715e2f,
          0x84971384, 0x53f5a653, 0xd168b9d1, 0, 0xed2cc1ed, 0x20604020,
          0xfc1fe3fc, 0xb1c879b1, 0x5bedb65b, 0x6abed46a, 0xcb468dcb,
          0xbed967be, 0x394b7239, 0x4ade944a, 0x4cd4984c, 0x58e8b058,
          0xcf4a85cf, 0xd06bbbd0, 0xef2ac5ef, 0xaae54faa, 0xfb16edfb,
          0x43c58643, 0x4dd79a4d, 0x33556633, 0x85941185, 0x45cf8a45,
          0xf910e9f9, 0x2060402, 0x7f81fe7f, 0x50f0a050, 0x3c44783c, 0x9fba259f,
          0xa8e34ba8, 0x51f3a251, 0xa3fe5da3, 0x40c08040, 0x8f8a058f,
          0x92ad3f92, 0x9dbc219d, 0x38487038, 0xf504f1f5, 0xbcdf63bc,
          0xb6c177b6, 0xda75afda, 0x21634221, 0x10302010, 0xff1ae5ff,
          0xf30efdf3, 0xd26dbfd2, 0xcd4c81cd, 0xc14180c, 0x13352613, 0xec2fc3ec,
          0x5fe1be5f, 0x97a23597, 0x44cc8844, 0x17392e17, 0xc45793c4,
          0xa7f255a7, 0x7e82fc7e, 0x3d477a3d, 0x64acc864, 0x5de7ba5d,
          0x192b3219, 0x7395e673, 0x60a0c060, 0x81981981, 0x4fd19e4f,
          0xdc7fa3dc, 0x22664422, 0x2a7e542a, 0x90ab3b90, 0x88830b88,
          0x46ca8c46, 0xee29c7ee, 0xb8d36bb8, 0x143c2814, 0xde79a7de,
          0x5ee2bc5e, 0xb1d160b, 0xdb76addb, 0xe03bdbe0, 0x32566432, 0x3a4e743a,
          0xa1e140a, 0x49db9249, 0x60a0c06, 0x246c4824, 0x5ce4b85c, 0xc25d9fc2,
          0xd36ebdd3, 0xacef43ac, 0x62a6c462, 0x91a83991, 0x95a43195,
          0xe437d3e4, 0x798bf279, 0xe732d5e7, 0xc8438bc8, 0x37596e37,
          0x6db7da6d, 0x8d8c018d, 0xd564b1d5, 0x4ed29c4e, 0xa9e049a9,
          0x6cb4d86c, 0x56faac56, 0xf407f3f4, 0xea25cfea, 0x65afca65,
          0x7a8ef47a, 0xaee947ae, 0x8181008, 0xbad56fba, 0x7888f078, 0x256f4a25,
          0x2e725c2e, 0x1c24381c, 0xa6f157a6, 0xb4c773b4, 0xc65197c6,
          0xe823cbe8, 0xdd7ca1dd, 0x749ce874, 0x1f213e1f, 0x4bdd964b,
          0xbddc61bd, 0x8b860d8b, 0x8a850f8a, 0x7090e070, 0x3e427c3e,
          0xb5c471b5, 0x66aacc66, 0x48d89048, 0x3050603, 0xf601f7f6, 0xe121c0e,
          0x61a3c261, 0x355f6a35, 0x57f9ae57, 0xb9d069b9, 0x86911786,
          0xc15899c1, 0x1d273a1d, 0x9eb9279e, 0xe138d9e1, 0xf813ebf8,
          0x98b32b98, 0x11332211, 0x69bbd269, 0xd970a9d9, 0x8e89078e,
          0x94a73394, 0x9bb62d9b, 0x1e223c1e, 0x87921587, 0xe920c9e9,
          0xce4987ce, 0x55ffaa55, 0x28785028, 0xdf7aa5df, 0x8c8f038c,
          0xa1f859a1, 0x89800989, 0xd171a0d, 0xbfda65bf, 0xe631d7e6, 0x42c68442,
          0x68b8d068, 0x41c38241, 0x99b02999, 0x2d775a2d, 0xf111e0f, 0xb0cb7bb0,
          0x54fca854, 0xbbd66dbb, 0x163a2c16,
        ],
        g0 = [
          0x6363a5c6, 0x7c7c84f8, 0x777799ee, 0x7b7b8df6, 0xf2f20dff,
          0x6b6bbdd6, 0x6f6fb1de, 0xc5c55491, 0x30305060, 0x1010302, 0x6767a9ce,
          0x2b2b7d56, 0xfefe19e7, 0xd7d762b5, 0xababe64d, 0x76769aec,
          0xcaca458f, 0x82829d1f, 0xc9c94089, 0x7d7d87fa, 0xfafa15ef,
          0x5959ebb2, 0x4747c98e, 0xf0f00bfb, 0xadadec41, 0xd4d467b3,
          0xa2a2fd5f, 0xafafea45, 0x9c9cbf23, 0xa4a4f753, 0x727296e4,
          0xc0c05b9b, 0xb7b7c275, 0xfdfd1ce1, 0x9393ae3d, 0x26266a4c,
          0x36365a6c, 0x3f3f417e, 0xf7f702f5, 0xcccc4f83, 0x34345c68,
          0xa5a5f451, 0xe5e534d1, 0xf1f108f9, 0x717193e2, 0xd8d873ab,
          0x31315362, 0x15153f2a, 0x4040c08, 0xc7c75295, 0x23236546, 0xc3c35e9d,
          0x18182830, 0x9696a137, 0x5050f0a, 0x9a9ab52f, 0x707090e, 0x12123624,
          0x80809b1b, 0xe2e23ddf, 0xebeb26cd, 0x2727694e, 0xb2b2cd7f,
          0x75759fea, 0x9091b12, 0x83839e1d, 0x2c2c7458, 0x1a1a2e34, 0x1b1b2d36,
          0x6e6eb2dc, 0x5a5aeeb4, 0xa0a0fb5b, 0x5252f6a4, 0x3b3b4d76,
          0xd6d661b7, 0xb3b3ce7d, 0x29297b52, 0xe3e33edd, 0x2f2f715e,
          0x84849713, 0x5353f5a6, 0xd1d168b9, 0, 0xeded2cc1, 0x20206040,
          0xfcfc1fe3, 0xb1b1c879, 0x5b5bedb6, 0x6a6abed4, 0xcbcb468d,
          0xbebed967, 0x39394b72, 0x4a4ade94, 0x4c4cd498, 0x5858e8b0,
          0xcfcf4a85, 0xd0d06bbb, 0xefef2ac5, 0xaaaae54f, 0xfbfb16ed,
          0x4343c586, 0x4d4dd79a, 0x33335566, 0x85859411, 0x4545cf8a,
          0xf9f910e9, 0x2020604, 0x7f7f81fe, 0x5050f0a0, 0x3c3c4478, 0x9f9fba25,
          0xa8a8e34b, 0x5151f3a2, 0xa3a3fe5d, 0x4040c080, 0x8f8f8a05,
          0x9292ad3f, 0x9d9dbc21, 0x38384870, 0xf5f504f1, 0xbcbcdf63,
          0xb6b6c177, 0xdada75af, 0x21216342, 0x10103020, 0xffff1ae5,
          0xf3f30efd, 0xd2d26dbf, 0xcdcd4c81, 0xc0c1418, 0x13133526, 0xecec2fc3,
          0x5f5fe1be, 0x9797a235, 0x4444cc88, 0x1717392e, 0xc4c45793,
          0xa7a7f255, 0x7e7e82fc, 0x3d3d477a, 0x6464acc8, 0x5d5de7ba,
          0x19192b32, 0x737395e6, 0x6060a0c0, 0x81819819, 0x4f4fd19e,
          0xdcdc7fa3, 0x22226644, 0x2a2a7e54, 0x9090ab3b, 0x8888830b,
          0x4646ca8c, 0xeeee29c7, 0xb8b8d36b, 0x14143c28, 0xdede79a7,
          0x5e5ee2bc, 0xb0b1d16, 0xdbdb76ad, 0xe0e03bdb, 0x32325664, 0x3a3a4e74,
          0xa0a1e14, 0x4949db92, 0x6060a0c, 0x24246c48, 0x5c5ce4b8, 0xc2c25d9f,
          0xd3d36ebd, 0xacacef43, 0x6262a6c4, 0x9191a839, 0x9595a431,
          0xe4e437d3, 0x79798bf2, 0xe7e732d5, 0xc8c8438b, 0x3737596e,
          0x6d6db7da, 0x8d8d8c01, 0xd5d564b1, 0x4e4ed29c, 0xa9a9e049,
          0x6c6cb4d8, 0x5656faac, 0xf4f407f3, 0xeaea25cf, 0x6565afca,
          0x7a7a8ef4, 0xaeaee947, 0x8081810, 0xbabad56f, 0x787888f0, 0x25256f4a,
          0x2e2e725c, 0x1c1c2438, 0xa6a6f157, 0xb4b4c773, 0xc6c65197,
          0xe8e823cb, 0xdddd7ca1, 0x74749ce8, 0x1f1f213e, 0x4b4bdd96,
          0xbdbddc61, 0x8b8b860d, 0x8a8a850f, 0x707090e0, 0x3e3e427c,
          0xb5b5c471, 0x6666aacc, 0x4848d890, 0x3030506, 0xf6f601f7, 0xe0e121c,
          0x6161a3c2, 0x35355f6a, 0x5757f9ae, 0xb9b9d069, 0x86869117,
          0xc1c15899, 0x1d1d273a, 0x9e9eb927, 0xe1e138d9, 0xf8f813eb,
          0x9898b32b, 0x11113322, 0x6969bbd2, 0xd9d970a9, 0x8e8e8907,
          0x9494a733, 0x9b9bb62d, 0x1e1e223c, 0x87879215, 0xe9e920c9,
          0xcece4987, 0x5555ffaa, 0x28287850, 0xdfdf7aa5, 0x8c8c8f03,
          0xa1a1f859, 0x89898009, 0xd0d171a, 0xbfbfda65, 0xe6e631d7, 0x4242c684,
          0x6868b8d0, 0x4141c382, 0x9999b029, 0x2d2d775a, 0xf0f111e, 0xb0b0cb7b,
          0x5454fca8, 0xbbbbd66d, 0x16163a2c,
        ],
        g1 = [
          0x51f4a750, 0x7e416553, 0x1a17a4c3, 0x3a275e96, 0x3bab6bcb,
          0x1f9d45f1, 0xacfa58ab, 0x4be30393, 0x2030fa55, 0xad766df6,
          0x88cc7691, 0xf5024c25, 0x4fe5d7fc, 0xc52acbd7, 0x26354480,
          0xb562a38f, 0xdeb15a49, 0x25ba1b67, 0x45ea0e98, 0x5dfec0e1,
          0xc32f7502, 0x814cf012, 0x8d4697a3, 0x6bd3f9c6, 0x38f5fe7, 0x15929c95,
          0xbf6d7aeb, 0x955259da, 0xd4be832d, 0x587421d3, 0x49e06929,
          0x8ec9c844, 0x75c2896a, 0xf48e7978, 0x99583e6b, 0x27b971dd,
          0xbee14fb6, 0xf088ad17, 0xc920ac66, 0x7dce3ab4, 0x63df4a18,
          0xe51a3182, 0x97513360, 0x62537f45, 0xb16477e0, 0xbb6bae84,
          0xfe81a01c, 0xf9082b94, 0x70486858, 0x8f45fd19, 0x94de6c87,
          0x527bf8b7, 0xab73d323, 0x724b02e2, 0xe31f8f57, 0x6655ab2a,
          0xb2eb2807, 0x2fb5c203, 0x86c57b9a, 0xd33708a5, 0x302887f2,
          0x23bfa5b2, 0x2036aba, 0xed16825c, 0x8acf1c2b, 0xa779b492, 0xf307f2f0,
          0x4e69e2a1, 0x65daf4cd, 0x605bed5, 0xd134621f, 0xc4a6fe8a, 0x342e539d,
          0xa2f355a0, 0x58ae132, 0xa4f6eb75, 0xb83ec39, 0x4060efaa, 0x5e719f06,
          0xbd6e1051, 0x3e218af9, 0x96dd063d, 0xdd3e05ae, 0x4de6bd46,
          0x91548db5, 0x71c45d05, 0x406d46f, 0x605015ff, 0x1998fb24, 0xd6bde997,
          0x894043cc, 0x67d99e77, 0xb0e842bd, 0x7898b88, 0xe7195b38, 0x79c8eedb,
          0xa17c0a47, 0x7c420fe9, 0xf8841ec9, 0, 0x9808683, 0x322bed48,
          0x1e1170ac, 0x6c5a724e, 0xfd0efffb, 0xf853856, 0x3daed51e, 0x362d3927,
          0xa0fd964, 0x685ca621, 0x9b5b54d1, 0x24362e3a, 0xc0a67b1, 0x9357e70f,
          0xb4ee96d2, 0x1b9b919e, 0x80c0c54f, 0x61dc20a2, 0x5a774b69,
          0x1c121a16, 0xe293ba0a, 0xc0a02ae5, 0x3c22e043, 0x121b171d, 0xe090d0b,
          0xf28bc7ad, 0x2db6a8b9, 0x141ea9c8, 0x57f11985, 0xaf75074c,
          0xee99ddbb, 0xa37f60fd, 0xf701269f, 0x5c72f5bc, 0x44663bc5,
          0x5bfb7e34, 0x8b432976, 0xcb23c6dc, 0xb6edfc68, 0xb8e4f163,
          0xd731dcca, 0x42638510, 0x13972240, 0x84c61120, 0x854a247d,
          0xd2bb3df8, 0xaef93211, 0xc729a16d, 0x1d9e2f4b, 0xdcb230f3, 0xd8652ec,
          0x77c1e3d0, 0x2bb3166c, 0xa970b999, 0x119448fa, 0x47e96422,
          0xa8fc8cc4, 0xa0f03f1a, 0x567d2cd8, 0x223390ef, 0x87494ec7,
          0xd938d1c1, 0x8ccaa2fe, 0x98d40b36, 0xa6f581cf, 0xa57ade28,
          0xdab78e26, 0x3fadbfa4, 0x2c3a9de4, 0x5078920d, 0x6a5fcc9b,
          0x547e4662, 0xf68d13c2, 0x90d8b8e8, 0x2e39f75e, 0x82c3aff5,
          0x9f5d80be, 0x69d0937c, 0x6fd52da9, 0xcf2512b3, 0xc8ac993b,
          0x10187da7, 0xe89c636e, 0xdb3bbb7b, 0xcd267809, 0x6e5918f4,
          0xec9ab701, 0x834f9aa8, 0xe6956e65, 0xaaffe67e, 0x21bccf08,
          0xef15e8e6, 0xbae79bd9, 0x4a6f36ce, 0xea9f09d4, 0x29b07cd6,
          0x31a4b2af, 0x2a3f2331, 0xc6a59430, 0x35a266c0, 0x744ebc37,
          0xfc82caa6, 0xe090d0b0, 0x33a7d815, 0xf104984a, 0x41ecdaf7,
          0x7fcd500e, 0x1791f62f, 0x764dd68d, 0x43efb04d, 0xccaa4d54,
          0xe49604df, 0x9ed1b5e3, 0x4c6a881b, 0xc12c1fb8, 0x4665517f,
          0x9d5eea04, 0x18c355d, 0xfa877473, 0xfb0b412e, 0xb3671d5a, 0x92dbd252,
          0xe9105633, 0x6dd64713, 0x9ad7618c, 0x37a10c7a, 0x59f8148e,
          0xeb133c89, 0xcea927ee, 0xb761c935, 0xe11ce5ed, 0x7a47b13c,
          0x9cd2df59, 0x55f2733f, 0x1814ce79, 0x73c737bf, 0x53f7cdea,
          0x5ffdaa5b, 0xdf3d6f14, 0x7844db86, 0xcaaff381, 0xb968c43e,
          0x3824342c, 0xc2a3405f, 0x161dc372, 0xbce2250c, 0x283c498b,
          0xff0d9541, 0x39a80171, 0x80cb3de, 0xd8b4e49c, 0x6456c190, 0x7bcb8461,
          0xd532b670, 0x486c5c74, 0xd0b85742,
        ],
        g2 = [
          0x5051f4a7, 0x537e4165, 0xc31a17a4, 0x963a275e, 0xcb3bab6b,
          0xf11f9d45, 0xabacfa58, 0x934be303, 0x552030fa, 0xf6ad766d,
          0x9188cc76, 0x25f5024c, 0xfc4fe5d7, 0xd7c52acb, 0x80263544,
          0x8fb562a3, 0x49deb15a, 0x6725ba1b, 0x9845ea0e, 0xe15dfec0, 0x2c32f75,
          0x12814cf0, 0xa38d4697, 0xc66bd3f9, 0xe7038f5f, 0x9515929c,
          0xebbf6d7a, 0xda955259, 0x2dd4be83, 0xd3587421, 0x2949e069,
          0x448ec9c8, 0x6a75c289, 0x78f48e79, 0x6b99583e, 0xdd27b971,
          0xb6bee14f, 0x17f088ad, 0x66c920ac, 0xb47dce3a, 0x1863df4a,
          0x82e51a31, 0x60975133, 0x4562537f, 0xe0b16477, 0x84bb6bae,
          0x1cfe81a0, 0x94f9082b, 0x58704868, 0x198f45fd, 0x8794de6c,
          0xb7527bf8, 0x23ab73d3, 0xe2724b02, 0x57e31f8f, 0x2a6655ab, 0x7b2eb28,
          0x32fb5c2, 0x9a86c57b, 0xa5d33708, 0xf2302887, 0xb223bfa5, 0xba02036a,
          0x5ced1682, 0x2b8acf1c, 0x92a779b4, 0xf0f307f2, 0xa14e69e2,
          0xcd65daf4, 0xd50605be, 0x1fd13462, 0x8ac4a6fe, 0x9d342e53,
          0xa0a2f355, 0x32058ae1, 0x75a4f6eb, 0x390b83ec, 0xaa4060ef, 0x65e719f,
          0x51bd6e10, 0xf93e218a, 0x3d96dd06, 0xaedd3e05, 0x464de6bd,
          0xb591548d, 0x571c45d, 0x6f0406d4, 0xff605015, 0x241998fb, 0x97d6bde9,
          0xcc894043, 0x7767d99e, 0xbdb0e842, 0x8807898b, 0x38e7195b,
          0xdb79c8ee, 0x47a17c0a, 0xe97c420f, 0xc9f8841e, 0, 0x83098086,
          0x48322bed, 0xac1e1170, 0x4e6c5a72, 0xfbfd0eff, 0x560f8538,
          0x1e3daed5, 0x27362d39, 0x640a0fd9, 0x21685ca6, 0xd19b5b54,
          0x3a24362e, 0xb10c0a67, 0xf9357e7, 0xd2b4ee96, 0x9e1b9b91, 0x4f80c0c5,
          0xa261dc20, 0x695a774b, 0x161c121a, 0xae293ba, 0xe5c0a02a, 0x433c22e0,
          0x1d121b17, 0xb0e090d, 0xadf28bc7, 0xb92db6a8, 0xc8141ea9, 0x8557f119,
          0x4caf7507, 0xbbee99dd, 0xfda37f60, 0x9ff70126, 0xbc5c72f5,
          0xc544663b, 0x345bfb7e, 0x768b4329, 0xdccb23c6, 0x68b6edfc,
          0x63b8e4f1, 0xcad731dc, 0x10426385, 0x40139722, 0x2084c611,
          0x7d854a24, 0xf8d2bb3d, 0x11aef932, 0x6dc729a1, 0x4b1d9e2f,
          0xf3dcb230, 0xec0d8652, 0xd077c1e3, 0x6c2bb316, 0x99a970b9,
          0xfa119448, 0x2247e964, 0xc4a8fc8c, 0x1aa0f03f, 0xd8567d2c,
          0xef223390, 0xc787494e, 0xc1d938d1, 0xfe8ccaa2, 0x3698d40b,
          0xcfa6f581, 0x28a57ade, 0x26dab78e, 0xa43fadbf, 0xe42c3a9d, 0xd507892,
          0x9b6a5fcc, 0x62547e46, 0xc2f68d13, 0xe890d8b8, 0x5e2e39f7,
          0xf582c3af, 0xbe9f5d80, 0x7c69d093, 0xa96fd52d, 0xb3cf2512,
          0x3bc8ac99, 0xa710187d, 0x6ee89c63, 0x7bdb3bbb, 0x9cd2678, 0xf46e5918,
          0x1ec9ab7, 0xa8834f9a, 0x65e6956e, 0x7eaaffe6, 0x821bccf, 0xe6ef15e8,
          0xd9bae79b, 0xce4a6f36, 0xd4ea9f09, 0xd629b07c, 0xaf31a4b2,
          0x312a3f23, 0x30c6a594, 0xc035a266, 0x37744ebc, 0xa6fc82ca,
          0xb0e090d0, 0x1533a7d8, 0x4af10498, 0xf741ecda, 0xe7fcd50, 0x2f1791f6,
          0x8d764dd6, 0x4d43efb0, 0x54ccaa4d, 0xdfe49604, 0xe39ed1b5,
          0x1b4c6a88, 0xb8c12c1f, 0x7f466551, 0x49d5eea, 0x5d018c35, 0x73fa8774,
          0x2efb0b41, 0x5ab3671d, 0x5292dbd2, 0x33e91056, 0x136dd647,
          0x8c9ad761, 0x7a37a10c, 0x8e59f814, 0x89eb133c, 0xeecea927,
          0x35b761c9, 0xede11ce5, 0x3c7a47b1, 0x599cd2df, 0x3f55f273,
          0x791814ce, 0xbf73c737, 0xea53f7cd, 0x5b5ffdaa, 0x14df3d6f,
          0x867844db, 0x81caaff3, 0x3eb968c4, 0x2c382434, 0x5fc2a340,
          0x72161dc3, 0xcbce225, 0x8b283c49, 0x41ff0d95, 0x7139a801, 0xde080cb3,
          0x9cd8b4e4, 0x906456c1, 0x617bcb84, 0x70d532b6, 0x74486c5c,
          0x42d0b857,
        ],
        g3 = [
          0xa75051f4, 0x65537e41, 0xa4c31a17, 0x5e963a27, 0x6bcb3bab,
          0x45f11f9d, 0x58abacfa, 0x3934be3, 0xfa552030, 0x6df6ad76, 0x769188cc,
          0x4c25f502, 0xd7fc4fe5, 0xcbd7c52a, 0x44802635, 0xa38fb562,
          0x5a49deb1, 0x1b6725ba, 0xe9845ea, 0xc0e15dfe, 0x7502c32f, 0xf012814c,
          0x97a38d46, 0xf9c66bd3, 0x5fe7038f, 0x9c951592, 0x7aebbf6d,
          0x59da9552, 0x832dd4be, 0x21d35874, 0x692949e0, 0xc8448ec9,
          0x896a75c2, 0x7978f48e, 1047239e3, 0x71dd27b9, 0x4fb6bee1, 0xad17f088,
          0xac66c920, 0x3ab47dce, 0x4a1863df, 0x3182e51a, 0x33609751,
          0x7f456253, 0x77e0b164, 0xae84bb6b, 0xa01cfe81, 0x2b94f908,
          0x68587048, 0xfd198f45, 0x6c8794de, 0xf8b7527b, 0xd323ab73, 0x2e2724b,
          0x8f57e31f, 0xab2a6655, 0x2807b2eb, 0xc2032fb5, 0x7b9a86c5, 0x8a5d337,
          0x87f23028, 0xa5b223bf, 0x6aba0203, 0x825ced16, 0x1c2b8acf,
          0xb492a779, 0xf2f0f307, 0xe2a14e69, 0xf4cd65da, 0xbed50605,
          0x621fd134, 0xfe8ac4a6, 0x539d342e, 0x55a0a2f3, 0xe132058a,
          0xeb75a4f6, 0xec390b83, 0xefaa4060, 0x9f065e71, 0x1051bd6e,
          0x8af93e21, 0x63d96dd, 0x5aedd3e, 0xbd464de6, 0x8db59154, 0x5d0571c4,
          0xd46f0406, 0x15ff6050, 0xfb241998, 0xe997d6bd, 0x43cc8940,
          0x9e7767d9, 0x42bdb0e8, 0x8b880789, 0x5b38e719, 0xeedb79c8, 0xa47a17c,
          0xfe97c42, 0x1ec9f884, 0, 0x86830980, 0xed48322b, 0x70ac1e11,
          0x724e6c5a, 0xfffbfd0e, 0x38560f85, 0xd51e3dae, 0x3927362d,
          0xd9640a0f, 0xa621685c, 0x54d19b5b, 0x2e3a2436, 0x67b10c0a,
          0xe70f9357, 0x96d2b4ee, 0x919e1b9b, 0xc54f80c0, 0x20a261dc,
          0x4b695a77, 0x1a161c12, 0xba0ae293, 0x2ae5c0a0, 0xe0433c22,
          0x171d121b, 0xd0b0e09, 0xc7adf28b, 0xa8b92db6, 0xa9c8141e, 0x198557f1,
          0x74caf75, 0xddbbee99, 0x60fda37f, 0x269ff701, 0xf5bc5c72, 0x3bc54466,
          0x7e345bfb, 0x29768b43, 0xc6dccb23, 0xfc68b6ed, 0xf163b8e4,
          0xdccad731, 0x85104263, 0x22401397, 0x112084c6, 0x247d854a,
          0x3df8d2bb, 0x3211aef9, 0xa16dc729, 0x2f4b1d9e, 0x30f3dcb2,
          0x52ec0d86, 0xe3d077c1, 0x166c2bb3, 0xb999a970, 0x48fa1194,
          0x642247e9, 0x8cc4a8fc, 0x3f1aa0f0, 0x2cd8567d, 0x90ef2233,
          0x4ec78749, 0xd1c1d938, 0xa2fe8cca, 0xb3698d4, 0x81cfa6f5, 0xde28a57a,
          0x8e26dab7, 0xbfa43fad, 0x9de42c3a, 0x920d5078, 0xcc9b6a5f,
          0x4662547e, 0x13c2f68d, 0xb8e890d8, 0xf75e2e39, 0xaff582c3,
          0x80be9f5d, 0x937c69d0, 0x2da96fd5, 0x12b3cf25, 0x993bc8ac,
          0x7da71018, 0x636ee89c, 0xbb7bdb3b, 0x7809cd26, 0x18f46e59,
          0xb701ec9a, 0x9aa8834f, 0x6e65e695, 0xe67eaaff, 0xcf0821bc,
          0xe8e6ef15, 0x9bd9bae7, 0x36ce4a6f, 0x9d4ea9f, 0x7cd629b0, 0xb2af31a4,
          0x23312a3f, 0x9430c6a5, 0x66c035a2, 0xbc37744e, 0xcaa6fc82,
          0xd0b0e090, 0xd81533a7, 0x984af104, 0xdaf741ec, 0x500e7fcd,
          0xf62f1791, 0xd68d764d, 0xb04d43ef, 0x4d54ccaa, 0x4dfe496, 0xb5e39ed1,
          0x881b4c6a, 0x1fb8c12c, 0x517f4665, 0xea049d5e, 0x355d018c,
          0x7473fa87, 0x412efb0b, 0x1d5ab367, 0xd25292db, 0x5633e910,
          0x47136dd6, 0x618c9ad7, 0xc7a37a1, 0x148e59f8, 0x3c89eb13, 0x27eecea9,
          0xc935b761, 0xe5ede11c, 0xb13c7a47, 0xdf599cd2, 0x733f55f2,
          0xce791814, 0x37bf73c7, 0xcdea53f7, 0xaa5b5ffd, 0x6f14df3d,
          0xdb867844, 0xf381caaf, 0xc43eb968, 0x342c3824, 0x405fc2a3,
          0xc372161d, 0x250cbce2, 0x498b283c, 0x9541ff0d, 0x17139a8, 0xb3de080c,
          0xe49cd8b4, 0xc1906456, 0x84617bcb, 0xb670d532, 0x5c74486c,
          0x5742d0b8,
        ],
        g4 = [
          0xf4a75051, 0x4165537e, 0x17a4c31a, 0x275e963a, 0xab6bcb3b,
          0x9d45f11f, 0xfa58abac, 0xe303934b, 0x30fa5520, 0x766df6ad,
          0xcc769188, 0x24c25f5, 0xe5d7fc4f, 0x2acbd7c5, 0x35448026, 0x62a38fb5,
          0xb15a49de, 0xba1b6725, 0xea0e9845, 0xfec0e15d, 0x2f7502c3,
          0x4cf01281, 0x4697a38d, 0xd3f9c66b, 0x8f5fe703, 0x929c9515,
          0x6d7aebbf, 0x5259da95, 0xbe832dd4, 0x7421d358, 0xe0692949,
          0xc9c8448e, 0xc2896a75, 0x8e7978f4, 0x583e6b99, 0xb971dd27,
          0xe14fb6be, 0x88ad17f0, 0x20ac66c9, 0xce3ab47d, 0xdf4a1863,
          0x1a3182e5, 0x51336097, 0x537f4562, 0x6477e0b1, 0x6bae84bb,
          0x81a01cfe, 0x82b94f9, 0x48685870, 0x45fd198f, 0xde6c8794, 0x7bf8b752,
          0x73d323ab, 0x4b02e272, 0x1f8f57e3, 0x55ab2a66, 0xeb2807b2,
          0xb5c2032f, 0xc57b9a86, 0x3708a5d3, 679998e3, 0xbfa5b223, 0x36aba02,
          0x16825ced, 0xcf1c2b8a, 0x79b492a7, 0x7f2f0f3, 0x69e2a14e, 0xdaf4cd65,
          0x5bed506, 0x34621fd1, 0xa6fe8ac4, 0x2e539d34, 0xf355a0a2, 0x8ae13205,
          0xf6eb75a4, 0x83ec390b, 0x60efaa40, 0x719f065e, 0x6e1051bd,
          0x218af93e, 0xdd063d96, 0x3e05aedd, 0xe6bd464d, 0x548db591,
          0xc45d0571, 0x6d46f04, 0x5015ff60, 0x98fb2419, 0xbde997d6, 0x4043cc89,
          0xd99e7767, 0xe842bdb0, 0x898b8807, 0x195b38e7, 0xc8eedb79,
          0x7c0a47a1, 0x420fe97c, 0x841ec9f8, 0, 0x80868309, 0x2bed4832,
          0x1170ac1e, 0x5a724e6c, 0xefffbfd, 0x8538560f, 0xaed51e3d, 0x2d392736,
          0xfd9640a, 0x5ca62168, 0x5b54d19b, 0x362e3a24, 0xa67b10c, 0x57e70f93,
          0xee96d2b4, 0x9b919e1b, 0xc0c54f80, 0xdc20a261, 0x774b695a,
          0x121a161c, 0x93ba0ae2, 0xa02ae5c0, 0x22e0433c, 0x1b171d12, 0x90d0b0e,
          0x8bc7adf2, 0xb6a8b92d, 0x1ea9c814, 0xf1198557, 0x75074caf,
          0x99ddbbee, 0x7f60fda3, 0x1269ff7, 0x72f5bc5c, 0x663bc544, 0xfb7e345b,
          0x4329768b, 0x23c6dccb, 0xedfc68b6, 0xe4f163b8, 0x31dccad7,
          0x63851042, 0x97224013, 0xc6112084, 0x4a247d85, 0xbb3df8d2,
          0xf93211ae, 0x29a16dc7, 0x9e2f4b1d, 0xb230f3dc, 0x8652ec0d,
          0xc1e3d077, 0xb3166c2b, 0x70b999a9, 0x9448fa11, 0xe9642247,
          0xfc8cc4a8, 0xf03f1aa0, 0x7d2cd856, 0x3390ef22, 0x494ec787,
          0x38d1c1d9, 0xcaa2fe8c, 0xd40b3698, 0xf581cfa6, 0x7ade28a5,
          0xb78e26da, 0xadbfa43f, 0x3a9de42c, 0x78920d50, 0x5fcc9b6a,
          0x7e466254, 0x8d13c2f6, 0xd8b8e890, 0x39f75e2e, 0xc3aff582,
          0x5d80be9f, 0xd0937c69, 0xd52da96f, 0x2512b3cf, 0xac993bc8,
          0x187da710, 0x9c636ee8, 0x3bbb7bdb, 0x267809cd, 0x5918f46e,
          0x9ab701ec, 0x4f9aa883, 0x956e65e6, 0xffe67eaa, 0xbccf0821,
          0x15e8e6ef, 0xe79bd9ba, 0x6f36ce4a, 0x9f09d4ea, 0xb07cd629,
          0xa4b2af31, 0x3f23312a, 0xa59430c6, 0xa266c035, 0x4ebc3774,
          0x82caa6fc, 0x90d0b0e0, 0xa7d81533, 0x4984af1, 0xecdaf741, 0xcd500e7f,
          0x91f62f17, 0x4dd68d76, 0xefb04d43, 0xaa4d54cc, 0x9604dfe4,
          0xd1b5e39e, 0x6a881b4c, 0x2c1fb8c1, 0x65517f46, 0x5eea049d,
          0x8c355d01, 0x877473fa, 0xb412efb, 0x671d5ab3, 0xdbd25292, 0x105633e9,
          0xd647136d, 0xd7618c9a, 0xa10c7a37, 0xf8148e59, 0x133c89eb,
          0xa927eece, 0x61c935b7, 0x1ce5ede1, 0x47b13c7a, 0xd2df599c,
          0xf2733f55, 0x14ce7918, 0xc737bf73, 0xf7cdea53, 0xfdaa5b5f,
          0x3d6f14df, 0x44db8678, 0xaff381ca, 0x68c43eb9, 0x24342c38,
          0xa3405fc2, 0x1dc37216, 0xe2250cbc, 0x3c498b28, 0xd9541ff, 0xa8017139,
          0xcb3de08, 0xb4e49cd8, 0x56c19064, 0xcb84617b, 0x32b670d5, 0x6c5c7448,
          0xb85742d0,
        ],
        g8 = [
          0, 0xe090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927,
          0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e,
          0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69,
          0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c,
          0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3,
          0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2,
          0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66,
          0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323,
          0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04,
          0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd,
          0x29b07cd6, 0x38f5fe7, 0xd8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393,
          0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4,
          0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0,
          0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7,
          0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182,
          0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d,
          0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c,
          0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x58ae132,
          0xb83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b,
          0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x605bed5,
          0x80cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef,
          0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120,
          0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65,
          0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742,
          0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1,
          0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6,
          0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x9808683, 0x7898b88,
          0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051,
          0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976,
          0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633,
          0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87,
          0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6,
          0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9,
          0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c,
          0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b,
          0x5e719f06, 0x5078920d, 0xa0fd964, 0x406d46f, 0x161dc372, 0x1814ce79,
          0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701,
          0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26,
          0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f,
          0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0xc0a67b1,
          0x2036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b,
          0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4,
          0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a,
          0x39a80171, 0x2bb3166c, 0x25ba1b67, 0xf853856, 0x18c355d, 0x13972240,
          0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f,
          0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca,
          0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed,
          0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84,
          0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3,
        ],
        g5 = [
          0, 0xb0e090d, 0x161c121a, 0x1d121b17, 0x2c382434, 0x27362d39,
          0x3a24362e, 0x312a3f23, 0x58704868, 0x537e4165, 0x4e6c5a72,
          0x4562537f, 0x74486c5c, 0x7f466551, 0x62547e46, 0x695a774b,
          0xb0e090d0, 0xbbee99dd, 0xa6fc82ca, 0xadf28bc7, 0x9cd8b4e4,
          0x97d6bde9, 0x8ac4a6fe, 0x81caaff3, 0xe890d8b8, 0xe39ed1b5,
          0xfe8ccaa2, 0xf582c3af, 0xc4a8fc8c, 0xcfa6f581, 0xd2b4ee96,
          0xd9bae79b, 0x7bdb3bbb, 0x70d532b6, 0x6dc729a1, 0x66c920ac,
          0x57e31f8f, 0x5ced1682, 0x41ff0d95, 0x4af10498, 0x23ab73d3,
          0x28a57ade, 0x35b761c9, 0x3eb968c4, 0xf9357e7, 0x49d5eea, 0x198f45fd,
          0x12814cf0, 0xcb3bab6b, 0xc035a266, 0xdd27b971, 0xd629b07c,
          0xe7038f5f, 0xec0d8652, 0xf11f9d45, 0xfa119448, 0x934be303,
          0x9845ea0e, 0x8557f119, 0x8e59f814, 0xbf73c737, 0xb47dce3a,
          0xa96fd52d, 0xa261dc20, 0xf6ad766d, 0xfda37f60, 0xe0b16477,
          0xebbf6d7a, 0xda955259, 0xd19b5b54, 0xcc894043, 0xc787494e,
          0xaedd3e05, 0xa5d33708, 0xb8c12c1f, 0xb3cf2512, 0x82e51a31,
          0x89eb133c, 0x94f9082b, 0x9ff70126, 0x464de6bd, 0x4d43efb0,
          0x5051f4a7, 0x5b5ffdaa, 0x6a75c289, 0x617bcb84, 0x7c69d093,
          0x7767d99e, 0x1e3daed5, 0x1533a7d8, 0x821bccf, 0x32fb5c2, 0x32058ae1,
          0x390b83ec, 0x241998fb, 0x2f1791f6, 0x8d764dd6, 0x867844db,
          0x9b6a5fcc, 0x906456c1, 0xa14e69e2, 0xaa4060ef, 0xb7527bf8,
          0xbc5c72f5, 0xd50605be, 0xde080cb3, 0xc31a17a4, 0xc8141ea9,
          0xf93e218a, 0xf2302887, 0xef223390, 0xe42c3a9d, 0x3d96dd06,
          0x3698d40b, 0x2b8acf1c, 0x2084c611, 0x11aef932, 0x1aa0f03f, 0x7b2eb28,
          0xcbce225, 0x65e6956e, 0x6ee89c63, 0x73fa8774, 0x78f48e79, 0x49deb15a,
          0x42d0b857, 0x5fc2a340, 0x54ccaa4d, 0xf741ecda, 0xfc4fe5d7,
          0xe15dfec0, 0xea53f7cd, 0xdb79c8ee, 0xd077c1e3, 0xcd65daf4,
          0xc66bd3f9, 0xaf31a4b2, 0xa43fadbf, 0xb92db6a8, 0xb223bfa5,
          0x83098086, 0x8807898b, 0x9515929c, 0x9e1b9b91, 0x47a17c0a,
          0x4caf7507, 0x51bd6e10, 0x5ab3671d, 0x6b99583e, 0x60975133,
          0x7d854a24, 0x768b4329, 0x1fd13462, 0x14df3d6f, 0x9cd2678, 0x2c32f75,
          0x33e91056, 0x38e7195b, 0x25f5024c, 0x2efb0b41, 0x8c9ad761,
          0x8794de6c, 0x9a86c57b, 0x9188cc76, 0xa0a2f355, 0xabacfa58,
          0xb6bee14f, 0xbdb0e842, 0xd4ea9f09, 0xdfe49604, 0xc2f68d13,
          0xc9f8841e, 0xf8d2bb3d, 0xf3dcb230, 0xeecea927, 0xe5c0a02a,
          0x3c7a47b1, 0x37744ebc, 0x2a6655ab, 0x21685ca6, 0x10426385,
          0x1b4c6a88, 0x65e719f, 0xd507892, 0x640a0fd9, 0x6f0406d4, 0x72161dc3,
          0x791814ce, 0x48322bed, 0x433c22e0, 0x5e2e39f7, 0x552030fa, 0x1ec9ab7,
          0xae293ba, 0x17f088ad, 0x1cfe81a0, 0x2dd4be83, 0x26dab78e, 0x3bc8ac99,
          0x30c6a594, 0x599cd2df, 0x5292dbd2, 0x4f80c0c5, 0x448ec9c8,
          0x75a4f6eb, 0x7eaaffe6, 0x63b8e4f1, 0x68b6edfc, 0xb10c0a67,
          0xba02036a, 0xa710187d, 0xac1e1170, 0x9d342e53, 0x963a275e,
          0x8b283c49, 0x80263544, 0xe97c420f, 0xe2724b02, 0xff605015,
          0xf46e5918, 0xc544663b, 0xce4a6f36, 0xd3587421, 0xd8567d2c,
          0x7a37a10c, 0x7139a801, 0x6c2bb316, 0x6725ba1b, 0x560f8538,
          0x5d018c35, 0x40139722, 0x4b1d9e2f, 0x2247e964, 0x2949e069,
          0x345bfb7e, 0x3f55f273, 0xe7fcd50, 0x571c45d, 0x1863df4a, 0x136dd647,
          0xcad731dc, 0xc1d938d1, 0xdccb23c6, 0xd7c52acb, 0xe6ef15e8,
          0xede11ce5, 0xf0f307f2, 0xfbfd0eff, 0x92a779b4, 0x99a970b9,
          0x84bb6bae, 0x8fb562a3, 0xbe9f5d80, 0xb591548d, 0xa8834f9a,
          0xa38d4697,
        ],
        g6 = [
          0, 0xd0b0e09, 0x1a161c12, 0x171d121b, 0x342c3824, 0x3927362d,
          0x2e3a2436, 0x23312a3f, 0x68587048, 0x65537e41, 0x724e6c5a,
          0x7f456253, 0x5c74486c, 0x517f4665, 0x4662547e, 0x4b695a77,
          0xd0b0e090, 0xddbbee99, 0xcaa6fc82, 0xc7adf28b, 0xe49cd8b4,
          0xe997d6bd, 0xfe8ac4a6, 0xf381caaf, 0xb8e890d8, 0xb5e39ed1,
          0xa2fe8cca, 0xaff582c3, 0x8cc4a8fc, 0x81cfa6f5, 0x96d2b4ee,
          0x9bd9bae7, 0xbb7bdb3b, 0xb670d532, 0xa16dc729, 0xac66c920,
          0x8f57e31f, 0x825ced16, 0x9541ff0d, 0x984af104, 0xd323ab73,
          0xde28a57a, 0xc935b761, 0xc43eb968, 0xe70f9357, 0xea049d5e,
          0xfd198f45, 0xf012814c, 0x6bcb3bab, 0x66c035a2, 0x71dd27b9,
          0x7cd629b0, 0x5fe7038f, 0x52ec0d86, 0x45f11f9d, 0x48fa1194, 0x3934be3,
          0xe9845ea, 0x198557f1, 0x148e59f8, 0x37bf73c7, 0x3ab47dce, 0x2da96fd5,
          0x20a261dc, 0x6df6ad76, 0x60fda37f, 0x77e0b164, 0x7aebbf6d,
          0x59da9552, 0x54d19b5b, 0x43cc8940, 0x4ec78749, 0x5aedd3e, 0x8a5d337,
          0x1fb8c12c, 0x12b3cf25, 0x3182e51a, 0x3c89eb13, 0x2b94f908,
          0x269ff701, 0xbd464de6, 0xb04d43ef, 0xa75051f4, 0xaa5b5ffd,
          0x896a75c2, 0x84617bcb, 0x937c69d0, 0x9e7767d9, 0xd51e3dae,
          0xd81533a7, 0xcf0821bc, 0xc2032fb5, 0xe132058a, 0xec390b83,
          0xfb241998, 0xf62f1791, 0xd68d764d, 0xdb867844, 0xcc9b6a5f,
          0xc1906456, 0xe2a14e69, 0xefaa4060, 0xf8b7527b, 0xf5bc5c72,
          0xbed50605, 0xb3de080c, 0xa4c31a17, 0xa9c8141e, 0x8af93e21,
          0x87f23028, 0x90ef2233, 0x9de42c3a, 0x63d96dd, 0xb3698d4, 0x1c2b8acf,
          0x112084c6, 0x3211aef9, 0x3f1aa0f0, 0x2807b2eb, 0x250cbce2,
          0x6e65e695, 0x636ee89c, 0x7473fa87, 0x7978f48e, 0x5a49deb1,
          0x5742d0b8, 0x405fc2a3, 0x4d54ccaa, 0xdaf741ec, 0xd7fc4fe5,
          0xc0e15dfe, 0xcdea53f7, 0xeedb79c8, 0xe3d077c1, 0xf4cd65da,
          0xf9c66bd3, 0xb2af31a4, 0xbfa43fad, 0xa8b92db6, 0xa5b223bf,
          0x86830980, 0x8b880789, 0x9c951592, 0x919e1b9b, 0xa47a17c, 0x74caf75,
          0x1051bd6e, 0x1d5ab367, 1047239e3, 0x33609751, 0x247d854a, 0x29768b43,
          0x621fd134, 0x6f14df3d, 0x7809cd26, 0x7502c32f, 0x5633e910,
          0x5b38e719, 0x4c25f502, 0x412efb0b, 0x618c9ad7, 0x6c8794de,
          0x7b9a86c5, 0x769188cc, 0x55a0a2f3, 0x58abacfa, 0x4fb6bee1,
          0x42bdb0e8, 0x9d4ea9f, 0x4dfe496, 0x13c2f68d, 0x1ec9f884, 0x3df8d2bb,
          0x30f3dcb2, 0x27eecea9, 0x2ae5c0a0, 0xb13c7a47, 0xbc37744e,
          0xab2a6655, 0xa621685c, 0x85104263, 0x881b4c6a, 0x9f065e71,
          0x920d5078, 0xd9640a0f, 0xd46f0406, 0xc372161d, 0xce791814,
          0xed48322b, 0xe0433c22, 0xf75e2e39, 0xfa552030, 0xb701ec9a,
          0xba0ae293, 0xad17f088, 0xa01cfe81, 0x832dd4be, 0x8e26dab7,
          0x993bc8ac, 0x9430c6a5, 0xdf599cd2, 0xd25292db, 0xc54f80c0,
          0xc8448ec9, 0xeb75a4f6, 0xe67eaaff, 0xf163b8e4, 0xfc68b6ed,
          0x67b10c0a, 0x6aba0203, 0x7da71018, 0x70ac1e11, 0x539d342e,
          0x5e963a27, 0x498b283c, 0x44802635, 0xfe97c42, 0x2e2724b, 0x15ff6050,
          0x18f46e59, 0x3bc54466, 0x36ce4a6f, 0x21d35874, 0x2cd8567d, 0xc7a37a1,
          0x17139a8, 0x166c2bb3, 0x1b6725ba, 0x38560f85, 0x355d018c, 0x22401397,
          0x2f4b1d9e, 0x642247e9, 0x692949e0, 0x7e345bfb, 0x733f55f2,
          0x500e7fcd, 0x5d0571c4, 0x4a1863df, 0x47136dd6, 0xdccad731,
          0xd1c1d938, 0xc6dccb23, 0xcbd7c52a, 0xe8e6ef15, 0xe5ede11c,
          0xf2f0f307, 0xfffbfd0e, 0xb492a779, 0xb999a970, 0xae84bb6b,
          0xa38fb562, 0x80be9f5d, 0x8db59154, 0x9aa8834f, 0x97a38d46,
        ],
        g9 = [
          0, 0x90d0b0e, 0x121a161c, 0x1b171d12, 0x24342c38, 0x2d392736,
          0x362e3a24, 0x3f23312a, 0x48685870, 0x4165537e, 0x5a724e6c,
          0x537f4562, 0x6c5c7448, 0x65517f46, 0x7e466254, 0x774b695a,
          0x90d0b0e0, 0x99ddbbee, 0x82caa6fc, 0x8bc7adf2, 0xb4e49cd8,
          0xbde997d6, 0xa6fe8ac4, 0xaff381ca, 0xd8b8e890, 0xd1b5e39e,
          0xcaa2fe8c, 0xc3aff582, 0xfc8cc4a8, 0xf581cfa6, 0xee96d2b4,
          0xe79bd9ba, 0x3bbb7bdb, 0x32b670d5, 0x29a16dc7, 0x20ac66c9,
          0x1f8f57e3, 0x16825ced, 0xd9541ff, 0x4984af1, 0x73d323ab, 0x7ade28a5,
          0x61c935b7, 0x68c43eb9, 0x57e70f93, 0x5eea049d, 0x45fd198f,
          0x4cf01281, 0xab6bcb3b, 0xa266c035, 0xb971dd27, 0xb07cd629,
          0x8f5fe703, 0x8652ec0d, 0x9d45f11f, 0x9448fa11, 0xe303934b,
          0xea0e9845, 0xf1198557, 0xf8148e59, 0xc737bf73, 0xce3ab47d,
          0xd52da96f, 0xdc20a261, 0x766df6ad, 0x7f60fda3, 0x6477e0b1,
          0x6d7aebbf, 0x5259da95, 0x5b54d19b, 0x4043cc89, 0x494ec787,
          0x3e05aedd, 0x3708a5d3, 0x2c1fb8c1, 0x2512b3cf, 0x1a3182e5,
          0x133c89eb, 0x82b94f9, 0x1269ff7, 0xe6bd464d, 0xefb04d43, 0xf4a75051,
          0xfdaa5b5f, 0xc2896a75, 0xcb84617b, 0xd0937c69, 0xd99e7767,
          0xaed51e3d, 0xa7d81533, 0xbccf0821, 0xb5c2032f, 0x8ae13205,
          0x83ec390b, 0x98fb2419, 0x91f62f17, 0x4dd68d76, 0x44db8678,
          0x5fcc9b6a, 0x56c19064, 0x69e2a14e, 0x60efaa40, 0x7bf8b752,
          0x72f5bc5c, 0x5bed506, 0xcb3de08, 0x17a4c31a, 0x1ea9c814, 0x218af93e,
          679998e3, 0x3390ef22, 0x3a9de42c, 0xdd063d96, 0xd40b3698, 0xcf1c2b8a,
          0xc6112084, 0xf93211ae, 0xf03f1aa0, 0xeb2807b2, 0xe2250cbc,
          0x956e65e6, 0x9c636ee8, 0x877473fa, 0x8e7978f4, 0xb15a49de,
          0xb85742d0, 0xa3405fc2, 0xaa4d54cc, 0xecdaf741, 0xe5d7fc4f,
          0xfec0e15d, 0xf7cdea53, 0xc8eedb79, 0xc1e3d077, 0xdaf4cd65,
          0xd3f9c66b, 0xa4b2af31, 0xadbfa43f, 0xb6a8b92d, 0xbfa5b223,
          0x80868309, 0x898b8807, 0x929c9515, 0x9b919e1b, 0x7c0a47a1,
          0x75074caf, 0x6e1051bd, 0x671d5ab3, 0x583e6b99, 0x51336097,
          0x4a247d85, 0x4329768b, 0x34621fd1, 0x3d6f14df, 0x267809cd,
          0x2f7502c3, 0x105633e9, 0x195b38e7, 0x24c25f5, 0xb412efb, 0xd7618c9a,
          0xde6c8794, 0xc57b9a86, 0xcc769188, 0xf355a0a2, 0xfa58abac,
          0xe14fb6be, 0xe842bdb0, 0x9f09d4ea, 0x9604dfe4, 0x8d13c2f6,
          0x841ec9f8, 0xbb3df8d2, 0xb230f3dc, 0xa927eece, 0xa02ae5c0,
          0x47b13c7a, 0x4ebc3774, 0x55ab2a66, 0x5ca62168, 0x63851042,
          0x6a881b4c, 0x719f065e, 0x78920d50, 0xfd9640a, 0x6d46f04, 0x1dc37216,
          0x14ce7918, 0x2bed4832, 0x22e0433c, 0x39f75e2e, 0x30fa5520,
          0x9ab701ec, 0x93ba0ae2, 0x88ad17f0, 0x81a01cfe, 0xbe832dd4,
          0xb78e26da, 0xac993bc8, 0xa59430c6, 0xd2df599c, 0xdbd25292,
          0xc0c54f80, 0xc9c8448e, 0xf6eb75a4, 0xffe67eaa, 0xe4f163b8,
          0xedfc68b6, 0xa67b10c, 0x36aba02, 0x187da710, 0x1170ac1e, 0x2e539d34,
          0x275e963a, 0x3c498b28, 0x35448026, 0x420fe97c, 0x4b02e272,
          0x5015ff60, 0x5918f46e, 0x663bc544, 0x6f36ce4a, 0x7421d358,
          0x7d2cd856, 0xa10c7a37, 0xa8017139, 0xb3166c2b, 0xba1b6725,
          0x8538560f, 0x8c355d01, 0x97224013, 0x9e2f4b1d, 0xe9642247,
          0xe0692949, 0xfb7e345b, 0xf2733f55, 0xcd500e7f, 0xc45d0571,
          0xdf4a1863, 0xd647136d, 0x31dccad7, 0x38d1c1d9, 0x23c6dccb,
          0x2acbd7c5, 0x15e8e6ef, 0x1ce5ede1, 0x7f2f0f3, 0xefffbfd, 0x79b492a7,
          0x70b999a9, 0x6bae84bb, 0x62a38fb5, 0x5d80be9f, 0x548db591,
          0x4f9aa883, 0x4697a38d,
        ];
      function g7(e) {
        let t = [];
        for (let r = 0; r < e.length; r += 4)
          t.push((e[r] << 24) | (e[r + 1] << 16) | (e[r + 2] << 8) | e[r + 3]);
        return t;
      }
      class be {
        get key() {
          return gH(this, O, "f").slice();
        }
        encrypt(e) {
          if (16 != e.length)
            throw TypeError("invalid plaintext size (must be 16 bytes)");
          let t = gH(this, C, "f").length - 1,
            r = [0, 0, 0, 0],
            n = g7(e);
          for (let e = 0; e < 4; e++) n[e] ^= gH(this, C, "f")[0][e];
          for (let e = 1; e < t; e++) {
            for (let t = 0; t < 4; t++)
              r[t] =
                gY[(n[t] >> 24) & 255] ^
                gX[(n[(t + 1) % 4] >> 16) & 255] ^
                g$[(n[(t + 2) % 4] >> 8) & 255] ^
                g0[255 & n[(t + 3) % 4]] ^
                gH(this, C, "f")[e][t];
            n = r.slice();
          }
          let a = new Uint8Array(16),
            i = 0;
          for (let e = 0; e < 4; e++)
            (i = gH(this, C, "f")[t][e]),
              (a[4 * e] = (gJ[(n[e] >> 24) & 255] ^ (i >> 24)) & 255),
              (a[4 * e + 1] =
                (gJ[(n[(e + 1) % 4] >> 16) & 255] ^ (i >> 16)) & 255),
              (a[4 * e + 2] =
                (gJ[(n[(e + 2) % 4] >> 8) & 255] ^ (i >> 8)) & 255),
              (a[4 * e + 3] = (gJ[255 & n[(e + 3) % 4]] ^ i) & 255);
          return a;
        }
        decrypt(e) {
          if (16 != e.length)
            throw TypeError("invalid ciphertext size (must be 16 bytes)");
          let t = gH(this, R, "f").length - 1,
            r = [0, 0, 0, 0],
            n = g7(e);
          for (let e = 0; e < 4; e++) n[e] ^= gH(this, R, "f")[0][e];
          for (let e = 1; e < t; e++) {
            for (let t = 0; t < 4; t++)
              r[t] =
                g1[(n[t] >> 24) & 255] ^
                g2[(n[(t + 3) % 4] >> 16) & 255] ^
                g3[(n[(t + 2) % 4] >> 8) & 255] ^
                g4[255 & n[(t + 1) % 4]] ^
                gH(this, R, "f")[e][t];
            n = r.slice();
          }
          let a = new Uint8Array(16),
            i = 0;
          for (let e = 0; e < 4; e++)
            (i = gH(this, R, "f")[t][e]),
              (a[4 * e] = (gZ[(n[e] >> 24) & 255] ^ (i >> 24)) & 255),
              (a[4 * e + 1] =
                (gZ[(n[(e + 3) % 4] >> 16) & 255] ^ (i >> 16)) & 255),
              (a[4 * e + 2] =
                (gZ[(n[(e + 2) % 4] >> 8) & 255] ^ (i >> 8)) & 255),
              (a[4 * e + 3] = (gZ[255 & n[(e + 1) % 4]] ^ i) & 255);
          return a;
        }
        constructor(e) {
          let t;
          if (
            (O.set(this, void 0),
            R.set(this, void 0),
            C.set(this, void 0),
            !(this instanceof be))
          )
            throw Error("AES must be instanitated with `new`");
          gK(this, O, new Uint8Array(e), "f");
          let r = gq[this.key.length];
          if (null == r)
            throw TypeError("invalid key size (must be 16, 24 or 32 bytes)");
          gK(this, C, [], "f"), gK(this, R, [], "f");
          for (let e = 0; e <= r; e++)
            gH(this, C, "f").push([0, 0, 0, 0]),
              gH(this, R, "f").push([0, 0, 0, 0]);
          let n = (r + 1) * 4,
            a = this.key.length / 4,
            i = g7(this.key);
          for (let e = 0; e < a; e++)
            (t = e >> 2),
              (gH(this, C, "f")[t][e % 4] = i[e]),
              (gH(this, R, "f")[r - t][e % 4] = i[e]);
          let s = 0,
            o = a,
            l;
          for (; o < n; ) {
            if (
              ((l = i[a - 1]),
              (i[0] ^=
                (gJ[(l >> 16) & 255] << 24) ^
                (gJ[(l >> 8) & 255] << 16) ^
                (gJ[255 & l] << 8) ^
                gJ[(l >> 24) & 255] ^
                (gQ[s] << 24)),
              (s += 1),
              8 != a)
            )
              for (let e = 1; e < a; e++) i[e] ^= i[e - 1];
            else {
              for (let e = 1; e < a / 2; e++) i[e] ^= i[e - 1];
              (l = i[a / 2 - 1]),
                (i[a / 2] ^=
                  gJ[255 & l] ^
                  (gJ[(l >> 8) & 255] << 8) ^
                  (gJ[(l >> 16) & 255] << 16) ^
                  (gJ[(l >> 24) & 255] << 24));
              for (let e = a / 2 + 1; e < a; e++) i[e] ^= i[e - 1];
            }
            let e = 0,
              t,
              c;
            for (; e < a && o < n; )
              (t = o >> 2),
                (c = o % 4),
                (gH(this, C, "f")[t][c] = i[e]),
                (gH(this, R, "f")[r - t][c] = i[e++]),
                o++;
          }
          for (let e = 1; e < r; e++)
            for (let t = 0; t < 4; t++)
              (l = gH(this, R, "f")[e][t]),
                (gH(this, R, "f")[e][t] =
                  g8[(l >> 24) & 255] ^
                  g5[(l >> 16) & 255] ^
                  g6[(l >> 8) & 255] ^
                  g9[255 & l]);
        }
      }
      (O = new WeakMap()), (R = new WeakMap()), (C = new WeakMap());
      class bt {
        constructor(e, t, r) {
          if (r && !(this instanceof r))
            throw Error("".concat(e, ' must be instantiated with "new"'));
          Object.defineProperties(this, {
            aes: { enumerable: !0, value: new be(t) },
            name: { enumerable: !0, value: e },
          });
        }
      }
      var br = function (e, t, r, n, a) {
          if ("m" === n) throw TypeError("Private method is not writable");
          if ("a" === n && !a)
            throw TypeError("Private accessor was defined without a setter");
          if ("function" == typeof t ? e !== t || !a : !t.has(e))
            throw TypeError(
              "Cannot write private member to an object whose class did not declare it"
            );
          return "a" === n ? a.call(e, r) : a ? (a.value = r) : t.set(e, r), r;
        },
        bn = function (e, t, r, n) {
          if ("a" === r && !n)
            throw TypeError("Private accessor was defined without a getter");
          if ("function" == typeof t ? e !== t || !n : !t.has(e))
            throw TypeError(
              "Cannot read private member from an object whose class did not declare it"
            );
          return "m" === r ? n : "a" === r ? n.call(e) : n ? n.value : t.get(e);
        };
      class ba extends bt {
        get iv() {
          return new Uint8Array(bn(this, I, "f"));
        }
        encrypt(e) {
          if (e.length % 16)
            throw TypeError(
              "invalid plaintext size (must be multiple of 16 bytes)"
            );
          let t = new Uint8Array(e.length);
          for (let r = 0; r < e.length; r += 16) {
            for (let t = 0; t < 16; t++) bn(this, B, "f")[t] ^= e[r + t];
            br(this, B, this.aes.encrypt(bn(this, B, "f")), "f"),
              t.set(bn(this, B, "f"), r);
          }
          return t;
        }
        decrypt(e) {
          if (e.length % 16)
            throw TypeError(
              "invalid ciphertext size (must be multiple of 16 bytes)"
            );
          let t = new Uint8Array(e.length);
          for (let r = 0; r < e.length; r += 16) {
            let n = this.aes.decrypt(e.subarray(r, r + 16));
            for (let a = 0; a < 16; a++)
              (t[r + a] = n[a] ^ bn(this, B, "f")[a]),
                (bn(this, B, "f")[a] = e[r + a]);
          }
          return t;
        }
        constructor(e, t) {
          if (
            (super("ECC", e, ba), I.set(this, void 0), B.set(this, void 0), t)
          ) {
            if (t.length % 16)
              throw TypeError("invalid iv size (must be 16 bytes)");
            br(this, I, new Uint8Array(t), "f");
          } else br(this, I, new Uint8Array(16), "f");
          br(this, B, this.iv, "f");
        }
      }
      (I = new WeakMap()), (B = new WeakMap());
      new WeakMap(), new WeakMap(), new WeakSet();
      var bi = function (e, t, r, n, a) {
          if ("m" === n) throw TypeError("Private method is not writable");
          if ("a" === n && !a)
            throw TypeError("Private accessor was defined without a setter");
          if ("function" == typeof t ? e !== t || !a : !t.has(e))
            throw TypeError(
              "Cannot write private member to an object whose class did not declare it"
            );
          return "a" === n ? a.call(e, r) : a ? (a.value = r) : t.set(e, r), r;
        },
        bs = function (e, t, r, n) {
          if ("a" === r && !n)
            throw TypeError("Private accessor was defined without a getter");
          if ("function" == typeof t ? e !== t || !n : !t.has(e))
            throw TypeError(
              "Cannot read private member from an object whose class did not declare it"
            );
          return "m" === r ? n : "a" === r ? n.call(e) : n ? n.value : t.get(e);
        };
      class bo extends bt {
        get counter() {
          return new Uint8Array(bs(this, j, "f"));
        }
        setCounterValue(e) {
          if (!Number.isInteger(e) || e < 0 || e > Number.MAX_SAFE_INTEGER)
            throw TypeError("invalid counter initial integer value");
          for (let t = 15; t >= 0; --t)
            (bs(this, j, "f")[t] = e % 256), (e = Math.floor(e / 256));
        }
        setCounterBytes(e) {
          if (16 !== e.length)
            throw TypeError("invalid counter initial Uint8Array value length");
          bs(this, j, "f").set(e);
        }
        increment() {
          for (let e = 15; e >= 0; e--)
            if (255 === bs(this, j, "f")[e]) bs(this, j, "f")[e] = 0;
            else {
              bs(this, j, "f")[e]++;
              break;
            }
        }
        encrypt(e) {
          var t, r;
          let n = new Uint8Array(e);
          for (let e = 0; e < n.length; e++)
            16 === bs(this, M, "f") &&
              (bi(this, U, this.aes.encrypt(bs(this, j, "f")), "f"),
              bi(this, M, 0, "f"),
              this.increment()),
              (n[e] ^= bs(this, U, "f")[
                (bi(this, M, ((r = bs(this, M, "f")), (t = r++), r), "f"), t)
              ]);
          return n;
        }
        decrypt(e) {
          return this.encrypt(e);
        }
        constructor(e, t) {
          super("CTR", e, bo),
            U.set(this, void 0),
            M.set(this, void 0),
            j.set(this, void 0),
            bi(this, j, new Uint8Array(16), "f"),
            bs(this, j, "f").fill(0),
            bi(this, U, bs(this, j, "f"), "f"),
            bi(this, M, 16, "f"),
            null == t && (t = 1),
            "number" == typeof t
              ? this.setCounterValue(t)
              : this.setCounterBytes(t);
        }
      }
      function bl(e) {
        return (
          "string" != typeof e || e.startsWith("0x") || (e = "0x" + e), nw(e)
        );
      }
      function bc(e, t) {
        for (e = String(e); e.length < t; ) e = "0" + e;
        return e;
      }
      function bu(e) {
        return "string" == typeof e ? nU(e, "NFKC") : nw(e);
      }
      function bd(e, t) {
        let r = t.match(/^([a-z0-9$_.-]*)(:([a-z]+))?(!)?$/i);
        nh(null != r, "invalid path", "path", t);
        let n = r[1],
          a = r[3],
          i = "!" === r[4],
          s = e;
        for (let e of n.toLowerCase().split(".")) {
          if (Array.isArray(s)) {
            if (!e.match(/^[0-9]+$/)) break;
            s = s[parseInt(e)];
          } else if ("object" == typeof s) {
            let t = null;
            for (let r in s)
              if (r.toLowerCase() === e) {
                t = s[r];
                break;
              }
            s = t;
          } else s = null;
          if (null == s) break;
        }
        if (
          (nh(!i || null != s, "missing required value", "path", n),
          a && null != s)
        ) {
          if ("int" === a) {
            if ("string" == typeof s && s.match(/^-?[0-9]+$/))
              return parseInt(s);
            else if (Number.isSafeInteger(s)) return s;
          }
          if ("number" === a && "string" == typeof s && s.match(/^-?[0-9.]*$/))
            return parseFloat(s);
          if ("data" === a && "string" == typeof s) return bl(s);
          if (("array" === a && Array.isArray(s)) || a === typeof s) return s;
          nh(!1, "wrong type found for ".concat(a, " "), "path", n);
        }
        return s;
      }
      (U = new WeakMap()),
        (M = new WeakMap()),
        (j = new WeakMap()),
        new WeakMap(),
        new WeakMap(),
        new WeakMap();
      let bf = "m/44'/60'/0'/0/0";
      function bh(e) {
        try {
          let t = JSON.parse(e),
            r = null != t.version ? parseInt(t.version) : 0;
          if (3 === r) return !0;
        } catch (e) {}
        return !1;
      }
      function bp(e, t) {
        let r = ny(t),
          n = bd(e, "crypto.ciphertext:data!");
        nh(
          n_(a1(nk([r.slice(16, 32), n]))).substring(2) ===
            bd(e, "crypto.mac:string!").toLowerCase(),
          "incorrect password",
          "password",
          "[ REDACTED ]"
        );
        let a = (function (e, t, r) {
            if ("aes-128-ctr" === bd(e, "crypto.cipher:string"))
              return n_(
                new bo(t, bd(e, "crypto.cipherparams.iv:data!")).decrypt(r)
              );
            nf(!1, "unsupported cipher", "UNSUPPORTED_OPERATION", {
              operation: "decrypt",
            });
          })(e, r.slice(0, 16), n),
          i = uF(a);
        if (e.address) {
          let t = e.address.toLowerCase();
          t.startsWith("0x") || (t = "0x" + t),
            nh(
              a9(t) === i,
              "keystore address/privateKey mismatch",
              "address",
              e.address
            );
        }
        let s = { address: i, privateKey: a };
        if ("0.1" === bd(e, "x-ethers.version:string")) {
          let t = r.slice(32, 64),
            n = bd(e, "x-ethers.mnemonicCiphertext:data!"),
            a = new bo(t, bd(e, "x-ethers.mnemonicCounter:data!"));
          s.mnemonic = {
            path: bd(e, "x-ethers.path:string") || bf,
            locale: bd(e, "x-ethers.locale:string") || "en",
            entropy: n_(ny(a.decrypt(n))),
          };
        }
        return s;
      }
      function bx(e) {
        let t = bd(e, "crypto.kdf:string");
        if (t && "string" == typeof t) {
          if ("scrypt" === t.toLowerCase()) {
            let r = bd(e, "crypto.kdfparams.salt:data!"),
              n = bd(e, "crypto.kdfparams.n:int!"),
              a = bd(e, "crypto.kdfparams.r:int!"),
              i = bd(e, "crypto.kdfparams.p:int!");
            nh(n > 0 && (n & (n - 1)) == 0, "invalid kdf.N", "kdf.N", n),
              nh(a > 0 && i > 0, "invalid kdf", "kdf", t);
            let s = bd(e, "crypto.kdfparams.dklen:int!");
            return (
              nh(32 === s, "invalid kdf.dklen", "kdf.dflen", s),
              { name: "scrypt", salt: r, N: n, r: a, p: i, dkLen: 64 }
            );
          } else if ("pbkdf2" === t.toLowerCase()) {
            let t = bd(e, "crypto.kdfparams.salt:data!"),
              r = bd(e, "crypto.kdfparams.prf:string!"),
              n = r.split("-").pop();
            nh(
              "sha256" === n || "sha512" === n,
              "invalid kdf.pdf",
              "kdf.pdf",
              r
            );
            let a = bd(e, "crypto.kdfparams.c:int!"),
              i = bd(e, "crypto.kdfparams.dklen:int!");
            return (
              nh(32 === i, "invalid kdf.dklen", "kdf.dklen", i),
              { name: "pbkdf2", salt: t, count: a, dkLen: i, algorithm: n }
            );
          }
        }
        nh(!1, "unsupported key-derivation function", "kdf", t);
      }
      function bg(e, t) {
        let r = JSON.parse(e),
          n = bu(t),
          a = bx(r);
        if ("pbkdf2" === a.name) {
          let { salt: e, count: t, dkLen: i, algorithm: s } = a;
          return bp(r, lj(n, e, t, i, s));
        }
        nf("scrypt" === a.name, "cannot be reached", "UNKNOWN_ERROR", {
          params: a,
        });
        let { salt: i, N: s, r: o, p: l, dkLen: c } = a;
        return bp(r, lY(n, i, s, o, l, c));
      }
      function bb(e) {
        return new Promise((t) => {
          setTimeout(() => {
            t();
          }, e);
        });
      }
      async function bm(e, t, r) {
        let n = JSON.parse(e),
          a = bu(t),
          i = bx(n);
        if ("pbkdf2" === i.name) {
          r && (r(0), await bb(0));
          let { salt: e, count: t, dkLen: s, algorithm: o } = i,
            l = lj(a, e, t, s, o);
          return r && (r(1), await bb(0)), bp(n, l);
        }
        nf("scrypt" === i.name, "cannot be reached", "UNKNOWN_ERROR", {
          params: i,
        });
        let { salt: s, N: o, r: l, p: c, dkLen: u } = i;
        return bp(n, await lZ(a, s, o, l, c, u, r));
      }
      function by(e) {
        let t = null != e.salt ? ny(e.salt, "options.salt") : ls(32),
          r = 131072,
          n = 8,
          a = 1;
        return (
          e.scrypt &&
            (e.scrypt.N && (r = e.scrypt.N),
            e.scrypt.r && (n = e.scrypt.r),
            e.scrypt.p && (a = e.scrypt.p)),
          nh(
            "number" == typeof r &&
              r > 0 &&
              Number.isSafeInteger(r) &&
              (BigInt(r) & BigInt(r - 1)) === BigInt(0),
            "invalid scrypt N parameter",
            "options.N",
            r
          ),
          nh(
            "number" == typeof n && n > 0 && Number.isSafeInteger(n),
            "invalid scrypt r parameter",
            "options.r",
            n
          ),
          nh(
            "number" == typeof a && a > 0 && Number.isSafeInteger(a),
            "invalid scrypt p parameter",
            "options.p",
            a
          ),
          { name: "scrypt", dkLen: 32, salt: t, N: r, r: n, p: a }
        );
      }
      function bw(e, t, r, n) {
        let a = ny(r.privateKey, "privateKey"),
          i = null != n.iv ? ny(n.iv, "options.iv") : ls(16);
        nh(16 === i.length, "invalid options.iv length", "options.iv", n.iv);
        let s = null != n.uuid ? ny(n.uuid, "options.uuid") : ls(16);
        nh(
          16 === s.length,
          "invalid options.uuid length",
          "options.uuid",
          n.iv
        );
        let o = e.slice(0, 16),
          l = e.slice(16, 32),
          c = ny(new bo(o, i).encrypt(a)),
          u = a1(nk([l, c])),
          d = {
            address: r.address.substring(2).toLowerCase(),
            id: g_(s),
            version: 3,
            Crypto: {
              cipher: "aes-128-ctr",
              cipherparams: { iv: n_(i).substring(2) },
              ciphertext: n_(c).substring(2),
              kdf: "scrypt",
              kdfparams: {
                salt: n_(t.salt).substring(2),
                n: t.N,
                dklen: 32,
                p: t.p,
                r: t.r,
              },
              mac: u.substring(2),
            },
          };
        if (r.mnemonic) {
          let t = null != n.client ? n.client : "ethers/".concat(ni),
            a = r.mnemonic.path || bf,
            i = r.mnemonic.locale || "en",
            s = e.slice(32, 64),
            o = ny(r.mnemonic.entropy, "account.mnemonic.entropy"),
            l = ls(16),
            c = ny(new bo(s, l).encrypt(o)),
            u = new Date(),
            f =
              "UTC--" +
              (u.getUTCFullYear() +
                "-" +
                bc(u.getUTCMonth() + 1, 2) +
                "-" +
                bc(u.getUTCDate(), 2) +
                "T" +
                bc(u.getUTCHours(), 2) +
                "-" +
                bc(u.getUTCMinutes(), 2) +
                "-" +
                bc(u.getUTCSeconds(), 2)) +
              ".0Z--" +
              d.address;
          d["x-ethers"] = {
            client: t,
            gethFilename: f,
            path: a,
            locale: i,
            mnemonicCounter: n_(l).substring(2),
            mnemonicCiphertext: n_(c).substring(2),
            version: "0.1",
          };
        }
        return JSON.stringify(d);
      }
      function bv(e, t, r) {
        null == r && (r = {});
        let n = bu(t),
          a = by(r);
        return bw(ny(lY(n, a.salt, a.N, a.r, a.p, 64)), a, e, r);
      }
      async function bA(e, t, r) {
        null == r && (r = {});
        let n = bu(t),
          a = by(r);
        return bw(
          ny(await lZ(n, a.salt, a.N, a.r, a.p, 64, r.progressCallback)),
          a,
          e,
          r
        );
      }
      let bE = "m/44'/60'/0'/0/0",
        b_ = new Uint8Array([
          66, 105, 116, 99, 111, 105, 110, 32, 115, 101, 101, 100,
        ]),
        bk = BigInt(
          "0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"
        );
      function bN(e, t) {
        let r = "";
        for (; e; )
          (r = "0123456789abcdef"[e % 16] + r), (e = Math.trunc(e / 16));
        for (; r.length < 2 * t; ) r = "0" + r;
        return "0x" + r;
      }
      function bP(e) {
        let t = ny(e),
          r = nP(lC(lC(t)), 0, 4);
        return fq(nk([t, r]));
      }
      let bT = {};
      function bS(e, t, r, n) {
        let a = new Uint8Array(37);
        0x80000000 & e
          ? (nf(
              null != n,
              "cannot derive child of neutered node",
              "UNSUPPORTED_OPERATION",
              { operation: "deriveChild" }
            ),
            a.set(ny(n), 1))
          : a.set(ny(r));
        for (let t = 24; t >= 0; t -= 8)
          a[33 + (t >> 3)] = (e >> (24 - t)) & 255;
        let i = ny(lr("sha512", t, a));
        return { IL: i.slice(0, 32), IR: i.slice(32) };
      }
      function bO(e, t) {
        let r = t.split("/");
        nh(r.length > 0, "invalid path", "path", t),
          "m" === r[0] &&
            (nh(
              0 === e.depth,
              'cannot derive root path (i.e. path starting with "m/") for a node at non-zero depth '.concat(
                e.depth
              ),
              "path",
              t
            ),
            r.shift());
        let n = e;
        for (let e = 0; e < r.length; e++) {
          let t = r[e];
          if (t.match(/^[0-9]+'$/)) {
            let r = parseInt(t.substring(0, t.length - 1));
            nh(r < 0x80000000, "invalid path index", "path[".concat(e, "]"), t),
              (n = n.deriveChild(0x80000000 + r));
          } else if (t.match(/^[0-9]+$/)) {
            let r = parseInt(t);
            nh(r < 0x80000000, "invalid path index", "path[".concat(e, "]"), t),
              (n = n.deriveChild(r));
          } else nh(!1, "invalid path component", "path[".concat(e, "]"), t);
        }
        return n;
      }
      var bR = new WeakSet();
      class bC extends gV {
        connect(e) {
          return new bC(
            bT,
            this.signingKey,
            this.parentFingerprint,
            this.chainCode,
            this.path,
            this.index,
            this.depth,
            this.mnemonic,
            e
          );
        }
        async encrypt(e, t) {
          return await bA((0, tn._)(this, bR, bI).call(this), e, {
            progressCallback: t,
          });
        }
        encryptSync(e) {
          return bv((0, tn._)(this, bR, bI).call(this), e);
        }
        get extendedKey() {
          return (
            nf(this.depth < 256, "Depth too deep", "UNSUPPORTED_OPERATION", {
              operation: "extendedKey",
            }),
            bP(
              nk([
                "0x0488ADE4",
                bN(this.depth, 1),
                this.parentFingerprint,
                bN(this.index, 4),
                this.chainCode,
                nk(["0x00", this.privateKey]),
              ])
            )
          );
        }
        hasPath() {
          return null != this.path;
        }
        neuter() {
          return new bU(
            bT,
            this.address,
            this.publicKey,
            this.parentFingerprint,
            this.chainCode,
            this.path,
            this.index,
            this.depth,
            this.provider
          );
        }
        deriveChild(e) {
          let t = nJ(e, "index");
          nh(t <= 0xffffffff, "invalid index", "index", t);
          let r = this.path;
          r && ((r += "/" + (0x7fffffff & t)), 0x80000000 & t && (r += "'"));
          let { IR: n, IL: a } = bS(
            t,
            this.chainCode,
            this.publicKey,
            this.privateKey
          );
          return new bC(
            bT,
            new ur(nY((nQ(a) + BigInt(this.privateKey)) % bk, 32)),
            this.fingerprint,
            n_(n),
            r,
            t,
            this.depth + 1,
            this.mnemonic,
            this.provider
          );
        }
        derivePath(e) {
          return bO(this, e);
        }
        static fromExtendedKey(e) {
          let t = nX(fQ(e));
          nh(
            82 === t.length || bP(t.slice(0, 78)) === e,
            "invalid extended key",
            "extendedKey",
            "[ REDACTED ]"
          );
          let r = t[4],
            n = n_(t.slice(5, 9)),
            a = parseInt(n_(t.slice(9, 13)).substring(2), 16),
            i = n_(t.slice(13, 45)),
            s = t.slice(45, 78);
          switch (n_(t.slice(0, 4))) {
            case "0x0488b21e":
            case "0x043587cf": {
              let e = n_(s);
              return new bU(bT, uF(e), e, n, i, null, a, r, null);
            }
            case "0x0488ade4":
            case "0x04358394 ":
              if (0 !== s[0]) break;
              return new bC(
                bT,
                new ur(s.slice(1)),
                n,
                i,
                null,
                a,
                r,
                null,
                null
              );
          }
          nh(!1, "invalid extended key prefix", "extendedKey", "[ REDACTED ]");
        }
        static createRandom(e, t, r) {
          null == e && (e = ""),
            null == t && (t = bE),
            null == r && (r = gj.wordlist());
          let n = gG.fromEntropy(ls(16), e, r);
          return (0, fG._)(bC, bC, bB)
            .call(bC, n.computeSeed(), n)
            .derivePath(t);
        }
        static fromMnemonic(e, t) {
          return (
            t || (t = bE),
            (0, fG._)(bC, bC, bB).call(bC, e.computeSeed(), e).derivePath(t)
          );
        }
        static fromPhrase(e, t, r, n) {
          null == t && (t = ""),
            null == r && (r = bE),
            null == n && (n = gj.wordlist());
          let a = gG.fromPhrase(e, t, n);
          return (0, fG._)(bC, bC, bB)
            .call(bC, a.computeSeed(), a)
            .derivePath(r);
        }
        static fromSeed(e) {
          return (0, fG._)(bC, bC, bB).call(bC, e, null);
        }
        constructor(e, t, r, n, a, i, s, o, l) {
          super(t, l),
            (0, ta._)(this, bR),
            (0, eU._)(this, "publicKey", void 0),
            (0, eU._)(this, "fingerprint", void 0),
            (0, eU._)(this, "parentFingerprint", void 0),
            (0, eU._)(this, "mnemonic", void 0),
            (0, eU._)(this, "chainCode", void 0),
            (0, eU._)(this, "path", void 0),
            (0, eU._)(this, "index", void 0),
            (0, eU._)(this, "depth", void 0),
            nb(e, bT, "HDNodeWallet"),
            no(this, { publicKey: t.compressedPublicKey }),
            no(this, {
              parentFingerprint: r,
              fingerprint: nP(lk(lC(this.publicKey)), 0, 4),
              chainCode: n,
              path: a,
              index: i,
              depth: s,
            }),
            no(this, { mnemonic: o });
        }
      }
      function bI() {
        let e = { address: this.address, privateKey: this.privateKey },
          t = this.mnemonic;
        return (
          this.path &&
            t &&
            "en" === t.wordlist.locale &&
            "" === t.password &&
            (e.mnemonic = {
              path: this.path,
              locale: "en",
              entropy: t.entropy,
            }),
          e
        );
      }
      function bB(e, t) {
        nh(nA(e), "invalid seed", "seed", "[REDACTED]");
        let r = ny(e, "seed");
        nh(
          r.length >= 16 && r.length <= 64,
          "invalid seed",
          "seed",
          "[REDACTED]"
        );
        let n = ny(lr("sha512", b_, r));
        return new bC(
          bT,
          new ur(n_(n.slice(0, 32))),
          "0x00000000",
          n_(n.slice(32)),
          "m",
          0,
          0,
          t,
          null
        );
      }
      class bU extends pf {
        connect(e) {
          return new bU(
            bT,
            this.address,
            this.publicKey,
            this.parentFingerprint,
            this.chainCode,
            this.path,
            this.index,
            this.depth,
            e
          );
        }
        get extendedKey() {
          return (
            nf(this.depth < 256, "Depth too deep", "UNSUPPORTED_OPERATION", {
              operation: "extendedKey",
            }),
            bP(
              nk([
                "0x0488B21E",
                bN(this.depth, 1),
                this.parentFingerprint,
                bN(this.index, 4),
                this.chainCode,
                this.publicKey,
              ])
            )
          );
        }
        hasPath() {
          return null != this.path;
        }
        deriveChild(e) {
          let t = nJ(e, "index");
          nh(t <= 0xffffffff, "invalid index", "index", t);
          let r = this.path;
          r && ((r += "/" + (0x7fffffff & t)), 0x80000000 & t && (r += "'"));
          let { IR: n, IL: a } = bS(t, this.chainCode, this.publicKey, null),
            i = ur.addPoints(a, this.publicKey, !0);
          return new bU(
            bT,
            uF(i),
            i,
            this.fingerprint,
            n_(n),
            r,
            t,
            this.depth + 1,
            this.provider
          );
        }
        derivePath(e) {
          return bO(this, e);
        }
        constructor(e, t, r, n, a, i, s, o, l) {
          super(t, l),
            (0, eU._)(this, "publicKey", void 0),
            (0, eU._)(this, "fingerprint", void 0),
            (0, eU._)(this, "parentFingerprint", void 0),
            (0, eU._)(this, "chainCode", void 0),
            (0, eU._)(this, "path", void 0),
            (0, eU._)(this, "index", void 0),
            (0, eU._)(this, "depth", void 0),
            nb(e, bT, "HDNodeVoidWallet"),
            no(this, { publicKey: r });
          let c = nP(lk(lC(r)), 0, 4);
          no(this, {
            publicKey: r,
            fingerprint: c,
            parentFingerprint: n,
            chainCode: a,
            path: i,
            index: s,
            depth: o,
          });
        }
      }
      function bM(e) {
        let t = nJ(e, "index");
        return (
          nh(t >= 0 && t < 0x80000000, "invalid account index", "index", t),
          "m/44'/60'/".concat(t, "'/0/0")
        );
      }
      function bj(e) {
        let t = nJ(e, "index");
        return (
          nh(t >= 0 && t < 0x80000000, "invalid account index", "index", t),
          "m/44'/60'/0'/0/".concat(t)
        );
      }
      function bF(e) {
        try {
          if (JSON.parse(e).encseed) return !0;
        } catch (e) {}
        return !1;
      }
      function bD(e, t) {
        let r = JSON.parse(e),
          n = bu(t),
          a = a9(bd(r, "ethaddr:string!")),
          i = bl(bd(r, "encseed:string!"));
        nh(i && i.length % 16 == 0, "invalid encseed", "json", e);
        let s = ny(lj(n, n, 2e3, 32, "sha256")).slice(0, 16),
          o = i.slice(0, 16),
          l = i.slice(16),
          c = (function (e) {
            if (e.length < 16) throw TypeError("PKCS#7 invalid length");
            let t = e[e.length - 1];
            if (t > 16) throw TypeError("PKCS#7 padding byte out of range");
            let r = e.length - t;
            for (let n = 0; n < t; n++)
              if (e[r + n] !== t)
                throw TypeError("PKCS#7 invalid padding byte");
            return new Uint8Array(e.subarray(0, r));
          })(ny(new ba(s, o).decrypt(l))),
          u = "";
        for (let e = 0; e < c.length; e++) u += String.fromCharCode(c[e]);
        return { address: a, privateKey: iN(u) };
      }
      function bL(e) {
        return new Promise((t) => {
          setTimeout(() => {
            t();
          }, e);
        });
      }
      class bz extends gV {
        connect(e) {
          return new bz(this.signingKey, e);
        }
        async encrypt(e, t) {
          let r = { address: this.address, privateKey: this.privateKey };
          return await bA(r, e, { progressCallback: t });
        }
        encryptSync(e) {
          return bv({ address: this.address, privateKey: this.privateKey }, e);
        }
        static async fromEncryptedJson(e, t, r) {
          let n = null;
          return (
            bh(e)
              ? (n = await bm(e, t, r))
              : bF(e) &&
                (r && (r(0), await bL(0)),
                (n = bD(e, t)),
                r && (r(1), await bL(0))),
            (0, fG._)(bz, bz, bG).call(bz, n)
          );
        }
        static fromEncryptedJsonSync(e, t) {
          let r = null;
          return (
            bh(e)
              ? (r = bg(e, t))
              : bF(e)
              ? (r = bD(e, t))
              : nh(!1, "invalid JSON wallet", "json", "[ REDACTED ]"),
            (0, fG._)(bz, bz, bG).call(bz, r)
          );
        }
        static createRandom(e) {
          let t = bC.createRandom();
          return e ? t.connect(e) : t;
        }
        static fromPhrase(e, t) {
          let r = bC.fromPhrase(e);
          return t ? r.connect(t) : r;
        }
        constructor(e, t) {
          "string" != typeof e || e.startsWith("0x") || (e = "0x" + e),
            super("string" == typeof e ? new ur(e) : e, t);
        }
      }
      function bG(e) {
        if (
          (nh(e, "invalid JSON wallet", "json", "[ REDACTED ]"),
          "mnemonic" in e && e.mnemonic && "en" === e.mnemonic.locale)
        ) {
          let t = gG.fromEntropy(e.mnemonic.entropy),
            r = bC.fromMnemonic(t, e.mnemonic.path);
          if (r.address === e.address && r.privateKey === e.privateKey)
            return r;
          console.log(
            "WARNING: JSON mismatch address/privateKey != mnemonic; fallback onto private key"
          );
        }
        let t = new bz(e.privateKey);
        return (
          nh(
            t.address === e.address,
            "address/privateKey mismatch",
            "json",
            "[ REDACTED ]"
          ),
          t
        );
      }
      var bW = new WeakMap();
      class bV extends gB {
        get _accent() {
          return (0, te._)(this, bW);
        }
        _decodeWords() {
          var e, t;
          let r;
          return (
            (e = this._data),
            (t = this._accent),
            (r = gT(e).join(",")),
            t.split(/,/g).forEach((e) => {
              let n = e.match(/^([a-z]*)([0-9]+)([0-9])(.*)$/);
              nh(null !== n, "internal error parsing accents", "accents", t);
              let a = 0,
                i = (function (e, t) {
                  let r = (1 << e) - 1,
                    n = [],
                    a = 0,
                    i = 0,
                    s = 0;
                  for (let o = 0; o < t.length; o++)
                    for (
                      a =
                        (a << 6) |
                        ")!@#$%^&*(ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_".indexOf(
                          t[o]
                        ),
                        i += 6;
                      i >= e;

                    ) {
                      let t = a >> (i - e);
                      (a &= (1 << (i - e)) - 1),
                        (i -= e),
                        0 === t ? (s += r) : (n.push(t + s), (s = 0));
                    }
                  return n;
                })(parseInt(n[3]), n[4]),
                s = parseInt(n[2]),
                o = RegExp("([".concat(n[1], "])"), "g");
              r = r.replace(
                o,
                (e, t) => (
                  0 == --i[a] &&
                    ((t = String.fromCharCode(t.charCodeAt(0), s)), a++),
                  t
                )
              );
            }),
            r.split(",")
          );
        }
        constructor(e, t, r, n) {
          super(e, t, n),
            (0, tt._)(this, bW, { writable: !0, value: void 0 }),
            (0, tr._)(this, bW, r);
        }
      }
      let bH = { en: gj.wordlist() };
      e.i(976267), e.i(354822), e.i(873033);
      var bK = e.i(292044);
      let bq = {
          ethereum: {
            rpcUrl: bK.chainConfig.rpc.ethereum,
            gasLimit: 6e4,
            chainId: 1,
            nativeToken: "ETH",
            minimumSendAmount: 0,
            additionalTokenConfig: {
              USDT: {
                tokenAddress: "0xdAC17F958D2ee523a2206206994597C13D831ec7",
                tokenDecimals: 6,
              },
              USDC: {
                tokenAddress: "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",
                tokenDecimals: 6,
              },
            },
          },
          bsc: {
            rpcUrl: bK.chainConfig.rpc.bsc,
            gasLimit: 6e4,
            chainId: 56,
            nativeToken: "BNB",
            minimumSendAmount: 0,
            additionalTokenConfig: {},
          },
          solana: {
            rpcUrl: bK.chainConfig.rpc.solana,
            baseFee: 5e-6,
            chainId: 101,
            nativeToken: "SOL",
            minimumSendAmount: 0.001,
            additionalTokenConfig: {
              USDC: {
                tokenAddress: "EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v",
                tokenDecimals: 6,
              },
            },
          },
        },
        bQ = function () {
          let { onSuccess: t } =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {},
            [r, n] = (0, L.useState)(!1),
            { state: a } = (0, z.usePresaleContext)(),
            {
              address: i,
              isConnected: s,
              network: o,
              walletName: l,
            } = (0, G.useWalletProvider)(),
            { sendTransaction: c } = (function () {
              var e;
              let t =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {},
                { mutation: r } = t,
                n =
                  ((e = (function () {
                    var e;
                    let t =
                        arguments.length > 0 && void 0 !== arguments[0]
                          ? arguments[0]
                          : {},
                      r =
                        null != (e = t.config)
                          ? e
                          : (0, L.useContext)(tp.WagmiContext);
                    if (!r) throw new tb();
                    return r;
                  })(t)),
                  {
                    mutationFn: (t) => (0, th.sendTransaction)(e, t),
                    mutationKey: ["sendTransaction"],
                  }),
                {
                  mutate: a,
                  mutateAsync: i,
                  ...s
                } = (function (e, t) {
                  let r = (0, tf.useQueryClient)(void 0),
                    [n] = L.useState(() => new tc(r, e));
                  L.useEffect(() => {
                    n.setOptions(e);
                  }, [n, e]);
                  let a = L.useSyncExternalStore(
                      L.useCallback(
                        (e) => n.subscribe(ts.notifyManager.batchCalls(e)),
                        [n]
                      ),
                      () => n.getCurrentResult(),
                      () => n.getCurrentResult()
                    ),
                    i = L.useCallback(
                      (e, t) => {
                        n.mutate(e, t).catch(tl.noop);
                      },
                      [n]
                    );
                  if (
                    a.error &&
                    (0, tl.shouldThrowError)(n.options.throwOnError, [a.error])
                  )
                    throw a.error;
                  return { ...a, mutate: i, mutateAsync: a.mutate };
                })({ ...r, ...n });
              return { ...s, sendTransaction: a, sendTransactionAsync: i };
            })(),
            { connection: u } = (0, e6.useConnection)(),
            { signTransaction: d, sendTransaction: f } = (0, e9.useWallet)(),
            h = (e) => {
              var r, s, o;
              let {
                paymentMethod: c,
                payAmount: u,
                transactionId: d,
                tokenPrice: f,
                tokenQuantity: h,
              } = e;
              n(!1),
                null == t || t(),
                (r = {
                  walletName: l || "unknown",
                  walletAddress: i,
                  swapFromCurrency: c.name,
                  swapFromValue: u.toString(),
                  swapToCurrency: a.tokenSymbol,
                  swapToValue: h.toString(),
                  transactionId: d,
                  tokenPrice: f.toString(),
                }),
                (0, ei.sendEvent)(ea.EVENT_NAMES.WORKFLOW_STEP, {
                  workflowName: ea.WORKFLOW_NAMES.SWAP,
                  workflowStepNumber: 3,
                  workflowStepName: ea.WORKFLOW_STEPS.SWAP_SUCCESS,
                  workflowCompleteFlag: 1,
                  transactionId: r.transactionId,
                  walletName: r.walletName,
                  walletAddress: r.walletAddress,
                  swapFromCurrency: r.swapFromCurrency,
                  swapFromValue: r.swapFromValue,
                  swapToCurrency: r.swapToCurrency,
                  swapToValue: r.swapToValue,
                  workflowErrorCode: null != (s = r.workflowErrorCode) ? s : 0,
                  tokenPrice: r.tokenPrice,
                }),
                (o = {
                  transactionId: d,
                  value: f * h,
                  currency: c.name,
                  swapToCurrency: a.tokenSymbol,
                  swapFromCurrency: c.name,
                  swapId: a.tokenSymbol + "_" + c.name,
                  price: f,
                  quantity: h,
                }),
                (0, ei.sendEvent)(ea.EVENT_NAMES.PURCHASE, {
                  ecommerce: {
                    transaction_id: o.transactionId,
                    value: o.value,
                    currency: "USD",
                    items: [
                      {
                        item_name: o.swapToCurrency,
                        item_brand: o.swapFromCurrency,
                        item_id: o.swapId,
                        price: o.price,
                        quantity: o.quantity,
                      },
                    ],
                  },
                });
            },
            p = async (t) => {
              let { paymentMethod: r, payAmount: a } = t;
              if (!s || !i || !c)
                return (
                  console.error(
                    "Wallet not connected or transaction hook not available"
                  ),
                  !1
                );
              n(!0);
              try {
                if (r.isNative)
                  return new Promise((e) => {
                    c(
                      {
                        to: r.address,
                        value: (0, e7.parseEther)(a.toString()),
                        data: "0x",
                      },
                      {
                        onSuccess: (r) => {
                          console.log("Transaction sent successfully:", r),
                            h({ ...t, transactionId: r }),
                            e(!0);
                        },
                        onError: (t) => {
                          console.error("Transaction failed:", t), n(!1), e(!1);
                        },
                        onSettled: () => {
                          n(!1);
                        },
                      }
                    );
                  });
                {
                  let i,
                    { encodeFunctionData: s } = await e.r(575612)(e.i),
                    o = r.tokenDecimals || 18,
                    l = a.toString();
                  if (l.includes(".")) {
                    let [e, t = ""] = l.split("."),
                      r = t.padEnd(o, "0").slice(0, o);
                    i = BigInt(e + r);
                  } else i = BigInt(l) * BigInt(10 ** o);
                  let u = s({
                      abi: [
                        {
                          name: "transfer",
                          type: "function",
                          inputs: [
                            { name: "to", type: "address" },
                            { name: "amount", type: "uint256" },
                          ],
                          outputs: [{ name: "", type: "bool" }],
                          stateMutability: "nonpayable",
                        },
                      ],
                      functionName: "transfer",
                      args: [r.address, i],
                    }),
                    d = ((e, t) => {
                      var r;
                      let n = bq[e];
                      if (!n)
                        throw Error(
                          "Network configuration for ".concat(e, " not found")
                        );
                      let a =
                        null == (r = n.additionalTokenConfig)
                          ? void 0
                          : r[t.toUpperCase()];
                      if (!a)
                        throw Error(
                          "Token configuration for "
                            .concat(t, " not found in ")
                            .concat(e)
                        );
                      return a.tokenAddress;
                    })(r.network, r.name);
                  if (!d)
                    return (
                      console.error(
                        "Contract address not found for token transfer"
                      ),
                      n(!1),
                      !1
                    );
                  return new Promise((e) => {
                    c(
                      { to: d, data: u },
                      {
                        onSuccess: (r) => {
                          console.log("Transaction sent successfully:", r),
                            h({ ...t, transactionId: r }),
                            e(!0);
                        },
                        onError: (t) => {
                          console.error("Transaction failed:", t), n(!1), e(!1);
                        },
                        onSettled: () => {
                          n(!1);
                        },
                      }
                    );
                  });
                }
              } catch (e) {
                return console.error("EVM Transaction failed:", e), n(!1), !1;
              }
            },
            x = async (e) => {
              let { paymentMethod: t, payAmount: r } = e;
              if (!s || !i || !u || !d)
                return (
                  console.error(
                    "Wallet not connected or Solana provider not available"
                  ),
                  !1
                );
              n(!0);
              try {
                let n,
                  a = e.paymentMethod.address;
                try {
                  n = new eo.PublicKey(a);
                } catch (e) {
                  throw Error("Invalid recipient address");
                }
                let { blockhash: s } = await u.getLatestBlockhash(),
                  o = new eo.Transaction();
                if (
                  ((o.recentBlockhash = s),
                  (o.feePayer = new eo.PublicKey(i)),
                  t.isNative)
                ) {
                  let e = Math.floor(1e9 * r);
                  o.add(
                    eo.SystemProgram.transfer({
                      fromPubkey: new eo.PublicKey(i),
                      toPubkey: n,
                      lamports: e,
                    })
                  );
                } else {
                  if (!t.tokenAddress)
                    throw Error(
                      "Token address is required for SPL token transfers"
                    );
                  let e = new eo.PublicKey(t.tokenAddress),
                    a = new eo.PublicKey(i),
                    s = await e8(e, a),
                    l = await e8(e, n, !0),
                    c = t.tokenDecimals || 6,
                    u = Math.floor(r * Math.pow(10, c));
                  o.add(
                    (function (e, t, r, n) {
                      let a =
                          arguments.length > 4 && void 0 !== arguments[4]
                            ? arguments[4]
                            : el,
                        i =
                          arguments.length > 5 && void 0 !== arguments[5]
                            ? arguments[5]
                            : ec;
                      return (function (e, t, r, n, a) {
                        let i =
                            arguments.length > 5 && void 0 !== arguments[5]
                              ? arguments[5]
                              : el,
                          s =
                            arguments.length > 6 && void 0 !== arguments[6]
                              ? arguments[6]
                              : ec,
                          o = [
                            { pubkey: e, isSigner: !0, isWritable: !0 },
                            { pubkey: t, isSigner: !1, isWritable: !0 },
                            { pubkey: r, isSigner: !1, isWritable: !1 },
                            { pubkey: n, isSigner: !1, isWritable: !1 },
                            {
                              pubkey: eo.SystemProgram.programId,
                              isSigner: !1,
                              isWritable: !1,
                            },
                            { pubkey: i, isSigner: !1, isWritable: !1 },
                          ];
                        return new eo.TransactionInstruction({
                          keys: o,
                          programId: s,
                          data: a,
                        });
                      })(e, t, r, n, eu.Buffer.from([1]), a, i);
                    })(new eo.PublicKey(i), l, n, e, el, ec)
                  ),
                    o.add(
                      (function (e, t, r, n) {
                        let a =
                            arguments.length > 4 && void 0 !== arguments[4]
                              ? arguments[4]
                              : [],
                          i =
                            arguments.length > 5 && void 0 !== arguments[5]
                              ? arguments[5]
                              : el,
                          s = (function (e, t, r) {
                            if (r.length)
                              for (let n of (e.push({
                                pubkey: t,
                                isSigner: !1,
                                isWritable: !1,
                              }),
                              r))
                                e.push({
                                  pubkey:
                                    n instanceof eo.PublicKey ? n : n.publicKey,
                                  isSigner: !0,
                                  isWritable: !1,
                                });
                            else
                              e.push({
                                pubkey: t,
                                isSigner: !0,
                                isWritable: !1,
                              });
                            return e;
                          })(
                            [
                              { pubkey: e, isSigner: !1, isWritable: !0 },
                              { pubkey: t, isSigner: !1, isWritable: !0 },
                            ],
                            r,
                            a
                          ),
                          o = eu.Buffer.alloc(e5.span);
                        return (
                          e5.encode(
                            { instruction: E.Transfer, amount: BigInt(n) },
                            o
                          ),
                          new eo.TransactionInstruction({
                            keys: s,
                            programId: i,
                            data: o,
                          })
                        );
                      })(s, l, a, u)
                    );
                }
                let l = await f(o, u),
                  c = await u.getSignatureStatus(l);
                return (
                  console.log("Transaction status:", c),
                  console.log("Solana Transaction successful:", l),
                  h({ ...e, transactionId: l }),
                  !0
                );
              } catch (e) {
                return (
                  console.error("Solana Transaction failed:", e), n(!1), !1
                );
              }
            };
          return {
            handleTransaction: async (e) => {
              let t;
              return (
                !!s &&
                !r &&
                ((t =
                  "solana" === (null == o ? void 0 : o.toLowerCase())
                    ? await x(e)
                    : await p(e)),
                (document.body.style.overflow = ""),
                (document.documentElement.style.overflow = ""),
                t)
              );
            },
            transactionLoading: r,
          };
        },
        bJ = {
          NO_PAYMENT_METHOD: "NO_PAYMENT_METHOD",
          INSUFFICIENT_TOKEN_BALANCE: "INSUFFICIENT_TOKEN_BALANCE",
          INSUFFICIENT_GAS: "INSUFFICIENT_GAS",
          BELOW_MINIMUM_AMOUNT: "BELOW_MINIMUM_AMOUNT",
          AMOUNT_TOO_LOW: "AMOUNT_TOO_LOW",
        };
      var bZ = e.i(28961),
        bY = e.i(905170),
        bX = e.i(107906);
      let b$ = (e) => {
          let { ...t } = e,
            r = (0, J.useTranslations)("dapp.success");
          return (0, F.jsxs)(bY.Dialog, {
            ...t,
            children: [
              (0, F.jsx)(bY.DialogOverlay, {
                className:
                  "fixed inset-0 bg-black/50 backdrop-blur-sm z-50 animate-in fade-in-0",
              }),
              (0, F.jsx)(bY.DialogTitle, {
                className: "sr-only",
                children: r.rich("title", bZ.richText),
              }),
              (0, F.jsx)(bY.DialogContent, {
                className:
                  "fixed left-1/2 top-1/2 z-50 w-full max-w-[640px] -translate-x-1/2 -translate-y-1/2 animate-in fade-in-0 zoom-in-95 slide-in-from-left-1/2 slide-in-from-top-[48%] bg-blue border-[3px] border-black rounded",
                children: (0, F.jsxs)("div", {
                  className: "relative p-8 overflow-hidden text-black",
                  children: [
                    (0, F.jsxs)(bY.DialogClose, {
                      className:
                        "absolute right-0 top-0 p-2 text-black hover:text-primary cursor-pointer",
                      children: [
                        (0, F.jsx)(bX.FaTimes, { size: 20 }),
                        (0, F.jsx)("span", {
                          className: "sr-only",
                          children: "Close",
                        }),
                      ],
                    }),
                    (0, F.jsxs)("div", {
                      className: "text-center",
                      children: [
                        (0, F.jsx)("div", {
                          className: "font-bold text-xl uppercase mb-2",
                          children: r.rich("title", bZ.richText),
                        }),
                        (0, F.jsx)("div", {
                          className: "text-base",
                          children: r("content"),
                        }),
                      ],
                    }),
                  ],
                }),
              }),
            ],
          });
        },
        b0 = (e) => {
          let {
              className: t,
              autosize: r,
              startAdornment: n,
              endAdornment: a,
              loading: i,
              value: s,
              inputClassName: o,
              minWidth: l = 50,
              ...c
            } = e,
            [u, d] = (0, L.useState)(30),
            f = (0, L.useRef)(null),
            h = (0, L.useRef)(null),
            p = (e) => {
              if (r && f.current && h.current) {
                let t = f.current;
                (t.textContent = e || c.placeholder || "W"),
                  d(Math.max(t.scrollWidth, l));
              }
            };
          return (
            (0, L.useEffect)(() => {
              r && p(s || "");
            }, [s, r]),
            (0, F.jsxs)("div", {
              className: (0, q.cn)(
                "flex items-center justify-between bg-transparent p-0 h-[39px] gap-2 overflow-hidden",
                t
              ),
              children: [
                i && (0, F.jsx)(et, { className: "animate-spin" }),
                !i && n,
                (0, F.jsx)("input", {
                  ref: h,
                  type: "tel",
                  required: !0,
                  className: (0, q.cn)(
                    "font-yuanmo font-black text-[30px] lg:text-[36px] active:outline-none focus:outline-none",
                    o
                  ),
                  value: i ? "" : s,
                  disabled: i,
                  onChange: (e) => {
                    r && p(e.target.value), c.onChange && c.onChange(e);
                  },
                  style: r ? { width: "".concat(u, "px") } : {},
                  ...c,
                }),
                !i && a,
                r &&
                  (0, F.jsx)("span", {
                    ref: f,
                    className: (0, q.cn)(
                      "fixed invisible whitespace-nowrap text-lg",
                      o
                    ),
                    style: {
                      top: "-9999px",
                      left: "-9999px",
                      pointerEvents: "none",
                    },
                  }),
              ],
            })
          );
        };
      var b1 = e.i(113029),
        b2 = e.i(824734),
        b3 = e.i(513546);
      let b4 = (e) => {
          let {
            symbol: t,
            variant: r = "default",
            size: n = 24,
            className: a,
          } = e;
          return "SOL" === t
            ? (0, F.jsx)(Z.default, {
                src: "/tokens/solana.svg",
                alt: "Solana Token",
                width: n,
                height: n,
                className: a,
              })
            : (0, F.jsx)(b3.TokenIcon, {
                symbol: t,
                variant: r,
                size: n,
                className: a,
              });
        },
        b8 = (e) => {
          let { className: t, ...r } = e,
            n = (0, J.useTranslations)("dapp"),
            { selectedPaymentMethod: a } = (0, G.useWalletProvider)(),
            { state: i } = (0, z.usePresaleContext)();
          return (0, F.jsxs)("button", {
            type: "button",
            className: (0, q.cn)(
              "rounded group flex items-center justify-center font-bold text-[15px] bg-black text-white px-2 lg:px-3 h-[36px] lg:h-[44px] gap-3 cursor-pointer hover:bg-brightness-110 hover:text-primary",
              t
            ),
            onClick: () => {
              i.isComingSoon || b1.eventBus.emit("payment-method-dialog:show");
            },
            ...r,
            children: [
              !a &&
                (0, F.jsx)("div", {
                  className:
                    "text-sm font-semibold uppercase whitespace-nowrap",
                  children: n("selectPaymentMethod"),
                }),
              (0, F.jsx)(b4, {
                symbol: a.name,
                variant: "branded",
                size: 24,
                className: "block",
              }),
              a.name,
              (0, F.jsx)(b2.FaArrowDown, {}),
            ],
          });
        },
        b5 = (e) => {
          var t;
          let { className: r, ...n } = e,
            a = (0, J.useTranslations)("dapp"),
            i = (0, J.useTranslations)("cta"),
            s = (0, J.useTranslations)("wallet"),
            {
              payAmount: o,
              setPayAmount: l,
              receiveAmount: c,
              setReceiveAmount: u,
              setPreferPayOrReceive: d,
              calculateCheckout: f,
              amountsAreDirty: h,
              setAmountsAreDirty: p,
              fetchTokenBalance: x,
            } = H(),
            {
              walletName: g,
              connectWallet: b,
              isConnected: m,
              network: y,
              address: w,
              disconnectWallet: v,
              paymentMethods: A,
              selectedPaymentMethod: E,
              isCorrectNetwork: _,
              setIsCorrectNetwork: k,
            } = (0, G.useWalletProvider)(),
            { state: N } = (0, z.usePresaleContext)(),
            {
              nativeBalance: P,
              nativeUnit: T,
              tokenBalance: S,
              fetchWalletBalance: O,
              isLoading: R,
            } = ((e) => {
              var t, r, n, a, i, s, o, l, c, u;
              let { address: d, chain: f, token: h } = e,
                [p, x] = (0, L.useState)(null),
                [g, b] = (0, L.useState)(!1),
                [m, y] = (0, L.useState)(null),
                { selectedPaymentMethod: w } = (0, G.useWalletProvider)(),
                v = async () => {
                  if ((b(!0), y(null), !d || !f)) {
                    b(!1), x(null);
                    return;
                  }
                  try {
                    let e = await fetch("/api/wallet-balance", {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({
                          address: d,
                          chain: f,
                          token: h,
                        }),
                      }),
                      t = await e.json();
                    if (!e.ok)
                      throw Error(t.error || "Failed to fetch balance");
                    x(t);
                  } catch (e) {
                    y(
                      e instanceof Error ? e.message : "Failed to fetch balance"
                    ),
                      x(null);
                  } finally {
                    b(!1);
                  }
                };
              return (
                (0, L.useEffect)(() => {
                  if (!d || !f) return;
                  let e = setInterval(() => {
                    v();
                  }, 15e3);
                  return v(), () => clearInterval(e);
                }, [d, f, h, w]),
                {
                  fetchWalletBalance: v,
                  nativeBalance:
                    null == p || null == (t = p.native) ? void 0 : t.balance,
                  nativeUnit:
                    null == p || null == (r = p.native) ? void 0 : r.unit,
                  nativeError:
                    null == p || null == (n = p.native) ? void 0 : n.error,
                  tokenBalance:
                    "number" ==
                    typeof (null == p || null == (a = p.token)
                      ? void 0
                      : a.balance)
                      ? null == p || null == (i = p.token)
                        ? void 0
                        : i.balance
                      : null == p || null == (s = p.native)
                      ? void 0
                      : s.balance,
                  tokenUnit:
                    (null == p || null == (o = p.token) ? void 0 : o.unit) ||
                    (null == p || null == (l = p.native) ? void 0 : l.unit),
                  tokenError:
                    (null == p || null == (c = p.token) ? void 0 : c.error) ||
                    (null == p || null == (u = p.native) ? void 0 : u.error),
                  data: p,
                  isLoading: g,
                  error: m,
                }
              );
            })({
              chain: null == y ? void 0 : y.toLowerCase(),
              address: w,
              token: E.name,
            }),
            {
              localPayAmount: C,
              setLocalPayAmount: I,
              localReceiveAmount: B,
              setLocalReceiveAmount: U,
              debouncedPayAmount: M,
            } = (0, es.useAmountCalculation)({
              payAmount: o,
              receiveAmount: c,
              setPayAmount: l,
              setReceiveAmount: u,
              setPreferPayOrReceive: d,
              setAmountsAreDirty: p,
              debounceDelay: 300,
            }),
            { hasEnoughBalance: j, hasEnoughForGas: W } = ((e) => {
              let {
                payAmount: t,
                debouncedPayAmount: r,
                selectedPaymentMethod: n,
                availablePaymentMethods: a,
                nativeBalance: i,
                tokenBalance: s,
                nativeUnit: o,
                isLoading: l,
              } = e;
              return (0, L.useMemo)(() => {
                var e;
                let a = [];
                if (!n)
                  return (
                    a.push({ key: bJ.NO_PAYMENT_METHOD }),
                    {
                      hasEnoughBalance: !1,
                      hasEnoughForGas: !1,
                      sendAmountIsLargerThanMinimum: !1,
                      isFormValid: !1,
                      validationErrors: a,
                    }
                  );
                let c = (null == (e = n.gasEstimate) ? void 0 : e.gasFee) || 0,
                  u = n.minimumSendAmount || 0,
                  d = n.isNative ? t + c : c,
                  f = void 0 !== s && s >= r;
                f ||
                  void 0 === s ||
                  l ||
                  a.push({
                    key: bJ.INSUFFICIENT_TOKEN_BALANCE,
                    params: { currency: n },
                  });
                let h = void 0 !== i && i >= d;
                h ||
                  void 0 === i ||
                  l ||
                  !f ||
                  a.push({
                    key: bJ.INSUFFICIENT_GAS,
                    params: { currency: o || "native currency", amount: c },
                  });
                let p = t >= u;
                !p &&
                  t > 0 &&
                  a.push({
                    key: bJ.BELOW_MINIMUM_AMOUNT,
                    params: { amount: u, currency: n },
                  }),
                  t <= 0 && a.push({ key: bJ.AMOUNT_TOO_LOW });
                let x = f && h && p && t > 0 && !l;
                return {
                  hasEnoughBalance: f,
                  hasEnoughForGas: h,
                  sendAmountIsLargerThanMinimum: p,
                  isFormValid: x,
                  validationErrors: a,
                };
              }, [t, r, n, a, i, s, o, l]);
            })({
              payAmount: o,
              debouncedPayAmount: M,
              selectedPaymentMethod: E,
              availablePaymentMethods: A,
              nativeBalance: P,
              tokenBalance: S,
              nativeUnit: T,
              isLoading: R,
            }),
            { formatFiatUsd: V } = $(),
            { handleTransaction: K, transactionLoading: Q } = bQ({
              onSuccess: () => {
                er(!0), x();
              },
            }),
            [Y, X] = (0, L.useState)(!1),
            [ee, er] = (0, L.useState)(!1),
            [eo, el] = (0, L.useState)(!1),
            ec = () => {
              h || f(), X(!0);
            };
          (0, L.useEffect)(() => {
            ec();
          }, [ec]);
          let [eu, ed] = (0, L.useState)(void 0);
          (0, L.useEffect)(() => {
            if (!m) return void k(!0);
            if (E) {
              if (E.network === y) return void k(!0);
              ed(E.network), k(!1);
            }
          }, [E, y, m, k]);
          let ef =
              (null == E || null == (t = E.gasEstimate) ? void 0 : t.gasFee) ||
              0,
            eh = o >= ((null == E ? void 0 : E.minimumSendAmount) || 0),
            ep = !0;
          "number" == typeof (null == N ? void 0 : N.tokenCapRemaining) &&
            (ep =
              N.tokenCapRemaining > 0 &&
              N.tokenCapRemaining >= parseInt(B || "0"));
          let ex = async (e) => {
              var t, r;
              e.preventDefault(),
                el(!0),
                o &&
                  Y &&
                  !R &&
                  j &&
                  W &&
                  E &&
                  !Q &&
                  _ &&
                  ep &&
                  eh &&
                  (((e) => {
                    var t;
                    (0, ei.sendEvent)(ea.EVENT_NAMES.WORKFLOW_STEP, {
                      workflowName: ea.WORKFLOW_NAMES.SWAP,
                      workflowStepNumber: 1,
                      workflowStepName: ea.WORKFLOW_STEPS.SWAP_AMOUNT,
                      workflowCompleteFlag: 0,
                      walletName: e.walletName,
                      walletAddress: e.walletAddress,
                      swapFromCurrency: e.swapFromCurrency,
                      swapToCurrency: e.swapToCurrency,
                      swapToValue: e.swapToValue,
                      workflowErrorCode:
                        null != (t = e.workflowErrorCode) ? t : 0,
                    });
                  })({
                    walletName: g || "unknown",
                    walletAddress: w,
                    swapFromCurrency: E.name || "unknown",
                    swapToCurrency: D.websiteConfig.token.symbol,
                    swapToValue: c.toString(),
                  }),
                  (await K({
                    paymentMethod: E,
                    payAmount: o,
                    tokenPrice:
                      null == N ||
                      null == (r = N.currentStage) ||
                      null == (t = r.currentPrice)
                        ? void 0
                        : t.USD,
                    tokenQuantity: c,
                  })) && (er(!0), x(), O(), el(!1)));
            },
            eg = () => {
              el(!1);
            },
            eb = Number(C || "0") * (E.nativeTokenPrice || 0);
          return (0, F.jsxs)("div", {
            className: (0, q.cn)("p-2 lg:p-3 rounded-b", r),
            style: {
              background:
                "linear-gradient(to bottom, black 125px, var(--blue) 125px)",
            },
            ...n,
            children: [
              (0, F.jsx)(b$, { open: ee, onOpenChange: er }),
              (0, F.jsxs)("form", {
                onSubmit: ex,
                children: [
                  (0, F.jsxs)("div", {
                    className:
                      "rounded bg-white text-black text-left border-[3px] border-black p-2 py-[7px] lg:pt-2 lg:px-4 lg:pb-3 space-y-[7px] lg:space-y-4 mb-1 lg:mb-2 mt-[-70px]",
                    children: [
                      (0, F.jsxs)("div", {
                        className:
                          "w-full flex items-center justify-between gap-2 lg:gap-4 border-b-[2px] border-black",
                        children: [
                          (0, F.jsxs)("div", {
                            className: "flex-1 min-w-0",
                            children: [
                              (0, F.jsx)("div", {
                                className:
                                  "font-bold text-xs/[1] lg:text-sm -mb-[2px] lg:mb-1",
                                children: a("inputAmountLabel"),
                              }),
                              (0, F.jsx)(b0, {
                                inputMode: "decimal",
                                value: C,
                                onChange: (e) => {
                                  I(e.target.value), eg();
                                },
                              }),
                              (0, F.jsx)("div", {
                                className:
                                  "font-bold text-xs mb-1 lg:mb-3 lg:mt-1",
                                children: C ? V(eb) : "$0",
                              }),
                            ],
                          }),
                          (0, F.jsx)("div", {
                            className: "flex-shrink-0 -mt-2",
                            children: (0, F.jsx)(b8, {}),
                          }),
                        ],
                      }),
                      (0, F.jsxs)("div", {
                        className:
                          "w-full flex items-center justify-between gap-2 lg:gap-4 lg:-mt-1",
                        children: [
                          (0, F.jsxs)("div", {
                            className: "flex-1 min-w-0",
                            children: [
                              (0, F.jsx)("div", {
                                className:
                                  "font-bold text-xs/[1] lg:text-sm -mb-[2px] lg:mb-1",
                                children: a("receiveAmountLabel"),
                              }),
                              (0, F.jsx)(b0, {
                                value: B,
                                onChange: (e) => {
                                  U(e.target.value.replace(/,/g, "")), eg();
                                },
                              }),
                            ],
                          }),
                          (0, F.jsx)("div", {
                            className: "flex-shrink-0",
                            children: (0, F.jsxs)("div", {
                              className:
                                "rounded flex gap-2 items-center font-bold border-2 text-[15px] border-black px-2 lg:px-3 h-[36px] lg:h-[44px] select-none",
                              children: [
                                (0, F.jsx)(Z.default, {
                                  src: "/pandu.svg",
                                  alt: "PANDA",
                                  className: "size-[26px] aspect-square",
                                  width: 26,
                                  height: 26,
                                }),
                                (0, F.jsx)("span", {
                                  children: D.websiteConfig.token.symbol,
                                }),
                              ],
                            }),
                          }),
                        ],
                      }),
                    ],
                  }),
                  (0, F.jsxs)("div", {
                    className: "",
                    children: [
                      m &&
                        eo &&
                        (0, F.jsxs)(F.Fragment, {
                          children: [
                            _ &&
                              !ep &&
                              (0, F.jsxs)("div", {
                                className:
                                  "text-lg text-center mb-3 font-bold uppercase",
                                children: [
                                  "Not enough tokens available for purchase.",
                                  (0, F.jsx)("br", {}),
                                  "Tokens remaining for purchase: ",
                                  N.tokenCapRemaining,
                                ],
                              }),
                            _ &&
                              ep &&
                              (0, F.jsxs)(F.Fragment, {
                                children: [
                                  !j &&
                                    (0, F.jsx)("div", {
                                      className:
                                        "text-red-500 text-lg text-center mb-2 font-bold uppercase",
                                      children: a("error.insufficientBalance", {
                                        currency: E.name || "",
                                      }),
                                    }),
                                  !W &&
                                    j &&
                                    (0, F.jsx)("div", {
                                      className:
                                        "text-red-500 text-center mb-2",
                                      children: a("error.insufficientGas", {
                                        currency: T || "Unknown",
                                        amount: ef,
                                      }),
                                    }),
                                  !eh &&
                                    (0, F.jsx)("div", {
                                      className:
                                        "text-red-500 text-center mb-2",
                                      children: a(
                                        "error.insufficientSendAmount",
                                        {
                                          amount: E.minimumSendAmount || "0",
                                          currency: E.name || "",
                                        }
                                      ),
                                    }),
                                ],
                              }),
                          ],
                        }),
                      m &&
                        !_ &&
                        (0, F.jsxs)("div", {
                          className:
                            "text-red-500 text-lg text-center uppercase lg:mb-0 relative z-[2]",
                          children: [
                            (0, F.jsx)("div", {
                              className: "font-bold",
                              children: a("error.incorrectNetwork", {
                                network: eu || "",
                              }),
                            }),
                            (0, F.jsx)(en.default, {
                              type: "button",
                              className: "w-full py-3 mt-2",
                              onClick: v,
                              children: i("switchNetwork"),
                            }),
                          ],
                        }),
                      m &&
                        _ &&
                        (0, F.jsx)(b6, {
                          disabled: Q || !_,
                          children: Q
                            ? (0, F.jsxs)("div", {
                                className:
                                  "flex items-center justify-center gap-2",
                                children: [
                                  (0, F.jsx)(et, { className: "animate-spin" }),
                                  a("processing"),
                                ],
                              })
                            : i("buyNow"),
                        }),
                      !m &&
                        (0, F.jsx)(b6, {
                          type: "button",
                          onClick: () => {
                            N.isComingSoon || b();
                          },
                          disabled: N.isComingSoon,
                          children: s("connect"),
                        }),
                    ],
                  }),
                ],
              }),
            ],
          });
        },
        b6 = (e) => {
          let { className: t, children: r, ...n } = e;
          return (0, F.jsx)("button", {
            type: "submit",
            className: (0, q.cn)(
              "relative z-[2] border-[3px] border-black cursor-pointer rounded",
              "bg-orange text-black font-yuanmo font-black text-[24px] lg:text-xl uppercase w-full p-2 lg:px-3",
              "hover:brightness-110",
              "disabled:cursor-not-allowed",
              "shadow-[3px_3px_0_0_#000]",
              "hover:translate-x-[1.5px] hover:translate-y-[1.5px]",
              "active:shadow-none active:translate-x-[4px] active:translate-y-[4px]",
              t
            ),
            ...n,
            children: r,
          });
        },
        b9 = (e) => {
          let t = e.getTime() - new Date().getTime(),
            r = Math.max(Math.floor((t / 1e3) % 60), 0),
            n = Math.max(Math.floor((t / 1e3 / 60) % 60), 0),
            a = Math.max(Math.floor((t / 1e3 / 60 / 60) % 24), 0);
          return {
            days: Math.max(Math.floor(t / 1e3 / 60 / 60 / 24), 0),
            hours: a,
            minutes: n,
            seconds: r,
          };
        },
        b7 = (e) => String(e).padStart(2, "0"),
        me = (e) => {
          let {
            value: t,
            label: r,
            className: n,
            valueClassName: a,
            labelClassName: i,
          } = e;
          return (0, F.jsxs)("div", {
            className: (0, q.cn)(
              "flex flex-col items-center justify-center text-center",
              n
            ),
            children: [
              (0, F.jsx)("div", {
                className: (0, q.cn)(
                  "text-[32px] lg:text-2xl/[1] font-bold -mb-1 lg:mb-[3px]",
                  a
                ),
                children: t,
              }),
              (0, F.jsx)("div", {
                className: (0, q.cn)("text-sm/[1] font-bold uppercase", i),
                children: r,
              }),
            ],
          });
        },
        mt = (e) => {
          let {
              date: t,
              className: r,
              size: n = "default",
              itemClassNames: a,
              valueClassNames: i,
              labelClassNames: s,
            } = e,
            {
              days: o,
              hours: l,
              minutes: c,
              seconds: u,
            } = ((e) => {
              let { targetDate: t, padWithZero: r = !1, onComplete: n } = e;
              t = t || new Date();
              let [a, i] = (0, L.useState)(() => b9(t)),
                s = (0, L.useRef)(!1);
              return (
                (0, L.useEffect)(() => {
                  s.current = !1;
                }, [t.getTime()]),
                (0, L.useEffect)(() => {
                  let e = setInterval(() => {
                    let r = b9(t);
                    i(r),
                      0 !== r.days ||
                        0 !== r.hours ||
                        0 !== r.minutes ||
                        0 !== r.seconds ||
                        s.current ||
                        ((s.current = !0), null == n || n(), clearInterval(e));
                  }, 1e3);
                  return () => clearInterval(e);
                }, [t, n]),
                {
                  days: r ? b7(a.days) : String(a.days),
                  hours: r ? b7(a.hours) : String(a.hours),
                  minutes: r ? b7(a.minutes) : String(a.minutes),
                  seconds: r ? b7(a.seconds) : String(a.seconds),
                }
              );
            })({
              targetDate: "string" == typeof t ? new Date(t) : t,
              padWithZero: !0,
            }),
            d = (0, q.cn)(
              {
                "h-fit lg:h-fit w-fit lg:w-fit": "sm" === n,
                "min-w-[60px] w-[60px] lg:w-[100px]": "default" === n,
              },
              a
            ),
            f =
              "relative after:content-[''] after:absolute after:-right-[3.5px] after:top-1/2 after:-translate-y-[calc(50%+8px)] after:h-[7px] after:w-[7px] after:bg-black after:rounded-full",
            h = (0, q.cn)("font-yuanmo font-black", i),
            p = (0, q.cn)("font-bold text-sm", s),
            x = (0, J.useTranslations)("countdown"),
            [g, b] = (0, L.useState)(!1);
          return (
            (0, L.useEffect)(() => b(!0), []),
            (0, F.jsxs)("div", {
              className: (0, q.cn)(
                "flex justify-center w-full min-w-[3/4] max-w-3/4 mx-auto",
                r
              ),
              children: [
                (0, F.jsx)(me, {
                  value: g ? o : "--",
                  label: x("days"),
                  className: (0, q.cn)(d, f),
                  valueClassName: h,
                  labelClassName: p,
                }),
                (0, F.jsx)(me, {
                  value: g ? l : "--",
                  label: x("hours"),
                  className: (0, q.cn)(d, f),
                  valueClassName: h,
                  labelClassName: p,
                }),
                (0, F.jsx)(me, {
                  value: g ? c : "--",
                  label: x("minutes"),
                  className: (0, q.cn)(d, f),
                  valueClassName: h,
                  labelClassName: p,
                }),
                (0, F.jsx)(me, {
                  value: g ? u : "--",
                  label: x("seconds"),
                  className: d,
                  valueClassName: h,
                  labelClassName: p,
                }),
              ],
            })
          );
        },
        mr = (e) => {
          let { label: t, date: r, className: n, ...a } = e,
            i = (0, J.useTranslations)("dapp"),
            { state: s } = (0, z.usePresaleContext)(),
            { presaleStageEndDate: o } = s,
            l = r || o;
          return l
            ? (0, F.jsxs)("div", {
                className: (0, q.cn)(
                  "flex flex-col justify-center h-full bg-blue text-black text-center px-1 pt-2 pb-1 lg:py-2",
                  n
                ),
                ...a,
                children: [
                  (0, F.jsx)("div", {
                    className: "uppercase font-bold text-sm -mb-1 lg:mb-1",
                    children: i("stageCountdownTitle"),
                  }),
                  (0, F.jsx)(mt, { date: l }),
                ],
              })
            : (0, F.jsx)(F.Fragment, {});
        };
      function mn(e) {
        return (0, ee.GenIcon)({
          tag: "svg",
          attr: { viewBox: "0 0 24 24" },
          child: [
            {
              tag: "path",
              attr: { d: "M12 18a6 6 0 1 0 0-12 6 6 0 0 0 0 12Z" },
              child: [],
            },
          ],
        })(e);
      }
      let ma = (e) => {
          var t, r, n, a, i, s;
          let { className: o, ...l } = e,
            c = (0, J.useTranslations)("dapp.stageProgress"),
            { state: u } = (0, z.usePresaleContext)(),
            d =
              null == u ||
              null == (r = u.currentStage) ||
              null == (t = r.nextStagePrice)
                ? void 0
                : t.USD,
            f = u.activeStage.startDate,
            h = u.activeStage.endDate;
          return (
            f &&
              !h &&
              (h = new Date(f.getTime() + 1e3 * u.activeStage.duration)),
            (0, F.jsxs)("div", {
              className: (0, q.cn)("text-black px-2 py-1 lg:px-3 lg:py-2", o),
              ...l,
              children: [
                !1,
                (0, F.jsxs)("div", {
                  className:
                    "flex items-center justify-between uppercase text-xs lg:text-sm font-semibold",
                  children: [
                    !d &&
                      (0, F.jsx)("div", {
                        className:
                          "hidden xs:block flex-1 h-[2px] bg-black w-full mr-2 lg:mr-4",
                      }),
                    (0, F.jsxs)("div", {
                      children: [
                        c("currentPrice"),
                        " ",
                        (0, F.jsxs)("span", {
                          children: [
                            "$",
                            null == u ||
                            null == (a = u.currentStageFormatted) ||
                            null == (n = a.currentPrice)
                              ? void 0
                              : n.USD,
                          ],
                        }),
                      ],
                    }),
                    !d &&
                      (0, F.jsx)("div", {
                        className:
                          "hidden xs:block flex-1 h-[2px] bg-black w-full ml-2 lg:ml-4",
                      }),
                    d &&
                      (0, F.jsxs)(F.Fragment, {
                        children: [
                          (0, F.jsxs)("div", {
                            className:
                              "hidden xs:flex items-center justify-center gap-2 lg:gap-3 flex-1 w-full mx-1 lg:mx-6",
                            children: [
                              (0, F.jsx)(mn, {}),
                              (0, F.jsx)(mn, {}),
                              (0, F.jsx)(mn, {}),
                            ],
                          }),
                          (0, F.jsxs)("div", {
                            className: "flex items-center gap-1 lg:gap-2",
                            children: [
                              c("nextPrice"),
                              (0, F.jsxs)("span", {
                                children: [
                                  "$",
                                  null == u ||
                                  null == (s = u.currentStageFormatted) ||
                                  null == (i = s.nextStagePrice)
                                    ? void 0
                                    : i.USD,
                                ],
                              }),
                            ],
                          }),
                        ],
                      }),
                  ],
                }),
              ],
            })
          );
        },
        mi = (e) => {
          let { className: t, forceTitle: r, ...n } = e,
            a = (0, J.useTranslations)("dapp"),
            { state: i } = (0, z.usePresaleContext)(),
            s = (0, q.cn)(
              "font-yuanmo bg-black text-white uppercase text-center p-2 text-lg lg:text-[24px]/[1]",
              t
            );
          if (r)
            return (0, F.jsx)("div", {
              className: s,
              ...n,
              children: (0, F.jsx)("div", {
                className: "font-bold",
                children: r,
              }),
            });
          let o = Math.floor(
            (i.presaleEndDate.getTime() - new Date().getTime()) / 864e5
          );
          return (0, F.jsx)("div", {
            className: s,
            ...n,
            children: (0, F.jsxs)("div", {
              className: "font-bold",
              children: [
                i.isComingSoon && "Coming Soon",
                !i.isComingSoon &&
                  (0, q.parseText)(
                    a.raw("title").replace("{days}", o.toString())
                  ),
              ],
            }),
          });
        },
        ms = (e) => {
          let {
              className: t,
              forceDappTitle: r,
              forceCountdownLabel: n,
              forceCountdownDate: a,
              disablePurchasing: i,
              ...s
            } = e,
            { state: o } = (0, z.usePresaleContext)(),
            { isConnected: l } = (0, G.useWalletProvider)();
          return (0, F.jsxs)("div", {
            className: (0, q.cn)("rounded", t),
            ...s,
            children: [
              (0, F.jsxs)("div", {
                className:
                  "flex flex-col border-[3px] border-black bg-white rounded",
                children: [
                  (0, F.jsx)(mi, { forceTitle: r }),
                  (0, F.jsx)("div", {
                    className: "flex flex-col h-full justify-between",
                    children: (0, F.jsxs)("div", {
                      className: (0, q.cn)({ "blur-xs": o.isComingSoon }),
                      children: [
                        !o.isComingSoon &&
                          !i &&
                          (0, F.jsx)(mr, {
                            label: n,
                            date: a,
                            className: "border-b-[3px] border-black",
                          }),
                        (0, F.jsx)(X, {
                          className: "border-b-[3px] border-black",
                        }),
                        !i &&
                          (0, F.jsxs)(F.Fragment, {
                            children: [
                              (0, F.jsx)(ma, {
                                className: "pb-[65px] lg:pb-[65px]",
                              }),
                              (0, F.jsx)(b5, {}),
                            ],
                          }),
                      ],
                    }),
                  }),
                ],
              }),
              l &&
                !o.isComingSoon &&
                !i &&
                (0, F.jsx)("div", {
                  className: (0, q.cn)("relative mt-3"),
                  children: (0, F.jsx)(er, {}),
                }),
            ],
          });
        };
      var mo = e.i(94756);
      let ml = (e) => {
        let { className: t, ...r } = e,
          n = (0, J.useTranslations)("homepage.hero"),
          [a, i] = (0, L.useState)(""),
          { width: s } = (0, Q.useWindowSize)();
        return (
          (0, L.useEffect)(() => {
            s && s < 1024
              ? i("/videos/bg-hero--mobile.mp4")
              : i("/videos/bg-hero.mp4");
          }, [s]),
          (0, F.jsxs)(K.default, {
            id: "buy-now",
            videoUrl: a,
            className: (0, q.cn)(
              "relative lg:min-h-[921px] overflow-hidden",
              t
            ),
            videoClassName: "object-inherit lg:object-cover",
            ...r,
            children: [
              (0, F.jsxs)("div", {
                className:
                  "container pt-[66px] lg:pt-header text-center text-white",
                children: [
                  (0, F.jsx)(mo.default, {
                    variant: "h1",
                    className: "mt-1 mb-1 lg:mb-0",
                    children: "Pudgy Pandas",
                  }),
                  (0, F.jsx)(mo.default, {
                    className:
                      "font-bold text-sm lg:text-base max-w-[258px] lg:max-w-[560px] mx-auto mb-4 lg:mb-6",
                    children: n("content"),
                  }),
                  (0, F.jsxs)("div", {
                    className: "max-w-[504px] mx-auto",
                    children: [
                      (0, F.jsx)(V, {
                        children: (0, F.jsx)(ms, {
                          className: "relative z-[1]",
                        }),
                      }),
                      (0, F.jsxs)("div", {
                        className:
                          "flex items-center justify-center gap-4 my-4",
                        children: [
                          (0, F.jsxs)("div", {
                            className: "text-xs lg:text-base",
                            children: [n("auditBy"), " "],
                          }),
                          (0, F.jsx)("a", {
                            href: D.websiteConfig.token.auditUrl,
                            target: "_blank",
                            rel: "noopener noreferrer",
                            children: (0, F.jsx)(Z.default, {
                              src: "/spywolf.svg",
                              alt: "",
                              width: 84,
                              height: 20,
                              className: "w-[84px]",
                            }),
                          }),
                        ],
                      }),
                    ],
                  }),
                ],
              }),
              (0, F.jsxs)("div", {
                className: "hidden lg:block",
                children: [
                  (0, F.jsx)(Z.default, {
                    src: "/pandas/panda-pink-eat.gif",
                    unoptimized: !0,
                    alt: "",
                    width: 264,
                    height: 264,
                    className:
                      "absolute bottom-[80px] left-1/2 -translate-x-1/2 -ml-[400px]",
                  }),
                  (0, F.jsx)(Z.default, {
                    src: "/pandas/bao.gif",
                    unoptimized: !0,
                    alt: "",
                    width: 308,
                    height: 308,
                    className:
                      "absolute bottom-0 left-1/2 -translate-x-1/2 -ml-[620px]",
                  }),
                  (0, F.jsx)(Z.default, {
                    src: "/pandas/panda-tea.gif",
                    unoptimized: !0,
                    alt: "",
                    width: 264,
                    height: 264,
                    className:
                      "absolute bottom-[80px] right-1/2 -translate-x-1/2 -mr-[630px]",
                  }),
                  (0, F.jsx)(Z.default, {
                    src: "/pandas/panda-plump.gif",
                    unoptimized: !0,
                    alt: "",
                    width: 368,
                    height: 368,
                    className:
                      "absolute bottom-0 right-1/2 -translate-x-1/2 -mr-[1000px]",
                  }),
                ],
              }),
              (0, F.jsxs)("div", {
                className:
                  "flex items-center justify-center gap-2 lg:hidden -mt-6",
                children: [
                  (0, F.jsx)(Z.default, {
                    src: "/pandas/bao.gif",
                    unoptimized: !0,
                    alt: "",
                    width: 110,
                    height: 110,
                    className: "translate-y-[-20px] translate-x-[10px]",
                  }),
                  (0, F.jsx)(Z.default, {
                    src: "/pandas/panda-pink-eat.gif",
                    unoptimized: !0,
                    alt: "",
                    width: 85,
                    height: 85,
                    className: "translate-x-[10px]",
                  }),
                  (0, F.jsx)(Z.default, {
                    src: "/pandas/panda-tea.gif",
                    unoptimized: !0,
                    alt: "",
                    width: 85,
                    height: 85,
                    className: "translate-x-[10px]",
                  }),
                  (0, F.jsx)(Z.default, {
                    src: "/pandas/panda-plump.gif",
                    unoptimized: !0,
                    alt: "",
                    width: 119,
                    height: 119,
                    className: "translate-y-[-30px]",
                  }),
                ],
              }),
            ],
          })
        );
      };
    },
    46850: (e) => {
      "use strict";
      var { m: t, e: r } = e;
      Object.defineProperty(r, "__esModule", { value: !0 });
      var n = e.r(756253);
      function a(e) {
        return Array.prototype.slice.call(e);
      }
      function i(e, t) {
        var r = Math.floor(e);
        return r === t || r + 1 === t ? e : t;
      }
      function s() {
        return Date.now();
      }
      function o(e, t, r) {
        if (((t = "data-keen-slider-" + t), null === r))
          return e.removeAttribute(t);
        e.setAttribute(t, r || "");
      }
      function l(e, t) {
        return (
          (t = t || document),
          "function" == typeof e && (e = e(t)),
          Array.isArray(e)
            ? e
            : "string" == typeof e
            ? a(t.querySelectorAll(e))
            : e instanceof HTMLElement
            ? [e]
            : e instanceof NodeList
            ? a(e)
            : []
        );
      }
      function c(e) {
        e.raw && (e = e.raw),
          e.cancelable && !e.defaultPrevented && e.preventDefault();
      }
      function u(e) {
        e.raw && (e = e.raw), e.stopPropagation && e.stopPropagation();
      }
      function d() {
        var e = [];
        return {
          add: function (t, r, n, a) {
            t.addListener ? t.addListener(n) : t.addEventListener(r, n, a),
              e.push([t, r, n, a]);
          },
          input: function (e, t, r, n) {
            this.add(
              e,
              t,
              function (e) {
                e.nativeEvent && (e = e.nativeEvent);
                var t = e.changedTouches || [],
                  n = e.targetTouches || [],
                  a = e.detail && e.detail.x ? e.detail : null;
                return r({
                  id: a
                    ? a.identifier
                      ? a.identifier
                      : "i"
                    : n[0]
                    ? n[0]
                      ? n[0].identifier
                      : "e"
                    : "d",
                  idChanged: a
                    ? a.identifier
                      ? a.identifier
                      : "i"
                    : t[0]
                    ? t[0]
                      ? t[0].identifier
                      : "e"
                    : "d",
                  raw: e,
                  x: a && a.x ? a.x : n[0] ? n[0].screenX : a ? a.x : e.pageX,
                  y: a && a.y ? a.y : n[0] ? n[0].screenY : a ? a.y : e.pageY,
                });
              },
              n
            );
          },
          purge: function () {
            e.forEach(function (e) {
              e[0].removeListener
                ? e[0].removeListener(e[2])
                : e[0].removeEventListener(e[1], e[2], e[3]);
            }),
              (e = []);
          },
        };
      }
      function f(e, t, r) {
        return Math.min(Math.max(e, t), r);
      }
      function h(e) {
        return (e > 0) - (e < 0) || +e;
      }
      function p(e) {
        var t = e.getBoundingClientRect();
        return {
          height: i(t.height, e.offsetHeight),
          width: i(t.width, e.offsetWidth),
        };
      }
      function x(e, t, r, n) {
        var a = e && e[t];
        return null == a ? r : n && "function" == typeof a ? a() : a;
      }
      function g(e) {
        return Math.round(1e6 * e) / 1e6;
      }
      var b = function () {
        return (b =
          Object.assign ||
          function (e) {
            for (var t, r = 1, n = arguments.length; r < n; r++)
              for (var a in (t = arguments[r]))
                Object.prototype.hasOwnProperty.call(t, a) && (e[a] = t[a]);
            return e;
          }).apply(this, arguments);
      };
      function m(e, t, r) {
        if (r || 2 == arguments.length)
          for (var n, a = 0, i = t.length; a < i; a++)
            (!n && a in t) ||
              (n || (n = Array.prototype.slice.call(t, 0, a)), (n[a] = t[a]));
        return e.concat(n || Array.prototype.slice.call(t));
      }
      function y(e) {
        var t, r, n, a, i, s, o, l;
        function c(e) {
          return 1 - Math.pow(1 - e, 3);
        }
        function u() {
          return n ? e.track.velocity() : 0;
        }
        function d(e, t) {
          void 0 === t && (t = 1e3);
          var r = 147e-9 + (e = Math.abs(e)) / t;
          return { dist: Math.pow(e, 2) / r, dur: e / r };
        }
        function p() {
          var t = e.track.details;
          t && ((i = t.min), (s = t.max), (o = t.minIdx), (l = t.maxIdx));
        }
        function x() {
          e.animator.stop();
        }
        e.on("updated", p),
          e.on("optionsChanged", p),
          e.on("created", p),
          e.on("dragStarted", function () {
            (n = !1), x(), (t = r = e.track.details.abs);
          }),
          e.on("dragChecked", function () {
            n = !0;
          }),
          e.on("dragEnded", function () {
            var n,
              p,
              g,
              b,
              m,
              y,
              w = e.options.mode;
            "snap" === w &&
              ((n = e.track),
              (g = (p = e.track.details).position),
              (b = h(u())),
              (g > s || g < i) && (b = 0),
              (m = t + b),
              0 === p.slides[n.absToRel(m)].portion && (m -= b),
              t !== r && (m = r),
              h(n.idxToDist(m, !0)) !== b && (m += b),
              (m = f(m, o, l)),
              (y = n.idxToDist(m, !0)),
              e.animator.start([
                {
                  distance: y,
                  duration: 500,
                  easing: function (e) {
                    return 1 + --e * e * e * e * e;
                  },
                },
              ])),
              ("free" !== w && "free-snap" !== w) ||
                (function () {
                  x();
                  var t = "free-snap" === e.options.mode,
                    r = e.track,
                    n = u();
                  a = h(n);
                  var p = e.track.details,
                    g = [];
                  if (n || !t) {
                    var b = d(n),
                      m = b.dist,
                      y = b.dur;
                    if (((y *= 2), (m *= a), t)) {
                      var w = r.idxToDist(r.distToIdx(m), !0);
                      w && (m = w);
                    }
                    g.push({ distance: m, duration: y, easing: c });
                    var v = p.position,
                      A = v + m;
                    if (A < i || A > s) {
                      var E = A < i ? i - v : s - v,
                        _ = 0,
                        k = n;
                      if (h(E) === a) {
                        var N = Math.min(Math.abs(E) / Math.abs(m), 1),
                          P = (1 - Math.pow(1 - N, 1 / 3)) * y;
                        (g[0].earlyExit = P), (k = n * (1 - N));
                      } else (g[0].earlyExit = 0), (_ += E);
                      var T = d(k, 100),
                        S = T.dist * a;
                      e.options.rubberband &&
                        (g.push({
                          distance: S,
                          duration: 2 * T.dur,
                          easing: c,
                        }),
                        g.push({ distance: -S + _, duration: 500, easing: c }));
                    }
                    e.animator.start(g);
                  } else
                    e.moveToIdx(f(p.abs, o, l), !0, {
                      duration: 500,
                      easing: function (e) {
                        return 1 + --e * e * e * e * e;
                      },
                    });
                })();
          }),
          e.on("dragged", function () {
            r = e.track.details.abs;
          });
      }
      function w(e) {
        var t,
          r,
          n,
          a,
          i,
          s,
          o,
          p,
          x,
          g,
          b,
          m,
          y,
          w,
          v,
          A,
          E,
          _,
          k = d();
        function N(t) {
          if (s && p === t.id) {
            var l = O(t);
            if (x) {
              if (!S(t)) return T(t);
              (g = l), (x = !1), e.emit("dragChecked");
            }
            if (A) return (g = l);
            c(t);
            var d = (function (t) {
              if (E === -1 / 0 && _ === 1 / 0) return t;
              var n = e.track.details,
                s = n.length,
                o = n.position,
                l = f(t, E - o, _ - o);
              if (0 === s) return 0;
              if (!e.options.rubberband) return l;
              if ((o <= _ && o >= E) || (o < E && r > 0) || (o > _ && r < 0))
                return t;
              var c = Math.max(
                0,
                1 - (Math.abs(((o < E ? o - E : o - _) / s) * (a * s)) / i) * 2
              );
              return c * c * t;
            })((o(g - l) / a) * n);
            r = h(d);
            var y = e.track.details.position;
            ((y > E && y < _) || (y === E && r > 0) || (y === _ && r < 0)) &&
              u(t),
              (b += d),
              !m && Math.abs(b * a) > 5 && (m = !0),
              e.track.add(d),
              (g = l),
              e.emit("dragged");
          }
        }
        function P(t) {
          !s &&
            e.track.details &&
            e.track.details.length &&
            ((b = 0),
            (s = !0),
            (m = !1),
            (x = !0),
            (p = t.id),
            S(t),
            (g = O(t)),
            e.emit("dragStarted"));
        }
        function T(t) {
          s && p === t.idChanged && ((s = !1), e.emit("dragEnded"));
        }
        function S(e) {
          var t = R(),
            r = t ? e.y : e.x,
            n = t ? e.x : e.y,
            a =
              void 0 !== y &&
              void 0 !== w &&
              Math.abs(w - n) <= Math.abs(y - r);
          return (y = r), (w = n), a;
        }
        function O(e) {
          return R() ? e.y : e.x;
        }
        function R() {
          return e.options.vertical;
        }
        function C() {
          (a = e.size), (i = R() ? window.innerHeight : window.innerWidth);
          var t = e.track.details;
          t && ((E = t.min), (_ = t.max));
        }
        function I(e) {
          m && (u(e), c(e));
        }
        function B() {
          if ((k.purge(), e.options.drag && !e.options.disabled)) {
            (o =
              "function" == typeof (r = e.options.dragSpeed || 1)
                ? r
                : function (e) {
                    return e * r;
                  }),
              (n = e.options.rtl ? -1 : 1),
              C(),
              (t = e.container),
              l(
                "["
                  .concat("data-keen-slider-clickable", "]:not([")
                  .concat("data-keen-slider-clickable", "=false])"),
                t
              ).map(function (e) {
                k.add(e, "dragstart", u),
                  k.add(e, "mousedown", u),
                  k.add(e, "touchstart", u);
              }),
              k.add(t, "dragstart", function (e) {
                c(e);
              }),
              k.add(t, "click", I, { capture: !0 }),
              k.input(t, "ksDragStart", P),
              k.input(t, "ksDrag", N),
              k.input(t, "ksDragEnd", T),
              k.input(t, "mousedown", P),
              k.input(t, "mousemove", N),
              k.input(t, "mouseleave", T),
              k.input(t, "mouseup", T),
              k.input(t, "touchstart", P, { passive: !0 }),
              k.input(t, "touchmove", N, { passive: !1 }),
              k.input(t, "touchend", T),
              k.input(t, "touchcancel", T),
              k.add(window, "wheel", function (e) {
                s && c(e);
              });
            var r,
              a = "data-keen-slider-scrollable";
            l("[".concat(a, "]:not([").concat(a, "=false])"), e.container).map(
              function (e) {
                var t;
                k.input(
                  e,
                  "touchstart",
                  function (e) {
                    (t = O(e)), (A = !0), (v = !0);
                  },
                  { passive: !0 }
                ),
                  k.input(e, "touchmove", function (r) {
                    var n = R(),
                      a = n
                        ? e.scrollHeight - e.clientHeight
                        : e.scrollWidth - e.clientWidth,
                      i = t - O(r),
                      s = n ? e.scrollTop : e.scrollLeft,
                      o =
                        (n && "scroll" === e.style.overflowY) ||
                        (!n && "scroll" === e.style.overflowX);
                    if (
                      ((t = O(r)),
                      ((i < 0 && s > 0) || (i > 0 && s < a)) && v && o)
                    )
                      return (A = !0);
                    (v = !1), c(r), (A = !1);
                  }),
                  k.input(e, "touchend", function () {
                    A = !1;
                  });
              }
            );
          }
        }
        e.on("updated", C),
          e.on("optionsChanged", B),
          e.on("created", B),
          e.on("destroyed", k.purge);
      }
      function v(e) {
        var t,
          r,
          n = null;
        function a(t, r, n) {
          e.animator.active
            ? s(t, r, n)
            : requestAnimationFrame(function () {
                return s(t, r, n);
              });
        }
        function i() {
          a(!1, !1, r);
        }
        function s(r, a, i) {
          var s = 0,
            o = e.size,
            u = e.track.details;
          if (u && t) {
            var d = u.slides;
            t.forEach(function (e, t) {
              if (r) !n && a && l(e, null, i), c(e, null, i);
              else {
                if (!d[t]) return;
                var u = d[t].size * o;
                !n && a && l(e, u, i), c(e, d[t].distance * o - s, i), (s += u);
              }
            });
          }
        }
        function o(t) {
          return "performance" === e.options.renderMode ? Math.round(t) : t;
        }
        function l(e, t, r) {
          var n = r ? "height" : "width";
          null !== t && (t = o(t) + "px"),
            (e.style["min-" + n] = t),
            (e.style["max-" + n] = t);
        }
        function c(e, t, r) {
          if (null !== t) {
            t = o(t);
            var n = r ? t : 0;
            t = "translate3d(".concat(r ? 0 : t, "px, ").concat(n, "px, 0)");
          }
          (e.style.transform = t), (e.style["-webkit-transform"] = t);
        }
        function u() {
          t && (s(!0, !0, r), (t = null)), e.on("detailsChanged", i, !0);
        }
        function d() {
          a(!1, !0, r);
        }
        function f() {
          u(),
            (r = e.options.vertical),
            e.options.disabled ||
              "custom" === e.options.renderMode ||
              ((n = "auto" === x(e.options.slides, "perView", null)),
              e.on("detailsChanged", i),
              (t = e.slides).length && d());
        }
        e.on("created", f),
          e.on("optionsChanged", f),
          e.on("beforeOptionsChanged", function () {
            u();
          }),
          e.on("updated", d),
          e.on("destroyed", u);
      }
      var A = function (e, t, r) {
        try {
          var n, a, i, c;
          return (
            (a = m(
              [
                ((n = {
                  drag: !0,
                  mode: "snap",
                  renderMode: "precision",
                  rubberband: !0,
                  selector: ".keen-slider__slide",
                }),
                function (t) {
                  var r,
                    a,
                    i,
                    s,
                    c,
                    u,
                    f = d();
                  function h(e) {
                    var r;
                    o(
                      t.container,
                      "reverse",
                      "rtl" !==
                        ((r = t.container),
                        window
                          .getComputedStyle(r, null)
                          .getPropertyValue("direction")) || e
                        ? null
                        : ""
                    ),
                      o(t.container, "v", t.options.vertical && !e ? "" : null),
                      o(
                        t.container,
                        "disabled",
                        t.options.disabled && !e ? "" : null
                      );
                  }
                  function g() {
                    m() && A();
                  }
                  function m() {
                    var e = null;
                    if (
                      (s.forEach(function (t) {
                        t.matches && (e = t.__media);
                      }),
                      e === r)
                    )
                      return !1;
                    r || t.emit("beforeOptionsChanged"), (r = e);
                    var n = e ? i.breakpoints[e] : i;
                    return (t.options = b(b({}, i), n)), h(), P(), T(), _(), !0;
                  }
                  function y() {
                    return t.options.trackConfig.length;
                  }
                  function w(e) {
                    for (var o in ((r = !1),
                    (i = b(b({}, n), e)),
                    f.purge(),
                    (a = t.size),
                    (s = []),
                    i.breakpoints || [])) {
                      var l = window.matchMedia(o);
                      (l.__media = o), s.push(l), f.add(l, "change", g);
                    }
                    f.add(window, "orientationchange", N),
                      f.add(window, "resize", k),
                      m();
                  }
                  function v(e) {
                    t.animator.stop();
                    var r = t.track.details;
                    t.track.init(null != e ? e : r ? r.abs : 0);
                  }
                  function A(e) {
                    v(e), t.emit("optionsChanged");
                  }
                  function E(e, r) {
                    if (e) return w(e), void A(r);
                    P(), T();
                    var n = y();
                    _(), y() !== n ? A(r) : v(r), t.emit("updated");
                  }
                  function _() {
                    var e = t.options.slides;
                    if ("function" == typeof e)
                      return (t.options.trackConfig = e(t.size, t.slides));
                    for (
                      var r = t.slides,
                        n = r.length,
                        a = "number" == typeof e ? e : x(e, "number", n, !0),
                        i = [],
                        s = x(e, "perView", 1, !0),
                        o = x(e, "spacing", 0, !0) / t.size || 0,
                        l = "auto" === s ? o : o / s,
                        c = x(e, "origin", "auto"),
                        u = 0,
                        d = 0;
                      d < a;
                      d++
                    ) {
                      var f =
                          "auto" === s
                            ? (function (e) {
                                var r = p(e);
                                return (
                                  (t.options.vertical ? r.height : r.width) /
                                    t.size || 1
                                );
                              })(r[d])
                            : 1 / s - o + l,
                        h = "center" === c ? 0.5 - f / 2 : "auto" === c ? 0 : c;
                      i.push({ origin: h, size: f, spacing: o }), (u += f);
                    }
                    if (
                      ((u += o * (a - 1)),
                      "auto" === c && !t.options.loop && 1 !== s)
                    ) {
                      var g = 0;
                      i.map(function (e) {
                        var t = u - g;
                        return (
                          (g += e.size + o),
                          t >= 1 || (e.origin = 1 - t - (u > 1 ? 0 : 1 - u)),
                          e
                        );
                      });
                    }
                    t.options.trackConfig = i;
                  }
                  function k() {
                    P();
                    var e = t.size;
                    t.options.disabled || e === a || ((a = e), E());
                  }
                  function N() {
                    k(), setTimeout(k, 500), setTimeout(k, 2e3);
                  }
                  function P() {
                    var e = p(t.container);
                    t.size = (t.options.vertical ? e.height : e.width) || 1;
                  }
                  function T() {
                    t.slides = l(t.options.selector, t.container);
                  }
                  (t.container = (u = l(e, c || document)).length
                    ? u[0]
                    : null),
                    (t.destroy = function () {
                      f.purge(), t.emit("destroyed"), h(!0);
                    }),
                    (t.prev = function () {
                      t.moveToIdx(t.track.details.abs - 1, !0);
                    }),
                    (t.next = function () {
                      t.moveToIdx(t.track.details.abs + 1, !0);
                    }),
                    (t.update = E),
                    w(t.options);
                }),
                v,
                w,
                y,
              ],
              r || [],
              !0
            )),
            (c = {}),
            (i = {
              emit: function (e) {
                c[e] &&
                  c[e].forEach(function (e) {
                    e(i);
                  });
                var t = i.options && i.options[e];
                t && t(i);
              },
              moveToIdx: function (e, t, r) {
                var n = i.track.idxToDist(e, t);
                if (n) {
                  var a = i.options.defaultAnimation;
                  i.animator.start([
                    {
                      distance: n,
                      duration: x(r || a, "duration", 500),
                      easing: x(r || a, "easing", function (e) {
                        return 1 + --e * e * e * e * e;
                      }),
                    },
                  ]);
                }
              },
              on: function (e, t, r) {
                void 0 === r && (r = !1), c[e] || (c[e] = []);
                var n = c[e].indexOf(t);
                n > -1 ? r && delete c[e][n] : r || c[e].push(t);
              },
              options: t,
            }),
            (function () {
              if (
                ((i.track = (function (e) {
                  var t,
                    r,
                    n,
                    a,
                    i,
                    o,
                    l,
                    c,
                    u,
                    d,
                    p,
                    b,
                    y,
                    w,
                    v = 1 / 0,
                    A = [],
                    E = null,
                    _ = 0;
                  function k(e) {
                    C(_ + e);
                  }
                  function N(e) {
                    var t,
                      r = P(_ + e).abs;
                    return ((t = r), O(t) === t) ? r : null;
                  }
                  function P(e) {
                    var t = Math.floor(Math.abs(g(e / r))),
                      n = g(((e % r) + r) % r);
                    n === r && (n = 0);
                    var a = h(e),
                      i = l.indexOf(
                        m([], l, !0).reduce(function (e, t) {
                          return Math.abs(t - n) < Math.abs(e - n) ? t : e;
                        })
                      ),
                      s = i;
                    return (
                      a < 0 && t++,
                      i === o && ((s = 0), (t += a > 0 ? 1 : -1)),
                      { abs: s + t * o * a, origin: i, rel: s }
                    );
                  }
                  function T(e, t, r) {
                    if (t || !a.loop) return S(e, r);
                    if (((n = e), O(n) !== n)) return null;
                    var n,
                      i,
                      s = P(null != r ? r : _),
                      l = s.abs,
                      c = e - s.rel,
                      u = l + c;
                    i = S(u);
                    var d = S(u - o * h(c));
                    return (
                      ((null !== d && Math.abs(d) < Math.abs(i)) ||
                        null === i) &&
                        (i = d),
                      g(i)
                    );
                  }
                  function S(e, t) {
                    if (
                      (null == t && (t = g(_)),
                      (n = e),
                      O(n) !== n || null === e)
                    )
                      return null;
                    e = Math.round(e);
                    var n,
                      a = P(t),
                      i = a.abs,
                      s = a.rel,
                      c = a.origin,
                      u = R(e),
                      d = ((t % r) + r) % r,
                      f = l[c],
                      h = Math.floor((e - (i - s)) / o) * r;
                    return g(f - d - f + l[u] + h + (c === o ? r : 0));
                  }
                  function O(e) {
                    return f(e, u, d);
                  }
                  function R(e) {
                    return ((e % o) + o) % o;
                  }
                  function C(t) {
                    (r = t - _),
                      A.push({ distance: r, timestamp: s() }),
                      A.length > 6 && (A = A.slice(-6)),
                      (_ = g(t));
                    var r,
                      n = I().abs;
                    if (n !== E) {
                      var a = null !== E;
                      (E = n), a && e.emit("slideChanged");
                    }
                  }
                  function I(s) {
                    var l = s
                      ? null
                      : (function () {
                          if (o) {
                            var e = a.loop,
                              t = e ? ((_ % r) + r) % r : _,
                              s = (e ? _ % r : _) - i[0][2],
                              l = 0 - (s < 0 && e ? r - Math.abs(s) : s),
                              c = 0,
                              f = P(_),
                              x = f.abs,
                              g = f.rel,
                              m = i[g][2],
                              v = i.map(function (t, n) {
                                var i = l + c;
                                (i < 0 - t[0] || i > 1) &&
                                  (i +=
                                    (Math.abs(i) > r - 1 && e ? r : 0) * h(-i));
                                var s = n - g,
                                  u = h(s),
                                  d = s + x;
                                e &&
                                  (-1 === u && i > m && (d += o),
                                  1 === u && i < m && (d -= o),
                                  null !== p && d < p && (i += r),
                                  null !== b && d > b && (i -= r));
                                var f = i + t[0] + t[1],
                                  y = Math.max(
                                    i >= 0 && f <= 1
                                      ? 1
                                      : f < 0 || i > 1
                                      ? 0
                                      : i < 0
                                      ? Math.min(1, (t[0] + i) / t[0])
                                      : (1 - i) / t[0],
                                    0
                                  );
                                return (
                                  (c += t[0] + t[1]),
                                  {
                                    abs: d,
                                    distance: a.rtl ? -1 * i + 1 - t[0] : i,
                                    portion: y,
                                    size: t[0],
                                  }
                                );
                              });
                            return (
                              (g = R((x = O(x)))),
                              {
                                abs: O(x),
                                length: n,
                                max: w,
                                maxIdx: d,
                                min: y,
                                minIdx: u,
                                position: _,
                                progress: e ? t / r : _ / n,
                                rel: g,
                                slides: v,
                                slidesLength: r,
                              }
                            );
                          }
                        })();
                    return (t.details = l), e.emit("detailsChanged"), l;
                  }
                  return (t = {
                    absToRel: R,
                    add: k,
                    details: null,
                    distToIdx: N,
                    idxToDist: T,
                    init: function (t) {
                      var s, f, h, m;
                      if (
                        ((function () {
                          if (
                            (o = (i = ((a = e.options).trackConfig || []).map(
                              function (e) {
                                return [
                                  x(e, "size", 1),
                                  x(e, "spacing", 0),
                                  x(e, "origin", 0),
                                ];
                              }
                            )).length)
                          ) {
                            r = g(
                              i.reduce(function (e, t) {
                                return e + t[0] + t[1];
                              }, 0)
                            );
                            var t,
                              s = o - 1;
                            (n = g(r + i[0][2] - i[s][0] - i[s][2] - i[s][1])),
                              (l = i.reduce(function (e, r) {
                                if (!e) return [0];
                                var n = i[e.length - 1],
                                  a = e[e.length - 1] + (n[0] + n[2]) + n[1];
                                return (
                                  (a -= r[2]),
                                  e[e.length - 1] > a && (a = e[e.length - 1]),
                                  (a = g(a)),
                                  e.push(a),
                                  (!t || t < a) && (c = e.length - 1),
                                  (t = a),
                                  e
                                );
                              }, null)),
                              0 === n && (c = 0),
                              l.push(g(r));
                          }
                        })(),
                        !o)
                      )
                        return I(!0);
                      (s = e.options.range),
                        (p = u =
                          (f = e.options.loop) ? x(f, "min", -1 / 0) : 0),
                        (b = d = f ? x(f, "max", v) : c),
                        (h = x(s, "min", null)),
                        (m = x(s, "max", null)),
                        null !== h && (u = h),
                        null !== m && (d = m),
                        (y =
                          u === -1 / 0 ? u : e.track.idxToDist(u || 0, !0, 0)),
                        (w = d === v ? d : T(d, !0, 0)),
                        null === m && (b = d),
                        x(s, "align", !1) &&
                          d !== v &&
                          0 === i[R(d)][2] &&
                          ((w -= 1 - i[R(d)][0]), (d = N(w - _))),
                        (y = g(y)),
                        (w = g(w)),
                        Number(t) === t ? k(S(O(t))) : I();
                    },
                    to: C,
                    velocity: function () {
                      var e = s(),
                        t = A.reduce(
                          function (t, r) {
                            var n = r.distance,
                              a = r.timestamp;
                            return (
                              e - a > 200 ||
                                (h(n) !== h(t.distance) &&
                                  t.distance &&
                                  (t = {
                                    distance: 0,
                                    lastTimestamp: 0,
                                    time: 0,
                                  }),
                                t.time && (t.distance += n),
                                t.lastTimestamp &&
                                  (t.time += a - t.lastTimestamp),
                                (t.lastTimestamp = a)),
                              t
                            );
                          },
                          { distance: 0, lastTimestamp: 0, time: 0 }
                        );
                      return t.distance / t.time || 0;
                    },
                  });
                })(i)),
                (i.animator = (function (e) {
                  var t, r, n, a, i, s;
                  function o(e) {
                    t.active = e;
                  }
                  function l(e) {
                    t.targetIdx = e;
                  }
                  function c() {
                    var t;
                    (t = i),
                      window.cancelAnimationFrame(t),
                      o(!1),
                      l(null),
                      s && e.emit("animationStopped"),
                      (s = null);
                  }
                  return (t = {
                    active: !1,
                    start: function (t) {
                      if ((c(), e.track.details)) {
                        var u = 0,
                          d = e.track.details.position;
                        (r = 0),
                          (n = 0),
                          (a = t.map(function (e) {
                            var t,
                              r = Number(d),
                              a = null != (t = e.earlyExit) ? t : e.duration,
                              i = e.easing,
                              s = e.distance * i(a / e.duration) || 0;
                            d += s;
                            var o = n;
                            return (
                              (n += a),
                              (u += s),
                              [r, e.distance, o, n, e.duration, i]
                            );
                          })),
                          l(e.track.distToIdx(u)),
                          (function t() {
                            i = window.requestAnimationFrame(function i(c) {
                              s || (s = c), o(!0);
                              var u = c - s;
                              u > n && (u = n);
                              var d = a[r];
                              if (d[3] < u) return r++, i(c);
                              var f = d[2],
                                h = d[4],
                                p = d[0],
                                x = d[1] * (0, d[5])(0 === h ? 1 : (u - f) / h);
                              if ((x && e.track.to(p + x), u < n)) return t();
                              (s = null),
                                o(!1),
                                l(null),
                                e.emit("animationEnded");
                            });
                          })(),
                          e.emit("animationStarted");
                      }
                    },
                    stop: c,
                    targetIdx: null,
                  });
                })(i)),
                a)
              )
                for (var e = 0; e < a.length; e++) (0, a[e])(i);
              i.track.init(i.options.initial || 0), i.emit("created");
            })(),
            i
          );
        } catch (e) {
          console.error(e);
        }
      };
      r.useKeenSlider = function (e, t) {
        var r = n.useRef(null),
          a = n.useRef(!1),
          i = n.useRef(e),
          s = n.useCallback(function (n) {
            n
              ? ((i.current = e),
                (r.current = new A(n, e, t)),
                (a.current = !1))
              : (r.current && r.current.destroy && r.current.destroy(),
                (r.current = null));
          }, []);
        return (
          n.useEffect(
            function () {
              (function e(t, r) {
                if (t === r) return !0;
                var n = typeof t;
                if (n !== typeof r) return !1;
                if ("object" !== n || null === t || null === r)
                  return "function" === n && t.toString() === r.toString();
                if (
                  t.length !== r.length ||
                  Object.getOwnPropertyNames(t).length !==
                    Object.getOwnPropertyNames(r).length
                )
                  return !1;
                for (var a in t) if (!e(t[a], r[a])) return !1;
                return !0;
              })(i.current, e) ||
                ((i.current = e), r.current && r.current.update(i.current));
            },
            [e]
          ),
          [s, r]
        );
      };
    },
    903569: (e) => {
      "use strict";
      e.s({ default: () => h });
      var t = e.i(150840),
        r = e.i(95032),
        n = e.i(79401),
        a = e.i(4718),
        i = e.i(46850),
        s = e.i(699677),
        o = e.i(972651),
        l = e.i(428880),
        c = e.i(756253),
        u = e.i(107906),
        d = e.i(94756);
      let f = (e) => {
          let { className: r, ...a } = e;
          return (0, t.jsx)("button", {
            type: "button",
            className: (0, n.cn)(
              "flex items-center justify-center bg-white rounded h-[70px] aspect-square font-yuanmo",
              "hover:translate-x-[1.5px] hover:translate-y-[1.5px]",
              "active:shadow-none active:translate-x-[4px] active:translate-y-[4px]",
              "border-[3px] shadow-[3px_3px_0_0_#000]",
              r
            ),
            ...a,
            children: (0, t.jsx)("span", {
              className: "text-lg font-bold",
              children: e.children,
            }),
          });
        },
        h = (e) => {
          var h, p;
          let { className: x, ...g } = e,
            b = (0, o.useTranslations)("homepage.mission"),
            [m, y] = (0, c.useState)("/bg-forest.jpg"),
            { width: w } = (0, a.useWindowSize)();
          (0, c.useEffect)(() => {
            w && w < 1024 ? y("/bg-forest.jpg") : y("/bg-forest--lg.jpg");
          }, [w]);
          let [v, A] = (0, c.useState)(0),
            [E, _] = (0, c.useState)(!1),
            [k, N] = (0, i.useKeenSlider)({
              loop: !0,
              mode: "snap",
              slides: { perView: 1, spacing: 20 },
              breakpoints: {
                "(min-width: 768px)": { slides: { perView: 2, spacing: 30 } },
                "(min-width: 1024px)": { disabled: !0 },
              },
              created() {
                setTimeout(() => {
                  _(!0);
                }, 100);
              },
              slideChanged(e) {
                A(e.track.details.rel);
              },
            }),
            P = (0, s.useMessages)(),
            T =
              (null == P || null == (p = P.homepage) || null == (h = p.mission)
                ? void 0
                : h.items) || [];
          return (0, t.jsx)(r.default, {
            id: "mission",
            imageUrl: m,
            className: (0, n.cn)(
              "py-6 lg:py-8 xl:py-10 bg-bottom overflow-hidden scroll-mt-header",
              x
            ),
            ...g,
            children: (0, t.jsxs)("div", {
              className: "relative container text-center",
              children: [
                (0, t.jsx)(d.default, {
                  variant: "h2",
                  className: "text-white lg:mb-6",
                  children: b("title"),
                }),
                (0, t.jsxs)("div", {
                  className: "relative",
                  children: [
                    (0, t.jsx)("div", {
                      className:
                        "relative rich-content text-base lg:text-lg max-w-[561px] mx-auto mb-4 lg:mb-6 z-[1]",
                      dangerouslySetInnerHTML: { __html: b.raw("content") },
                    }),
                    (0, t.jsx)("div", {
                      className:
                        "absolute top-[-100px] left-1/2 translate-x-[-320px] w-[384px] h-[365px] bg-radial-fade",
                    }),
                    (0, t.jsx)("div", {
                      className:
                        "absolute top-[-100px] left-1/2 translate-x-[-70px] w-[384px] h-[365px] bg-radial-fade",
                    }),
                  ],
                }),
                (0, t.jsx)("div", {
                  ref: k,
                  className: (0, n.cn)(
                    "keen-slider w-full max-w-full overflow-hidden",
                    "lg:grid lg:grid-cols-2 lg:gap-4 lg:max-w-[1120px] lg:mx-auto lg:mb-6",
                    {
                      "opacity-0": !E,
                      "opacity-100 transition-opacity duration-300": E,
                    }
                  ),
                  children: T.map((e, r) =>
                    (0, t.jsxs)(
                      "div",
                      {
                        className: (0, n.cn)(
                          "keen-slider__slide p-4 rounded border-[3px]",
                          {
                            "bg-green lg:bg-white": r % 2 == 0,
                            "bg-white": r % 2 != 0,
                            "lg:bg-green": [0, 3, 4].includes(r),
                          }
                        ),
                        children: [
                          (0, t.jsx)("div", {
                            className:
                              "font-yuanmo font-bold uppercase max-w-[334px] mx-auto mb-3 text-balance",
                            children: e.title,
                          }),
                          (0, t.jsx)("div", {
                            className: "text-base",
                            children: e.content,
                          }),
                        ],
                      },
                      r
                    )
                  ),
                }),
                (0, t.jsxs)("div", {
                  className:
                    "flex items-center justify-center gap-4 my-4 lg:hidden",
                  children: [
                    (0, t.jsx)(f, {
                      onClick: () => {
                        let e = N.current;
                        e && e.prev();
                      },
                      children: (0, t.jsx)(u.FaArrowLeft, {}),
                    }),
                    (0, t.jsxs)("div", {
                      className: "px-4",
                      children: [v + 1, " / ", T.length],
                    }),
                    (0, t.jsx)(f, {
                      onClick: () => {
                        let e = N.current;
                        e && e.next();
                      },
                      children: (0, t.jsx)(u.FaArrowRight, {}),
                    }),
                  ],
                }),
                (0, t.jsxs)("div", {
                  className:
                    "flex items-center justify-center max-w-[400px] mx-auto lg:justify-between xl:hidden",
                  children: [
                    (0, t.jsx)(l.default, {
                      src: "/pandas/ninja.gif",
                      alt: "",
                      width: 178,
                      height: 178,
                      unoptimized: !0,
                      className:
                        "h-[178px] aspect-square scale-x-[-1] translate-x-[40px]",
                    }),
                    (0, t.jsx)(l.default, {
                      src: "/pandas/balaclava.gif",
                      alt: "",
                      width: 113,
                      height: 113,
                      unoptimized: !0,
                      className:
                        "h-[113px] aspect-square translate-x-[-10px] translate-y-[-30px]",
                    }),
                    (0, t.jsx)(l.default, {
                      src: "/pandas/save.gif",
                      alt: "",
                      width: 150,
                      height: 150,
                      unoptimized: !0,
                      className: "h-[150px] aspect-square translate-x-[-40px]",
                    }),
                    (0, t.jsx)(l.default, {
                      src: "/pandas/hooded.gif",
                      alt: "",
                      width: 114,
                      height: 114,
                      unoptimized: !0,
                      className:
                        "h-[114px] aspect-square translate-x-[-70px] translate-y-[-30px]",
                    }),
                  ],
                }),
                (0, t.jsxs)("div", {
                  className: "hidden xl:block",
                  children: [
                    (0, t.jsx)(l.default, {
                      src: "/pandas/ninja.gif",
                      alt: "",
                      width: 362,
                      height: 362,
                      unoptimized: !0,
                      className:
                        "h-[362px] aspect-square scale-x-[-1] absolute bottom-[-50px] left-[-130px]",
                    }),
                    (0, t.jsx)(l.default, {
                      src: "/pandas/balaclava.gif",
                      alt: "",
                      width: 228,
                      height: 228,
                      unoptimized: !0,
                      className:
                        "h-[228px] aspect-square absolute bottom-[230px] left-[-140px]",
                    }),
                    (0, t.jsx)(l.default, {
                      src: "/pandas/save.gif",
                      alt: "",
                      width: 303,
                      height: 303,
                      unoptimized: !0,
                      className:
                        "h-[303px] aspect-square absolute bottom-[-50px] right-[-130px]",
                    }),
                    (0, t.jsx)(l.default, {
                      src: "/pandas/hooded.gif",
                      alt: "",
                      width: 232,
                      height: 232,
                      unoptimized: !0,
                      className:
                        "h-[232px] aspect-square absolute bottom-[170px] right-[-180px]",
                    }),
                  ],
                }),
                (0, t.jsxs)("div", {
                  className: "flex items-center justify-center gap-8",
                  children: [
                    (0, t.jsx)(l.default, {
                      src: "/wwf.webp",
                      alt: "",
                      width: 62,
                      height: 62,
                    }),
                    (0, t.jsx)(l.default, {
                      src: "/pandas-international.png",
                      alt: "",
                      width: 62,
                      height: 62,
                    }),
                  ],
                }),
              ],
            }),
          });
        };
    },
    559912: (e) => {
      var { m: t, e: r } = e;
      Object.defineProperty(r, "__esModule", { value: !0 });
      var n = e.r(756253),
        a = (function (e) {
          return e && "object" == typeof e && "default" in e
            ? e
            : { default: e };
        })(n);
      !(function (e) {
        if (!e || "undefined" == typeof window) return;
        let t = document.createElement("style");
        t.setAttribute("type", "text/css"),
          (t.innerHTML = e),
          document.head.appendChild(t);
      })(
        '.rfm-marquee-container {\n  overflow-x: hidden;\n  display: flex;\n  flex-direction: row;\n  position: relative;\n  width: var(--width);\n  transform: var(--transform);\n}\n.rfm-marquee-container:hover div {\n  animation-play-state: var(--pause-on-hover);\n}\n.rfm-marquee-container:active div {\n  animation-play-state: var(--pause-on-click);\n}\n\n.rfm-overlay {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n}\n.rfm-overlay::before, .rfm-overlay::after {\n  background: linear-gradient(to right, var(--gradient-color), rgba(255, 255, 255, 0));\n  content: "";\n  height: 100%;\n  position: absolute;\n  width: var(--gradient-width);\n  z-index: 2;\n  pointer-events: none;\n  touch-action: none;\n}\n.rfm-overlay::after {\n  right: 0;\n  top: 0;\n  transform: rotateZ(180deg);\n}\n.rfm-overlay::before {\n  left: 0;\n  top: 0;\n}\n\n.rfm-marquee {\n  flex: 0 0 auto;\n  min-width: var(--min-width);\n  z-index: 1;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  animation: scroll var(--duration) linear var(--delay) var(--iteration-count);\n  animation-play-state: var(--play);\n  animation-delay: var(--delay);\n  animation-direction: var(--direction);\n}\n@keyframes scroll {\n  0% {\n    transform: translateX(0%);\n  }\n  100% {\n    transform: translateX(-100%);\n  }\n}\n\n.rfm-initial-child-container {\n  flex: 0 0 auto;\n  display: flex;\n  min-width: auto;\n  flex-direction: row;\n  align-items: center;\n}\n\n.rfm-child {\n  transform: var(--transform);\n}'
      ),
        (r.default = n.forwardRef(function (e, t) {
          let {
              style: r = {},
              className: i = "",
              autoFill: s = !1,
              play: o = !0,
              pauseOnHover: l = !1,
              pauseOnClick: c = !1,
              direction: u = "left",
              speed: d = 50,
              delay: f = 0,
              loop: h = 0,
              gradient: p = !1,
              gradientColor: x = "white",
              gradientWidth: g = 200,
              onFinish: b,
              onCycleComplete: m,
              onMount: y,
              children: w,
            } = e,
            [v, A] = n.useState(0),
            [E, _] = n.useState(0),
            [k, N] = n.useState(1),
            [P, T] = n.useState(!1),
            S = n.useRef(null),
            O = t || S,
            R = n.useRef(null),
            C = n.useCallback(() => {
              if (R.current && O.current) {
                let e = O.current.getBoundingClientRect(),
                  t = R.current.getBoundingClientRect(),
                  r = e.width,
                  n = t.width;
                ("up" === u || "down" === u) &&
                  ((r = e.height), (n = t.height)),
                  s && r && n ? N(n < r ? Math.ceil(r / n) : 1) : N(1),
                  A(r),
                  _(n);
              }
            }, [s, O, u]);
          n.useEffect(() => {
            if (P && (C(), R.current && O.current)) {
              let e = new ResizeObserver(() => C());
              return (
                e.observe(O.current),
                e.observe(R.current),
                () => {
                  e && e.disconnect();
                }
              );
            }
          }, [C, O, P]),
            n.useEffect(() => {
              C();
            }, [C, w]),
            n.useEffect(() => {
              T(!0);
            }, []),
            n.useEffect(() => {
              "function" == typeof y && y();
            }, []);
          let I = n.useMemo(
              () => (s ? (E * k) / d : E < v ? v / d : E / d),
              [s, v, E, k, d]
            ),
            B = n.useMemo(
              () =>
                Object.assign(Object.assign({}, r), {
                  "--pause-on-hover": !o || l ? "paused" : "running",
                  "--pause-on-click":
                    !o || (l && !c) || c ? "paused" : "running",
                  "--width": "up" === u || "down" === u ? "100vh" : "100%",
                  "--transform":
                    "up" === u
                      ? "rotate(-90deg)"
                      : "down" === u
                      ? "rotate(90deg)"
                      : "none",
                }),
              [r, o, l, c, u]
            ),
            U = n.useMemo(
              () => ({
                "--gradient-color": x,
                "--gradient-width":
                  "number" == typeof g ? "".concat(g, "px") : g,
              }),
              [x, g]
            ),
            M = n.useMemo(
              () => ({
                "--play": o ? "running" : "paused",
                "--direction": "left" === u ? "normal" : "reverse",
                "--duration": "".concat(I, "s"),
                "--delay": "".concat(f, "s"),
                "--iteration-count": h ? "".concat(h) : "infinite",
                "--min-width": s ? "auto" : "100%",
              }),
              [o, u, I, f, h, s]
            ),
            j = n.useMemo(
              () => ({
                "--transform":
                  "up" === u
                    ? "rotate(90deg)"
                    : "down" === u
                    ? "rotate(-90deg)"
                    : "none",
              }),
              [u]
            ),
            F = n.useCallback(
              (e) =>
                [...Array(Number.isFinite(e) && e >= 0 ? e : 0)].map((e, t) =>
                  a.default.createElement(
                    n.Fragment,
                    { key: t },
                    n.Children.map(w, (e) =>
                      a.default.createElement(
                        "div",
                        { style: j, className: "rfm-child" },
                        e
                      )
                    )
                  )
                ),
              [j, w]
            );
          return P
            ? a.default.createElement(
                "div",
                { ref: O, style: B, className: "rfm-marquee-container " + i },
                p &&
                  a.default.createElement("div", {
                    style: U,
                    className: "rfm-overlay",
                  }),
                a.default.createElement(
                  "div",
                  {
                    className: "rfm-marquee",
                    style: M,
                    onAnimationIteration: m,
                    onAnimationEnd: b,
                  },
                  a.default.createElement(
                    "div",
                    { className: "rfm-initial-child-container", ref: R },
                    n.Children.map(w, (e) =>
                      a.default.createElement(
                        "div",
                        { style: j, className: "rfm-child" },
                        e
                      )
                    )
                  ),
                  F(k - 1)
                ),
                a.default.createElement(
                  "div",
                  { className: "rfm-marquee", style: M },
                  F(k)
                )
              )
            : null;
        }));
    },
    549014: (e) => {
      "use strict";
      e.s({ default: () => s });
      var t = e.i(150840),
        r = e.i(79401),
        n = e.i(428880),
        a = e.i(559912);
      let i = [
          {
            key: "bitcoinist",
            image: { url: "/p/bitcoinist.webp", width: 144, height: 19 },
          },
          {
            key: "ambcrypto",
            image: { url: "/p/ambcrypto.webp", width: 115, height: 30 },
          },
          {
            key: "coingape",
            image: { url: "/p/coingape.webp", width: 130, height: 36 },
          },
          {
            key: "cryptopolitan",
            image: { url: "/p/cryptopolitan.webp", width: 141, height: 32 },
          },
          {
            key: "cointelegraph",
            image: { url: "/p/cointelegraph.webp", width: 135, height: 32 },
          },
          {
            key: "nftevening",
            image: { url: "/p/nftevening.webp", width: 105, height: 34 },
          },
        ],
        s = (e) => {
          let { className: s, ...o } = e;
          return (0, t.jsx)("section", {
            className: (0, r.cn)("bg-black py-6 lg:py-8", s),
            ...o,
            children: (0, t.jsx)(a.default, {
              className: (0, r.cn)("select-none"),
              speed: 50,
              pauseOnHover: !0,
              autoFill: !0,
              children: i.map((e) =>
                (0, t.jsx)(
                  n.default,
                  {
                    src: e.image.url,
                    width: e.image.width,
                    height: e.image.height,
                    alt: e.key,
                    className: (0, r.cn)("mx-8"),
                  },
                  e.key
                )
              ),
            }),
          });
        };
    },
    785351: (e) => {
      "use strict";
      e.s({ default: () => d }, 785351);
      var t = e.i(150840),
        r = e.i(74801),
        n = e.i(79401),
        a = e.i(699677),
        i = e.i(972651),
        s = e.i(428880);
      let o = (e) => {
        let { className: r, ...a } = e;
        return (0, t.jsx)(s.default, {
          className: (0, n.cn)("w-[52px] h-[74px]", r),
          ...a,
          unoptimized: !0,
          src: "/bamboo.gif",
          alt: "",
          width: 52,
          height: 74,
        });
      };
      var l = e.i(671678),
        c = e.i(995729),
        u = e.i(94756);
      let d = (e) => {
        let { className: d, ...f } = e,
          h = (0, a.useMessages)(),
          p = (0, i.useTranslations)("homepage.roadmap"),
          x = (0, i.useTranslations)("cta"),
          g = (0, r.useScrollToTop)(),
          b = h.homepage.roadmap;
        return (0, t.jsx)("section", {
          id: "roadmap",
          className: (0, n.cn)(
            "relative bg-pink py-4 lg:py-6 xl:py-10 scroll-mt-total-header overflow-hidden",
            d
          ),
          ...f,
          children: (0, t.jsx)("div", {
            className: "relative",
            children: (0, t.jsxs)("div", {
              className: "relative container text-center",
              children: [
                (0, t.jsxs)("div", {
                  children: [
                    (0, t.jsx)(o, { className: "absolute top-0 left-0" }),
                    (0, t.jsx)(o, {
                      className: "absolute top-[-30px] right-0",
                    }),
                    (0, t.jsx)(o, {
                      className: "absolute top-[250px] left-[-90px]",
                    }),
                    (0, t.jsx)(o, {
                      className:
                        "absolute top-[220px] left-1/2 translate-x-[220px]",
                    }),
                    (0, t.jsx)(o, {
                      className:
                        "absolute bottom-[90px] left-1/2 translate-x-[-400px]",
                    }),
                    (0, t.jsx)(o, {
                      className: "absolute bottom-[140px] right-[-100px]",
                    }),
                  ],
                }),
                (0, t.jsx)(u.default, {
                  variant: "h2",
                  className: "text-white mb-4 lg:mb-6 xl:mb-10",
                  children: p("title"),
                }),
                (0, t.jsxs)("div", {
                  className: "grid lg:grid-cols-3",
                  children: [
                    (0, t.jsxs)("div", {
                      className: "flex flex-col items-center relative",
                      children: [
                        (0, t.jsx)("div", {
                          className:
                            "hidden lg:block absolute top-[200px] left-[60%] h-[3px] w-[79%] z-0 border-t-[3px] border-dotted border-black bg-transparent",
                        }),
                        (0, t.jsx)("div", {
                          className:
                            "lg:h-[180px] lg:flex lg:items-end relative",
                          children: (0, t.jsx)(s.default, {
                            src: "/pandas/panda-tea.gif",
                            unoptimized: !0,
                            width: 228,
                            height: 228,
                            alt: "",
                            className: "mx-auto mb-2",
                          }),
                        }),
                        (0, t.jsx)(c.default, {
                          className: "bg-green mb-4",
                          children: "1",
                        }),
                        (0, t.jsx)("div", {
                          className: "font-bold mb-2",
                          children: p("one.title"),
                        }),
                        (0, t.jsx)("ul", {
                          className:
                            "!list-inside !list-disc text-base max-w-[360px] mx-auto space-y-1 !pl-0",
                          children: b.one.items.map((e, r) =>
                            (0, t.jsx)("li", { children: e }, r)
                          ),
                        }),
                      ],
                    }),
                    (0, t.jsxs)("div", {
                      className: "flex flex-col items-center relative",
                      children: [
                        (0, t.jsx)("div", {
                          className:
                            "hidden lg:block absolute top-[200px] left-[60%] h-[3px] w-[79%] z-0 border-t-[3px] border-dotted border-black bg-transparent",
                        }),
                        (0, t.jsx)("div", {
                          className:
                            "lg:h-[180px] lg:flex lg:items-end relative",
                          children: (0, t.jsx)(s.default, {
                            src: "/pandas/zen.gif",
                            unoptimized: !0,
                            width: 279,
                            height: 279,
                            alt: "",
                            className: "mx-auto",
                          }),
                        }),
                        (0, t.jsx)(c.default, {
                          className: "bg-green mb-4",
                          children: "2",
                        }),
                        (0, t.jsx)("div", {
                          className: "font-bold mb-2",
                          children: p("two.title"),
                        }),
                        (0, t.jsx)("ul", {
                          className:
                            "!list-inside !list-disc text-base max-w-[360px] mx-auto space-y-1 !pl-0",
                          children: b.two.items.map((e, r) =>
                            (0, t.jsx)("li", { children: e }, r)
                          ),
                        }),
                      ],
                    }),
                    (0, t.jsxs)("div", {
                      className: "flex flex-col items-center",
                      children: [
                        (0, t.jsx)("div", {
                          className:
                            "lg:h-[180px] lg:flex lg:items-end relative",
                          children: (0, t.jsx)(s.default, {
                            src: "/pandas/panda-plump.gif",
                            unoptimized: !0,
                            width: 223,
                            height: 223,
                            alt: "",
                            className: "mx-auto mb-2",
                          }),
                        }),
                        (0, t.jsx)(c.default, {
                          className: "bg-green mb-4",
                          children: "3",
                        }),
                        (0, t.jsx)("div", {
                          className: "font-bold mb-2",
                          children: p("three.title"),
                        }),
                        (0, t.jsx)("ul", {
                          className:
                            "!list-inside !list-disc text-base max-w-[360px] mx-auto space-y-1 pl-6",
                          children: b.three.items.map((e, r) =>
                            (0, t.jsx)("li", { children: e }, r)
                          ),
                        }),
                      ],
                    }),
                  ],
                }),
                (0, t.jsx)(l.default, {
                  onClick: window.open("https://app.uniswap.org/#/swap?inputCurrency=eth&outputCurrency=0x48cbe46189083fa41cd237f384c0307d49b1dce9", "_blank"),
                  className: "w-full sm:w-fit sm:mx-auto lg:mt-6",
                  children: x("buyNow"),
                }),
              ],
            }),
          }),
        });
      };
    },
    852684: (e) => {
      "use strict";
      e.s({ default: () => c });
      var t = e.i(150840),
        r = e.i(164897),
        n = e.i(377450),
        a = e.i(79401),
        i = e.i(972651),
        s = e.i(428880),
        o = e.i(124419),
        l = e.i(94756);
      let c = (e) => {
        let { className: c, ...u } = e,
          d = (0, i.useTranslations)("homepage.tokenomics"),
          f = [
            { name: d("presale"), percentage: 68, image: "/abacus-purple.svg" },
            { name: d("liquidity"), percentage: 8, image: "/abacus-blue.svg" },
            { name: d("marketing"), percentage: 2, image: "/abacus-green.svg" },
            {
              name: d("conservation"),
              percentage: 10,
              image: "/abacus-yellow.svg",
              vesting: d("conservationVesting"),
            },
            {
              name: d("team"),
              percentage: 2,
              image: "/abacus-red.svg",
              vesting: d("teamVesting"),
            },
            { name: d("birth"), percentage: 10, image: "/abacus-teal.svg" },
          ],
          { state: h } = (0, n.usePresaleContext)(),
          p = h.stagePrices.map((e, t) => ({
            name: (t + 1).toString(),
            price: e.price,
            increase: 0 === t ? 0 : 15 - t,
            isComplete:
              t + 1 < ((null == h ? void 0 : h.currentStageNumber) || 0),
          }));
        return (0, t.jsx)("section", {
          className: (0, a.cn)(
            "relative bg-blue overflow-hidden py-6 lg:pb-0 lg:pt-8 xl:pt-10",
            c
          ),
          ...u,
          children: (0, t.jsxs)("div", {
            className: "container text-center",
            children: [
              (0, t.jsx)(l.default, {
                variant: "h2",
                className: "text-white lg:mb-4",
                children: d("title"),
              }),
              (0, t.jsx)(l.default, {
                variant: "h3",
                className: "lg:text-lg",
                children: d("subtitle"),
              }),
              (0, t.jsx)("div", {
                className:
                  "uppercase font-bold text-base lg:text-lg mb-4 lg:mb-6",
                dangerouslySetInnerHTML: { __html: d.raw("content") },
              }),
              (0, t.jsxs)("div", {
                className: "grid lg:grid-cols-2 gap-4 lg:gap-10",
                children: [
                  (0, t.jsxs)("div", {
                    children: [
                      (0, t.jsxs)("div", {
                        className:
                          "uppercase font-bold text-base lg:text-lg mb-4",
                        children: [
                          d.raw("totalTokens"),
                          " ",
                          (0, t.jsx)("span", {
                            className: "font-yuanmo",
                            children: "1,000,000,000",
                          }),
                        ],
                      }),
                      (0, t.jsx)(s.default, {
                        src: "/abacus.svg",
                        alt: "",
                        width: 592,
                        height: 387,
                        className: "mx-auto mb-4 lg:mb-8",
                      }),
                      (0, t.jsxs)("div", {
                        className: "text-left max-w-[608px] mx-auto",
                        children: [
                          (0, t.jsxs)("div", {
                            className:
                              "flex justify-between text-sm lg:text-base uppercase font-bold pb-1 border-b-2",
                            children: [
                              (0, t.jsx)("div", {
                                className: "flex-1",
                                children: d("allocation"),
                              }),
                              (0, t.jsx)("div", {
                                className: "w-[61px] lg:w-[85px]",
                                children: "%",
                              }),
                              (0, t.jsx)("div", {
                                className: "w-[121px] lg:w-[166px]",
                                children: d("vesting"),
                              }),
                            ],
                          }),
                          (0, t.jsx)("div", {
                            className: "space-y-1 mt-1",
                            children: f.map((e, r) =>
                              (0, t.jsxs)(
                                "div",
                                {
                                  className:
                                    "flex items-center justify-between gap-2 lg:gap-3 pb-1 border-b-2",
                                  children: [
                                    (0, t.jsxs)("div", {
                                      className:
                                        "w-[137px] lg:w-auto flex-1 font-bold uppercase flex items-center gap-2 lg:gap-3 text-sm lg:text-base",
                                      children: [
                                        (0, t.jsx)(s.default, {
                                          src: e.image,
                                          alt: "",
                                          width: 34,
                                          height: 34,
                                          className:
                                            "h-[24px] min-w-[24px] max-w-[24px] aspect-square lg:h-[34px] lg:min-w-[34px] lg:max-w-[34px]",
                                        }),
                                        (0, t.jsx)("div", { children: e.name }),
                                      ],
                                    }),
                                    (0, t.jsxs)("div", {
                                      className:
                                        "w-[61px] lg:w-[85px] font-yuanmo text-[24px] lg:text-2xl",
                                      children: [e.percentage, "%"],
                                    }),
                                    (0, t.jsx)("div", {
                                      className:
                                        "w-[121px] lg:w-[166px] text-sm",
                                      children: e.vesting || "",
                                    }),
                                  ],
                                },
                                r
                              )
                            ),
                          }),
                        ],
                      }),
                    ],
                  }),
                  (0, t.jsxs)("div", {
                    className: "w-full",
                    children: [
                      (0, t.jsxs)("table", {
                        className:
                          "w-full mb-4 lg:mb-8 border-[3px] rounded border-separate border-spacing-0",
                        children: [
                          (0, t.jsx)("thead", {
                            className:
                              "font-yuanmo bg-black text-white uppercase text-xs lg:text-lg",
                            children: (0, t.jsxs)("tr", {
                              children: [
                                (0, t.jsx)("th", {
                                  className: "py-2",
                                  children: d("tableHeader.stage"),
                                }),
                                (0, t.jsx)("th", {
                                  className: "py-2",
                                  children: d("tableHeader.price"),
                                }),
                                (0, t.jsx)("th", {
                                  className: "py-2",
                                  children: d("tableHeader.increase"),
                                }),
                              ],
                            }),
                          }),
                          (0, t.jsx)("tbody", {
                            className: "text-base lg:text-lg",
                            children: p.map((e, r) =>
                              (0, t.jsxs)(
                                "tr",
                                {
                                  className: (0, a.cn)("font-semibold", {
                                    "bg-black text-white": r % 2 != 0,
                                  }),
                                  children: [
                                    (0, t.jsx)("td", {
                                      className: "px-2 py-2",
                                      children: e.isComplete
                                        ? (0, t.jsx)("div", {
                                            className:
                                              "bg-red-400 text-black border-2 rounded uppercase text-sm lg:text-base",
                                            children: d("soldOut"),
                                          })
                                        : e.name,
                                    }),
                                    (0, t.jsxs)("td", {
                                      className: "px-2 py-2",
                                      children: ["$", e.price.toFixed(5)],
                                    }),
                                    (0, t.jsx)("td", {
                                      className: "px-2 py-2",
                                      children: e.increase
                                        ? "".concat(e.increase, "%")
                                        : "-",
                                    }),
                                  ],
                                },
                                r
                              )
                            ),
                          }),
                        ],
                      }),
                      (0, t.jsxs)("div", {
                        className: "text-center",
                        children: [
                          (0, t.jsx)("div", {
                            className: "font-yuanmo uppercase mb-1",
                            children: d("tokenAddress"),
                          }),
                          (0, t.jsx)(o.default, {
                            href: "https://etherscan.io/token/".concat(
                              r.websiteConfig.token.address
                            ),
                            target: "_blank",
                            rel: "noopener noreferrer",
                            className: "font-bold break-all hover:underline",
                            children: r.websiteConfig.token.address,
                          }),
                        ],
                      }),
                      (0, t.jsxs)("div", {
                        className:
                          "hidden lg:flex lg:items-center lg:justify-center lg:mb-[-60px]",
                        children: [
                          (0, t.jsx)(s.default, {
                            src: "/pandas/lollipop.gif",
                            alt: "",
                            width: 263,
                            height: 263,
                            unoptimized: !0,
                            className: "h-[263px] aspect-square",
                          }),
                          (0, t.jsx)(s.default, {
                            src: "/pandas/eat-dumplings.gif",
                            alt: "",
                            width: 306,
                            height: 306,
                            unoptimized: !0,
                            className: "h-[306px] aspect-square",
                          }),
                        ],
                      }),
                    ],
                  }),
                ],
              }),
            ],
          }),
        });
      };
    },
    164375: (e) => {
      "use strict";
      e.s({ default: () => c }, 164375);
      var t = e.i(150840),
        r = e.i(74801),
        n = e.i(79401),
        a = e.i(972651),
        i = e.i(428880),
        s = e.i(671678);
      let o = (e) => {
        let { className: r, altSushi: a, ...s } = e;
        return (0, t.jsx)(i.default, {
          className: (0, n.cn)("w-[30px] h-[43px] xl:w-[48px] xl:h-[69px]", r),
          ...s,
          unoptimized: !0,
          src: a ? "/sushi-alt.gif" : "/sushi.gif",
          alt: "",
          width: 48,
          height: 69,
        });
      };
      var l = e.i(94756);
      let c = (e) => {
        let { className: c, ...u } = e,
          d = (0, a.useTranslations)("homepage.why"),
          f = (0, r.useScrollToTop)();
        return (0, t.jsx)("section", {
          id: "why",
          className: (0, n.cn)(
            "bg-blue py-6 lg:py-8 overflow-hidden scroll-mt-header",
            c
          ),
          ...u,
          children: (0, t.jsxs)("div", {
            className: "relative container text-center xl:text-left",
            children: [
              (0, t.jsxs)("div", {
                className: "relative w-fit mx-auto text-center",
                children: [
                  (0, t.jsx)(l.default, {
                    variant: "h2",
                    className: "text-white xl:mb-8",
                    children: d("title"),
                  }),
                  (0, t.jsx)(o, {
                    className: "absolute left-[-40px] bottom-0 xl:hidden",
                  }),
                  (0, t.jsx)(o, {
                    altSushi: !0,
                    className: "absolute right-[-40px] top-[-25px] xl:hidden",
                  }),
                ],
              }),
              (0, t.jsxs)("div", {
                className: "xl:flex xl:items-center",
                children: [
                  (0, t.jsxs)("div", {
                    className: "lg:max-w-[561px] lg:mx-auto xl:mx-0",
                    children: [
                      (0, t.jsx)("div", {
                        className: "rich-content text-base lg:text-lg",
                        dangerouslySetInnerHTML: { __html: d.raw("content") },
                      }),
                      (0, t.jsx)(s.default, {
                        onClick: f,
                        className: "w-full sm:w-fit lg:mt-5 sm:mx-auto xl:mx-0",
                        children: d("ctaLabel"),
                      }),
                    ],
                  }),
                  (0, t.jsxs)("div", {
                    className:
                      "flex-1 items-center justify-center gap-2 mt-6 hidden xl:flex",
                    children: [
                      (0, t.jsx)(i.default, {
                        src: "/pandas/eating-sushi.gif",
                        unoptimized: !0,
                        alt: "",
                        width: 276,
                        height: 276,
                        className: "translate-x-[230px] translate-y-[-20px]",
                      }),
                      (0, t.jsx)(i.default, {
                        src: "/pandas/streetwear.gif",
                        unoptimized: !0,
                        alt: "",
                        width: 223,
                        height: 223,
                        className: "translate-x-[120px] translate-y-[25px]",
                      }),
                      (0, t.jsx)(i.default, {
                        src: "/pandas/social.gif",
                        unoptimized: !0,
                        alt: "",
                        width: 275,
                        height: 275,
                        className: "translate-x-[20px] translate-y-[-40px]",
                      }),
                      (0, t.jsx)(i.default, {
                        src: "/pandas/zen.gif",
                        unoptimized: !0,
                        alt: "",
                        width: 267,
                        height: 267,
                        className: "translate-x-[-115px] translate-y-[30px]",
                      }),
                      (0, t.jsx)(i.default, {
                        src: "/pandas/bamboo.gif",
                        unoptimized: !0,
                        alt: "",
                        width: 244,
                        height: 244,
                        className: "translate-x-[-230px] translate-y-[-30px]",
                      }),
                    ],
                  }),
                  (0, t.jsxs)("div", {
                    className:
                      "flex items-center justify-center gap-2 lg:mt-6 mt-8 xl:hidden",
                    children: [
                      (0, t.jsxs)("div", {
                        className: "relative min-w-[140px] aspect-square",
                        children: [
                          (0, t.jsx)(i.default, {
                            src: "/pandas/eating-sushi.gif",
                            unoptimized: !0,
                            alt: "",
                            width: 140,
                            height: 140,
                            className:
                              "translate-y-[-20px] translate-x-[120px]",
                          }),
                          (0, t.jsx)(o, {
                            className: "absolute left-[175px] bottom-[-10px]",
                          }),
                        ],
                      }),
                      (0, t.jsx)(i.default, {
                        src: "/pandas/streetwear.gif",
                        unoptimized: !0,
                        alt: "",
                        width: 112,
                        height: 112,
                        className: "translate-x-[60px] translate-y-[5px]",
                      }),
                      (0, t.jsx)(i.default, {
                        src: "/pandas/social.gif",
                        unoptimized: !0,
                        alt: "",
                        width: 139,
                        height: 139,
                        className: "translate-x-[5px] translate-y-[-30px]",
                      }),
                      (0, t.jsxs)("div", {
                        className: "relative min-w-[134px] aspect-square",
                        children: [
                          (0, t.jsx)(i.default, {
                            src: "/pandas/zen.gif",
                            unoptimized: !0,
                            alt: "",
                            width: 134,
                            height: 134,
                            className: "translate-x-[-65px] translate-y-[7px]",
                          }),
                          (0, t.jsx)(o, {
                            className: "absolute left-[-15px] top-[-28px]",
                          }),
                        ],
                      }),
                      (0, t.jsxs)("div", {
                        className: "relative min-w-[123px] aspect-square",
                        children: [
                          (0, t.jsx)(i.default, {
                            src: "/pandas/bamboo.gif",
                            unoptimized: !0,
                            alt: "",
                            width: 123,
                            height: 123,
                            className:
                              "translate-x-[-130px] translate-y-[-30px]",
                          }),
                          (0, t.jsx)(o, {
                            altSushi: !0,
                            className: "absolute right-[135px] bottom-[10px]",
                          }),
                        ],
                      }),
                    ],
                  }),
                ],
              }),
              (0, t.jsxs)("div", {
                className: "hidden xl:block",
                children: [
                  (0, t.jsx)(o, {
                    altSushi: !0,
                    className: "absolute left-[-80px] top-[280px]",
                  }),
                  (0, t.jsx)(o, {
                    className: "absolute left-[40px] top-[40px]",
                  }),
                  (0, t.jsx)(o, {
                    className: "absolute left-[520px] bottom-[-30px]",
                  }),
                  (0, t.jsx)(o, {
                    altSushi: !0,
                    className: "absolute left-[760px] top-[150px]",
                  }),
                  (0, t.jsx)(o, {
                    altSushi: !0,
                    className: "absolute right-[160px] bottom-[-10px]",
                  }),
                  (0, t.jsx)(o, {
                    className: "absolute right-[10px] top-[130px]",
                  }),
                ],
              }),
            ],
          }),
        });
      };
    },
  },
]);

//# sourceMappingURL=703b9786037929aa.js.map
