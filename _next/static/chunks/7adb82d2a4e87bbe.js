(globalThis.TURBOPACK = globalThis.TURBOPACK || []).push([
  "object" == typeof document ? document.currentScript : void 0,
  {
    113029: (e) => {
      "use strict";
      e.s({ eventBus: () => n });
      var a = e.i(11968);
      let n = new (class {
        on(e, a) {
          var n;
          null != (n = this.events)[e] || (n[e] = []), this.events[e].push(a);
        }
        off(e, a) {
          var n;
          this.events[e] = (null != (n = this.events[e]) ? n : []).filter(
            (e) => e !== a
          );
        }
        emit(e) {
          for (
            var a, n = arguments.length, o = Array(n > 1 ? n - 1 : 0), r = 1;
            r < n;
            r++
          )
            o[r - 1] = arguments[r];
          (null != (a = this.events[e]) ? a : []).forEach((e) => e(...o));
        }
        constructor() {
          (0, a._)(this, "events", {});
        }
      })();
    },
    282665: (e) => {
      "use strict";
      var a,
        { m: n, e: o } = e;
      Object.defineProperty(o, "__esModule", { value: !0 }),
        (o.Doctype =
          o.CDATA =
          o.Tag =
          o.Style =
          o.Script =
          o.Comment =
          o.Directive =
          o.Text =
          o.Root =
          o.isTag =
          o.ElementType =
            void 0),
        (function (e) {
          (e.Root = "root"),
            (e.Text = "text"),
            (e.Directive = "directive"),
            (e.Comment = "comment"),
            (e.Script = "script"),
            (e.Style = "style"),
            (e.Tag = "tag"),
            (e.CDATA = "cdata"),
            (e.Doctype = "doctype");
        })((a = o.ElementType || (o.ElementType = {}))),
        (o.isTag = function (e) {
          return e.type === a.Tag || e.type === a.Script || e.type === a.Style;
        }),
        (o.Root = a.Root),
        (o.Text = a.Text),
        (o.Directive = a.Directive),
        (o.Comment = a.Comment),
        (o.Script = a.Script),
        (o.Style = a.Style),
        (o.Tag = a.Tag),
        (o.CDATA = a.CDATA),
        (o.Doctype = a.Doctype);
    },
    250839: (e) => {
      "use strict";
      var { m: a, e: n } = e,
        o =
          (e.e && e.e.__extends) ||
          (function () {
            var e = function (a, n) {
              return (e =
                Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array &&
                  function (e, a) {
                    e.__proto__ = a;
                  }) ||
                function (e, a) {
                  for (var n in a)
                    Object.prototype.hasOwnProperty.call(a, n) && (e[n] = a[n]);
                })(a, n);
            };
            return function (a, n) {
              if ("function" != typeof n && null !== n)
                throw TypeError(
                  "Class extends value " +
                    String(n) +
                    " is not a constructor or null"
                );
              function o() {
                this.constructor = a;
              }
              e(a, n),
                (a.prototype =
                  null === n
                    ? Object.create(n)
                    : ((o.prototype = n.prototype), new o()));
            };
          })(),
        r =
          (e.e && e.e.__assign) ||
          function () {
            return (r =
              Object.assign ||
              function (e) {
                for (var a, n = 1, o = arguments.length; n < o; n++)
                  for (var r in (a = arguments[n]))
                    Object.prototype.hasOwnProperty.call(a, r) && (e[r] = a[r]);
                return e;
              }).apply(this, arguments);
          };
      Object.defineProperty(n, "__esModule", { value: !0 }),
        (n.cloneNode =
          n.hasChildren =
          n.isDocument =
          n.isDirective =
          n.isComment =
          n.isText =
          n.isCDATA =
          n.isTag =
          n.Element =
          n.Document =
          n.CDATA =
          n.NodeWithChildren =
          n.ProcessingInstruction =
          n.Comment =
          n.Text =
          n.DataNode =
          n.Node =
            void 0);
      var t = e.r(282665),
        s = (function () {
          function e() {
            (this.parent = null),
              (this.prev = null),
              (this.next = null),
              (this.startIndex = null),
              (this.endIndex = null);
          }
          return (
            Object.defineProperty(e.prototype, "parentNode", {
              get: function () {
                return this.parent;
              },
              set: function (e) {
                this.parent = e;
              },
              enumerable: !1,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "previousSibling", {
              get: function () {
                return this.prev;
              },
              set: function (e) {
                this.prev = e;
              },
              enumerable: !1,
              configurable: !0,
            }),
            Object.defineProperty(e.prototype, "nextSibling", {
              get: function () {
                return this.next;
              },
              set: function (e) {
                this.next = e;
              },
              enumerable: !1,
              configurable: !0,
            }),
            (e.prototype.cloneNode = function (e) {
              return void 0 === e && (e = !1), v(this, e);
            }),
            e
          );
        })();
      n.Node = s;
      var i = (function (e) {
        function a(a) {
          var n = e.call(this) || this;
          return (n.data = a), n;
        }
        return (
          o(a, e),
          Object.defineProperty(a.prototype, "nodeValue", {
            get: function () {
              return this.data;
            },
            set: function (e) {
              this.data = e;
            },
            enumerable: !1,
            configurable: !0,
          }),
          a
        );
      })(s);
      n.DataNode = i;
      var d = (function (e) {
        function a() {
          var a = (null !== e && e.apply(this, arguments)) || this;
          return (a.type = t.ElementType.Text), a;
        }
        return (
          o(a, e),
          Object.defineProperty(a.prototype, "nodeType", {
            get: function () {
              return 3;
            },
            enumerable: !1,
            configurable: !0,
          }),
          a
        );
      })(i);
      n.Text = d;
      var c = (function (e) {
        function a() {
          var a = (null !== e && e.apply(this, arguments)) || this;
          return (a.type = t.ElementType.Comment), a;
        }
        return (
          o(a, e),
          Object.defineProperty(a.prototype, "nodeType", {
            get: function () {
              return 8;
            },
            enumerable: !1,
            configurable: !0,
          }),
          a
        );
      })(i);
      n.Comment = c;
      var b = (function (e) {
        function a(a, n) {
          var o = e.call(this, n) || this;
          return (o.name = a), (o.type = t.ElementType.Directive), o;
        }
        return (
          o(a, e),
          Object.defineProperty(a.prototype, "nodeType", {
            get: function () {
              return 1;
            },
            enumerable: !1,
            configurable: !0,
          }),
          a
        );
      })(i);
      n.ProcessingInstruction = b;
      var m = (function (e) {
        function a(a) {
          var n = e.call(this) || this;
          return (n.children = a), n;
        }
        return (
          o(a, e),
          Object.defineProperty(a.prototype, "firstChild", {
            get: function () {
              var e;
              return null != (e = this.children[0]) ? e : null;
            },
            enumerable: !1,
            configurable: !0,
          }),
          Object.defineProperty(a.prototype, "lastChild", {
            get: function () {
              return this.children.length > 0
                ? this.children[this.children.length - 1]
                : null;
            },
            enumerable: !1,
            configurable: !0,
          }),
          Object.defineProperty(a.prototype, "childNodes", {
            get: function () {
              return this.children;
            },
            set: function (e) {
              this.children = e;
            },
            enumerable: !1,
            configurable: !0,
          }),
          a
        );
      })(s);
      n.NodeWithChildren = m;
      var l = (function (e) {
        function a() {
          var a = (null !== e && e.apply(this, arguments)) || this;
          return (a.type = t.ElementType.CDATA), a;
        }
        return (
          o(a, e),
          Object.defineProperty(a.prototype, "nodeType", {
            get: function () {
              return 4;
            },
            enumerable: !1,
            configurable: !0,
          }),
          a
        );
      })(m);
      n.CDATA = l;
      var f = (function (e) {
        function a() {
          var a = (null !== e && e.apply(this, arguments)) || this;
          return (a.type = t.ElementType.Root), a;
        }
        return (
          o(a, e),
          Object.defineProperty(a.prototype, "nodeType", {
            get: function () {
              return 9;
            },
            enumerable: !1,
            configurable: !0,
          }),
          a
        );
      })(m);
      n.Document = f;
      var k = (function (e) {
        function a(a, n, o, r) {
          void 0 === o && (o = []),
            void 0 === r &&
              (r =
                "script" === a
                  ? t.ElementType.Script
                  : "style" === a
                  ? t.ElementType.Style
                  : t.ElementType.Tag);
          var s = e.call(this, o) || this;
          return (s.name = a), (s.attribs = n), (s.type = r), s;
        }
        return (
          o(a, e),
          Object.defineProperty(a.prototype, "nodeType", {
            get: function () {
              return 1;
            },
            enumerable: !1,
            configurable: !0,
          }),
          Object.defineProperty(a.prototype, "tagName", {
            get: function () {
              return this.name;
            },
            set: function (e) {
              this.name = e;
            },
            enumerable: !1,
            configurable: !0,
          }),
          Object.defineProperty(a.prototype, "attributes", {
            get: function () {
              var e = this;
              return Object.keys(this.attribs).map(function (a) {
                var n, o;
                return {
                  name: a,
                  value: e.attribs[a],
                  namespace:
                    null == (n = e["x-attribsNamespace"]) ? void 0 : n[a],
                  prefix: null == (o = e["x-attribsPrefix"]) ? void 0 : o[a],
                };
              });
            },
            enumerable: !1,
            configurable: !0,
          }),
          a
        );
      })(m);
      function u(e) {
        return (0, t.isTag)(e);
      }
      function h(e) {
        return e.type === t.ElementType.CDATA;
      }
      function p(e) {
        return e.type === t.ElementType.Text;
      }
      function x(e) {
        return e.type === t.ElementType.Comment;
      }
      function g(e) {
        return e.type === t.ElementType.Directive;
      }
      function C(e) {
        return e.type === t.ElementType.Root;
      }
      function v(e, a) {
        if ((void 0 === a && (a = !1), p(e))) n = new d(e.data);
        else if (x(e)) n = new c(e.data);
        else if (u(e)) {
          var n,
            o = a ? y(e.children) : [],
            t = new k(e.name, r({}, e.attribs), o);
          o.forEach(function (e) {
            return (e.parent = t);
          }),
            null != e.namespace && (t.namespace = e.namespace),
            e["x-attribsNamespace"] &&
              (t["x-attribsNamespace"] = r({}, e["x-attribsNamespace"])),
            e["x-attribsPrefix"] &&
              (t["x-attribsPrefix"] = r({}, e["x-attribsPrefix"])),
            (n = t);
        } else if (h(e)) {
          var o = a ? y(e.children) : [],
            s = new l(o);
          o.forEach(function (e) {
            return (e.parent = s);
          }),
            (n = s);
        } else if (C(e)) {
          var o = a ? y(e.children) : [],
            i = new f(o);
          o.forEach(function (e) {
            return (e.parent = i);
          }),
            e["x-mode"] && (i["x-mode"] = e["x-mode"]),
            (n = i);
        } else if (g(e)) {
          var m = new b(e.name, e.data);
          null != e["x-name"] &&
            ((m["x-name"] = e["x-name"]),
            (m["x-publicId"] = e["x-publicId"]),
            (m["x-systemId"] = e["x-systemId"])),
            (n = m);
        } else throw Error("Not implemented yet: ".concat(e.type));
        return (
          (n.startIndex = e.startIndex),
          (n.endIndex = e.endIndex),
          null != e.sourceCodeLocation &&
            (n.sourceCodeLocation = e.sourceCodeLocation),
          n
        );
      }
      function y(e) {
        for (
          var a = e.map(function (e) {
              return v(e, !0);
            }),
            n = 1;
          n < a.length;
          n++
        )
          (a[n].prev = a[n - 1]), (a[n - 1].next = a[n]);
        return a;
      }
      (n.Element = k),
        (n.isTag = u),
        (n.isCDATA = h),
        (n.isText = p),
        (n.isComment = x),
        (n.isDirective = g),
        (n.isDocument = C),
        (n.hasChildren = function (e) {
          return Object.prototype.hasOwnProperty.call(e, "children");
        }),
        (n.cloneNode = v);
    },
    574015: (e) => {
      "use strict";
      var { m: a, e: n } = e,
        o =
          (e.e && e.e.__createBinding) ||
          (Object.create
            ? function (e, a, n, o) {
                void 0 === o && (o = n);
                var r = Object.getOwnPropertyDescriptor(a, n);
                (!r ||
                  ("get" in r
                    ? !a.__esModule
                    : r.writable || r.configurable)) &&
                  (r = {
                    enumerable: !0,
                    get: function () {
                      return a[n];
                    },
                  }),
                  Object.defineProperty(e, o, r);
              }
            : function (e, a, n, o) {
                void 0 === o && (o = n), (e[o] = a[n]);
              }),
        r =
          (e.e && e.e.__exportStar) ||
          function (e, a) {
            for (var n in e)
              "default" === n ||
                Object.prototype.hasOwnProperty.call(a, n) ||
                o(a, e, n);
          };
      Object.defineProperty(n, "__esModule", { value: !0 }),
        (n.DomHandler = void 0);
      var t = e.r(282665),
        s = e.r(250839);
      r(e.r(250839), n);
      var i = { withStartIndices: !1, withEndIndices: !1, xmlMode: !1 },
        d = (function () {
          function e(e, a, n) {
            (this.dom = []),
              (this.root = new s.Document(this.dom)),
              (this.done = !1),
              (this.tagStack = [this.root]),
              (this.lastNode = null),
              (this.parser = null),
              "function" == typeof a && ((n = a), (a = i)),
              "object" == typeof e && ((a = e), (e = void 0)),
              (this.callback = null != e ? e : null),
              (this.options = null != a ? a : i),
              (this.elementCB = null != n ? n : null);
          }
          return (
            (e.prototype.onparserinit = function (e) {
              this.parser = e;
            }),
            (e.prototype.onreset = function () {
              (this.dom = []),
                (this.root = new s.Document(this.dom)),
                (this.done = !1),
                (this.tagStack = [this.root]),
                (this.lastNode = null),
                (this.parser = null);
            }),
            (e.prototype.onend = function () {
              this.done ||
                ((this.done = !0),
                (this.parser = null),
                this.handleCallback(null));
            }),
            (e.prototype.onerror = function (e) {
              this.handleCallback(e);
            }),
            (e.prototype.onclosetag = function () {
              this.lastNode = null;
              var e = this.tagStack.pop();
              this.options.withEndIndices &&
                (e.endIndex = this.parser.endIndex),
                this.elementCB && this.elementCB(e);
            }),
            (e.prototype.onopentag = function (e, a) {
              var n = this.options.xmlMode ? t.ElementType.Tag : void 0,
                o = new s.Element(e, a, void 0, n);
              this.addNode(o), this.tagStack.push(o);
            }),
            (e.prototype.ontext = function (e) {
              var a = this.lastNode;
              if (a && a.type === t.ElementType.Text)
                (a.data += e),
                  this.options.withEndIndices &&
                    (a.endIndex = this.parser.endIndex);
              else {
                var n = new s.Text(e);
                this.addNode(n), (this.lastNode = n);
              }
            }),
            (e.prototype.oncomment = function (e) {
              if (
                this.lastNode &&
                this.lastNode.type === t.ElementType.Comment
              ) {
                this.lastNode.data += e;
                return;
              }
              var a = new s.Comment(e);
              this.addNode(a), (this.lastNode = a);
            }),
            (e.prototype.oncommentend = function () {
              this.lastNode = null;
            }),
            (e.prototype.oncdatastart = function () {
              var e = new s.Text(""),
                a = new s.CDATA([e]);
              this.addNode(a), (e.parent = a), (this.lastNode = e);
            }),
            (e.prototype.oncdataend = function () {
              this.lastNode = null;
            }),
            (e.prototype.onprocessinginstruction = function (e, a) {
              var n = new s.ProcessingInstruction(e, a);
              this.addNode(n);
            }),
            (e.prototype.handleCallback = function (e) {
              if ("function" == typeof this.callback)
                this.callback(e, this.dom);
              else if (e) throw e;
            }),
            (e.prototype.addNode = function (e) {
              var a = this.tagStack[this.tagStack.length - 1],
                n = a.children[a.children.length - 1];
              this.options.withStartIndices &&
                (e.startIndex = this.parser.startIndex),
                this.options.withEndIndices &&
                  (e.endIndex = this.parser.endIndex),
                a.children.push(e),
                n && ((e.prev = n), (n.next = e)),
                (e.parent = a),
                (this.lastNode = null);
            }),
            e
          );
        })();
      (n.DomHandler = d), (n.default = d);
    },
    711325: (e) => {
      "use strict";
      var { m: a, e: n } = e;
      Object.defineProperty(n, "__esModule", { value: !0 }),
        (n.CARRIAGE_RETURN_PLACEHOLDER_REGEX =
          n.CARRIAGE_RETURN_PLACEHOLDER =
          n.CARRIAGE_RETURN_REGEX =
          n.CARRIAGE_RETURN =
          n.CASE_SENSITIVE_TAG_NAMES_MAP =
          n.CASE_SENSITIVE_TAG_NAMES =
            void 0),
        (n.CASE_SENSITIVE_TAG_NAMES = [
          "animateMotion",
          "animateTransform",
          "clipPath",
          "feBlend",
          "feColorMatrix",
          "feComponentTransfer",
          "feComposite",
          "feConvolveMatrix",
          "feDiffuseLighting",
          "feDisplacementMap",
          "feDropShadow",
          "feFlood",
          "feFuncA",
          "feFuncB",
          "feFuncG",
          "feFuncR",
          "feGaussianBlur",
          "feImage",
          "feMerge",
          "feMergeNode",
          "feMorphology",
          "feOffset",
          "fePointLight",
          "feSpecularLighting",
          "feSpotLight",
          "feTile",
          "feTurbulence",
          "foreignObject",
          "linearGradient",
          "radialGradient",
          "textPath",
        ]),
        (n.CASE_SENSITIVE_TAG_NAMES_MAP = n.CASE_SENSITIVE_TAG_NAMES.reduce(
          function (e, a) {
            return (e[a.toLowerCase()] = a), e;
          },
          {}
        )),
        (n.CARRIAGE_RETURN = "\r"),
        (n.CARRIAGE_RETURN_REGEX = RegExp(n.CARRIAGE_RETURN, "g")),
        (n.CARRIAGE_RETURN_PLACEHOLDER =
          "__HTML_DOM_PARSER_CARRIAGE_RETURN_PLACEHOLDER_".concat(
            Date.now(),
            "__"
          )),
        (n.CARRIAGE_RETURN_PLACEHOLDER_REGEX = RegExp(
          n.CARRIAGE_RETURN_PLACEHOLDER,
          "g"
        ));
    },
    898986: (e) => {
      "use strict";
      var { m: a, e: n } = e;
      Object.defineProperty(n, "__esModule", { value: !0 }),
        (n.formatAttributes = t),
        (n.escapeSpecialCharacters = function (e) {
          return e.replace(
            r.CARRIAGE_RETURN_REGEX,
            r.CARRIAGE_RETURN_PLACEHOLDER
          );
        }),
        (n.revertEscapedCharacters = s),
        (n.formatDOM = function e(a, n, i) {
          void 0 === n && (n = null);
          for (var d, c = [], b = 0, m = a.length; b < m; b++) {
            var l = a[b];
            switch (l.nodeType) {
              case 1:
                var f = (function (e) {
                  var a,
                    n =
                      ((a = e = e.toLowerCase()),
                      r.CASE_SENSITIVE_TAG_NAMES_MAP[a]);
                  return n || e;
                })(l.nodeName);
                (d = new o.Element(f, t(l.attributes))).children = e(
                  "template" === f ? l.content.childNodes : l.childNodes,
                  d
                );
                break;
              case 3:
                d = new o.Text(s(l.nodeValue));
                break;
              case 8:
                d = new o.Comment(l.nodeValue);
                break;
              default:
                continue;
            }
            var k = c[b - 1] || null;
            k && (k.next = d),
              (d.parent = n),
              (d.prev = k),
              (d.next = null),
              c.push(d);
          }
          return (
            i &&
              (((d = new o.ProcessingInstruction(
                i.substring(0, i.indexOf(" ")).toLowerCase(),
                i
              )).next = c[0] || null),
              (d.parent = n),
              c.unshift(d),
              c[1] && (c[1].prev = c[0])),
            c
          );
        });
      var o = e.r(574015),
        r = e.r(711325);
      function t(e) {
        for (var a = {}, n = 0, o = e.length; n < o; n++) {
          var r = e[n];
          a[r.name] = r.value;
        }
        return a;
      }
      function s(e) {
        return e.replace(
          r.CARRIAGE_RETURN_PLACEHOLDER_REGEX,
          r.CARRIAGE_RETURN
        );
      }
    },
    260161: (e) => {
      "use strict";
      var { m: a, e: n } = e;
      Object.defineProperty(n, "__esModule", { value: !0 }),
        (n.default = function (e) {
          var a,
            n,
            f = (e = (0, r.escapeSpecialCharacters)(e)).match(d),
            k = f && f[1] ? f[1].toLowerCase() : "";
          switch (k) {
            case t:
              var u = l(e);
              if (!c.test(e)) {
                var h = u.querySelector(s);
                null == (a = null == h ? void 0 : h.parentNode) ||
                  a.removeChild(h);
              }
              if (!b.test(e)) {
                var h = u.querySelector(i);
                null == (n = null == h ? void 0 : h.parentNode) ||
                  n.removeChild(h);
              }
              return u.querySelectorAll(t);
            case s:
            case i:
              var p = m(e).querySelectorAll(k);
              if (b.test(e) && c.test(e)) return p[0].parentNode.childNodes;
              return p;
            default:
              if (o) return o(e);
              var h = m(e, i).querySelector(i);
              return h.childNodes;
          }
        });
      var o,
        r = e.r(898986),
        t = "html",
        s = "head",
        i = "body",
        d = /<([a-zA-Z]+[0-9]?)/,
        c = /<head[^]*>/i,
        b = /<body[^]*>/i,
        m = function (e, a) {
          throw Error(
            "This browser does not support `document.implementation.createHTMLDocument`"
          );
        },
        l = function (e, a) {
          throw Error(
            "This browser does not support `DOMParser.prototype.parseFromString`"
          );
        },
        f = "object" == typeof window && window.DOMParser;
      if ("function" == typeof f) {
        var k = new f();
        m = l = function (e, a) {
          return (
            a && (e = "<".concat(a, ">").concat(e, "</").concat(a, ">")),
            k.parseFromString(e, "text/html")
          );
        };
      }
      if ("object" == typeof document && document.implementation) {
        var u = document.implementation.createHTMLDocument();
        m = function (e, a) {
          if (a) {
            var n = u.documentElement.querySelector(a);
            return n && (n.innerHTML = e), u;
          }
          return (u.documentElement.innerHTML = e), u;
        };
      }
      var h = "object" == typeof document && document.createElement("template");
      h &&
        h.content &&
        (o = function (e) {
          return (h.innerHTML = e), h.content.childNodes;
        });
    },
    375240: (e) => {
      "use strict";
      var { m: a, e: n } = e,
        o =
          (e.e && e.e.__importDefault) ||
          function (e) {
            return e && e.__esModule ? e : { default: e };
          };
      Object.defineProperty(n, "__esModule", { value: !0 }),
        (n.default = function (e) {
          if ("string" != typeof e)
            throw TypeError("First argument must be a string");
          if (!e) return [];
          var a = e.match(s),
            n = a ? a[1] : void 0;
          return (0, t.formatDOM)((0, r.default)(e), null, n);
        });
      var r = o(e.r(260161)),
        t = e.r(898986),
        s = /<(![a-zA-Z\s]+)>/;
    },
    4852: (e) => {
      var { m: a, e: n } = e;
      (n.SAME = 0),
        (n.CAMELCASE = 1),
        (n.possibleStandardNames = {
          accept: 0,
          acceptCharset: 1,
          "accept-charset": "acceptCharset",
          accessKey: 1,
          action: 0,
          allowFullScreen: 1,
          alt: 0,
          as: 0,
          async: 0,
          autoCapitalize: 1,
          autoComplete: 1,
          autoCorrect: 1,
          autoFocus: 1,
          autoPlay: 1,
          autoSave: 1,
          capture: 0,
          cellPadding: 1,
          cellSpacing: 1,
          challenge: 0,
          charSet: 1,
          checked: 0,
          children: 0,
          cite: 0,
          class: "className",
          classID: 1,
          className: 1,
          cols: 0,
          colSpan: 1,
          content: 0,
          contentEditable: 1,
          contextMenu: 1,
          controls: 0,
          controlsList: 1,
          coords: 0,
          crossOrigin: 1,
          dangerouslySetInnerHTML: 1,
          data: 0,
          dateTime: 1,
          default: 0,
          defaultChecked: 1,
          defaultValue: 1,
          defer: 0,
          dir: 0,
          disabled: 0,
          disablePictureInPicture: 1,
          disableRemotePlayback: 1,
          download: 0,
          draggable: 0,
          encType: 1,
          enterKeyHint: 1,
          for: "htmlFor",
          form: 0,
          formMethod: 1,
          formAction: 1,
          formEncType: 1,
          formNoValidate: 1,
          formTarget: 1,
          frameBorder: 1,
          headers: 0,
          height: 0,
          hidden: 0,
          high: 0,
          href: 0,
          hrefLang: 1,
          htmlFor: 1,
          httpEquiv: 1,
          "http-equiv": "httpEquiv",
          icon: 0,
          id: 0,
          innerHTML: 1,
          inputMode: 1,
          integrity: 0,
          is: 0,
          itemID: 1,
          itemProp: 1,
          itemRef: 1,
          itemScope: 1,
          itemType: 1,
          keyParams: 1,
          keyType: 1,
          kind: 0,
          label: 0,
          lang: 0,
          list: 0,
          loop: 0,
          low: 0,
          manifest: 0,
          marginWidth: 1,
          marginHeight: 1,
          max: 0,
          maxLength: 1,
          media: 0,
          mediaGroup: 1,
          method: 0,
          min: 0,
          minLength: 1,
          multiple: 0,
          muted: 0,
          name: 0,
          noModule: 1,
          nonce: 0,
          noValidate: 1,
          open: 0,
          optimum: 0,
          pattern: 0,
          placeholder: 0,
          playsInline: 1,
          poster: 0,
          preload: 0,
          profile: 0,
          radioGroup: 1,
          readOnly: 1,
          referrerPolicy: 1,
          rel: 0,
          required: 0,
          reversed: 0,
          role: 0,
          rows: 0,
          rowSpan: 1,
          sandbox: 0,
          scope: 0,
          scoped: 0,
          scrolling: 0,
          seamless: 0,
          selected: 0,
          shape: 0,
          size: 0,
          sizes: 0,
          span: 0,
          spellCheck: 1,
          src: 0,
          srcDoc: 1,
          srcLang: 1,
          srcSet: 1,
          start: 0,
          step: 0,
          style: 0,
          summary: 0,
          tabIndex: 1,
          target: 0,
          title: 0,
          type: 0,
          useMap: 1,
          value: 0,
          width: 0,
          wmode: 0,
          wrap: 0,
          about: 0,
          accentHeight: 1,
          "accent-height": "accentHeight",
          accumulate: 0,
          additive: 0,
          alignmentBaseline: 1,
          "alignment-baseline": "alignmentBaseline",
          allowReorder: 1,
          alphabetic: 0,
          amplitude: 0,
          arabicForm: 1,
          "arabic-form": "arabicForm",
          ascent: 0,
          attributeName: 1,
          attributeType: 1,
          autoReverse: 1,
          azimuth: 0,
          baseFrequency: 1,
          baselineShift: 1,
          "baseline-shift": "baselineShift",
          baseProfile: 1,
          bbox: 0,
          begin: 0,
          bias: 0,
          by: 0,
          calcMode: 1,
          capHeight: 1,
          "cap-height": "capHeight",
          clip: 0,
          clipPath: 1,
          "clip-path": "clipPath",
          clipPathUnits: 1,
          clipRule: 1,
          "clip-rule": "clipRule",
          color: 0,
          colorInterpolation: 1,
          "color-interpolation": "colorInterpolation",
          colorInterpolationFilters: 1,
          "color-interpolation-filters": "colorInterpolationFilters",
          colorProfile: 1,
          "color-profile": "colorProfile",
          colorRendering: 1,
          "color-rendering": "colorRendering",
          contentScriptType: 1,
          contentStyleType: 1,
          cursor: 0,
          cx: 0,
          cy: 0,
          d: 0,
          datatype: 0,
          decelerate: 0,
          descent: 0,
          diffuseConstant: 1,
          direction: 0,
          display: 0,
          divisor: 0,
          dominantBaseline: 1,
          "dominant-baseline": "dominantBaseline",
          dur: 0,
          dx: 0,
          dy: 0,
          edgeMode: 1,
          elevation: 0,
          enableBackground: 1,
          "enable-background": "enableBackground",
          end: 0,
          exponent: 0,
          externalResourcesRequired: 1,
          fill: 0,
          fillOpacity: 1,
          "fill-opacity": "fillOpacity",
          fillRule: 1,
          "fill-rule": "fillRule",
          filter: 0,
          filterRes: 1,
          filterUnits: 1,
          floodOpacity: 1,
          "flood-opacity": "floodOpacity",
          floodColor: 1,
          "flood-color": "floodColor",
          focusable: 0,
          fontFamily: 1,
          "font-family": "fontFamily",
          fontSize: 1,
          "font-size": "fontSize",
          fontSizeAdjust: 1,
          "font-size-adjust": "fontSizeAdjust",
          fontStretch: 1,
          "font-stretch": "fontStretch",
          fontStyle: 1,
          "font-style": "fontStyle",
          fontVariant: 1,
          "font-variant": "fontVariant",
          fontWeight: 1,
          "font-weight": "fontWeight",
          format: 0,
          from: 0,
          fx: 0,
          fy: 0,
          g1: 0,
          g2: 0,
          glyphName: 1,
          "glyph-name": "glyphName",
          glyphOrientationHorizontal: 1,
          "glyph-orientation-horizontal": "glyphOrientationHorizontal",
          glyphOrientationVertical: 1,
          "glyph-orientation-vertical": "glyphOrientationVertical",
          glyphRef: 1,
          gradientTransform: 1,
          gradientUnits: 1,
          hanging: 0,
          horizAdvX: 1,
          "horiz-adv-x": "horizAdvX",
          horizOriginX: 1,
          "horiz-origin-x": "horizOriginX",
          ideographic: 0,
          imageRendering: 1,
          "image-rendering": "imageRendering",
          in2: 0,
          in: 0,
          inlist: 0,
          intercept: 0,
          k1: 0,
          k2: 0,
          k3: 0,
          k4: 0,
          k: 0,
          kernelMatrix: 1,
          kernelUnitLength: 1,
          kerning: 0,
          keyPoints: 1,
          keySplines: 1,
          keyTimes: 1,
          lengthAdjust: 1,
          letterSpacing: 1,
          "letter-spacing": "letterSpacing",
          lightingColor: 1,
          "lighting-color": "lightingColor",
          limitingConeAngle: 1,
          local: 0,
          markerEnd: 1,
          "marker-end": "markerEnd",
          markerHeight: 1,
          markerMid: 1,
          "marker-mid": "markerMid",
          markerStart: 1,
          "marker-start": "markerStart",
          markerUnits: 1,
          markerWidth: 1,
          mask: 0,
          maskContentUnits: 1,
          maskUnits: 1,
          mathematical: 0,
          mode: 0,
          numOctaves: 1,
          offset: 0,
          opacity: 0,
          operator: 0,
          order: 0,
          orient: 0,
          orientation: 0,
          origin: 0,
          overflow: 0,
          overlinePosition: 1,
          "overline-position": "overlinePosition",
          overlineThickness: 1,
          "overline-thickness": "overlineThickness",
          paintOrder: 1,
          "paint-order": "paintOrder",
          panose1: 0,
          "panose-1": "panose1",
          pathLength: 1,
          patternContentUnits: 1,
          patternTransform: 1,
          patternUnits: 1,
          pointerEvents: 1,
          "pointer-events": "pointerEvents",
          points: 0,
          pointsAtX: 1,
          pointsAtY: 1,
          pointsAtZ: 1,
          prefix: 0,
          preserveAlpha: 1,
          preserveAspectRatio: 1,
          primitiveUnits: 1,
          property: 0,
          r: 0,
          radius: 0,
          refX: 1,
          refY: 1,
          renderingIntent: 1,
          "rendering-intent": "renderingIntent",
          repeatCount: 1,
          repeatDur: 1,
          requiredExtensions: 1,
          requiredFeatures: 1,
          resource: 0,
          restart: 0,
          result: 0,
          results: 0,
          rotate: 0,
          rx: 0,
          ry: 0,
          scale: 0,
          security: 0,
          seed: 0,
          shapeRendering: 1,
          "shape-rendering": "shapeRendering",
          slope: 0,
          spacing: 0,
          specularConstant: 1,
          specularExponent: 1,
          speed: 0,
          spreadMethod: 1,
          startOffset: 1,
          stdDeviation: 1,
          stemh: 0,
          stemv: 0,
          stitchTiles: 1,
          stopColor: 1,
          "stop-color": "stopColor",
          stopOpacity: 1,
          "stop-opacity": "stopOpacity",
          strikethroughPosition: 1,
          "strikethrough-position": "strikethroughPosition",
          strikethroughThickness: 1,
          "strikethrough-thickness": "strikethroughThickness",
          string: 0,
          stroke: 0,
          strokeDasharray: 1,
          "stroke-dasharray": "strokeDasharray",
          strokeDashoffset: 1,
          "stroke-dashoffset": "strokeDashoffset",
          strokeLinecap: 1,
          "stroke-linecap": "strokeLinecap",
          strokeLinejoin: 1,
          "stroke-linejoin": "strokeLinejoin",
          strokeMiterlimit: 1,
          "stroke-miterlimit": "strokeMiterlimit",
          strokeWidth: 1,
          "stroke-width": "strokeWidth",
          strokeOpacity: 1,
          "stroke-opacity": "strokeOpacity",
          suppressContentEditableWarning: 1,
          suppressHydrationWarning: 1,
          surfaceScale: 1,
          systemLanguage: 1,
          tableValues: 1,
          targetX: 1,
          targetY: 1,
          textAnchor: 1,
          "text-anchor": "textAnchor",
          textDecoration: 1,
          "text-decoration": "textDecoration",
          textLength: 1,
          textRendering: 1,
          "text-rendering": "textRendering",
          to: 0,
          transform: 0,
          typeof: 0,
          u1: 0,
          u2: 0,
          underlinePosition: 1,
          "underline-position": "underlinePosition",
          underlineThickness: 1,
          "underline-thickness": "underlineThickness",
          unicode: 0,
          unicodeBidi: 1,
          "unicode-bidi": "unicodeBidi",
          unicodeRange: 1,
          "unicode-range": "unicodeRange",
          unitsPerEm: 1,
          "units-per-em": "unitsPerEm",
          unselectable: 0,
          vAlphabetic: 1,
          "v-alphabetic": "vAlphabetic",
          values: 0,
          vectorEffect: 1,
          "vector-effect": "vectorEffect",
          version: 0,
          vertAdvY: 1,
          "vert-adv-y": "vertAdvY",
          vertOriginX: 1,
          "vert-origin-x": "vertOriginX",
          vertOriginY: 1,
          "vert-origin-y": "vertOriginY",
          vHanging: 1,
          "v-hanging": "vHanging",
          vIdeographic: 1,
          "v-ideographic": "vIdeographic",
          viewBox: 1,
          viewTarget: 1,
          visibility: 0,
          vMathematical: 1,
          "v-mathematical": "vMathematical",
          vocab: 0,
          widths: 0,
          wordSpacing: 1,
          "word-spacing": "wordSpacing",
          writingMode: 1,
          "writing-mode": "writingMode",
          x1: 0,
          x2: 0,
          x: 0,
          xChannelSelector: 1,
          xHeight: 1,
          "x-height": "xHeight",
          xlinkActuate: 1,
          "xlink:actuate": "xlinkActuate",
          xlinkArcrole: 1,
          "xlink:arcrole": "xlinkArcrole",
          xlinkHref: 1,
          "xlink:href": "xlinkHref",
          xlinkRole: 1,
          "xlink:role": "xlinkRole",
          xlinkShow: 1,
          "xlink:show": "xlinkShow",
          xlinkTitle: 1,
          "xlink:title": "xlinkTitle",
          xlinkType: 1,
          "xlink:type": "xlinkType",
          xmlBase: 1,
          "xml:base": "xmlBase",
          xmlLang: 1,
          "xml:lang": "xmlLang",
          xmlns: 0,
          "xml:space": "xmlSpace",
          xmlnsXlink: 1,
          "xmlns:xlink": "xmlnsXlink",
          xmlSpace: 1,
          y1: 0,
          y2: 0,
          y: 0,
          yChannelSelector: 1,
          z: 0,
          zoomAndPan: 1,
        });
    },
    714294: (e) => {
      "use strict";
      var { m: a, e: n } = e;
      {
        function o(e, a, n, o, r, t, s) {
          (this.acceptsBooleans = 2 === a || 3 === a || 4 === a),
            (this.attributeName = o),
            (this.attributeNamespace = r),
            (this.mustUseProperty = n),
            (this.propertyName = e),
            (this.type = a),
            (this.sanitizeURL = t),
            (this.removeEmptyString = s);
        }
        let a = {};
        [
          "children",
          "dangerouslySetInnerHTML",
          "defaultValue",
          "defaultChecked",
          "innerHTML",
          "suppressContentEditableWarning",
          "suppressHydrationWarning",
          "style",
        ].forEach((e) => {
          a[e] = new o(e, 0, !1, e, null, !1, !1);
        }),
          [
            ["acceptCharset", "accept-charset"],
            ["className", "class"],
            ["htmlFor", "for"],
            ["httpEquiv", "http-equiv"],
          ].forEach((e) => {
            let [n, r] = e;
            a[n] = new o(n, 1, !1, r, null, !1, !1);
          }),
          ["contentEditable", "draggable", "spellCheck", "value"].forEach(
            (e) => {
              a[e] = new o(e, 2, !1, e.toLowerCase(), null, !1, !1);
            }
          ),
          [
            "autoReverse",
            "externalResourcesRequired",
            "focusable",
            "preserveAlpha",
          ].forEach((e) => {
            a[e] = new o(e, 2, !1, e, null, !1, !1);
          }),
          [
            "allowFullScreen",
            "async",
            "autoFocus",
            "autoPlay",
            "controls",
            "default",
            "defer",
            "disabled",
            "disablePictureInPicture",
            "disableRemotePlayback",
            "formNoValidate",
            "hidden",
            "loop",
            "noModule",
            "noValidate",
            "open",
            "playsInline",
            "readOnly",
            "required",
            "reversed",
            "scoped",
            "seamless",
            "itemScope",
          ].forEach((e) => {
            a[e] = new o(e, 3, !1, e.toLowerCase(), null, !1, !1);
          }),
          ["checked", "multiple", "muted", "selected"].forEach((e) => {
            a[e] = new o(e, 3, !0, e, null, !1, !1);
          }),
          ["capture", "download"].forEach((e) => {
            a[e] = new o(e, 4, !1, e, null, !1, !1);
          }),
          ["cols", "rows", "size", "span"].forEach((e) => {
            a[e] = new o(e, 6, !1, e, null, !1, !1);
          }),
          ["rowSpan", "start"].forEach((e) => {
            a[e] = new o(e, 5, !1, e.toLowerCase(), null, !1, !1);
          });
        let r = /[\-\:]([a-z])/g,
          t = (e) => e[1].toUpperCase();
        [
          "accent-height",
          "alignment-baseline",
          "arabic-form",
          "baseline-shift",
          "cap-height",
          "clip-path",
          "clip-rule",
          "color-interpolation",
          "color-interpolation-filters",
          "color-profile",
          "color-rendering",
          "dominant-baseline",
          "enable-background",
          "fill-opacity",
          "fill-rule",
          "flood-color",
          "flood-opacity",
          "font-family",
          "font-size",
          "font-size-adjust",
          "font-stretch",
          "font-style",
          "font-variant",
          "font-weight",
          "glyph-name",
          "glyph-orientation-horizontal",
          "glyph-orientation-vertical",
          "horiz-adv-x",
          "horiz-origin-x",
          "image-rendering",
          "letter-spacing",
          "lighting-color",
          "marker-end",
          "marker-mid",
          "marker-start",
          "overline-position",
          "overline-thickness",
          "paint-order",
          "panose-1",
          "pointer-events",
          "rendering-intent",
          "shape-rendering",
          "stop-color",
          "stop-opacity",
          "strikethrough-position",
          "strikethrough-thickness",
          "stroke-dasharray",
          "stroke-dashoffset",
          "stroke-linecap",
          "stroke-linejoin",
          "stroke-miterlimit",
          "stroke-opacity",
          "stroke-width",
          "text-anchor",
          "text-decoration",
          "text-rendering",
          "underline-position",
          "underline-thickness",
          "unicode-bidi",
          "unicode-range",
          "units-per-em",
          "v-alphabetic",
          "v-hanging",
          "v-ideographic",
          "v-mathematical",
          "vector-effect",
          "vert-adv-y",
          "vert-origin-x",
          "vert-origin-y",
          "word-spacing",
          "writing-mode",
          "xmlns:xlink",
          "x-height",
        ].forEach((e) => {
          let n = e.replace(r, t);
          a[n] = new o(n, 1, !1, e, null, !1, !1);
        }),
          [
            "xlink:actuate",
            "xlink:arcrole",
            "xlink:role",
            "xlink:show",
            "xlink:title",
            "xlink:type",
          ].forEach((e) => {
            let n = e.replace(r, t);
            a[n] = new o(n, 1, !1, e, "http://www.w3.org/1999/xlink", !1, !1);
          }),
          ["xml:base", "xml:lang", "xml:space"].forEach((e) => {
            let n = e.replace(r, t);
            a[n] = new o(
              n,
              1,
              !1,
              e,
              "http://www.w3.org/XML/1998/namespace",
              !1,
              !1
            );
          }),
          ["tabIndex", "crossOrigin"].forEach((e) => {
            a[e] = new o(e, 1, !1, e.toLowerCase(), null, !1, !1);
          }),
          (a.xlinkHref = new o(
            "xlinkHref",
            1,
            !1,
            "xlink:href",
            "http://www.w3.org/1999/xlink",
            !0,
            !1
          )),
          ["src", "href", "action", "formAction"].forEach((e) => {
            a[e] = new o(e, 1, !1, e.toLowerCase(), null, !0, !0);
          });
        let { CAMELCASE: s, SAME: i, possibleStandardNames: d } = e.r(4852),
          c = RegExp.prototype.test.bind(
            RegExp(
              "^(data|aria)-[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"
            )
          ),
          b = Object.keys(d).reduce((e, a) => {
            let n = d[a];
            return (
              n === i
                ? (e[a] = a)
                : n === s
                ? (e[a.toLowerCase()] = a)
                : (e[a] = n),
              e
            );
          }, {});
        (n.BOOLEAN = 3),
          (n.BOOLEANISH_STRING = 2),
          (n.NUMERIC = 5),
          (n.OVERLOADED_BOOLEAN = 4),
          (n.POSITIVE_NUMERIC = 6),
          (n.RESERVED = 0),
          (n.STRING = 1),
          (n.getPropertyInfo = function (e) {
            return a.hasOwnProperty(e) ? a[e] : null;
          }),
          (n.isCustomAttribute = c),
          (n.possibleStandardNames = b);
      }
    },
    662449: (e) => {
      var { m: a, e: n } = e,
        o = /\/\*[^*]*\*+([^/*][^*]*\*+)*\//g,
        r = /\n/g,
        t = /^\s*/,
        s = /^(\*?[-#/*\\\w]+(\[[0-9a-z_-]+\])?)\s*/,
        i = /^:\s*/,
        d = /^((?:'(?:\\'|.)*?'|"(?:\\"|.)*?"|\([^)]*?\)|[^};])+)/,
        c = /^[;\s]*/,
        b = /^\s+|\s+$/g;
      function m(e) {
        return e ? e.replace(b, "") : "";
      }
      a.exports = function (e, a) {
        if ("string" != typeof e)
          throw TypeError("First argument must be a string");
        if (!e) return [];
        a = a || {};
        var n = 1,
          b = 1;
        function l(e) {
          var a = e.match(r);
          a && (n += a.length);
          var o = e.lastIndexOf("\n");
          b = ~o ? e.length - o : b + e.length;
        }
        function f() {
          var e = { line: n, column: b };
          return function (a) {
            return (a.position = new k(e)), p(t), a;
          };
        }
        function k(e) {
          (this.start = e),
            (this.end = { line: n, column: b }),
            (this.source = a.source);
        }
        k.prototype.content = e;
        var u = [];
        function h(o) {
          var r = Error(a.source + ":" + n + ":" + b + ": " + o);
          if (
            ((r.reason = o),
            (r.filename = a.source),
            (r.line = n),
            (r.column = b),
            (r.source = e),
            a.silent)
          )
            u.push(r);
          else throw r;
        }
        function p(a) {
          var n = a.exec(e);
          if (n) {
            var o = n[0];
            return l(o), (e = e.slice(o.length)), n;
          }
        }
        function x(e) {
          var a;
          for (e = e || []; (a = g()); ) !1 !== a && e.push(a);
          return e;
        }
        function g() {
          var a = f();
          if ("/" == e.charAt(0) && "*" == e.charAt(1)) {
            for (
              var n = 2;
              "" != e.charAt(n) &&
              ("*" != e.charAt(n) || "/" != e.charAt(n + 1));

            )
              ++n;
            if (((n += 2), "" === e.charAt(n - 1)))
              return h("End of comment missing");
            var o = e.slice(2, n - 2);
            return (
              (b += 2),
              l(o),
              (e = e.slice(n)),
              (b += 2),
              a({ type: "comment", comment: o })
            );
          }
        }
        p(t);
        var C,
          v = [];
        for (
          x(v);
          (C = (function () {
            var e = f(),
              a = p(s);
            if (a) {
              if ((g(), !p(i))) return h("property missing ':'");
              var n = p(d),
                r = e({
                  type: "declaration",
                  property: m(a[0].replace(o, "")),
                  value: n ? m(n[0].replace(o, "")) : "",
                });
              return p(c), r;
            }
          })());

        )
          !1 !== C && (v.push(C), x(v));
        return v;
      };
    },
    565209: (e) => {
      "use strict";
      var { m: a, e: n } = e,
        o =
          (e.e && e.e.__importDefault) ||
          function (e) {
            return e && e.__esModule ? e : { default: e };
          };
      Object.defineProperty(n, "__esModule", { value: !0 }),
        (n.default = function (e, a) {
          var n = null;
          if (!e || "string" != typeof e) return n;
          var o = (0, r.default)(e),
            t = "function" == typeof a;
          return (
            o.forEach(function (e) {
              if ("declaration" === e.type) {
                var o = e.property,
                  r = e.value;
                t ? a(o, r, e) : r && ((n = n || {})[o] = r);
              }
            }),
            n
          );
        });
      var r = o(e.r(662449));
    },
    937296: (e) => {
      "use strict";
      var { m: a, e: n } = e;
      Object.defineProperty(n, "__esModule", { value: !0 }),
        (n.camelCase = void 0);
      var o = /^--[a-zA-Z0-9_-]+$/,
        r = /-([a-z])/g,
        t = /^[^-]+$/,
        s = /^-(webkit|moz|ms|o|khtml)-/,
        i = /^-(ms)-/,
        d = function (e, a) {
          return a.toUpperCase();
        },
        c = function (e, a) {
          return "".concat(a, "-");
        };
      n.camelCase = function (e, a) {
        var n;
        return (void 0 === a && (a = {}), !(n = e) || t.test(n) || o.test(n))
          ? e
          : ((e = e.toLowerCase()),
            (e = a.reactCompat ? e.replace(i, c) : e.replace(s, c)).replace(
              r,
              d
            ));
      };
    },
    754157: (e) => {
      "use strict";
      var { m: a, e: n } = e,
        o = (
          (e.e && e.e.__importDefault) ||
          function (e) {
            return e && e.__esModule ? e : { default: e };
          }
        )(e.r(565209)),
        r = e.r(937296);
      function t(e, a) {
        var n = {};
        return (
          e &&
            "string" == typeof e &&
            (0, o.default)(e, function (e, o) {
              e && o && (n[(0, r.camelCase)(e, a)] = o);
            }),
          n
        );
      }
      (t.default = t), (a.exports = t);
    },
    585044: (e) => {
      "use strict";
      var { m: a, e: n } = e,
        o =
          (e.e && e.e.__importDefault) ||
          function (e) {
            return e && e.__esModule ? e : { default: e };
          };
      Object.defineProperty(n, "__esModule", { value: !0 }),
        (n.returnFirstArg =
          n.canTextBeChildOfNode =
          n.ELEMENTS_WITH_NO_TEXT_CHILDREN =
          n.PRESERVE_CUSTOM_ATTRIBUTES =
            void 0),
        (n.isCustomComponent = function (e, a) {
          return e.includes("-") ? !s.has(e) : !!(a && "string" == typeof a.is);
        }),
        (n.setStyleProp = function (e, a) {
          if ("string" == typeof e) {
            if (!e.trim()) {
              a.style = {};
              return;
            }
            try {
              a.style = (0, t.default)(e, i);
            } catch (e) {
              a.style = {};
            }
          }
        });
      var r = e.r(756253),
        t = o(e.r(754157)),
        s = new Set([
          "annotation-xml",
          "color-profile",
          "font-face",
          "font-face-src",
          "font-face-uri",
          "font-face-format",
          "font-face-name",
          "missing-glyph",
        ]),
        i = { reactCompat: !0 };
      (n.PRESERVE_CUSTOM_ATTRIBUTES = Number(r.version.split(".")[0]) >= 16),
        (n.ELEMENTS_WITH_NO_TEXT_CHILDREN = new Set([
          "tr",
          "tbody",
          "thead",
          "tfoot",
          "colgroup",
          "table",
          "head",
          "html",
          "frameset",
        ])),
        (n.canTextBeChildOfNode = function (e) {
          return !n.ELEMENTS_WITH_NO_TEXT_CHILDREN.has(e.name);
        }),
        (n.returnFirstArg = function (e) {
          return e;
        });
    },
    656710: (e) => {
      "use strict";
      var { m: a, e: n } = e;
      Object.defineProperty(n, "__esModule", { value: !0 }),
        (n.default = function (e, a) {
          void 0 === e && (e = {});
          var n = {},
            c = !!(e.type && i[e.type]);
          for (var b in e) {
            var m = e[b];
            if ((0, o.isCustomAttribute)(b)) {
              n[b] = m;
              continue;
            }
            var l = b.toLowerCase(),
              f = d(l);
            if (f) {
              var k = (0, o.getPropertyInfo)(f);
              switch (
                (t.includes(f) && s.includes(a) && !c && (f = d("default" + l)),
                (n[f] = m),
                k && k.type)
              ) {
                case o.BOOLEAN:
                  n[f] = !0;
                  break;
                case o.OVERLOADED_BOOLEAN:
                  "" === m && (n[f] = !0);
              }
              continue;
            }
            r.PRESERVE_CUSTOM_ATTRIBUTES && (n[b] = m);
          }
          return (0, r.setStyleProp)(e.style, n), n;
        });
      var o = e.r(714294),
        r = e.r(585044),
        t = ["checked", "value"],
        s = ["input", "select", "textarea"],
        i = { reset: !0, submit: !0 };
      function d(e) {
        return o.possibleStandardNames[e];
      }
    },
    841795: (e) => {
      "use strict";
      var { m: a, e: n } = e,
        o =
          (e.e && e.e.__importDefault) ||
          function (e) {
            return e && e.__esModule ? e : { default: e };
          };
      Object.defineProperty(n, "__esModule", { value: !0 }),
        (n.default = function e(a, n) {
          void 0 === n && (n = {});
          for (
            var o = [],
              r = "function" == typeof n.replace,
              d = n.transform || s.returnFirstArg,
              c = n.library || i,
              b = c.cloneElement,
              m = c.createElement,
              l = c.isValidElement,
              f = a.length,
              k = 0;
            k < f;
            k++
          ) {
            var u,
              h = a[k];
            if (r) {
              var p = n.replace(h, k);
              if (l(p)) {
                f > 1 && (p = b(p, { key: p.key || k })), o.push(d(p, h, k));
                continue;
              }
            }
            if ("text" === h.type) {
              var x = !h.data.trim().length;
              if (
                (x && h.parent && !(0, s.canTextBeChildOfNode)(h.parent)) ||
                (n.trim && x)
              )
                continue;
              o.push(d(h.data, h, k));
              continue;
            }
            var g = {};
            ((u = h),
            s.PRESERVE_CUSTOM_ATTRIBUTES &&
              "tag" === u.type &&
              (0, s.isCustomComponent)(u.name, u.attribs))
              ? ((0, s.setStyleProp)(h.attribs.style, h.attribs),
                (g = h.attribs))
              : h.attribs && (g = (0, t.default)(h.attribs, h.name));
            var C = void 0;
            switch (h.type) {
              case "script":
              case "style":
                h.children[0] &&
                  (g.dangerouslySetInnerHTML = { __html: h.children[0].data });
                break;
              case "tag":
                "textarea" === h.name && h.children[0]
                  ? (g.defaultValue = h.children[0].data)
                  : h.children && h.children.length && (C = e(h.children, n));
                break;
              default:
                continue;
            }
            f > 1 && (g.key = k), o.push(d(m(h.name, g, C), h, k));
          }
          return 1 === o.length ? o[0] : o;
        });
      var r = e.r(756253),
        t = o(e.r(656710)),
        s = e.r(585044),
        i = {
          cloneElement: r.cloneElement,
          createElement: r.createElement,
          isValidElement: r.isValidElement,
        };
    },
    778528: (e) => {
      "use strict";
      var { m: a, e: n } = e,
        o =
          (e.e && e.e.__importDefault) ||
          function (e) {
            return e && e.__esModule ? e : { default: e };
          };
      Object.defineProperty(n, "__esModule", { value: !0 }),
        (n.htmlToDOM =
          n.domToReact =
          n.attributesToProps =
          n.Text =
          n.ProcessingInstruction =
          n.Element =
          n.Comment =
            void 0),
        (n.default = function (e, a) {
          if ("string" != typeof e)
            throw TypeError("First argument must be a string");
          return e
            ? (0, t.default)(
                (0, r.default)(e, (null == a ? void 0 : a.htmlparser2) || i),
                a
              )
            : [];
        });
      var r = o(e.r(375240));
      (n.htmlToDOM = r.default), (n.attributesToProps = o(e.r(656710)).default);
      var t = o(e.r(841795));
      n.domToReact = t.default;
      var s = e.r(574015);
      Object.defineProperty(n, "Comment", {
        enumerable: !0,
        get: function () {
          return s.Comment;
        },
      }),
        Object.defineProperty(n, "Element", {
          enumerable: !0,
          get: function () {
            return s.Element;
          },
        }),
        Object.defineProperty(n, "ProcessingInstruction", {
          enumerable: !0,
          get: function () {
            return s.ProcessingInstruction;
          },
        }),
        Object.defineProperty(n, "Text", {
          enumerable: !0,
          get: function () {
            return s.Text;
          },
        });
      var i = { lowerCaseAttributeNames: !1 };
    },
    79401: (e) => {
      "use strict";
      e.s(
        {
          cn: () => ea,
          getLocalisedUrlPath: () => er,
          parseText: () => et,
          stripAddressPrefix: () => en,
          truncateAddress: () => eo,
        },
        79401
      );
      var a = e.i(778528);
      let n = a.default.default || a.default,
        o = (e, a) => {
          var n;
          if (0 === e.length) return a.classGroupId;
          let r = e[0],
            t = a.nextPart.get(r),
            s = t ? o(e.slice(1), t) : void 0;
          if (s) return s;
          if (0 === a.validators.length) return;
          let i = e.join("-");
          return null ==
            (n = a.validators.find((e) => {
              let { validator: a } = e;
              return a(i);
            }))
            ? void 0
            : n.classGroupId;
        },
        r = /^\[(.+)\]$/,
        t = (e, a, n, o) => {
          e.forEach((e) => {
            if ("string" == typeof e) {
              ("" === e ? a : s(a, e)).classGroupId = n;
              return;
            }
            if ("function" == typeof e)
              return i(e)
                ? void t(e(o), a, n, o)
                : void a.validators.push({ validator: e, classGroupId: n });
            Object.entries(e).forEach((e) => {
              let [r, i] = e;
              t(i, s(a, r), n, o);
            });
          });
        },
        s = (e, a) => {
          let n = e;
          return (
            a.split("-").forEach((e) => {
              n.nextPart.has(e) ||
                n.nextPart.set(e, { nextPart: new Map(), validators: [] }),
                (n = n.nextPart.get(e));
            }),
            n
          );
        },
        i = (e) => e.isThemeGetter,
        d = /\s+/;
      function c() {
        let e,
          a,
          n = 0,
          o = "";
        for (; n < arguments.length; )
          (e = arguments[n++]) && (a = b(e)) && (o && (o += " "), (o += a));
        return o;
      }
      let b = (e) => {
          let a;
          if ("string" == typeof e) return e;
          let n = "";
          for (let o = 0; o < e.length; o++)
            e[o] && (a = b(e[o])) && (n && (n += " "), (n += a));
          return n;
        },
        m = (e) => {
          let a = (a) => a[e] || [];
          return (a.isThemeGetter = !0), a;
        },
        l = /^\[(?:(\w[\w-]*):)?(.+)\]$/i,
        f = /^\((?:(\w[\w-]*):)?(.+)\)$/i,
        k = /^\d+\/\d+$/,
        u = /^(\d+(\.\d+)?)?(xs|sm|md|lg|xl)$/,
        h =
          /\d+(%|px|r?em|[sdl]?v([hwib]|min|max)|pt|pc|in|cm|mm|cap|ch|ex|r?lh|cq(w|h|i|b|min|max))|\b(calc|min|max|clamp)\(.+\)|^0$/,
        p = /^(rgba?|hsla?|hwb|(ok)?(lab|lch)|color-mix)\(.+\)$/,
        x = /^(inset_)?-?((\d+)?\.?(\d+)[a-z]+|0)_-?((\d+)?\.?(\d+)[a-z]+|0)/,
        g =
          /^(url|image|image-set|cross-fade|element|(repeating-)?(linear|radial|conic)-gradient)\(.+\)$/,
        C = (e) => k.test(e),
        v = (e) => !!e && !Number.isNaN(Number(e)),
        y = (e) => !!e && Number.isInteger(Number(e)),
        N = (e) => e.endsWith("%") && v(e.slice(0, -1)),
        T = (e) => u.test(e),
        R = () => !0,
        E = (e) => h.test(e) && !p.test(e),
        A = () => !1,
        w = (e) => x.test(e),
        S = (e) => g.test(e),
        I = (e) => !P(e) && !_(e),
        O = (e) => V(e, Y, A),
        P = (e) => l.test(e),
        D = (e) => V(e, Z, E),
        L = (e) => V(e, Q, v),
        M = (e) => V(e, j, A),
        B = (e) => V(e, q, S),
        U = (e) => V(e, $, w),
        _ = (e) => f.test(e),
        F = (e) => z(e, Z),
        H = (e) => z(e, J),
        G = (e) => z(e, j),
        X = (e) => z(e, Y),
        W = (e) => z(e, q),
        K = (e) => z(e, $, !0),
        V = (e, a, n) => {
          let o = l.exec(e);
          return !!o && (o[1] ? a(o[1]) : n(o[2]));
        },
        z = function (e, a) {
          let n =
              arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
            o = f.exec(e);
          return !!o && (o[1] ? a(o[1]) : n);
        },
        j = (e) => "position" === e || "percentage" === e,
        q = (e) => "image" === e || "url" === e,
        Y = (e) => "length" === e || "size" === e || "bg-size" === e,
        Z = (e) => "length" === e,
        Q = (e) => "number" === e,
        J = (e) => "family-name" === e,
        $ = (e) => "shadow" === e;
      Symbol.toStringTag;
      let ee = (function (e) {
        let a, n, s;
        for (
          var i = arguments.length, b = Array(i > 1 ? i - 1 : 0), m = 1;
          m < i;
          m++
        )
          b[m - 1] = arguments[m];
        let l = function (i) {
          let d;
          return (
            (n = (a = {
              cache: ((e) => {
                if (e < 1) return { get: () => void 0, set: () => {} };
                let a = 0,
                  n = new Map(),
                  o = new Map(),
                  r = (r, t) => {
                    n.set(r, t), ++a > e && ((a = 0), (o = n), (n = new Map()));
                  };
                return {
                  get(e) {
                    let a = n.get(e);
                    return void 0 !== a
                      ? a
                      : void 0 !== (a = o.get(e))
                      ? (r(e, a), a)
                      : void 0;
                  },
                  set(e, a) {
                    n.has(e) ? n.set(e, a) : r(e, a);
                  },
                };
              })((d = b.reduce((e, a) => a(e), e())).cacheSize),
              parseClassName: ((e) => {
                let { prefix: a, experimentalParseClassName: n } = e,
                  o = (e) => {
                    let a,
                      n,
                      o = [],
                      r = 0,
                      t = 0,
                      s = 0;
                    for (let n = 0; n < e.length; n++) {
                      let i = e[n];
                      if (0 === r && 0 === t) {
                        if (":" === i) {
                          o.push(e.slice(s, n)), (s = n + 1);
                          continue;
                        }
                        if ("/" === i) {
                          a = n;
                          continue;
                        }
                      }
                      "[" === i
                        ? r++
                        : "]" === i
                        ? r--
                        : "(" === i
                        ? t++
                        : ")" === i && t--;
                    }
                    let i = 0 === o.length ? e : e.substring(s),
                      d = (n = i).endsWith("!")
                        ? n.substring(0, n.length - 1)
                        : n.startsWith("!")
                        ? n.substring(1)
                        : n;
                    return {
                      modifiers: o,
                      hasImportantModifier: d !== i,
                      baseClassName: d,
                      maybePostfixModifierPosition: a && a > s ? a - s : void 0,
                    };
                  };
                if (a) {
                  let e = a + ":",
                    n = o;
                  o = (a) =>
                    a.startsWith(e)
                      ? n(a.substring(e.length))
                      : {
                          isExternal: !0,
                          modifiers: [],
                          hasImportantModifier: !1,
                          baseClassName: a,
                          maybePostfixModifierPosition: void 0,
                        };
                }
                if (n) {
                  let e = o;
                  o = (a) => n({ className: a, parseClassName: e });
                }
                return o;
              })(d),
              sortModifiers: ((e) => {
                let a = Object.fromEntries(
                  e.orderSensitiveModifiers.map((e) => [e, !0])
                );
                return (e) => {
                  if (e.length <= 1) return e;
                  let n = [],
                    o = [];
                  return (
                    e.forEach((e) => {
                      "[" === e[0] || a[e]
                        ? (n.push(...o.sort(), e), (o = []))
                        : o.push(e);
                    }),
                    n.push(...o.sort()),
                    n
                  );
                };
              })(d),
              ...((e) => {
                let a = ((e) => {
                    let { theme: a, classGroups: n } = e,
                      o = { nextPart: new Map(), validators: [] };
                    for (let e in n) t(n[e], o, e, a);
                    return o;
                  })(e),
                  {
                    conflictingClassGroups: n,
                    conflictingClassGroupModifiers: s,
                  } = e;
                return {
                  getClassGroupId: (e) => {
                    let n = e.split("-");
                    return (
                      "" === n[0] && 1 !== n.length && n.shift(),
                      o(n, a) ||
                        ((e) => {
                          if (r.test(e)) {
                            let a = r.exec(e)[1],
                              n =
                                null == a
                                  ? void 0
                                  : a.substring(0, a.indexOf(":"));
                            if (n) return "arbitrary.." + n;
                          }
                        })(e)
                    );
                  },
                  getConflictingClassGroupIds: (e, a) => {
                    let o = n[e] || [];
                    return a && s[e] ? [...o, ...s[e]] : o;
                  },
                };
              })(d),
            }).cache.get),
            (s = a.cache.set),
            (l = f),
            f(i)
          );
        };
        function f(e) {
          let o = n(e);
          if (o) return o;
          let r = ((e, a) => {
            let {
                parseClassName: n,
                getClassGroupId: o,
                getConflictingClassGroupIds: r,
                sortModifiers: t,
              } = a,
              s = [],
              i = e.trim().split(d),
              c = "";
            for (let e = i.length - 1; e >= 0; e -= 1) {
              let a = i[e],
                {
                  isExternal: d,
                  modifiers: b,
                  hasImportantModifier: m,
                  baseClassName: l,
                  maybePostfixModifierPosition: f,
                } = n(a);
              if (d) {
                c = a + (c.length > 0 ? " " + c : c);
                continue;
              }
              let k = !!f,
                u = o(k ? l.substring(0, f) : l);
              if (!u) {
                if (!k || !(u = o(l))) {
                  c = a + (c.length > 0 ? " " + c : c);
                  continue;
                }
                k = !1;
              }
              let h = t(b).join(":"),
                p = m ? h + "!" : h,
                x = p + u;
              if (s.includes(x)) continue;
              s.push(x);
              let g = r(u, k);
              for (let e = 0; e < g.length; ++e) {
                let a = g[e];
                s.push(p + a);
              }
              c = a + (c.length > 0 ? " " + c : c);
            }
            return c;
          })(e, a);
          return s(e, r), r;
        }
        return function () {
          return l(c.apply(null, arguments));
        };
      })(() => {
        let e = m("color"),
          a = m("font"),
          n = m("text"),
          o = m("font-weight"),
          r = m("tracking"),
          t = m("leading"),
          s = m("breakpoint"),
          i = m("container"),
          d = m("spacing"),
          c = m("radius"),
          b = m("shadow"),
          l = m("inset-shadow"),
          f = m("text-shadow"),
          k = m("drop-shadow"),
          u = m("blur"),
          h = m("perspective"),
          p = m("aspect"),
          x = m("ease"),
          g = m("animate"),
          E = () => [
            "auto",
            "avoid",
            "all",
            "avoid-page",
            "page",
            "left",
            "right",
            "column",
          ],
          A = () => [
            "center",
            "top",
            "bottom",
            "left",
            "right",
            "top-left",
            "left-top",
            "top-right",
            "right-top",
            "bottom-right",
            "right-bottom",
            "bottom-left",
            "left-bottom",
          ],
          w = () => [...A(), _, P],
          S = () => ["auto", "hidden", "clip", "visible", "scroll"],
          V = () => ["auto", "contain", "none"],
          z = () => [_, P, d],
          j = () => [C, "full", "auto", ...z()],
          q = () => [y, "none", "subgrid", _, P],
          Y = () => ["auto", { span: ["full", y, _, P] }, y, _, P],
          Z = () => [y, "auto", _, P],
          Q = () => ["auto", "min", "max", "fr", _, P],
          J = () => [
            "start",
            "end",
            "center",
            "between",
            "around",
            "evenly",
            "stretch",
            "baseline",
            "center-safe",
            "end-safe",
          ],
          $ = () => [
            "start",
            "end",
            "center",
            "stretch",
            "center-safe",
            "end-safe",
          ],
          ee = () => ["auto", ...z()],
          ea = () => [
            C,
            "auto",
            "full",
            "dvw",
            "dvh",
            "lvw",
            "lvh",
            "svw",
            "svh",
            "min",
            "max",
            "fit",
            ...z(),
          ],
          en = () => [e, _, P],
          eo = () => [...A(), G, M, { position: [_, P] }],
          er = () => [
            "no-repeat",
            { repeat: ["", "x", "y", "space", "round"] },
          ],
          et = () => ["auto", "cover", "contain", X, O, { size: [_, P] }],
          es = () => [N, F, D],
          ei = () => ["", "none", "full", c, _, P],
          ed = () => ["", v, F, D],
          ec = () => ["solid", "dashed", "dotted", "double"],
          eb = () => [
            "normal",
            "multiply",
            "screen",
            "overlay",
            "darken",
            "lighten",
            "color-dodge",
            "color-burn",
            "hard-light",
            "soft-light",
            "difference",
            "exclusion",
            "hue",
            "saturation",
            "color",
            "luminosity",
          ],
          em = () => [v, N, G, M],
          el = () => ["", "none", u, _, P],
          ef = () => ["none", v, _, P],
          ek = () => ["none", v, _, P],
          eu = () => [v, _, P],
          eh = () => [C, "full", ...z()];
        return {
          cacheSize: 500,
          theme: {
            animate: ["spin", "ping", "pulse", "bounce"],
            aspect: ["video"],
            blur: [T],
            breakpoint: [T],
            color: [R],
            container: [T],
            "drop-shadow": [T],
            ease: ["in", "out", "in-out"],
            font: [I],
            "font-weight": [
              "thin",
              "extralight",
              "light",
              "normal",
              "medium",
              "semibold",
              "bold",
              "extrabold",
              "black",
            ],
            "inset-shadow": [T],
            leading: ["none", "tight", "snug", "normal", "relaxed", "loose"],
            perspective: [
              "dramatic",
              "near",
              "normal",
              "midrange",
              "distant",
              "none",
            ],
            radius: [T],
            shadow: [T],
            spacing: ["px", v],
            text: [T],
            "text-shadow": [T],
            tracking: ["tighter", "tight", "normal", "wide", "wider", "widest"],
          },
          classGroups: {
            aspect: [{ aspect: ["auto", "square", C, P, _, p] }],
            container: ["container"],
            columns: [{ columns: [v, P, _, i] }],
            "break-after": [{ "break-after": E() }],
            "break-before": [{ "break-before": E() }],
            "break-inside": [
              {
                "break-inside": ["auto", "avoid", "avoid-page", "avoid-column"],
              },
            ],
            "box-decoration": [{ "box-decoration": ["slice", "clone"] }],
            box: [{ box: ["border", "content"] }],
            display: [
              "block",
              "inline-block",
              "inline",
              "flex",
              "inline-flex",
              "table",
              "inline-table",
              "table-caption",
              "table-cell",
              "table-column",
              "table-column-group",
              "table-footer-group",
              "table-header-group",
              "table-row-group",
              "table-row",
              "flow-root",
              "grid",
              "inline-grid",
              "contents",
              "list-item",
              "hidden",
            ],
            sr: ["sr-only", "not-sr-only"],
            float: [{ float: ["right", "left", "none", "start", "end"] }],
            clear: [
              { clear: ["left", "right", "both", "none", "start", "end"] },
            ],
            isolation: ["isolate", "isolation-auto"],
            "object-fit": [
              { object: ["contain", "cover", "fill", "none", "scale-down"] },
            ],
            "object-position": [{ object: w() }],
            overflow: [{ overflow: S() }],
            "overflow-x": [{ "overflow-x": S() }],
            "overflow-y": [{ "overflow-y": S() }],
            overscroll: [{ overscroll: V() }],
            "overscroll-x": [{ "overscroll-x": V() }],
            "overscroll-y": [{ "overscroll-y": V() }],
            position: ["static", "fixed", "absolute", "relative", "sticky"],
            inset: [{ inset: j() }],
            "inset-x": [{ "inset-x": j() }],
            "inset-y": [{ "inset-y": j() }],
            start: [{ start: j() }],
            end: [{ end: j() }],
            top: [{ top: j() }],
            right: [{ right: j() }],
            bottom: [{ bottom: j() }],
            left: [{ left: j() }],
            visibility: ["visible", "invisible", "collapse"],
            z: [{ z: [y, "auto", _, P] }],
            basis: [{ basis: [C, "full", "auto", i, ...z()] }],
            "flex-direction": [
              { flex: ["row", "row-reverse", "col", "col-reverse"] },
            ],
            "flex-wrap": [{ flex: ["nowrap", "wrap", "wrap-reverse"] }],
            flex: [{ flex: [v, C, "auto", "initial", "none", P] }],
            grow: [{ grow: ["", v, _, P] }],
            shrink: [{ shrink: ["", v, _, P] }],
            order: [{ order: [y, "first", "last", "none", _, P] }],
            "grid-cols": [{ "grid-cols": q() }],
            "col-start-end": [{ col: Y() }],
            "col-start": [{ "col-start": Z() }],
            "col-end": [{ "col-end": Z() }],
            "grid-rows": [{ "grid-rows": q() }],
            "row-start-end": [{ row: Y() }],
            "row-start": [{ "row-start": Z() }],
            "row-end": [{ "row-end": Z() }],
            "grid-flow": [
              {
                "grid-flow": ["row", "col", "dense", "row-dense", "col-dense"],
              },
            ],
            "auto-cols": [{ "auto-cols": Q() }],
            "auto-rows": [{ "auto-rows": Q() }],
            gap: [{ gap: z() }],
            "gap-x": [{ "gap-x": z() }],
            "gap-y": [{ "gap-y": z() }],
            "justify-content": [{ justify: [...J(), "normal"] }],
            "justify-items": [{ "justify-items": [...$(), "normal"] }],
            "justify-self": [{ "justify-self": ["auto", ...$()] }],
            "align-content": [{ content: ["normal", ...J()] }],
            "align-items": [{ items: [...$(), { baseline: ["", "last"] }] }],
            "align-self": [
              { self: ["auto", ...$(), { baseline: ["", "last"] }] },
            ],
            "place-content": [{ "place-content": J() }],
            "place-items": [{ "place-items": [...$(), "baseline"] }],
            "place-self": [{ "place-self": ["auto", ...$()] }],
            p: [{ p: z() }],
            px: [{ px: z() }],
            py: [{ py: z() }],
            ps: [{ ps: z() }],
            pe: [{ pe: z() }],
            pt: [{ pt: z() }],
            pr: [{ pr: z() }],
            pb: [{ pb: z() }],
            pl: [{ pl: z() }],
            m: [{ m: ee() }],
            mx: [{ mx: ee() }],
            my: [{ my: ee() }],
            ms: [{ ms: ee() }],
            me: [{ me: ee() }],
            mt: [{ mt: ee() }],
            mr: [{ mr: ee() }],
            mb: [{ mb: ee() }],
            ml: [{ ml: ee() }],
            "space-x": [{ "space-x": z() }],
            "space-x-reverse": ["space-x-reverse"],
            "space-y": [{ "space-y": z() }],
            "space-y-reverse": ["space-y-reverse"],
            size: [{ size: ea() }],
            w: [{ w: [i, "screen", ...ea()] }],
            "min-w": [{ "min-w": [i, "screen", "none", ...ea()] }],
            "max-w": [
              {
                "max-w": [
                  i,
                  "screen",
                  "none",
                  "prose",
                  { screen: [s] },
                  ...ea(),
                ],
              },
            ],
            h: [{ h: ["screen", "lh", ...ea()] }],
            "min-h": [{ "min-h": ["screen", "lh", "none", ...ea()] }],
            "max-h": [{ "max-h": ["screen", "lh", ...ea()] }],
            "font-size": [{ text: ["base", n, F, D] }],
            "font-smoothing": ["antialiased", "subpixel-antialiased"],
            "font-style": ["italic", "not-italic"],
            "font-weight": [{ font: [o, _, L] }],
            "font-stretch": [
              {
                "font-stretch": [
                  "ultra-condensed",
                  "extra-condensed",
                  "condensed",
                  "semi-condensed",
                  "normal",
                  "semi-expanded",
                  "expanded",
                  "extra-expanded",
                  "ultra-expanded",
                  N,
                  P,
                ],
              },
            ],
            "font-family": [{ font: [H, P, a] }],
            "fvn-normal": ["normal-nums"],
            "fvn-ordinal": ["ordinal"],
            "fvn-slashed-zero": ["slashed-zero"],
            "fvn-figure": ["lining-nums", "oldstyle-nums"],
            "fvn-spacing": ["proportional-nums", "tabular-nums"],
            "fvn-fraction": ["diagonal-fractions", "stacked-fractions"],
            tracking: [{ tracking: [r, _, P] }],
            "line-clamp": [{ "line-clamp": [v, "none", _, L] }],
            leading: [{ leading: [t, ...z()] }],
            "list-image": [{ "list-image": ["none", _, P] }],
            "list-style-position": [{ list: ["inside", "outside"] }],
            "list-style-type": [{ list: ["disc", "decimal", "none", _, P] }],
            "text-alignment": [
              { text: ["left", "center", "right", "justify", "start", "end"] },
            ],
            "placeholder-color": [{ placeholder: en() }],
            "text-color": [{ text: en() }],
            "text-decoration": [
              "underline",
              "overline",
              "line-through",
              "no-underline",
            ],
            "text-decoration-style": [{ decoration: [...ec(), "wavy"] }],
            "text-decoration-thickness": [
              { decoration: [v, "from-font", "auto", _, D] },
            ],
            "text-decoration-color": [{ decoration: en() }],
            "underline-offset": [{ "underline-offset": [v, "auto", _, P] }],
            "text-transform": [
              "uppercase",
              "lowercase",
              "capitalize",
              "normal-case",
            ],
            "text-overflow": ["truncate", "text-ellipsis", "text-clip"],
            "text-wrap": [{ text: ["wrap", "nowrap", "balance", "pretty"] }],
            indent: [{ indent: z() }],
            "vertical-align": [
              {
                align: [
                  "baseline",
                  "top",
                  "middle",
                  "bottom",
                  "text-top",
                  "text-bottom",
                  "sub",
                  "super",
                  _,
                  P,
                ],
              },
            ],
            whitespace: [
              {
                whitespace: [
                  "normal",
                  "nowrap",
                  "pre",
                  "pre-line",
                  "pre-wrap",
                  "break-spaces",
                ],
              },
            ],
            break: [{ break: ["normal", "words", "all", "keep"] }],
            wrap: [{ wrap: ["break-word", "anywhere", "normal"] }],
            hyphens: [{ hyphens: ["none", "manual", "auto"] }],
            content: [{ content: ["none", _, P] }],
            "bg-attachment": [{ bg: ["fixed", "local", "scroll"] }],
            "bg-clip": [
              { "bg-clip": ["border", "padding", "content", "text"] },
            ],
            "bg-origin": [{ "bg-origin": ["border", "padding", "content"] }],
            "bg-position": [{ bg: eo() }],
            "bg-repeat": [{ bg: er() }],
            "bg-size": [{ bg: et() }],
            "bg-image": [
              {
                bg: [
                  "none",
                  {
                    linear: [
                      { to: ["t", "tr", "r", "br", "b", "bl", "l", "tl"] },
                      y,
                      _,
                      P,
                    ],
                    radial: ["", _, P],
                    conic: [y, _, P],
                  },
                  W,
                  B,
                ],
              },
            ],
            "bg-color": [{ bg: en() }],
            "gradient-from-pos": [{ from: es() }],
            "gradient-via-pos": [{ via: es() }],
            "gradient-to-pos": [{ to: es() }],
            "gradient-from": [{ from: en() }],
            "gradient-via": [{ via: en() }],
            "gradient-to": [{ to: en() }],
            rounded: [{ rounded: ei() }],
            "rounded-s": [{ "rounded-s": ei() }],
            "rounded-e": [{ "rounded-e": ei() }],
            "rounded-t": [{ "rounded-t": ei() }],
            "rounded-r": [{ "rounded-r": ei() }],
            "rounded-b": [{ "rounded-b": ei() }],
            "rounded-l": [{ "rounded-l": ei() }],
            "rounded-ss": [{ "rounded-ss": ei() }],
            "rounded-se": [{ "rounded-se": ei() }],
            "rounded-ee": [{ "rounded-ee": ei() }],
            "rounded-es": [{ "rounded-es": ei() }],
            "rounded-tl": [{ "rounded-tl": ei() }],
            "rounded-tr": [{ "rounded-tr": ei() }],
            "rounded-br": [{ "rounded-br": ei() }],
            "rounded-bl": [{ "rounded-bl": ei() }],
            "border-w": [{ border: ed() }],
            "border-w-x": [{ "border-x": ed() }],
            "border-w-y": [{ "border-y": ed() }],
            "border-w-s": [{ "border-s": ed() }],
            "border-w-e": [{ "border-e": ed() }],
            "border-w-t": [{ "border-t": ed() }],
            "border-w-r": [{ "border-r": ed() }],
            "border-w-b": [{ "border-b": ed() }],
            "border-w-l": [{ "border-l": ed() }],
            "divide-x": [{ "divide-x": ed() }],
            "divide-x-reverse": ["divide-x-reverse"],
            "divide-y": [{ "divide-y": ed() }],
            "divide-y-reverse": ["divide-y-reverse"],
            "border-style": [{ border: [...ec(), "hidden", "none"] }],
            "divide-style": [{ divide: [...ec(), "hidden", "none"] }],
            "border-color": [{ border: en() }],
            "border-color-x": [{ "border-x": en() }],
            "border-color-y": [{ "border-y": en() }],
            "border-color-s": [{ "border-s": en() }],
            "border-color-e": [{ "border-e": en() }],
            "border-color-t": [{ "border-t": en() }],
            "border-color-r": [{ "border-r": en() }],
            "border-color-b": [{ "border-b": en() }],
            "border-color-l": [{ "border-l": en() }],
            "divide-color": [{ divide: en() }],
            "outline-style": [{ outline: [...ec(), "none", "hidden"] }],
            "outline-offset": [{ "outline-offset": [v, _, P] }],
            "outline-w": [{ outline: ["", v, F, D] }],
            "outline-color": [{ outline: en() }],
            shadow: [{ shadow: ["", "none", b, K, U] }],
            "shadow-color": [{ shadow: en() }],
            "inset-shadow": [{ "inset-shadow": ["none", l, K, U] }],
            "inset-shadow-color": [{ "inset-shadow": en() }],
            "ring-w": [{ ring: ed() }],
            "ring-w-inset": ["ring-inset"],
            "ring-color": [{ ring: en() }],
            "ring-offset-w": [{ "ring-offset": [v, D] }],
            "ring-offset-color": [{ "ring-offset": en() }],
            "inset-ring-w": [{ "inset-ring": ed() }],
            "inset-ring-color": [{ "inset-ring": en() }],
            "text-shadow": [{ "text-shadow": ["none", f, K, U] }],
            "text-shadow-color": [{ "text-shadow": en() }],
            opacity: [{ opacity: [v, _, P] }],
            "mix-blend": [
              { "mix-blend": [...eb(), "plus-darker", "plus-lighter"] },
            ],
            "bg-blend": [{ "bg-blend": eb() }],
            "mask-clip": [
              {
                "mask-clip": [
                  "border",
                  "padding",
                  "content",
                  "fill",
                  "stroke",
                  "view",
                ],
              },
              "mask-no-clip",
            ],
            "mask-composite": [
              { mask: ["add", "subtract", "intersect", "exclude"] },
            ],
            "mask-image-linear-pos": [{ "mask-linear": [v] }],
            "mask-image-linear-from-pos": [{ "mask-linear-from": em() }],
            "mask-image-linear-to-pos": [{ "mask-linear-to": em() }],
            "mask-image-linear-from-color": [{ "mask-linear-from": en() }],
            "mask-image-linear-to-color": [{ "mask-linear-to": en() }],
            "mask-image-t-from-pos": [{ "mask-t-from": em() }],
            "mask-image-t-to-pos": [{ "mask-t-to": em() }],
            "mask-image-t-from-color": [{ "mask-t-from": en() }],
            "mask-image-t-to-color": [{ "mask-t-to": en() }],
            "mask-image-r-from-pos": [{ "mask-r-from": em() }],
            "mask-image-r-to-pos": [{ "mask-r-to": em() }],
            "mask-image-r-from-color": [{ "mask-r-from": en() }],
            "mask-image-r-to-color": [{ "mask-r-to": en() }],
            "mask-image-b-from-pos": [{ "mask-b-from": em() }],
            "mask-image-b-to-pos": [{ "mask-b-to": em() }],
            "mask-image-b-from-color": [{ "mask-b-from": en() }],
            "mask-image-b-to-color": [{ "mask-b-to": en() }],
            "mask-image-l-from-pos": [{ "mask-l-from": em() }],
            "mask-image-l-to-pos": [{ "mask-l-to": em() }],
            "mask-image-l-from-color": [{ "mask-l-from": en() }],
            "mask-image-l-to-color": [{ "mask-l-to": en() }],
            "mask-image-x-from-pos": [{ "mask-x-from": em() }],
            "mask-image-x-to-pos": [{ "mask-x-to": em() }],
            "mask-image-x-from-color": [{ "mask-x-from": en() }],
            "mask-image-x-to-color": [{ "mask-x-to": en() }],
            "mask-image-y-from-pos": [{ "mask-y-from": em() }],
            "mask-image-y-to-pos": [{ "mask-y-to": em() }],
            "mask-image-y-from-color": [{ "mask-y-from": en() }],
            "mask-image-y-to-color": [{ "mask-y-to": en() }],
            "mask-image-radial": [{ "mask-radial": [_, P] }],
            "mask-image-radial-from-pos": [{ "mask-radial-from": em() }],
            "mask-image-radial-to-pos": [{ "mask-radial-to": em() }],
            "mask-image-radial-from-color": [{ "mask-radial-from": en() }],
            "mask-image-radial-to-color": [{ "mask-radial-to": en() }],
            "mask-image-radial-shape": [
              { "mask-radial": ["circle", "ellipse"] },
            ],
            "mask-image-radial-size": [
              {
                "mask-radial": [
                  { closest: ["side", "corner"], farthest: ["side", "corner"] },
                ],
              },
            ],
            "mask-image-radial-pos": [{ "mask-radial-at": A() }],
            "mask-image-conic-pos": [{ "mask-conic": [v] }],
            "mask-image-conic-from-pos": [{ "mask-conic-from": em() }],
            "mask-image-conic-to-pos": [{ "mask-conic-to": em() }],
            "mask-image-conic-from-color": [{ "mask-conic-from": en() }],
            "mask-image-conic-to-color": [{ "mask-conic-to": en() }],
            "mask-mode": [{ mask: ["alpha", "luminance", "match"] }],
            "mask-origin": [
              {
                "mask-origin": [
                  "border",
                  "padding",
                  "content",
                  "fill",
                  "stroke",
                  "view",
                ],
              },
            ],
            "mask-position": [{ mask: eo() }],
            "mask-repeat": [{ mask: er() }],
            "mask-size": [{ mask: et() }],
            "mask-type": [{ "mask-type": ["alpha", "luminance"] }],
            "mask-image": [{ mask: ["none", _, P] }],
            filter: [{ filter: ["", "none", _, P] }],
            blur: [{ blur: el() }],
            brightness: [{ brightness: [v, _, P] }],
            contrast: [{ contrast: [v, _, P] }],
            "drop-shadow": [{ "drop-shadow": ["", "none", k, K, U] }],
            "drop-shadow-color": [{ "drop-shadow": en() }],
            grayscale: [{ grayscale: ["", v, _, P] }],
            "hue-rotate": [{ "hue-rotate": [v, _, P] }],
            invert: [{ invert: ["", v, _, P] }],
            saturate: [{ saturate: [v, _, P] }],
            sepia: [{ sepia: ["", v, _, P] }],
            "backdrop-filter": [{ "backdrop-filter": ["", "none", _, P] }],
            "backdrop-blur": [{ "backdrop-blur": el() }],
            "backdrop-brightness": [{ "backdrop-brightness": [v, _, P] }],
            "backdrop-contrast": [{ "backdrop-contrast": [v, _, P] }],
            "backdrop-grayscale": [{ "backdrop-grayscale": ["", v, _, P] }],
            "backdrop-hue-rotate": [{ "backdrop-hue-rotate": [v, _, P] }],
            "backdrop-invert": [{ "backdrop-invert": ["", v, _, P] }],
            "backdrop-opacity": [{ "backdrop-opacity": [v, _, P] }],
            "backdrop-saturate": [{ "backdrop-saturate": [v, _, P] }],
            "backdrop-sepia": [{ "backdrop-sepia": ["", v, _, P] }],
            "border-collapse": [{ border: ["collapse", "separate"] }],
            "border-spacing": [{ "border-spacing": z() }],
            "border-spacing-x": [{ "border-spacing-x": z() }],
            "border-spacing-y": [{ "border-spacing-y": z() }],
            "table-layout": [{ table: ["auto", "fixed"] }],
            caption: [{ caption: ["top", "bottom"] }],
            transition: [
              {
                transition: [
                  "",
                  "all",
                  "colors",
                  "opacity",
                  "shadow",
                  "transform",
                  "none",
                  _,
                  P,
                ],
              },
            ],
            "transition-behavior": [{ transition: ["normal", "discrete"] }],
            duration: [{ duration: [v, "initial", _, P] }],
            ease: [{ ease: ["linear", "initial", x, _, P] }],
            delay: [{ delay: [v, _, P] }],
            animate: [{ animate: ["none", g, _, P] }],
            backface: [{ backface: ["hidden", "visible"] }],
            perspective: [{ perspective: [h, _, P] }],
            "perspective-origin": [{ "perspective-origin": w() }],
            rotate: [{ rotate: ef() }],
            "rotate-x": [{ "rotate-x": ef() }],
            "rotate-y": [{ "rotate-y": ef() }],
            "rotate-z": [{ "rotate-z": ef() }],
            scale: [{ scale: ek() }],
            "scale-x": [{ "scale-x": ek() }],
            "scale-y": [{ "scale-y": ek() }],
            "scale-z": [{ "scale-z": ek() }],
            "scale-3d": ["scale-3d"],
            skew: [{ skew: eu() }],
            "skew-x": [{ "skew-x": eu() }],
            "skew-y": [{ "skew-y": eu() }],
            transform: [{ transform: [_, P, "", "none", "gpu", "cpu"] }],
            "transform-origin": [{ origin: w() }],
            "transform-style": [{ transform: ["3d", "flat"] }],
            translate: [{ translate: eh() }],
            "translate-x": [{ "translate-x": eh() }],
            "translate-y": [{ "translate-y": eh() }],
            "translate-z": [{ "translate-z": eh() }],
            "translate-none": ["translate-none"],
            accent: [{ accent: en() }],
            appearance: [{ appearance: ["none", "auto"] }],
            "caret-color": [{ caret: en() }],
            "color-scheme": [
              {
                scheme: [
                  "normal",
                  "dark",
                  "light",
                  "light-dark",
                  "only-dark",
                  "only-light",
                ],
              },
            ],
            cursor: [
              {
                cursor: [
                  "auto",
                  "default",
                  "pointer",
                  "wait",
                  "text",
                  "move",
                  "help",
                  "not-allowed",
                  "none",
                  "context-menu",
                  "progress",
                  "cell",
                  "crosshair",
                  "vertical-text",
                  "alias",
                  "copy",
                  "no-drop",
                  "grab",
                  "grabbing",
                  "all-scroll",
                  "col-resize",
                  "row-resize",
                  "n-resize",
                  "e-resize",
                  "s-resize",
                  "w-resize",
                  "ne-resize",
                  "nw-resize",
                  "se-resize",
                  "sw-resize",
                  "ew-resize",
                  "ns-resize",
                  "nesw-resize",
                  "nwse-resize",
                  "zoom-in",
                  "zoom-out",
                  _,
                  P,
                ],
              },
            ],
            "field-sizing": [{ "field-sizing": ["fixed", "content"] }],
            "pointer-events": [{ "pointer-events": ["auto", "none"] }],
            resize: [{ resize: ["none", "", "y", "x"] }],
            "scroll-behavior": [{ scroll: ["auto", "smooth"] }],
            "scroll-m": [{ "scroll-m": z() }],
            "scroll-mx": [{ "scroll-mx": z() }],
            "scroll-my": [{ "scroll-my": z() }],
            "scroll-ms": [{ "scroll-ms": z() }],
            "scroll-me": [{ "scroll-me": z() }],
            "scroll-mt": [{ "scroll-mt": z() }],
            "scroll-mr": [{ "scroll-mr": z() }],
            "scroll-mb": [{ "scroll-mb": z() }],
            "scroll-ml": [{ "scroll-ml": z() }],
            "scroll-p": [{ "scroll-p": z() }],
            "scroll-px": [{ "scroll-px": z() }],
            "scroll-py": [{ "scroll-py": z() }],
            "scroll-ps": [{ "scroll-ps": z() }],
            "scroll-pe": [{ "scroll-pe": z() }],
            "scroll-pt": [{ "scroll-pt": z() }],
            "scroll-pr": [{ "scroll-pr": z() }],
            "scroll-pb": [{ "scroll-pb": z() }],
            "scroll-pl": [{ "scroll-pl": z() }],
            "snap-align": [{ snap: ["start", "end", "center", "align-none"] }],
            "snap-stop": [{ snap: ["normal", "always"] }],
            "snap-type": [{ snap: ["none", "x", "y", "both"] }],
            "snap-strictness": [{ snap: ["mandatory", "proximity"] }],
            touch: [{ touch: ["auto", "none", "manipulation"] }],
            "touch-x": [{ "touch-pan": ["x", "left", "right"] }],
            "touch-y": [{ "touch-pan": ["y", "up", "down"] }],
            "touch-pz": ["touch-pinch-zoom"],
            select: [{ select: ["none", "text", "all", "auto"] }],
            "will-change": [
              {
                "will-change": [
                  "auto",
                  "scroll",
                  "contents",
                  "transform",
                  _,
                  P,
                ],
              },
            ],
            fill: [{ fill: ["none", ...en()] }],
            "stroke-w": [{ stroke: [v, F, D, L] }],
            stroke: [{ stroke: ["none", ...en()] }],
            "forced-color-adjust": [
              { "forced-color-adjust": ["auto", "none"] },
            ],
          },
          conflictingClassGroups: {
            overflow: ["overflow-x", "overflow-y"],
            overscroll: ["overscroll-x", "overscroll-y"],
            inset: [
              "inset-x",
              "inset-y",
              "start",
              "end",
              "top",
              "right",
              "bottom",
              "left",
            ],
            "inset-x": ["right", "left"],
            "inset-y": ["top", "bottom"],
            flex: ["basis", "grow", "shrink"],
            gap: ["gap-x", "gap-y"],
            p: ["px", "py", "ps", "pe", "pt", "pr", "pb", "pl"],
            px: ["pr", "pl"],
            py: ["pt", "pb"],
            m: ["mx", "my", "ms", "me", "mt", "mr", "mb", "ml"],
            mx: ["mr", "ml"],
            my: ["mt", "mb"],
            size: ["w", "h"],
            "font-size": ["leading"],
            "fvn-normal": [
              "fvn-ordinal",
              "fvn-slashed-zero",
              "fvn-figure",
              "fvn-spacing",
              "fvn-fraction",
            ],
            "fvn-ordinal": ["fvn-normal"],
            "fvn-slashed-zero": ["fvn-normal"],
            "fvn-figure": ["fvn-normal"],
            "fvn-spacing": ["fvn-normal"],
            "fvn-fraction": ["fvn-normal"],
            "line-clamp": ["display", "overflow"],
            rounded: [
              "rounded-s",
              "rounded-e",
              "rounded-t",
              "rounded-r",
              "rounded-b",
              "rounded-l",
              "rounded-ss",
              "rounded-se",
              "rounded-ee",
              "rounded-es",
              "rounded-tl",
              "rounded-tr",
              "rounded-br",
              "rounded-bl",
            ],
            "rounded-s": ["rounded-ss", "rounded-es"],
            "rounded-e": ["rounded-se", "rounded-ee"],
            "rounded-t": ["rounded-tl", "rounded-tr"],
            "rounded-r": ["rounded-tr", "rounded-br"],
            "rounded-b": ["rounded-br", "rounded-bl"],
            "rounded-l": ["rounded-tl", "rounded-bl"],
            "border-spacing": ["border-spacing-x", "border-spacing-y"],
            "border-w": [
              "border-w-x",
              "border-w-y",
              "border-w-s",
              "border-w-e",
              "border-w-t",
              "border-w-r",
              "border-w-b",
              "border-w-l",
            ],
            "border-w-x": ["border-w-r", "border-w-l"],
            "border-w-y": ["border-w-t", "border-w-b"],
            "border-color": [
              "border-color-x",
              "border-color-y",
              "border-color-s",
              "border-color-e",
              "border-color-t",
              "border-color-r",
              "border-color-b",
              "border-color-l",
            ],
            "border-color-x": ["border-color-r", "border-color-l"],
            "border-color-y": ["border-color-t", "border-color-b"],
            translate: ["translate-x", "translate-y", "translate-none"],
            "translate-none": [
              "translate",
              "translate-x",
              "translate-y",
              "translate-z",
            ],
            "scroll-m": [
              "scroll-mx",
              "scroll-my",
              "scroll-ms",
              "scroll-me",
              "scroll-mt",
              "scroll-mr",
              "scroll-mb",
              "scroll-ml",
            ],
            "scroll-mx": ["scroll-mr", "scroll-ml"],
            "scroll-my": ["scroll-mt", "scroll-mb"],
            "scroll-p": [
              "scroll-px",
              "scroll-py",
              "scroll-ps",
              "scroll-pe",
              "scroll-pt",
              "scroll-pr",
              "scroll-pb",
              "scroll-pl",
            ],
            "scroll-px": ["scroll-pr", "scroll-pl"],
            "scroll-py": ["scroll-pt", "scroll-pb"],
            touch: ["touch-x", "touch-y", "touch-pz"],
            "touch-x": ["touch"],
            "touch-y": ["touch"],
            "touch-pz": ["touch"],
          },
          conflictingClassGroupModifiers: { "font-size": ["leading"] },
          orderSensitiveModifiers: [
            "*",
            "**",
            "after",
            "backdrop",
            "before",
            "details-content",
            "file",
            "first-letter",
            "first-line",
            "marker",
            "placeholder",
            "selection",
          ],
        };
      });
      function ea() {
        for (var e = arguments.length, a = Array(e), n = 0; n < e; n++)
          a[n] = arguments[n];
        return ee(
          (function () {
            for (var e, a, n = 0, o = "", r = arguments.length; n < r; n++)
              (e = arguments[n]) &&
                (a = (function e(a) {
                  var n,
                    o,
                    r = "";
                  if ("string" == typeof a || "number" == typeof a) r += a;
                  else if ("object" == typeof a)
                    if (Array.isArray(a)) {
                      var t = a.length;
                      for (n = 0; n < t; n++)
                        a[n] && (o = e(a[n])) && (r && (r += " "), (r += o));
                    } else for (o in a) a[o] && (r && (r += " "), (r += o));
                  return r;
                })(e)) &&
                (o && (o += " "), (o += a));
            return o;
          })(a)
        );
      }
      let en = (e) => {
          if (e)
            return e.startsWith("eth:")
              ? e.replace("eth:", "")
              : e.startsWith("solana:")
              ? e.replace("solana:", "")
              : e.startsWith("eip155:")
              ? e.replace("eip155:", "")
              : e;
        },
        eo = function (e) {
          let a =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : 6,
            n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : 3;
          if (!e) return;
          let o = en(e);
          if (o) return "".concat(o.slice(0, a), "...").concat(o.slice(-n));
        },
        er = function (e, a) {
          let n =
            arguments.length > 2 && void 0 !== arguments[2]
              ? arguments[2]
              : "en";
          return e === n
            ? a.startsWith("/")
              ? a
              : "/".concat(a)
            : (a.startsWith("/")
                ? "/".concat(e).concat(a)
                : "/".concat(e, "/").concat(a)
              ).replace(/\/$/, "");
        },
        et = function (e) {
          var a;
          let { asReactNodes: o = !0 } =
            arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
          if ("string" != typeof e) return e;
          let r = e;
          return ((r = (r = !(a = r =
            (r = (r = r.replace(
              /<primary>(.*?)<\/primary>/g,
              "<span class='text-primary'>$1</span>"
            )).replace(
              /<pink>(.*?)<\/pink>/g,
              "<span class='text-pink'>$1</span>"
            )).replace(/\*([^*]+)\*/g, "<strong>$1</strong>")).includes("\n\n")
            ? a
            : a
                .split("\n\n")
                .map((e) => "<p>".concat(e.trim(), "</p>"))
                .join("")).replace(/\n/g, "<br />")),
          o)
            ? n(r)
            : r;
        };
    },
    107906: (e) => {
      "use strict";
      e.s({
        FaArrowDown: () => o,
        FaArrowLeft: () => r,
        FaArrowRight: () => t,
        FaDiscord: () => n,
        FaTimes: () => s,
      });
      var a = e.i(718818);
      function n(e) {
        return (0, a.GenIcon)({
          tag: "svg",
          attr: { viewBox: "0 0 640 512" },
          child: [
            {
              tag: "path",
              attr: {
                d: "M524.531,69.836a1.5,1.5,0,0,0-.764-.7A485.065,485.065,0,0,0,404.081,32.03a1.816,1.816,0,0,0-1.923.91,337.461,337.461,0,0,0-14.9,30.6,447.848,447.848,0,0,0-134.426,0,309.541,309.541,0,0,0-15.135-30.6,1.89,1.89,0,0,0-1.924-.91A483.689,483.689,0,0,0,116.085,69.137a1.712,1.712,0,0,0-.788.676C39.068,183.651,18.186,294.69,28.43,404.354a2.016,2.016,0,0,0,.765,1.375A487.666,487.666,0,0,0,176.02,479.918a1.9,1.9,0,0,0,2.063-.676A348.2,348.2,0,0,0,208.12,430.4a1.86,1.86,0,0,0-1.019-2.588,321.173,321.173,0,0,1-45.868-21.853,1.885,1.885,0,0,1-.185-3.126c3.082-2.309,6.166-4.711,9.109-7.137a1.819,1.819,0,0,1,1.9-.256c96.229,43.917,200.41,43.917,295.5,0a1.812,1.812,0,0,1,1.924.233c2.944,2.426,6.027,4.851,9.132,7.16a1.884,1.884,0,0,1-.162,3.126,301.407,301.407,0,0,1-45.89,21.83,1.875,1.875,0,0,0-1,2.611,391.055,391.055,0,0,0,30.014,48.815,1.864,1.864,0,0,0,2.063.7A486.048,486.048,0,0,0,610.7,405.729a1.882,1.882,0,0,0,.765-1.352C623.729,277.594,590.933,167.465,524.531,69.836ZM222.491,337.58c-28.972,0-52.844-26.587-52.844-59.239S193.056,219.1,222.491,219.1c29.665,0,53.306,26.82,52.843,59.239C275.334,310.993,251.924,337.58,222.491,337.58Zm195.38,0c-28.971,0-52.843-26.587-52.843-59.239S388.437,219.1,417.871,219.1c29.667,0,53.307,26.82,52.844,59.239C470.715,310.993,447.538,337.58,417.871,337.58Z",
              },
              child: [],
            },
          ],
        })(e);
      }
      function o(e) {
        return (0, a.GenIcon)({
          tag: "svg",
          attr: { viewBox: "0 0 448 512" },
          child: [
            {
              tag: "path",
              attr: {
                d: "M413.1 222.5l22.2 22.2c9.4 9.4 9.4 24.6 0 33.9L241 473c-9.4 9.4-24.6 9.4-33.9 0L12.7 278.6c-9.4-9.4-9.4-24.6 0-33.9l22.2-22.2c9.5-9.5 25-9.3 34.3.4L184 343.4V56c0-13.3 10.7-24 24-24h32c13.3 0 24 10.7 24 24v287.4l114.8-120.5c9.3-9.8 24.8-10 34.3-.4z",
              },
              child: [],
            },
          ],
        })(e);
      }
      function r(e) {
        return (0, a.GenIcon)({
          tag: "svg",
          attr: { viewBox: "0 0 448 512" },
          child: [
            {
              tag: "path",
              attr: {
                d: "M257.5 445.1l-22.2 22.2c-9.4 9.4-24.6 9.4-33.9 0L7 273c-9.4-9.4-9.4-24.6 0-33.9L201.4 44.7c9.4-9.4 24.6-9.4 33.9 0l22.2 22.2c9.5 9.5 9.3 25-.4 34.3L136.6 216H424c13.3 0 24 10.7 24 24v32c0 13.3-10.7 24-24 24H136.6l120.5 114.8c9.8 9.3 10 24.8.4 34.3z",
              },
              child: [],
            },
          ],
        })(e);
      }
      function t(e) {
        return (0, a.GenIcon)({
          tag: "svg",
          attr: { viewBox: "0 0 448 512" },
          child: [
            {
              tag: "path",
              attr: {
                d: "M190.5 66.9l22.2-22.2c9.4-9.4 24.6-9.4 33.9 0L441 239c9.4 9.4 9.4 24.6 0 33.9L246.6 467.3c-9.4 9.4-24.6 9.4-33.9 0l-22.2-22.2c-9.5-9.5-9.3-25 .4-34.3L311.4 296H24c-13.3 0-24-10.7-24-24v-32c0-13.3 10.7-24 24-24h287.4L190.9 101.2c-9.8-9.3-10-24.8-.4-34.3z",
              },
              child: [],
            },
          ],
        })(e);
      }
      function s(e) {
        return (0, a.GenIcon)({
          tag: "svg",
          attr: { viewBox: "0 0 352 512" },
          child: [
            {
              tag: "path",
              attr: {
                d: "M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z",
              },
              child: [],
            },
          ],
        })(e);
      }
    },
    289267: (e) => {
      "use strict";
      e.s({ WalletContext: () => t, useWallet: () => s });
      var a = e.i(756253);
      let n = [],
        o = {
          autoConnect: !1,
          connecting: !1,
          connected: !1,
          disconnecting: !1,
          select() {
            r("call", "select");
          },
          connect: () => Promise.reject(r("call", "connect")),
          disconnect: () => Promise.reject(r("call", "disconnect")),
          sendTransaction: () => Promise.reject(r("call", "sendTransaction")),
          signTransaction: () => Promise.reject(r("call", "signTransaction")),
          signAllTransactions: () =>
            Promise.reject(r("call", "signAllTransactions")),
          signMessage: () => Promise.reject(r("call", "signMessage")),
          signIn: () => Promise.reject(r("call", "signIn")),
        };
      function r(e, a) {
        let n = Error(
          "You have tried to "
            .concat(e, ' "')
            .concat(a, '" on a WalletContext without providing one. ') +
            "Make sure to render a WalletProvider as an ancestor of the component that uses WalletContext."
        );
        return console.error(n), n;
      }
      Object.defineProperty(o, "wallets", {
        get: () => (r("read", "wallets"), n),
      }),
        Object.defineProperty(o, "wallet", {
          get: () => (r("read", "wallet"), null),
        }),
        Object.defineProperty(o, "publicKey", {
          get: () => (r("read", "publicKey"), null),
        });
      let t = (0, a.createContext)(o);
      function s() {
        return (0, a.useContext)(t);
      }
    },
    21442: (e) => {
      "use strict";
      var { m: a, e: n } = e;
      function o(e) {
        let {
            widthInt: a,
            heightInt: n,
            blurWidth: o,
            blurHeight: r,
            blurDataURL: t,
            objectFit: s,
          } = e,
          i = o ? 40 * o : a,
          d = r ? 40 * r : n,
          c = i && d ? "viewBox='0 0 " + i + " " + d + "'" : "";
        return (
          "%3Csvg xmlns='http://www.w3.org/2000/svg' " +
          c +
          "%3E%3Cfilter id='b' color-interpolation-filters='sRGB'%3E%3CfeGaussianBlur stdDeviation='20'/%3E%3CfeColorMatrix values='1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 100 -1' result='s'/%3E%3CfeFlood x='0' y='0' width='100%25' height='100%25'/%3E%3CfeComposite operator='out' in='s'/%3E%3CfeComposite in2='SourceGraphic'/%3E%3CfeGaussianBlur stdDeviation='20'/%3E%3C/filter%3E%3Cimage width='100%25' height='100%25' x='0' y='0' preserveAspectRatio='" +
          (c
            ? "none"
            : "contain" === s
            ? "xMidYMid"
            : "cover" === s
            ? "xMidYMid slice"
            : "none") +
          "' style='filter: url(%23b);' href='" +
          t +
          "'/%3E%3C/svg%3E"
        );
      }
      Object.defineProperty(n, "__esModule", { value: !0 }),
        Object.defineProperty(n, "getImageBlurSvg", {
          enumerable: !0,
          get: function () {
            return o;
          },
        });
    },
    150907: (e) => {
      "use strict";
      var { m: a, e: n } = e;
      {
        Object.defineProperty(n, "__esModule", { value: !0 }),
          !(function (e, a) {
            for (var n in a)
              Object.defineProperty(e, n, { enumerable: !0, get: a[n] });
          })(n, {
            VALID_LOADERS: function () {
              return e;
            },
            imageConfigDefault: function () {
              return a;
            },
          });
        let e = ["default", "imgix", "cloudinary", "akamai", "custom"],
          a = {
            deviceSizes: [640, 750, 828, 1080, 1200, 1920, 2048, 3840],
            imageSizes: [16, 32, 48, 64, 96, 128, 256, 384],
            path: "/_next/image",
            loader: "default",
            loaderFile: "",
            domains: [],
            disableStaticImages: !1,
            minimumCacheTTL: 60,
            formats: ["image/webp"],
            dangerouslyAllowSVG: !1,
            contentSecurityPolicy:
              "script-src 'none'; frame-src 'none'; sandbox;",
            contentDispositionType: "attachment",
            localPatterns: void 0,
            remotePatterns: [],
            qualities: void 0,
            unoptimized: !1,
          };
      }
    },
    23790: (e) => {
      "use strict";
      var { m: a, e: n } = e;
      {
        Object.defineProperty(n, "__esModule", { value: !0 }),
          Object.defineProperty(n, "getImgProps", {
            enumerable: !0,
            get: function () {
              return t;
            },
          }),
          e.r(716214);
        let a = e.r(21442),
          s = e.r(150907),
          i = ["-moz-initial", "fill", "none", "scale-down", void 0];
        function o(e) {
          return void 0 !== e.default;
        }
        function r(e) {
          return void 0 === e
            ? e
            : "number" == typeof e
            ? Number.isFinite(e)
              ? e
              : NaN
            : "string" == typeof e && /^[0-9]+$/.test(e)
            ? parseInt(e, 10)
            : NaN;
        }
        function t(e, n) {
          var t, d;
          let c,
            b,
            m,
            {
              src: l,
              sizes: f,
              unoptimized: k = !1,
              priority: u = !1,
              loading: h,
              className: p,
              quality: x,
              width: g,
              height: C,
              fill: v = !1,
              style: y,
              overrideSrc: N,
              onLoad: T,
              onLoadingComplete: R,
              placeholder: E = "empty",
              blurDataURL: A,
              fetchPriority: w,
              decoding: S = "async",
              layout: I,
              objectFit: O,
              objectPosition: P,
              lazyBoundary: D,
              lazyRoot: L,
              ...M
            } = e,
            {
              imgConf: B,
              showAltText: U,
              blurComplete: _,
              defaultLoader: F,
            } = n,
            H = B || s.imageConfigDefault;
          if ("allSizes" in H) c = H;
          else {
            let e = [...H.deviceSizes, ...H.imageSizes].sort((e, a) => e - a),
              a = H.deviceSizes.sort((e, a) => e - a),
              n = null == (t = H.qualities) ? void 0 : t.sort((e, a) => e - a);
            c = { ...H, allSizes: e, deviceSizes: a, qualities: n };
          }
          if (void 0 === F)
            throw Object.defineProperty(
              Error(
                "images.loaderFile detected but the file is missing default export.\nRead more: https://nextjs.org/docs/messages/invalid-images-config"
              ),
              "__NEXT_ERROR_CODE",
              { value: "E163", enumerable: !1, configurable: !0 }
            );
          let G = M.loader || F;
          delete M.loader, delete M.srcSet;
          let X = "__next_img_default" in G;
          if (X) {
            if ("custom" === c.loader)
              throw Object.defineProperty(
                Error(
                  'Image with src "' +
                    l +
                    '" is missing "loader" prop.\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader'
                ),
                "__NEXT_ERROR_CODE",
                { value: "E252", enumerable: !1, configurable: !0 }
              );
          } else {
            let e = G;
            G = (a) => {
              let { config: n, ...o } = a;
              return e(o);
            };
          }
          if (I) {
            "fill" === I && (v = !0);
            let e = {
              intrinsic: { maxWidth: "100%", height: "auto" },
              responsive: { width: "100%", height: "auto" },
            }[I];
            e && (y = { ...y, ...e });
            let a = { responsive: "100vw", fill: "100vw" }[I];
            a && !f && (f = a);
          }
          let W = "",
            K = r(g),
            V = r(C);
          if ((d = l) && "object" == typeof d && (o(d) || void 0 !== d.src)) {
            let e = o(l) ? l.default : l;
            if (!e.src)
              throw Object.defineProperty(
                Error(
                  "An object should only be passed to the image component src parameter if it comes from a static image import. It must include src. Received " +
                    JSON.stringify(e)
                ),
                "__NEXT_ERROR_CODE",
                { value: "E460", enumerable: !1, configurable: !0 }
              );
            if (!e.height || !e.width)
              throw Object.defineProperty(
                Error(
                  "An object should only be passed to the image component src parameter if it comes from a static image import. It must include height and width. Received " +
                    JSON.stringify(e)
                ),
                "__NEXT_ERROR_CODE",
                { value: "E48", enumerable: !1, configurable: !0 }
              );
            if (
              ((b = e.blurWidth),
              (m = e.blurHeight),
              (A = A || e.blurDataURL),
              (W = e.src),
              !v)
            )
              if (K || V) {
                if (K && !V) {
                  let a = K / e.width;
                  V = Math.round(e.height * a);
                } else if (!K && V) {
                  let a = V / e.height;
                  K = Math.round(e.width * a);
                }
              } else (K = e.width), (V = e.height);
          }
          let z = !u && ("lazy" === h || void 0 === h);
          (!(l = "string" == typeof l ? l : W) ||
            l.startsWith("data:") ||
            l.startsWith("blob:")) &&
            ((k = !0), (z = !1)),
            c.unoptimized && (k = !0),
            X &&
              !c.dangerouslyAllowSVG &&
              l.split("?", 1)[0].endsWith(".svg") &&
              (k = !0);
          let j = r(x),
            q = Object.assign(
              v
                ? {
                    position: "absolute",
                    height: "100%",
                    width: "100%",
                    left: 0,
                    top: 0,
                    right: 0,
                    bottom: 0,
                    objectFit: O,
                    objectPosition: P,
                  }
                : {},
              U ? {} : { color: "transparent" },
              y
            ),
            Y =
              _ || "empty" === E
                ? null
                : "blur" === E
                ? 'url("data:image/svg+xml;charset=utf-8,' +
                  (0, a.getImageBlurSvg)({
                    widthInt: K,
                    heightInt: V,
                    blurWidth: b,
                    blurHeight: m,
                    blurDataURL: A || "",
                    objectFit: q.objectFit,
                  }) +
                  '")'
                : 'url("' + E + '")',
            Z = i.includes(q.objectFit)
              ? "fill" === q.objectFit
                ? "100% 100%"
                : "cover"
              : q.objectFit,
            Q = Y
              ? {
                  backgroundSize: Z,
                  backgroundPosition: q.objectPosition || "50% 50%",
                  backgroundRepeat: "no-repeat",
                  backgroundImage: Y,
                }
              : {},
            J = (function (e) {
              let {
                config: a,
                src: n,
                unoptimized: o,
                width: r,
                quality: t,
                sizes: s,
                loader: i,
              } = e;
              if (o) return { src: n, srcSet: void 0, sizes: void 0 };
              let { widths: d, kind: c } = (function (e, a, n) {
                  let { deviceSizes: o, allSizes: r } = e;
                  if (n) {
                    let e = /(^|\s)(1?\d?\d)vw/g,
                      a = [];
                    for (let o; (o = e.exec(n)); ) a.push(parseInt(o[2]));
                    if (a.length) {
                      let e = 0.01 * Math.min(...a);
                      return {
                        widths: r.filter((a) => a >= o[0] * e),
                        kind: "w",
                      };
                    }
                    return { widths: r, kind: "w" };
                  }
                  return "number" != typeof a
                    ? { widths: o, kind: "w" }
                    : {
                        widths: [
                          ...new Set(
                            [a, 2 * a].map(
                              (e) => r.find((a) => a >= e) || r[r.length - 1]
                            )
                          ),
                        ],
                        kind: "x",
                      };
                })(a, r, s),
                b = d.length - 1;
              return {
                sizes: s || "w" !== c ? s : "100vw",
                srcSet: d
                  .map(
                    (e, o) =>
                      i({ config: a, src: n, quality: t, width: e }) +
                      " " +
                      ("w" === c ? e : o + 1) +
                      c
                  )
                  .join(", "),
                src: i({ config: a, src: n, quality: t, width: d[b] }),
              };
            })({
              config: c,
              src: l,
              unoptimized: k,
              width: K,
              quality: j,
              sizes: f,
              loader: G,
            });
          return {
            props: {
              ...M,
              loading: z ? "lazy" : h,
              fetchPriority: w,
              width: K,
              height: V,
              decoding: S,
              className: p,
              style: { ...q, ...Q },
              sizes: J.sizes,
              srcSet: J.srcSet,
              src: N || J.src,
            },
            meta: { unoptimized: k, priority: u, placeholder: E, fill: v },
          };
        }
      }
    },
    598500: (e) => {
      "use strict";
      var { m: a, e: n } = e;
      {
        Object.defineProperty(n, "__esModule", { value: !0 }),
          Object.defineProperty(n, "default", {
            enumerable: !0,
            get: function () {
              return o;
            },
          });
        let a = e.r(756253),
          r = "undefined" == typeof window,
          t = r ? () => {} : a.useLayoutEffect,
          s = r ? () => {} : a.useEffect;
        function o(e) {
          let { headManager: n, reduceComponentsToState: o } = e;
          function i() {
            if (n && n.mountedInstances) {
              let r = a.Children.toArray(
                Array.from(n.mountedInstances).filter(Boolean)
              );
              n.updateHead(o(r, e));
            }
          }
          if (r) {
            var d;
            null == n || null == (d = n.mountedInstances) || d.add(e.children),
              i();
          }
          return (
            t(() => {
              var a;
              return (
                null == n ||
                  null == (a = n.mountedInstances) ||
                  a.add(e.children),
                () => {
                  var a;
                  null == n ||
                    null == (a = n.mountedInstances) ||
                    a.delete(e.children);
                }
              );
            }),
            t(
              () => (
                n && (n._pendingUpdate = i),
                () => {
                  n && (n._pendingUpdate = i);
                }
              )
            ),
            s(
              () => (
                n &&
                  n._pendingUpdate &&
                  (n._pendingUpdate(), (n._pendingUpdate = null)),
                () => {
                  n &&
                    n._pendingUpdate &&
                    (n._pendingUpdate(), (n._pendingUpdate = null));
                }
              )
            ),
            null
          );
        }
      }
    },
    94460: (e) => {
      "use strict";
      var { m: a, e: n } = e;
      {
        Object.defineProperty(n, "__esModule", { value: !0 }),
          Object.defineProperty(n, "AmpStateContext", {
            enumerable: !0,
            get: function () {
              return a;
            },
          });
        let a = e.r(651948)._(e.r(756253)).default.createContext({});
      }
    },
    474249: (e) => {
      "use strict";
      var { m: a, e: n } = e;
      function o(e) {
        let {
          ampFirst: a = !1,
          hybrid: n = !1,
          hasQuery: o = !1,
        } = void 0 === e ? {} : e;
        return a || (n && o);
      }
      Object.defineProperty(n, "__esModule", { value: !0 }),
        Object.defineProperty(n, "isInAmpMode", {
          enumerable: !0,
          get: function () {
            return o;
          },
        });
    },
    28012: (e) => {
      "use strict";
      var { m: a, e: n } = e;
      {
        Object.defineProperty(n, "__esModule", { value: !0 }),
          !(function (e, a) {
            for (var n in a)
              Object.defineProperty(e, n, { enumerable: !0, get: a[n] });
          })(n, {
            default: function () {
              return u;
            },
            defaultHead: function () {
              return o;
            },
          });
        let s = e.r(651948),
          i = e.r(713179),
          d = e.r(150840),
          c = i._(e.r(756253)),
          b = s._(e.r(598500)),
          m = e.r(94460),
          l = e.r(402092),
          f = e.r(474249);
        function o(e) {
          void 0 === e && (e = !1);
          let a = [(0, d.jsx)("meta", { charSet: "utf-8" }, "charset")];
          return (
            e ||
              a.push(
                (0, d.jsx)(
                  "meta",
                  { name: "viewport", content: "width=device-width" },
                  "viewport"
                )
              ),
            a
          );
        }
        function r(e, a) {
          return "string" == typeof a || "number" == typeof a
            ? e
            : a.type === c.default.Fragment
            ? e.concat(
                c.default.Children.toArray(a.props.children).reduce(
                  (e, a) =>
                    "string" == typeof a || "number" == typeof a
                      ? e
                      : e.concat(a),
                  []
                )
              )
            : e.concat(a);
        }
        e.r(716214);
        let k = ["name", "httpEquiv", "charSet", "itemProp"];
        function t(e, a) {
          let { inAmpMode: n } = a;
          return e
            .reduce(r, [])
            .reverse()
            .concat(o(n).reverse())
            .filter(
              (function () {
                let e = new Set(),
                  a = new Set(),
                  n = new Set(),
                  o = {};
                return (r) => {
                  let t = !0,
                    s = !1;
                  if (
                    r.key &&
                    "number" != typeof r.key &&
                    r.key.indexOf("$") > 0
                  ) {
                    s = !0;
                    let a = r.key.slice(r.key.indexOf("$") + 1);
                    e.has(a) ? (t = !1) : e.add(a);
                  }
                  switch (r.type) {
                    case "title":
                    case "base":
                      a.has(r.type) ? (t = !1) : a.add(r.type);
                      break;
                    case "meta":
                      for (let e = 0, a = k.length; e < a; e++) {
                        let a = k[e];
                        if (r.props.hasOwnProperty(a))
                          if ("charSet" === a) n.has(a) ? (t = !1) : n.add(a);
                          else {
                            let e = r.props[a],
                              n = o[a] || new Set();
                            ("name" !== a || !s) && n.has(e)
                              ? (t = !1)
                              : (n.add(e), (o[a] = n));
                          }
                      }
                  }
                  return t;
                };
              })()
            )
            .reverse()
            .map((e, a) => {
              let n = e.key || a;
              return c.default.cloneElement(e, { key: n });
            });
        }
        let u = function (e) {
          let { children: a } = e,
            n = (0, c.useContext)(m.AmpStateContext),
            o = (0, c.useContext)(l.HeadManagerContext);
          return (0, d.jsx)(b.default, {
            reduceComponentsToState: t,
            headManager: o,
            inAmpMode: (0, f.isInAmpMode)(n),
            children: a,
          });
        };
        ("function" == typeof n.default ||
          ("object" == typeof n.default && null !== n.default)) &&
          void 0 === n.default.__esModule &&
          (Object.defineProperty(n.default, "__esModule", { value: !0 }),
          Object.assign(n.default, n),
          (a.exports = n.default));
      }
    },
    117738: (e) => {
      "use strict";
      var { m: a, e: n } = e;
      {
        Object.defineProperty(n, "__esModule", { value: !0 }),
          Object.defineProperty(n, "ImageConfigContext", {
            enumerable: !0,
            get: function () {
              return r;
            },
          });
        let a = e.r(651948)._(e.r(756253)),
          o = e.r(150907),
          r = a.default.createContext(o.imageConfigDefault);
      }
    },
    678663: (e) => {
      "use strict";
      var { m: a, e: n } = e;
      {
        Object.defineProperty(n, "__esModule", { value: !0 }),
          Object.defineProperty(n, "RouterContext", {
            enumerable: !0,
            get: function () {
              return a;
            },
          });
        let a = e.r(651948)._(e.r(756253)).default.createContext(null);
      }
    },
    847874: (e) => {
      "use strict";
      var { m: a, e: n } = e;
      {
        function o(e) {
          var a;
          let { config: n, src: o, width: r, quality: t } = e,
            s =
              t ||
              (null == (a = n.qualities)
                ? void 0
                : a.reduce((e, a) =>
                    Math.abs(a - 75) < Math.abs(e - 75) ? a : e
                  )) ||
              75;
          return o;
        }
        Object.defineProperty(n, "__esModule", { value: !0 }),
          Object.defineProperty(n, "default", {
            enumerable: !0,
            get: function () {
              return e;
            },
          }),
          (o.__next_img_default = !0);
        let e = o;
      }
    },
    830908: (e) => {
      "use strict";
      var { m: a, e: n } = e;
      {
        Object.defineProperty(n, "__esModule", { value: !0 }),
          Object.defineProperty(n, "useMergedRef", {
            enumerable: !0,
            get: function () {
              return o;
            },
          });
        let t = e.r(756253);
        function o(e, a) {
          let n = (0, t.useRef)(null),
            o = (0, t.useRef)(null);
          return (0, t.useCallback)(
            (t) => {
              if (null === t) {
                let e = n.current;
                e && ((n.current = null), e());
                let a = o.current;
                a && ((o.current = null), a());
              } else e && (n.current = r(e, t)), a && (o.current = r(a, t));
            },
            [e, a]
          );
        }
        function r(e, a) {
          if ("function" != typeof e)
            return (
              (e.current = a),
              () => {
                e.current = null;
              }
            );
          {
            let n = e(a);
            return "function" == typeof n ? n : () => e(null);
          }
        }
        ("function" == typeof n.default ||
          ("object" == typeof n.default && null !== n.default)) &&
          void 0 === n.default.__esModule &&
          (Object.defineProperty(n.default, "__esModule", { value: !0 }),
          Object.assign(n.default, n),
          (a.exports = n.default));
      }
    },
    709428: (e) => {
      "use strict";
      var { m: a, e: n } = e;
      {
        Object.defineProperty(n, "__esModule", { value: !0 }),
          Object.defineProperty(n, "Image", {
            enumerable: !0,
            get: function () {
              return C;
            },
          });
        let s = e.r(651948),
          i = e.r(713179),
          d = e.r(150840),
          c = i._(e.r(756253)),
          b = s._(e.r(317317)),
          m = s._(e.r(28012)),
          l = e.r(23790),
          f = e.r(150907),
          k = e.r(117738);
        e.r(716214);
        let u = e.r(678663),
          h = s._(e.r(847874)),
          p = e.r(830908),
          x = JSON.parse(
            '{"deviceSizes":[640,750,828,1080,1200,1920,2048,3840],"imageSizes":[16,32,48,64,96,128,256,384],"path":"/_next/image","loader":"default","dangerouslyAllowSVG":false,"unoptimized":false}'
          );
        function o(e, a, n, o, r, t, s) {
          let i = null == e ? void 0 : e.src;
          e &&
            e["data-loaded-src"] !== i &&
            ((e["data-loaded-src"] = i),
            ("decode" in e ? e.decode() : Promise.resolve())
              .catch(() => {})
              .then(() => {
                if (e.parentElement && e.isConnected) {
                  if (
                    ("empty" !== a && r(!0), null == n ? void 0 : n.current)
                  ) {
                    let a = new Event("load");
                    Object.defineProperty(a, "target", {
                      writable: !1,
                      value: e,
                    });
                    let o = !1,
                      r = !1;
                    n.current({
                      ...a,
                      nativeEvent: a,
                      currentTarget: e,
                      target: e,
                      isDefaultPrevented: () => o,
                      isPropagationStopped: () => r,
                      persist: () => {},
                      preventDefault: () => {
                        (o = !0), a.preventDefault();
                      },
                      stopPropagation: () => {
                        (r = !0), a.stopPropagation();
                      },
                    });
                  }
                  (null == o ? void 0 : o.current) && o.current(e);
                }
              }));
        }
        function r(e) {
          return c.use ? { fetchPriority: e } : { fetchpriority: e };
        }
        "undefined" == typeof window && (globalThis.__NEXT_IMAGE_IMPORTED = !0);
        let g = (0, c.forwardRef)((e, a) => {
          let {
              src: n,
              srcSet: t,
              sizes: s,
              height: i,
              width: b,
              decoding: m,
              className: l,
              style: f,
              fetchPriority: k,
              placeholder: u,
              loading: h,
              unoptimized: x,
              fill: g,
              onLoadRef: C,
              onLoadingCompleteRef: v,
              setBlurComplete: y,
              setShowAltText: N,
              sizesInput: T,
              onLoad: R,
              onError: E,
              ...A
            } = e,
            w = (0, c.useCallback)(
              (e) => {
                e &&
                  (E && (e.src = e.src), e.complete && o(e, u, C, v, y, x, T));
              },
              [n, u, C, v, y, E, x, T]
            ),
            S = (0, p.useMergedRef)(a, w);
          return (0, d.jsx)("img", {
            ...A,
            ...r(k),
            loading: h,
            width: b,
            height: i,
            decoding: m,
            "data-nimg": g ? "fill" : "1",
            className: l,
            style: f,
            sizes: s,
            srcSet: t,
            src: n,
            ref: S,
            onLoad: (e) => {
              o(e.currentTarget, u, C, v, y, x, T);
            },
            onError: (e) => {
              N(!0), "empty" !== u && y(!0), E && E(e);
            },
          });
        });
        function t(e) {
          let { isAppRouter: a, imgAttributes: n } = e,
            o = {
              as: "image",
              imageSrcSet: n.srcSet,
              imageSizes: n.sizes,
              crossOrigin: n.crossOrigin,
              referrerPolicy: n.referrerPolicy,
              ...r(n.fetchPriority),
            };
          return a && b.default.preload
            ? (b.default.preload(n.src, o), null)
            : (0, d.jsx)(m.default, {
                children: (0, d.jsx)(
                  "link",
                  { rel: "preload", href: n.srcSet ? void 0 : n.src, ...o },
                  "__nimg-" + n.src + n.srcSet + n.sizes
                ),
              });
        }
        let C = (0, c.forwardRef)((e, a) => {
          let n = (0, c.useContext)(u.RouterContext),
            o = (0, c.useContext)(k.ImageConfigContext),
            r = (0, c.useMemo)(() => {
              var e;
              let a = x || o || f.imageConfigDefault,
                n = [...a.deviceSizes, ...a.imageSizes].sort((e, a) => e - a),
                r = a.deviceSizes.sort((e, a) => e - a),
                t =
                  null == (e = a.qualities) ? void 0 : e.sort((e, a) => e - a);
              return { ...a, allSizes: n, deviceSizes: r, qualities: t };
            }, [o]),
            { onLoad: s, onLoadingComplete: i } = e,
            b = (0, c.useRef)(s);
          (0, c.useEffect)(() => {
            b.current = s;
          }, [s]);
          let m = (0, c.useRef)(i);
          (0, c.useEffect)(() => {
            m.current = i;
          }, [i]);
          let [p, C] = (0, c.useState)(!1),
            [v, y] = (0, c.useState)(!1),
            { props: N, meta: T } = (0, l.getImgProps)(e, {
              defaultLoader: h.default,
              imgConf: r,
              blurComplete: p,
              showAltText: v,
            });
          return (0, d.jsxs)(d.Fragment, {
            children: [
              (0, d.jsx)(g, {
                ...N,
                unoptimized: T.unoptimized,
                placeholder: T.placeholder,
                fill: T.fill,
                onLoadRef: b,
                onLoadingCompleteRef: m,
                setBlurComplete: C,
                setShowAltText: y,
                sizesInput: e.sizes,
                ref: a,
              }),
              T.priority
                ? (0, d.jsx)(t, { isAppRouter: !n, imgAttributes: N })
                : null,
            ],
          });
        });
        ("function" == typeof n.default ||
          ("object" == typeof n.default && null !== n.default)) &&
          void 0 === n.default.__esModule &&
          (Object.defineProperty(n.default, "__esModule", { value: !0 }),
          Object.assign(n.default, n),
          (a.exports = n.default));
      }
    },
    118796: (e) => {
      "use strict";
      var { m: a, e: n } = e;
      {
        Object.defineProperty(n, "__esModule", { value: !0 }),
          !(function (e, a) {
            for (var n in a)
              Object.defineProperty(e, n, { enumerable: !0, get: a[n] });
          })(n, {
            default: function () {
              return i;
            },
            getImageProps: function () {
              return o;
            },
          });
        let a = e.r(651948),
          r = e.r(23790),
          t = e.r(709428),
          s = a._(e.r(847874));
        function o(e) {
          let { props: a } = (0, r.getImgProps)(e, {
            defaultLoader: s.default,
            imgConf: JSON.parse(
              '{"deviceSizes":[640,750,828,1080,1200,1920,2048,3840],"imageSizes":[16,32,48,64,96,128,256,384],"path":"/_next/image","loader":"default","dangerouslyAllowSVG":false,"unoptimized":false}'
            ),
          });
          for (let [e, n] of Object.entries(a)) void 0 === n && delete a[e];
          return { props: a };
        }
        let i = t.Image;
      }
    },
    428880: (e) => {
      var { m: a, e: n } = e;
      a.exports = e.r(118796);
    },
    699677: [
      (e) => {
        "use strict";
        e.s(
          {
            IntlProvider: () => eS,
            useFormatter: () => eB,
            useLocale: () => eL,
            useMessages: () => eM,
            useTranslations: () => eD,
          },
          699677
        );
        var a,
          n,
          o,
          r,
          t,
          s,
          i,
          d = e.i(756253);
        e.s(
          {
            I: () => el,
            a: () => ef,
            b: () => eC,
            c: () => eR,
            d: () => ep,
            e: () => ey,
            f: () => eu,
            g: () => eh,
            i: () => eE,
            r: () => eN,
          },
          577788
        );
        var c = e.i(808691);
        function b(e, a) {
          var n = a && a.cache ? a.cache : u,
            o = a && a.serializer ? a.serializer : f;
          return (
            a && a.strategy
              ? a.strategy
              : function (e, a) {
                  var n,
                    o,
                    r = 1 === e.length ? m : l;
                  return (
                    (n = a.cache.create()),
                    (o = a.serializer),
                    r.bind(this, e, n, o)
                  );
                }
          )(e, { cache: n, serializer: o });
        }
        function m(e, a, n, o) {
          var r =
              null == o || "number" == typeof o || "boolean" == typeof o
                ? o
                : n(o),
            t = a.get(r);
          return void 0 === t && ((t = e.call(this, o)), a.set(r, t)), t;
        }
        function l(e, a, n) {
          var o = Array.prototype.slice.call(arguments, 3),
            r = n(o),
            t = a.get(r);
          return void 0 === t && ((t = e.apply(this, o)), a.set(r, t)), t;
        }
        var f = function () {
            return JSON.stringify(arguments);
          },
          k = (function () {
            function e() {
              this.cache = Object.create(null);
            }
            return (
              (e.prototype.get = function (e) {
                return this.cache[e];
              }),
              (e.prototype.set = function (e, a) {
                this.cache[e] = a;
              }),
              e
            );
          })(),
          u = {
            create: function () {
              return new k();
            },
          },
          h = {
            variadic: function (e, a) {
              var n, o;
              return (
                (n = a.cache.create()),
                (o = a.serializer),
                l.bind(this, e, n, o)
              );
            },
            monadic: function (e, a) {
              var n, o;
              return (
                (n = a.cache.create()),
                (o = a.serializer),
                m.bind(this, e, n, o)
              );
            },
          };
        function p(e) {
          return e.type === n.literal;
        }
        function x(e) {
          return e.type === n.number;
        }
        function g(e) {
          return e.type === n.date;
        }
        function C(e) {
          return e.type === n.time;
        }
        function v(e) {
          return e.type === n.select;
        }
        function y(e) {
          return e.type === n.plural;
        }
        function N(e) {
          return e.type === n.tag;
        }
        function T(e) {
          return !!(e && "object" == typeof e && e.type === o.number);
        }
        function R(e) {
          return !!(e && "object" == typeof e && e.type === o.dateTime);
        }
        !(function (e) {
          (e[(e.EXPECT_ARGUMENT_CLOSING_BRACE = 1)] =
            "EXPECT_ARGUMENT_CLOSING_BRACE"),
            (e[(e.EMPTY_ARGUMENT = 2)] = "EMPTY_ARGUMENT"),
            (e[(e.MALFORMED_ARGUMENT = 3)] = "MALFORMED_ARGUMENT"),
            (e[(e.EXPECT_ARGUMENT_TYPE = 4)] = "EXPECT_ARGUMENT_TYPE"),
            (e[(e.INVALID_ARGUMENT_TYPE = 5)] = "INVALID_ARGUMENT_TYPE"),
            (e[(e.EXPECT_ARGUMENT_STYLE = 6)] = "EXPECT_ARGUMENT_STYLE"),
            (e[(e.INVALID_NUMBER_SKELETON = 7)] = "INVALID_NUMBER_SKELETON"),
            (e[(e.INVALID_DATE_TIME_SKELETON = 8)] =
              "INVALID_DATE_TIME_SKELETON"),
            (e[(e.EXPECT_NUMBER_SKELETON = 9)] = "EXPECT_NUMBER_SKELETON"),
            (e[(e.EXPECT_DATE_TIME_SKELETON = 10)] =
              "EXPECT_DATE_TIME_SKELETON"),
            (e[(e.UNCLOSED_QUOTE_IN_ARGUMENT_STYLE = 11)] =
              "UNCLOSED_QUOTE_IN_ARGUMENT_STYLE"),
            (e[(e.EXPECT_SELECT_ARGUMENT_OPTIONS = 12)] =
              "EXPECT_SELECT_ARGUMENT_OPTIONS"),
            (e[(e.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE = 13)] =
              "EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE"),
            (e[(e.INVALID_PLURAL_ARGUMENT_OFFSET_VALUE = 14)] =
              "INVALID_PLURAL_ARGUMENT_OFFSET_VALUE"),
            (e[(e.EXPECT_SELECT_ARGUMENT_SELECTOR = 15)] =
              "EXPECT_SELECT_ARGUMENT_SELECTOR"),
            (e[(e.EXPECT_PLURAL_ARGUMENT_SELECTOR = 16)] =
              "EXPECT_PLURAL_ARGUMENT_SELECTOR"),
            (e[(e.EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT = 17)] =
              "EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT"),
            (e[(e.EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT = 18)] =
              "EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT"),
            (e[(e.INVALID_PLURAL_ARGUMENT_SELECTOR = 19)] =
              "INVALID_PLURAL_ARGUMENT_SELECTOR"),
            (e[(e.DUPLICATE_PLURAL_ARGUMENT_SELECTOR = 20)] =
              "DUPLICATE_PLURAL_ARGUMENT_SELECTOR"),
            (e[(e.DUPLICATE_SELECT_ARGUMENT_SELECTOR = 21)] =
              "DUPLICATE_SELECT_ARGUMENT_SELECTOR"),
            (e[(e.MISSING_OTHER_CLAUSE = 22)] = "MISSING_OTHER_CLAUSE"),
            (e[(e.INVALID_TAG = 23)] = "INVALID_TAG"),
            (e[(e.INVALID_TAG_NAME = 25)] = "INVALID_TAG_NAME"),
            (e[(e.UNMATCHED_CLOSING_TAG = 26)] = "UNMATCHED_CLOSING_TAG"),
            (e[(e.UNCLOSED_TAG = 27)] = "UNCLOSED_TAG");
        })(a || (a = {})),
          !(function (e) {
            (e[(e.literal = 0)] = "literal"),
              (e[(e.argument = 1)] = "argument"),
              (e[(e.number = 2)] = "number"),
              (e[(e.date = 3)] = "date"),
              (e[(e.time = 4)] = "time"),
              (e[(e.select = 5)] = "select"),
              (e[(e.plural = 6)] = "plural"),
              (e[(e.pound = 7)] = "pound"),
              (e[(e.tag = 8)] = "tag");
          })(n || (n = {})),
          (function (e) {
            (e[(e.number = 0)] = "number"), (e[(e.dateTime = 1)] = "dateTime");
          })(o || (o = {}));
        var E = /[ \xA0\u1680\u2000-\u200A\u202F\u205F\u3000]/,
          A =
            /(?:[Eec]{1,6}|G{1,5}|[Qq]{1,5}|(?:[yYur]+|U{1,5})|[ML]{1,5}|d{1,2}|D{1,3}|F{1}|[abB]{1,5}|[hkHK]{1,2}|w{1,2}|W{1}|m{1,2}|s{1,2}|[zZOvVxX]{1,4})(?=([^']*'[^']*')*[^']*$)/g,
          w = /[\t-\r \x85\u200E\u200F\u2028\u2029]/i,
          S = /^\.(?:(0+)(\*)?|(#+)|(0+)(#+))$/g,
          I = /^(@+)?(\+|#+)?[rs]?$/g,
          O = /(\*)(0+)|(#+)(0+)|(0+)/g,
          P = /^(0+)$/;
        function D(e) {
          var a = {};
          return (
            "r" === e[e.length - 1]
              ? (a.roundingPriority = "morePrecision")
              : "s" === e[e.length - 1] &&
                (a.roundingPriority = "lessPrecision"),
            e.replace(I, function (e, n, o) {
              return (
                "string" != typeof o
                  ? ((a.minimumSignificantDigits = n.length),
                    (a.maximumSignificantDigits = n.length))
                  : "+" === o
                  ? (a.minimumSignificantDigits = n.length)
                  : "#" === n[0]
                  ? (a.maximumSignificantDigits = n.length)
                  : ((a.minimumSignificantDigits = n.length),
                    (a.maximumSignificantDigits =
                      n.length + ("string" == typeof o ? o.length : 0))),
                ""
              );
            }),
            a
          );
        }
        function L(e) {
          switch (e) {
            case "sign-auto":
              return { signDisplay: "auto" };
            case "sign-accounting":
            case "()":
              return { currencySign: "accounting" };
            case "sign-always":
            case "+!":
              return { signDisplay: "always" };
            case "sign-accounting-always":
            case "()!":
              return { signDisplay: "always", currencySign: "accounting" };
            case "sign-except-zero":
            case "+?":
              return { signDisplay: "exceptZero" };
            case "sign-accounting-except-zero":
            case "()?":
              return { signDisplay: "exceptZero", currencySign: "accounting" };
            case "sign-never":
            case "+_":
              return { signDisplay: "never" };
          }
        }
        function M(e) {
          var a = L(e);
          return a || {};
        }
        var B = {
            "001": ["H", "h"],
            419: ["h", "H", "hB", "hb"],
            AC: ["H", "h", "hb", "hB"],
            AD: ["H", "hB"],
            AE: ["h", "hB", "hb", "H"],
            AF: ["H", "hb", "hB", "h"],
            AG: ["h", "hb", "H", "hB"],
            AI: ["H", "h", "hb", "hB"],
            AL: ["h", "H", "hB"],
            AM: ["H", "hB"],
            AO: ["H", "hB"],
            AR: ["h", "H", "hB", "hb"],
            AS: ["h", "H"],
            AT: ["H", "hB"],
            AU: ["h", "hb", "H", "hB"],
            AW: ["H", "hB"],
            AX: ["H"],
            AZ: ["H", "hB", "h"],
            BA: ["H", "hB", "h"],
            BB: ["h", "hb", "H", "hB"],
            BD: ["h", "hB", "H"],
            BE: ["H", "hB"],
            BF: ["H", "hB"],
            BG: ["H", "hB", "h"],
            BH: ["h", "hB", "hb", "H"],
            BI: ["H", "h"],
            BJ: ["H", "hB"],
            BL: ["H", "hB"],
            BM: ["h", "hb", "H", "hB"],
            BN: ["hb", "hB", "h", "H"],
            BO: ["h", "H", "hB", "hb"],
            BQ: ["H"],
            BR: ["H", "hB"],
            BS: ["h", "hb", "H", "hB"],
            BT: ["h", "H"],
            BW: ["H", "h", "hb", "hB"],
            BY: ["H", "h"],
            BZ: ["H", "h", "hb", "hB"],
            CA: ["h", "hb", "H", "hB"],
            CC: ["H", "h", "hb", "hB"],
            CD: ["hB", "H"],
            CF: ["H", "h", "hB"],
            CG: ["H", "hB"],
            CH: ["H", "hB", "h"],
            CI: ["H", "hB"],
            CK: ["H", "h", "hb", "hB"],
            CL: ["h", "H", "hB", "hb"],
            CM: ["H", "h", "hB"],
            CN: ["H", "hB", "hb", "h"],
            CO: ["h", "H", "hB", "hb"],
            CP: ["H"],
            CR: ["h", "H", "hB", "hb"],
            CU: ["h", "H", "hB", "hb"],
            CV: ["H", "hB"],
            CW: ["H", "hB"],
            CX: ["H", "h", "hb", "hB"],
            CY: ["h", "H", "hb", "hB"],
            CZ: ["H"],
            DE: ["H", "hB"],
            DG: ["H", "h", "hb", "hB"],
            DJ: ["h", "H"],
            DK: ["H"],
            DM: ["h", "hb", "H", "hB"],
            DO: ["h", "H", "hB", "hb"],
            DZ: ["h", "hB", "hb", "H"],
            EA: ["H", "h", "hB", "hb"],
            EC: ["h", "H", "hB", "hb"],
            EE: ["H", "hB"],
            EG: ["h", "hB", "hb", "H"],
            EH: ["h", "hB", "hb", "H"],
            ER: ["h", "H"],
            ES: ["H", "hB", "h", "hb"],
            ET: ["hB", "hb", "h", "H"],
            FI: ["H"],
            FJ: ["h", "hb", "H", "hB"],
            FK: ["H", "h", "hb", "hB"],
            FM: ["h", "hb", "H", "hB"],
            FO: ["H", "h"],
            FR: ["H", "hB"],
            GA: ["H", "hB"],
            GB: ["H", "h", "hb", "hB"],
            GD: ["h", "hb", "H", "hB"],
            GE: ["H", "hB", "h"],
            GF: ["H", "hB"],
            GG: ["H", "h", "hb", "hB"],
            GH: ["h", "H"],
            GI: ["H", "h", "hb", "hB"],
            GL: ["H", "h"],
            GM: ["h", "hb", "H", "hB"],
            GN: ["H", "hB"],
            GP: ["H", "hB"],
            GQ: ["H", "hB", "h", "hb"],
            GR: ["h", "H", "hb", "hB"],
            GT: ["h", "H", "hB", "hb"],
            GU: ["h", "hb", "H", "hB"],
            GW: ["H", "hB"],
            GY: ["h", "hb", "H", "hB"],
            HK: ["h", "hB", "hb", "H"],
            HN: ["h", "H", "hB", "hb"],
            HR: ["H", "hB"],
            HU: ["H", "h"],
            IC: ["H", "h", "hB", "hb"],
            ID: ["H"],
            IE: ["H", "h", "hb", "hB"],
            IL: ["H", "hB"],
            IM: ["H", "h", "hb", "hB"],
            IN: ["h", "H"],
            IO: ["H", "h", "hb", "hB"],
            IQ: ["h", "hB", "hb", "H"],
            IR: ["hB", "H"],
            IS: ["H"],
            IT: ["H", "hB"],
            JE: ["H", "h", "hb", "hB"],
            JM: ["h", "hb", "H", "hB"],
            JO: ["h", "hB", "hb", "H"],
            JP: ["H", "K", "h"],
            KE: ["hB", "hb", "H", "h"],
            KG: ["H", "h", "hB", "hb"],
            KH: ["hB", "h", "H", "hb"],
            KI: ["h", "hb", "H", "hB"],
            KM: ["H", "h", "hB", "hb"],
            KN: ["h", "hb", "H", "hB"],
            KP: ["h", "H", "hB", "hb"],
            KR: ["h", "H", "hB", "hb"],
            KW: ["h", "hB", "hb", "H"],
            KY: ["h", "hb", "H", "hB"],
            KZ: ["H", "hB"],
            LA: ["H", "hb", "hB", "h"],
            LB: ["h", "hB", "hb", "H"],
            LC: ["h", "hb", "H", "hB"],
            LI: ["H", "hB", "h"],
            LK: ["H", "h", "hB", "hb"],
            LR: ["h", "hb", "H", "hB"],
            LS: ["h", "H"],
            LT: ["H", "h", "hb", "hB"],
            LU: ["H", "h", "hB"],
            LV: ["H", "hB", "hb", "h"],
            LY: ["h", "hB", "hb", "H"],
            MA: ["H", "h", "hB", "hb"],
            MC: ["H", "hB"],
            MD: ["H", "hB"],
            ME: ["H", "hB", "h"],
            MF: ["H", "hB"],
            MG: ["H", "h"],
            MH: ["h", "hb", "H", "hB"],
            MK: ["H", "h", "hb", "hB"],
            ML: ["H"],
            MM: ["hB", "hb", "H", "h"],
            MN: ["H", "h", "hb", "hB"],
            MO: ["h", "hB", "hb", "H"],
            MP: ["h", "hb", "H", "hB"],
            MQ: ["H", "hB"],
            MR: ["h", "hB", "hb", "H"],
            MS: ["H", "h", "hb", "hB"],
            MT: ["H", "h"],
            MU: ["H", "h"],
            MV: ["H", "h"],
            MW: ["h", "hb", "H", "hB"],
            MX: ["h", "H", "hB", "hb"],
            MY: ["hb", "hB", "h", "H"],
            MZ: ["H", "hB"],
            NA: ["h", "H", "hB", "hb"],
            NC: ["H", "hB"],
            NE: ["H"],
            NF: ["H", "h", "hb", "hB"],
            NG: ["H", "h", "hb", "hB"],
            NI: ["h", "H", "hB", "hb"],
            NL: ["H", "hB"],
            NO: ["H", "h"],
            NP: ["H", "h", "hB"],
            NR: ["H", "h", "hb", "hB"],
            NU: ["H", "h", "hb", "hB"],
            NZ: ["h", "hb", "H", "hB"],
            OM: ["h", "hB", "hb", "H"],
            PA: ["h", "H", "hB", "hb"],
            PE: ["h", "H", "hB", "hb"],
            PF: ["H", "h", "hB"],
            PG: ["h", "H"],
            PH: ["h", "hB", "hb", "H"],
            PK: ["h", "hB", "H"],
            PL: ["H", "h"],
            PM: ["H", "hB"],
            PN: ["H", "h", "hb", "hB"],
            PR: ["h", "H", "hB", "hb"],
            PS: ["h", "hB", "hb", "H"],
            PT: ["H", "hB"],
            PW: ["h", "H"],
            PY: ["h", "H", "hB", "hb"],
            QA: ["h", "hB", "hb", "H"],
            RE: ["H", "hB"],
            RO: ["H", "hB"],
            RS: ["H", "hB", "h"],
            RU: ["H"],
            RW: ["H", "h"],
            SA: ["h", "hB", "hb", "H"],
            SB: ["h", "hb", "H", "hB"],
            SC: ["H", "h", "hB"],
            SD: ["h", "hB", "hb", "H"],
            SE: ["H"],
            SG: ["h", "hb", "H", "hB"],
            SH: ["H", "h", "hb", "hB"],
            SI: ["H", "hB"],
            SJ: ["H"],
            SK: ["H"],
            SL: ["h", "hb", "H", "hB"],
            SM: ["H", "h", "hB"],
            SN: ["H", "h", "hB"],
            SO: ["h", "H"],
            SR: ["H", "hB"],
            SS: ["h", "hb", "H", "hB"],
            ST: ["H", "hB"],
            SV: ["h", "H", "hB", "hb"],
            SX: ["H", "h", "hb", "hB"],
            SY: ["h", "hB", "hb", "H"],
            SZ: ["h", "hb", "H", "hB"],
            TA: ["H", "h", "hb", "hB"],
            TC: ["h", "hb", "H", "hB"],
            TD: ["h", "H", "hB"],
            TF: ["H", "h", "hB"],
            TG: ["H", "hB"],
            TH: ["H", "h"],
            TJ: ["H", "h"],
            TL: ["H", "hB", "hb", "h"],
            TM: ["H", "h"],
            TN: ["h", "hB", "hb", "H"],
            TO: ["h", "H"],
            TR: ["H", "hB"],
            TT: ["h", "hb", "H", "hB"],
            TW: ["hB", "hb", "h", "H"],
            TZ: ["hB", "hb", "H", "h"],
            UA: ["H", "hB", "h"],
            UG: ["hB", "hb", "H", "h"],
            UM: ["h", "hb", "H", "hB"],
            US: ["h", "hb", "H", "hB"],
            UY: ["h", "H", "hB", "hb"],
            UZ: ["H", "hB", "h"],
            VA: ["H", "h", "hB"],
            VC: ["h", "hb", "H", "hB"],
            VE: ["h", "H", "hB", "hb"],
            VG: ["h", "hb", "H", "hB"],
            VI: ["h", "hb", "H", "hB"],
            VN: ["H", "h"],
            VU: ["h", "H"],
            WF: ["H", "hB"],
            WS: ["h", "H"],
            XK: ["H", "hB", "h"],
            YE: ["h", "hB", "hb", "H"],
            YT: ["H", "hB"],
            ZA: ["H", "h", "hb", "hB"],
            ZM: ["h", "hb", "H", "hB"],
            ZW: ["H", "h"],
            "af-ZA": ["H", "h", "hB", "hb"],
            "ar-001": ["h", "hB", "hb", "H"],
            "ca-ES": ["H", "h", "hB"],
            "en-001": ["h", "hb", "H", "hB"],
            "en-HK": ["h", "hb", "H", "hB"],
            "en-IL": ["H", "h", "hb", "hB"],
            "en-MY": ["h", "hb", "H", "hB"],
            "es-BR": ["H", "h", "hB", "hb"],
            "es-ES": ["H", "h", "hB", "hb"],
            "es-GQ": ["H", "h", "hB", "hb"],
            "fr-CA": ["H", "h", "hB"],
            "gl-ES": ["H", "h", "hB"],
            "gu-IN": ["hB", "hb", "h", "H"],
            "hi-IN": ["hB", "h", "H"],
            "it-CH": ["H", "h", "hB"],
            "it-IT": ["H", "h", "hB"],
            "kn-IN": ["hB", "h", "H"],
            "ml-IN": ["hB", "h", "H"],
            "mr-IN": ["hB", "hb", "h", "H"],
            "pa-IN": ["hB", "hb", "h", "H"],
            "ta-IN": ["hB", "h", "hb", "H"],
            "te-IN": ["hB", "h", "H"],
            "zu-ZA": ["H", "hB", "hb", "h"],
          },
          U = new RegExp("^".concat(E.source, "*")),
          _ = new RegExp("".concat(E.source, "*$"));
        function F(e, a) {
          return { start: e, end: a };
        }
        var H = !!String.prototype.startsWith && "_a".startsWith("a", 1),
          G = !!String.fromCodePoint,
          X = !!Object.fromEntries,
          W = !!String.prototype.codePointAt,
          K = !!String.prototype.trimStart,
          V = !!String.prototype.trimEnd,
          z = Number.isSafeInteger
            ? Number.isSafeInteger
            : function (e) {
                return (
                  "number" == typeof e &&
                  isFinite(e) &&
                  Math.floor(e) === e &&
                  0x1fffffffffffff >= Math.abs(e)
                );
              },
          j = !0;
        try {
          j =
            (null ==
            (r = ee("([^\\p{White_Space}\\p{Pattern_Syntax}]*)", "yu").exec(
              "a"
            ))
              ? void 0
              : r[0]) === "a";
        } catch (e) {
          j = !1;
        }
        var q = H
            ? function (e, a, n) {
                return e.startsWith(a, n);
              }
            : function (e, a, n) {
                return e.slice(n, n + a.length) === a;
              },
          Y = G
            ? String.fromCodePoint
            : function () {
                for (var e, a = [], n = 0; n < arguments.length; n++)
                  a[n] = arguments[n];
                for (var o = "", r = a.length, t = 0; r > t; ) {
                  if ((e = a[t++]) > 1114111)
                    throw RangeError(e + " is not a valid code point");
                  o +=
                    e < 65536
                      ? String.fromCharCode(e)
                      : String.fromCharCode(
                          ((e -= 65536) >> 10) + 55296,
                          (e % 1024) + 56320
                        );
                }
                return o;
              },
          Z = X
            ? Object.fromEntries
            : function (e) {
                for (var a = {}, n = 0; n < e.length; n++) {
                  var o = e[n],
                    r = o[0],
                    t = o[1];
                  a[r] = t;
                }
                return a;
              },
          Q = W
            ? function (e, a) {
                return e.codePointAt(a);
              }
            : function (e, a) {
                var n,
                  o = e.length;
                if (!(a < 0) && !(a >= o)) {
                  var r = e.charCodeAt(a);
                  return r < 55296 ||
                    r > 56319 ||
                    a + 1 === o ||
                    (n = e.charCodeAt(a + 1)) < 56320 ||
                    n > 57343
                    ? r
                    : ((r - 55296) << 10) + (n - 56320) + 65536;
                }
              },
          J = K
            ? function (e) {
                return e.trimStart();
              }
            : function (e) {
                return e.replace(U, "");
              },
          $ = V
            ? function (e) {
                return e.trimEnd();
              }
            : function (e) {
                return e.replace(_, "");
              };
        function ee(e, a) {
          return new RegExp(e, a);
        }
        if (j) {
          var ea = ee("([^\\p{White_Space}\\p{Pattern_Syntax}]*)", "yu");
          t = function (e, a) {
            var n;
            return (ea.lastIndex = a), null != (n = ea.exec(e)[1]) ? n : "";
          };
        } else
          t = function (e, a) {
            for (var n = []; ; ) {
              var o,
                r = Q(e, a);
              if (
                void 0 === r ||
                er(r) ||
                ((o = r) >= 33 && o <= 35) ||
                36 === o ||
                (o >= 37 && o <= 39) ||
                40 === o ||
                41 === o ||
                42 === o ||
                43 === o ||
                44 === o ||
                45 === o ||
                (o >= 46 && o <= 47) ||
                (o >= 58 && o <= 59) ||
                (o >= 60 && o <= 62) ||
                (o >= 63 && o <= 64) ||
                91 === o ||
                92 === o ||
                93 === o ||
                94 === o ||
                96 === o ||
                123 === o ||
                124 === o ||
                125 === o ||
                126 === o ||
                161 === o ||
                (o >= 162 && o <= 165) ||
                166 === o ||
                167 === o ||
                169 === o ||
                171 === o ||
                172 === o ||
                174 === o ||
                176 === o ||
                177 === o ||
                182 === o ||
                187 === o ||
                191 === o ||
                215 === o ||
                247 === o ||
                (o >= 8208 && o <= 8213) ||
                (o >= 8214 && o <= 8215) ||
                8216 === o ||
                8217 === o ||
                8218 === o ||
                (o >= 8219 && o <= 8220) ||
                8221 === o ||
                8222 === o ||
                8223 === o ||
                (o >= 8224 && o <= 8231) ||
                (o >= 8240 && o <= 8248) ||
                8249 === o ||
                8250 === o ||
                (o >= 8251 && o <= 8254) ||
                (o >= 8257 && o <= 8259) ||
                8260 === o ||
                8261 === o ||
                8262 === o ||
                (o >= 8263 && o <= 8273) ||
                8274 === o ||
                8275 === o ||
                (o >= 8277 && o <= 8286) ||
                (o >= 8592 && o <= 8596) ||
                (o >= 8597 && o <= 8601) ||
                (o >= 8602 && o <= 8603) ||
                (o >= 8604 && o <= 8607) ||
                8608 === o ||
                (o >= 8609 && o <= 8610) ||
                8611 === o ||
                (o >= 8612 && o <= 8613) ||
                8614 === o ||
                (o >= 8615 && o <= 8621) ||
                8622 === o ||
                (o >= 8623 && o <= 8653) ||
                (o >= 8654 && o <= 8655) ||
                (o >= 8656 && o <= 8657) ||
                8658 === o ||
                8659 === o ||
                8660 === o ||
                (o >= 8661 && o <= 8691) ||
                (o >= 8692 && o <= 8959) ||
                (o >= 8960 && o <= 8967) ||
                8968 === o ||
                8969 === o ||
                8970 === o ||
                8971 === o ||
                (o >= 8972 && o <= 8991) ||
                (o >= 8992 && o <= 8993) ||
                (o >= 8994 && o <= 9e3) ||
                9001 === o ||
                9002 === o ||
                (o >= 9003 && o <= 9083) ||
                9084 === o ||
                (o >= 9085 && o <= 9114) ||
                (o >= 9115 && o <= 9139) ||
                (o >= 9140 && o <= 9179) ||
                (o >= 9180 && o <= 9185) ||
                (o >= 9186 && o <= 9254) ||
                (o >= 9255 && o <= 9279) ||
                (o >= 9280 && o <= 9290) ||
                (o >= 9291 && o <= 9311) ||
                (o >= 9472 && o <= 9654) ||
                9655 === o ||
                (o >= 9656 && o <= 9664) ||
                9665 === o ||
                (o >= 9666 && o <= 9719) ||
                (o >= 9720 && o <= 9727) ||
                (o >= 9728 && o <= 9838) ||
                9839 === o ||
                (o >= 9840 && o <= 10087) ||
                10088 === o ||
                10089 === o ||
                10090 === o ||
                10091 === o ||
                10092 === o ||
                10093 === o ||
                10094 === o ||
                10095 === o ||
                10096 === o ||
                10097 === o ||
                10098 === o ||
                10099 === o ||
                10100 === o ||
                10101 === o ||
                (o >= 10132 && o <= 10175) ||
                (o >= 10176 && o <= 10180) ||
                10181 === o ||
                10182 === o ||
                (o >= 10183 && o <= 10213) ||
                10214 === o ||
                10215 === o ||
                10216 === o ||
                10217 === o ||
                10218 === o ||
                10219 === o ||
                10220 === o ||
                10221 === o ||
                10222 === o ||
                10223 === o ||
                (o >= 10224 && o <= 10239) ||
                (o >= 10240 && o <= 10495) ||
                (o >= 10496 && o <= 10626) ||
                10627 === o ||
                10628 === o ||
                10629 === o ||
                10630 === o ||
                10631 === o ||
                10632 === o ||
                10633 === o ||
                10634 === o ||
                10635 === o ||
                10636 === o ||
                10637 === o ||
                10638 === o ||
                10639 === o ||
                10640 === o ||
                10641 === o ||
                10642 === o ||
                10643 === o ||
                10644 === o ||
                10645 === o ||
                10646 === o ||
                10647 === o ||
                10648 === o ||
                (o >= 10649 && o <= 10711) ||
                10712 === o ||
                10713 === o ||
                10714 === o ||
                10715 === o ||
                (o >= 10716 && o <= 10747) ||
                10748 === o ||
                10749 === o ||
                (o >= 10750 && o <= 11007) ||
                (o >= 11008 && o <= 11055) ||
                (o >= 11056 && o <= 11076) ||
                (o >= 11077 && o <= 11078) ||
                (o >= 11079 && o <= 11084) ||
                (o >= 11085 && o <= 11123) ||
                (o >= 11124 && o <= 11125) ||
                (o >= 11126 && o <= 11157) ||
                11158 === o ||
                (o >= 11159 && o <= 11263) ||
                (o >= 11776 && o <= 11777) ||
                11778 === o ||
                11779 === o ||
                11780 === o ||
                11781 === o ||
                (o >= 11782 && o <= 11784) ||
                11785 === o ||
                11786 === o ||
                11787 === o ||
                11788 === o ||
                11789 === o ||
                (o >= 11790 && o <= 11798) ||
                11799 === o ||
                (o >= 11800 && o <= 11801) ||
                11802 === o ||
                11803 === o ||
                11804 === o ||
                11805 === o ||
                (o >= 11806 && o <= 11807) ||
                11808 === o ||
                11809 === o ||
                11810 === o ||
                11811 === o ||
                11812 === o ||
                11813 === o ||
                11814 === o ||
                11815 === o ||
                11816 === o ||
                11817 === o ||
                (o >= 11818 && o <= 11822) ||
                11823 === o ||
                (o >= 11824 && o <= 11833) ||
                (o >= 11834 && o <= 11835) ||
                (o >= 11836 && o <= 11839) ||
                11840 === o ||
                11841 === o ||
                11842 === o ||
                (o >= 11843 && o <= 11855) ||
                (o >= 11856 && o <= 11857) ||
                11858 === o ||
                (o >= 11859 && o <= 11903) ||
                (o >= 12289 && o <= 12291) ||
                12296 === o ||
                12297 === o ||
                12298 === o ||
                12299 === o ||
                12300 === o ||
                12301 === o ||
                12302 === o ||
                12303 === o ||
                12304 === o ||
                12305 === o ||
                (o >= 12306 && o <= 12307) ||
                12308 === o ||
                12309 === o ||
                12310 === o ||
                12311 === o ||
                12312 === o ||
                12313 === o ||
                12314 === o ||
                12315 === o ||
                12316 === o ||
                12317 === o ||
                (o >= 12318 && o <= 12319) ||
                12320 === o ||
                12336 === o ||
                64830 === o ||
                64831 === o ||
                (o >= 65093 && o <= 65094)
              )
                break;
              n.push(r), (a += r >= 65536 ? 2 : 1);
            }
            return Y.apply(void 0, n);
          };
        var en = (function () {
          function e(e, a) {
            void 0 === a && (a = {}),
              (this.message = e),
              (this.position = { offset: 0, line: 1, column: 1 }),
              (this.ignoreTag = !!a.ignoreTag),
              (this.locale = a.locale),
              (this.requiresOtherClause = !!a.requiresOtherClause),
              (this.shouldParseSkeletons = !!a.shouldParseSkeletons);
          }
          return (
            (e.prototype.parse = function () {
              if (0 !== this.offset())
                throw Error("parser can only be used once");
              return this.parseMessage(0, "", !1);
            }),
            (e.prototype.parseMessage = function (e, o, r) {
              for (var t = []; !this.isEOF(); ) {
                var s = this.char();
                if (123 === s) {
                  var i = this.parseArgument(e, r);
                  if (i.err) return i;
                  t.push(i.val);
                } else if (125 === s && e > 0) break;
                else if (
                  35 === s &&
                  ("plural" === o || "selectordinal" === o)
                ) {
                  var d = this.clonePosition();
                  this.bump(),
                    t.push({
                      type: n.pound,
                      location: F(d, this.clonePosition()),
                    });
                } else if (60 !== s || this.ignoreTag || 47 !== this.peek())
                  if (60 === s && !this.ignoreTag && eo(this.peek() || 0)) {
                    var i = this.parseTag(e, o);
                    if (i.err) return i;
                    t.push(i.val);
                  } else {
                    var i = this.parseLiteral(e, o);
                    if (i.err) return i;
                    t.push(i.val);
                  }
                else if (!r)
                  return this.error(
                    a.UNMATCHED_CLOSING_TAG,
                    F(this.clonePosition(), this.clonePosition())
                  );
                else break;
              }
              return { val: t, err: null };
            }),
            (e.prototype.parseTag = function (e, o) {
              var r = this.clonePosition();
              this.bump();
              var t = this.parseTagName();
              if ((this.bumpSpace(), this.bumpIf("/>")))
                return {
                  val: {
                    type: n.literal,
                    value: "<".concat(t, "/>"),
                    location: F(r, this.clonePosition()),
                  },
                  err: null,
                };
              if (!this.bumpIf(">"))
                return this.error(a.INVALID_TAG, F(r, this.clonePosition()));
              var s = this.parseMessage(e + 1, o, !0);
              if (s.err) return s;
              var i = s.val,
                d = this.clonePosition();
              if (!this.bumpIf("</"))
                return this.error(a.UNCLOSED_TAG, F(r, this.clonePosition()));
              if (this.isEOF() || !eo(this.char()))
                return this.error(a.INVALID_TAG, F(d, this.clonePosition()));
              var c = this.clonePosition();
              return t !== this.parseTagName()
                ? this.error(
                    a.UNMATCHED_CLOSING_TAG,
                    F(c, this.clonePosition())
                  )
                : (this.bumpSpace(), this.bumpIf(">"))
                ? {
                    val: {
                      type: n.tag,
                      value: t,
                      children: i,
                      location: F(r, this.clonePosition()),
                    },
                    err: null,
                  }
                : this.error(a.INVALID_TAG, F(d, this.clonePosition()));
            }),
            (e.prototype.parseTagName = function () {
              var e,
                a = this.offset();
              for (
                this.bump();
                !this.isEOF() &&
                (45 === (e = this.char()) ||
                  46 === e ||
                  (e >= 48 && e <= 57) ||
                  95 === e ||
                  (e >= 97 && e <= 122) ||
                  (e >= 65 && e <= 90) ||
                  183 == e ||
                  (e >= 192 && e <= 214) ||
                  (e >= 216 && e <= 246) ||
                  (e >= 248 && e <= 893) ||
                  (e >= 895 && e <= 8191) ||
                  (e >= 8204 && e <= 8205) ||
                  (e >= 8255 && e <= 8256) ||
                  (e >= 8304 && e <= 8591) ||
                  (e >= 11264 && e <= 12271) ||
                  (e >= 12289 && e <= 55295) ||
                  (e >= 63744 && e <= 64975) ||
                  (e >= 65008 && e <= 65533) ||
                  (e >= 65536 && e <= 983039));

              )
                this.bump();
              return this.message.slice(a, this.offset());
            }),
            (e.prototype.parseLiteral = function (e, a) {
              for (var o = this.clonePosition(), r = ""; ; ) {
                var t = this.tryParseQuote(a);
                if (t) {
                  r += t;
                  continue;
                }
                var s = this.tryParseUnquoted(e, a);
                if (s) {
                  r += s;
                  continue;
                }
                var i = this.tryParseLeftAngleBracket();
                if (i) {
                  r += i;
                  continue;
                }
                break;
              }
              var d = F(o, this.clonePosition());
              return {
                val: { type: n.literal, value: r, location: d },
                err: null,
              };
            }),
            (e.prototype.tryParseLeftAngleBracket = function () {
              var e;
              return this.isEOF() ||
                60 !== this.char() ||
                (!this.ignoreTag && (eo((e = this.peek() || 0)) || 47 === e))
                ? null
                : (this.bump(), "<");
            }),
            (e.prototype.tryParseQuote = function (e) {
              if (this.isEOF() || 39 !== this.char()) return null;
              switch (this.peek()) {
                case 39:
                  return this.bump(), this.bump(), "'";
                case 123:
                case 60:
                case 62:
                case 125:
                  break;
                case 35:
                  if ("plural" === e || "selectordinal" === e) break;
                  return null;
                default:
                  return null;
              }
              this.bump();
              var a = [this.char()];
              for (this.bump(); !this.isEOF(); ) {
                var n = this.char();
                if (39 === n)
                  if (39 === this.peek()) a.push(39), this.bump();
                  else {
                    this.bump();
                    break;
                  }
                else a.push(n);
                this.bump();
              }
              return Y.apply(void 0, a);
            }),
            (e.prototype.tryParseUnquoted = function (e, a) {
              if (this.isEOF()) return null;
              var n = this.char();
              return 60 === n ||
                123 === n ||
                (35 === n && ("plural" === a || "selectordinal" === a)) ||
                (125 === n && e > 0)
                ? null
                : (this.bump(), Y(n));
            }),
            (e.prototype.parseArgument = function (e, o) {
              var r = this.clonePosition();
              if ((this.bump(), this.bumpSpace(), this.isEOF()))
                return this.error(
                  a.EXPECT_ARGUMENT_CLOSING_BRACE,
                  F(r, this.clonePosition())
                );
              if (125 === this.char())
                return (
                  this.bump(),
                  this.error(a.EMPTY_ARGUMENT, F(r, this.clonePosition()))
                );
              var t = this.parseIdentifierIfPossible().value;
              if (!t)
                return this.error(
                  a.MALFORMED_ARGUMENT,
                  F(r, this.clonePosition())
                );
              if ((this.bumpSpace(), this.isEOF()))
                return this.error(
                  a.EXPECT_ARGUMENT_CLOSING_BRACE,
                  F(r, this.clonePosition())
                );
              switch (this.char()) {
                case 125:
                  return (
                    this.bump(),
                    {
                      val: {
                        type: n.argument,
                        value: t,
                        location: F(r, this.clonePosition()),
                      },
                      err: null,
                    }
                  );
                case 44:
                  if ((this.bump(), this.bumpSpace(), this.isEOF()))
                    return this.error(
                      a.EXPECT_ARGUMENT_CLOSING_BRACE,
                      F(r, this.clonePosition())
                    );
                  return this.parseArgumentOptions(e, o, t, r);
                default:
                  return this.error(
                    a.MALFORMED_ARGUMENT,
                    F(r, this.clonePosition())
                  );
              }
            }),
            (e.prototype.parseIdentifierIfPossible = function () {
              var e = this.clonePosition(),
                a = this.offset(),
                n = t(this.message, a),
                o = a + n.length;
              return (
                this.bumpTo(o),
                { value: n, location: F(e, this.clonePosition()) }
              );
            }),
            (e.prototype.parseArgumentOptions = function (e, r, t, s) {
              var i,
                d = this.clonePosition(),
                b = this.parseIdentifierIfPossible().value,
                m = this.clonePosition();
              switch (b) {
                case "":
                  return this.error(a.EXPECT_ARGUMENT_TYPE, F(d, m));
                case "number":
                case "date":
                case "time":
                  this.bumpSpace();
                  var l = null;
                  if (this.bumpIf(",")) {
                    this.bumpSpace();
                    var f = this.clonePosition(),
                      k = this.parseSimpleArgStyleIfPossible();
                    if (k.err) return k;
                    var u = $(k.val);
                    if (0 === u.length)
                      return this.error(
                        a.EXPECT_ARGUMENT_STYLE,
                        F(this.clonePosition(), this.clonePosition())
                      );
                    l = { style: u, styleLocation: F(f, this.clonePosition()) };
                  }
                  var h = this.tryParseArgumentClose(s);
                  if (h.err) return h;
                  var p = F(s, this.clonePosition());
                  if (l && q(null == l ? void 0 : l.style, "::", 0)) {
                    var x = J(l.style.slice(2));
                    if ("number" === b) {
                      var k = this.parseNumberSkeletonFromString(
                        x,
                        l.styleLocation
                      );
                      if (k.err) return k;
                      return {
                        val: {
                          type: n.number,
                          value: t,
                          location: p,
                          style: k.val,
                        },
                        err: null,
                      };
                    }
                    if (0 === x.length)
                      return this.error(a.EXPECT_DATE_TIME_SKELETON, p);
                    var g,
                      C = x;
                    this.locale &&
                      (C = (function (e, a) {
                        for (var n = "", o = 0; o < e.length; o++) {
                          var r = e.charAt(o);
                          if ("j" === r) {
                            for (
                              var t = 0;
                              o + 1 < e.length && e.charAt(o + 1) === r;

                            )
                              t++, o++;
                            var s = 1 + (1 & t),
                              i = t < 2 ? 1 : 3 + (t >> 1),
                              d = (function (e) {
                                var a,
                                  n = e.hourCycle;
                                if (
                                  (void 0 === n &&
                                    e.hourCycles &&
                                    e.hourCycles.length &&
                                    (n = e.hourCycles[0]),
                                  n)
                                )
                                  switch (n) {
                                    case "h24":
                                      return "k";
                                    case "h23":
                                      return "H";
                                    case "h12":
                                      return "h";
                                    case "h11":
                                      return "K";
                                    default:
                                      throw Error("Invalid hourCycle");
                                  }
                                var o = e.language;
                                return (
                                  "root" !== o && (a = e.maximize().region),
                                  (B[a || ""] ||
                                    B[o || ""] ||
                                    B["".concat(o, "-001")] ||
                                    B["001"])[0]
                                );
                              })(a);
                            for (("H" == d || "k" == d) && (i = 0); i-- > 0; )
                              n += "a";
                            for (; s-- > 0; ) n = d + n;
                          } else "J" === r ? (n += "H") : (n += r);
                        }
                        return n;
                      })(x, this.locale));
                    var u = {
                      type: o.dateTime,
                      pattern: C,
                      location: l.styleLocation,
                      parsedOptions: this.shouldParseSkeletons
                        ? ((g = {}),
                          C.replace(A, function (e) {
                            var a = e.length;
                            switch (e[0]) {
                              case "G":
                                g.era =
                                  4 === a
                                    ? "long"
                                    : 5 === a
                                    ? "narrow"
                                    : "short";
                                break;
                              case "y":
                                g.year = 2 === a ? "2-digit" : "numeric";
                                break;
                              case "Y":
                              case "u":
                              case "U":
                              case "r":
                                throw RangeError(
                                  "`Y/u/U/r` (year) patterns are not supported, use `y` instead"
                                );
                              case "q":
                              case "Q":
                                throw RangeError(
                                  "`q/Q` (quarter) patterns are not supported"
                                );
                              case "M":
                              case "L":
                                g.month = [
                                  "numeric",
                                  "2-digit",
                                  "short",
                                  "long",
                                  "narrow",
                                ][a - 1];
                                break;
                              case "w":
                              case "W":
                                throw RangeError(
                                  "`w/W` (week) patterns are not supported"
                                );
                              case "d":
                                g.day = ["numeric", "2-digit"][a - 1];
                                break;
                              case "D":
                              case "F":
                              case "g":
                                throw RangeError(
                                  "`D/F/g` (day) patterns are not supported, use `d` instead"
                                );
                              case "E":
                                g.weekday =
                                  4 === a
                                    ? "long"
                                    : 5 === a
                                    ? "narrow"
                                    : "short";
                                break;
                              case "e":
                                if (a < 4)
                                  throw RangeError(
                                    "`e..eee` (weekday) patterns are not supported"
                                  );
                                g.weekday = [
                                  "short",
                                  "long",
                                  "narrow",
                                  "short",
                                ][a - 4];
                                break;
                              case "c":
                                if (a < 4)
                                  throw RangeError(
                                    "`c..ccc` (weekday) patterns are not supported"
                                  );
                                g.weekday = [
                                  "short",
                                  "long",
                                  "narrow",
                                  "short",
                                ][a - 4];
                                break;
                              case "a":
                                g.hour12 = !0;
                                break;
                              case "b":
                              case "B":
                                throw RangeError(
                                  "`b/B` (period) patterns are not supported, use `a` instead"
                                );
                              case "h":
                                (g.hourCycle = "h12"),
                                  (g.hour = ["numeric", "2-digit"][a - 1]);
                                break;
                              case "H":
                                (g.hourCycle = "h23"),
                                  (g.hour = ["numeric", "2-digit"][a - 1]);
                                break;
                              case "K":
                                (g.hourCycle = "h11"),
                                  (g.hour = ["numeric", "2-digit"][a - 1]);
                                break;
                              case "k":
                                (g.hourCycle = "h24"),
                                  (g.hour = ["numeric", "2-digit"][a - 1]);
                                break;
                              case "j":
                              case "J":
                              case "C":
                                throw RangeError(
                                  "`j/J/C` (hour) patterns are not supported, use `h/H/K/k` instead"
                                );
                              case "m":
                                g.minute = ["numeric", "2-digit"][a - 1];
                                break;
                              case "s":
                                g.second = ["numeric", "2-digit"][a - 1];
                                break;
                              case "S":
                              case "A":
                                throw RangeError(
                                  "`S/A` (second) patterns are not supported, use `s` instead"
                                );
                              case "z":
                                g.timeZoneName = a < 4 ? "short" : "long";
                                break;
                              case "Z":
                              case "O":
                              case "v":
                              case "V":
                              case "X":
                              case "x":
                                throw RangeError(
                                  "`Z/O/v/V/X/x` (timeZone) patterns are not supported, use `z` instead"
                                );
                            }
                            return "";
                          }),
                          g)
                        : {},
                    };
                    return {
                      val: {
                        type: "date" === b ? n.date : n.time,
                        value: t,
                        location: p,
                        style: u,
                      },
                      err: null,
                    };
                  }
                  return {
                    val: {
                      type:
                        "number" === b
                          ? n.number
                          : "date" === b
                          ? n.date
                          : n.time,
                      value: t,
                      location: p,
                      style:
                        null != (i = null == l ? void 0 : l.style) ? i : null,
                    },
                    err: null,
                  };
                case "plural":
                case "selectordinal":
                case "select":
                  var v = this.clonePosition();
                  if ((this.bumpSpace(), !this.bumpIf(",")))
                    return this.error(
                      a.EXPECT_SELECT_ARGUMENT_OPTIONS,
                      F(v, (0, c.__assign)({}, v))
                    );
                  this.bumpSpace();
                  var y = this.parseIdentifierIfPossible(),
                    N = 0;
                  if ("select" !== b && "offset" === y.value) {
                    if (!this.bumpIf(":"))
                      return this.error(
                        a.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE,
                        F(this.clonePosition(), this.clonePosition())
                      );
                    this.bumpSpace();
                    var k = this.tryParseDecimalInteger(
                      a.EXPECT_PLURAL_ARGUMENT_OFFSET_VALUE,
                      a.INVALID_PLURAL_ARGUMENT_OFFSET_VALUE
                    );
                    if (k.err) return k;
                    this.bumpSpace(),
                      (y = this.parseIdentifierIfPossible()),
                      (N = k.val);
                  }
                  var T = this.tryParsePluralOrSelectOptions(e, b, r, y);
                  if (T.err) return T;
                  var h = this.tryParseArgumentClose(s);
                  if (h.err) return h;
                  var R = F(s, this.clonePosition());
                  if ("select" === b)
                    return {
                      val: {
                        type: n.select,
                        value: t,
                        options: Z(T.val),
                        location: R,
                      },
                      err: null,
                    };
                  return {
                    val: {
                      type: n.plural,
                      value: t,
                      options: Z(T.val),
                      offset: N,
                      pluralType: "plural" === b ? "cardinal" : "ordinal",
                      location: R,
                    },
                    err: null,
                  };
                default:
                  return this.error(a.INVALID_ARGUMENT_TYPE, F(d, m));
              }
            }),
            (e.prototype.tryParseArgumentClose = function (e) {
              return this.isEOF() || 125 !== this.char()
                ? this.error(
                    a.EXPECT_ARGUMENT_CLOSING_BRACE,
                    F(e, this.clonePosition())
                  )
                : (this.bump(), { val: !0, err: null });
            }),
            (e.prototype.parseSimpleArgStyleIfPossible = function () {
              for (var e = 0, n = this.clonePosition(); !this.isEOF(); )
                switch (this.char()) {
                  case 39:
                    this.bump();
                    var o = this.clonePosition();
                    if (!this.bumpUntil("'"))
                      return this.error(
                        a.UNCLOSED_QUOTE_IN_ARGUMENT_STYLE,
                        F(o, this.clonePosition())
                      );
                    this.bump();
                    break;
                  case 123:
                    (e += 1), this.bump();
                    break;
                  case 125:
                    if (!(e > 0))
                      return {
                        val: this.message.slice(n.offset, this.offset()),
                        err: null,
                      };
                    e -= 1;
                    break;
                  default:
                    this.bump();
                }
              return {
                val: this.message.slice(n.offset, this.offset()),
                err: null,
              };
            }),
            (e.prototype.parseNumberSkeletonFromString = function (e, n) {
              var r = [];
              try {
                r = (function (e) {
                  if (0 === e.length)
                    throw Error("Number skeleton cannot be empty");
                  for (
                    var a = e.split(w).filter(function (e) {
                        return e.length > 0;
                      }),
                      n = [],
                      o = 0;
                    o < a.length;
                    o++
                  ) {
                    var r = a[o].split("/");
                    if (0 === r.length) throw Error("Invalid number skeleton");
                    for (var t = r[0], s = r.slice(1), i = 0; i < s.length; i++)
                      if (0 === s[i].length)
                        throw Error("Invalid number skeleton");
                    n.push({ stem: t, options: s });
                  }
                  return n;
                })(e);
              } catch (e) {
                return this.error(a.INVALID_NUMBER_SKELETON, n);
              }
              return {
                val: {
                  type: o.number,
                  tokens: r,
                  location: n,
                  parsedOptions: this.shouldParseSkeletons
                    ? (function (e) {
                        for (var a = {}, n = 0; n < e.length; n++) {
                          var o = e[n];
                          switch (o.stem) {
                            case "percent":
                            case "%":
                              a.style = "percent";
                              continue;
                            case "%x100":
                              (a.style = "percent"), (a.scale = 100);
                              continue;
                            case "currency":
                              (a.style = "currency"),
                                (a.currency = o.options[0]);
                              continue;
                            case "group-off":
                            case ",_":
                              a.useGrouping = !1;
                              continue;
                            case "precision-integer":
                            case ".":
                              a.maximumFractionDigits = 0;
                              continue;
                            case "measure-unit":
                            case "unit":
                              (a.style = "unit"),
                                (a.unit = o.options[0].replace(/^(.*?)-/, ""));
                              continue;
                            case "compact-short":
                            case "K":
                              (a.notation = "compact"),
                                (a.compactDisplay = "short");
                              continue;
                            case "compact-long":
                            case "KK":
                              (a.notation = "compact"),
                                (a.compactDisplay = "long");
                              continue;
                            case "scientific":
                              a = (0, c.__assign)(
                                (0, c.__assign)((0, c.__assign)({}, a), {
                                  notation: "scientific",
                                }),
                                o.options.reduce(function (e, a) {
                                  return (0,
                                  c.__assign)((0, c.__assign)({}, e), M(a));
                                }, {})
                              );
                              continue;
                            case "engineering":
                              a = (0, c.__assign)(
                                (0, c.__assign)((0, c.__assign)({}, a), {
                                  notation: "engineering",
                                }),
                                o.options.reduce(function (e, a) {
                                  return (0,
                                  c.__assign)((0, c.__assign)({}, e), M(a));
                                }, {})
                              );
                              continue;
                            case "notation-simple":
                              a.notation = "standard";
                              continue;
                            case "unit-width-narrow":
                              (a.currencyDisplay = "narrowSymbol"),
                                (a.unitDisplay = "narrow");
                              continue;
                            case "unit-width-short":
                              (a.currencyDisplay = "code"),
                                (a.unitDisplay = "short");
                              continue;
                            case "unit-width-full-name":
                              (a.currencyDisplay = "name"),
                                (a.unitDisplay = "long");
                              continue;
                            case "unit-width-iso-code":
                              a.currencyDisplay = "symbol";
                              continue;
                            case "scale":
                              a.scale = parseFloat(o.options[0]);
                              continue;
                            case "rounding-mode-floor":
                              a.roundingMode = "floor";
                              continue;
                            case "rounding-mode-ceiling":
                              a.roundingMode = "ceil";
                              continue;
                            case "rounding-mode-down":
                              a.roundingMode = "trunc";
                              continue;
                            case "rounding-mode-up":
                              a.roundingMode = "expand";
                              continue;
                            case "rounding-mode-half-even":
                              a.roundingMode = "halfEven";
                              continue;
                            case "rounding-mode-half-down":
                              a.roundingMode = "halfTrunc";
                              continue;
                            case "rounding-mode-half-up":
                              a.roundingMode = "halfExpand";
                              continue;
                            case "integer-width":
                              if (o.options.length > 1)
                                throw RangeError(
                                  "integer-width stems only accept a single optional option"
                                );
                              o.options[0].replace(
                                O,
                                function (e, n, o, r, t, s) {
                                  if (n) a.minimumIntegerDigits = o.length;
                                  else if (r && t)
                                    throw Error(
                                      "We currently do not support maximum integer digits"
                                    );
                                  else if (s)
                                    throw Error(
                                      "We currently do not support exact integer digits"
                                    );
                                  return "";
                                }
                              );
                              continue;
                          }
                          if (P.test(o.stem)) {
                            a.minimumIntegerDigits = o.stem.length;
                            continue;
                          }
                          if (S.test(o.stem)) {
                            if (o.options.length > 1)
                              throw RangeError(
                                "Fraction-precision stems only accept a single optional option"
                              );
                            o.stem.replace(S, function (e, n, o, r, t, s) {
                              return (
                                "*" === o
                                  ? (a.minimumFractionDigits = n.length)
                                  : r && "#" === r[0]
                                  ? (a.maximumFractionDigits = r.length)
                                  : t && s
                                  ? ((a.minimumFractionDigits = t.length),
                                    (a.maximumFractionDigits =
                                      t.length + s.length))
                                  : ((a.minimumFractionDigits = n.length),
                                    (a.maximumFractionDigits = n.length)),
                                ""
                              );
                            });
                            var r = o.options[0];
                            "w" === r
                              ? (a = (0, c.__assign)((0, c.__assign)({}, a), {
                                  trailingZeroDisplay: "stripIfInteger",
                                }))
                              : r &&
                                (a = (0, c.__assign)(
                                  (0, c.__assign)({}, a),
                                  D(r)
                                ));
                            continue;
                          }
                          if (I.test(o.stem)) {
                            a = (0, c.__assign)(
                              (0, c.__assign)({}, a),
                              D(o.stem)
                            );
                            continue;
                          }
                          var t = L(o.stem);
                          t && (a = (0, c.__assign)((0, c.__assign)({}, a), t));
                          var s = (function (e) {
                            var a;
                            if (
                              ("E" === e[0] && "E" === e[1]
                                ? ((a = { notation: "engineering" }),
                                  (e = e.slice(2)))
                                : "E" === e[0] &&
                                  ((a = { notation: "scientific" }),
                                  (e = e.slice(1))),
                              a)
                            ) {
                              var n = e.slice(0, 2);
                              if (
                                ("+!" === n
                                  ? ((a.signDisplay = "always"),
                                    (e = e.slice(2)))
                                  : "+?" === n &&
                                    ((a.signDisplay = "exceptZero"),
                                    (e = e.slice(2))),
                                !P.test(e))
                              )
                                throw Error(
                                  "Malformed concise eng/scientific notation"
                                );
                              a.minimumIntegerDigits = e.length;
                            }
                            return a;
                          })(o.stem);
                          s && (a = (0, c.__assign)((0, c.__assign)({}, a), s));
                        }
                        return a;
                      })(r)
                    : {},
                },
                err: null,
              };
            }),
            (e.prototype.tryParsePluralOrSelectOptions = function (e, n, o, r) {
              for (
                var t,
                  s = !1,
                  i = [],
                  d = new Set(),
                  c = r.value,
                  b = r.location;
                ;

              ) {
                if (0 === c.length) {
                  var m = this.clonePosition();
                  if ("select" !== n && this.bumpIf("=")) {
                    var l = this.tryParseDecimalInteger(
                      a.EXPECT_PLURAL_ARGUMENT_SELECTOR,
                      a.INVALID_PLURAL_ARGUMENT_SELECTOR
                    );
                    if (l.err) return l;
                    (b = F(m, this.clonePosition())),
                      (c = this.message.slice(m.offset, this.offset()));
                  } else break;
                }
                if (d.has(c))
                  return this.error(
                    "select" === n
                      ? a.DUPLICATE_SELECT_ARGUMENT_SELECTOR
                      : a.DUPLICATE_PLURAL_ARGUMENT_SELECTOR,
                    b
                  );
                "other" === c && (s = !0), this.bumpSpace();
                var f = this.clonePosition();
                if (!this.bumpIf("{"))
                  return this.error(
                    "select" === n
                      ? a.EXPECT_SELECT_ARGUMENT_SELECTOR_FRAGMENT
                      : a.EXPECT_PLURAL_ARGUMENT_SELECTOR_FRAGMENT,
                    F(this.clonePosition(), this.clonePosition())
                  );
                var k = this.parseMessage(e + 1, n, o);
                if (k.err) return k;
                var u = this.tryParseArgumentClose(f);
                if (u.err) return u;
                i.push([
                  c,
                  { value: k.val, location: F(f, this.clonePosition()) },
                ]),
                  d.add(c),
                  this.bumpSpace(),
                  (c = (t = this.parseIdentifierIfPossible()).value),
                  (b = t.location);
              }
              return 0 === i.length
                ? this.error(
                    "select" === n
                      ? a.EXPECT_SELECT_ARGUMENT_SELECTOR
                      : a.EXPECT_PLURAL_ARGUMENT_SELECTOR,
                    F(this.clonePosition(), this.clonePosition())
                  )
                : this.requiresOtherClause && !s
                ? this.error(
                    a.MISSING_OTHER_CLAUSE,
                    F(this.clonePosition(), this.clonePosition())
                  )
                : { val: i, err: null };
            }),
            (e.prototype.tryParseDecimalInteger = function (e, a) {
              var n = 1,
                o = this.clonePosition();
              this.bumpIf("+") || (this.bumpIf("-") && (n = -1));
              for (var r = !1, t = 0; !this.isEOF(); ) {
                var s = this.char();
                if (s >= 48 && s <= 57)
                  (r = !0), (t = 10 * t + (s - 48)), this.bump();
                else break;
              }
              var i = F(o, this.clonePosition());
              return r
                ? z((t *= n))
                  ? { val: t, err: null }
                  : this.error(a, i)
                : this.error(e, i);
            }),
            (e.prototype.offset = function () {
              return this.position.offset;
            }),
            (e.prototype.isEOF = function () {
              return this.offset() === this.message.length;
            }),
            (e.prototype.clonePosition = function () {
              return {
                offset: this.position.offset,
                line: this.position.line,
                column: this.position.column,
              };
            }),
            (e.prototype.char = function () {
              var e = this.position.offset;
              if (e >= this.message.length) throw Error("out of bound");
              var a = Q(this.message, e);
              if (void 0 === a)
                throw Error(
                  "Offset ".concat(
                    e,
                    " is at invalid UTF-16 code unit boundary"
                  )
                );
              return a;
            }),
            (e.prototype.error = function (e, a) {
              return {
                val: null,
                err: { kind: e, message: this.message, location: a },
              };
            }),
            (e.prototype.bump = function () {
              if (!this.isEOF()) {
                var e = this.char();
                10 === e
                  ? ((this.position.line += 1),
                    (this.position.column = 1),
                    (this.position.offset += 1))
                  : ((this.position.column += 1),
                    (this.position.offset += e < 65536 ? 1 : 2));
              }
            }),
            (e.prototype.bumpIf = function (e) {
              if (q(this.message, e, this.offset())) {
                for (var a = 0; a < e.length; a++) this.bump();
                return !0;
              }
              return !1;
            }),
            (e.prototype.bumpUntil = function (e) {
              var a = this.offset(),
                n = this.message.indexOf(e, a);
              return n >= 0
                ? (this.bumpTo(n), !0)
                : (this.bumpTo(this.message.length), !1);
            }),
            (e.prototype.bumpTo = function (e) {
              if (this.offset() > e)
                throw Error(
                  "targetOffset "
                    .concat(
                      e,
                      " must be greater than or equal to the current offset "
                    )
                    .concat(this.offset())
                );
              for (e = Math.min(e, this.message.length); ; ) {
                var a = this.offset();
                if (a === e) break;
                if (a > e)
                  throw Error(
                    "targetOffset ".concat(
                      e,
                      " is at invalid UTF-16 code unit boundary"
                    )
                  );
                if ((this.bump(), this.isEOF())) break;
              }
            }),
            (e.prototype.bumpSpace = function () {
              for (; !this.isEOF() && er(this.char()); ) this.bump();
            }),
            (e.prototype.peek = function () {
              if (this.isEOF()) return null;
              var e = this.char(),
                a = this.offset(),
                n = this.message.charCodeAt(a + (e >= 65536 ? 2 : 1));
              return null != n ? n : null;
            }),
            e
          );
        })();
        function eo(e) {
          return (e >= 97 && e <= 122) || (e >= 65 && e <= 90);
        }
        function er(e) {
          return (
            (e >= 9 && e <= 13) ||
            32 === e ||
            133 === e ||
            (e >= 8206 && e <= 8207) ||
            8232 === e ||
            8233 === e
          );
        }
        function et(e, n) {
          void 0 === n && (n = {});
          var o = new en(
            e,
            (n = (0, c.__assign)(
              { shouldParseSkeletons: !0, requiresOtherClause: !0 },
              n
            ))
          ).parse();
          if (o.err) {
            var r = SyntaxError(a[o.err.kind]);
            throw (
              ((r.location = o.err.location),
              (r.originalMessage = o.err.message),
              r)
            );
          }
          return (
            (null == n ? void 0 : n.captureLocation) ||
              (function e(a) {
                a.forEach(function (a) {
                  if ((delete a.location, v(a) || y(a)))
                    for (var n in a.options)
                      delete a.options[n].location, e(a.options[n].value);
                  else
                    (x(a) && T(a.style)) || ((g(a) || C(a)) && R(a.style))
                      ? delete a.style.location
                      : N(a) && e(a.children);
                });
              })(o.val),
            o.val
          );
        }
        !(function (e) {
          (e.MISSING_VALUE = "MISSING_VALUE"),
            (e.INVALID_VALUE = "INVALID_VALUE"),
            (e.MISSING_INTL_API = "MISSING_INTL_API");
        })(s || (s = {}));
        var es = (function (e) {
            function a(a, n, o) {
              var r = e.call(this, a) || this;
              return (r.code = n), (r.originalMessage = o), r;
            }
            return (
              (0, c.__extends)(a, e),
              (a.prototype.toString = function () {
                return "[formatjs Error: "
                  .concat(this.code, "] ")
                  .concat(this.message);
              }),
              a
            );
          })(Error),
          ei = (function (e) {
            function a(a, n, o, r) {
              return (
                e.call(
                  this,
                  'Invalid values for "'
                    .concat(a, '": "')
                    .concat(n, '". Options are "')
                    .concat(Object.keys(o).join('", "'), '"'),
                  s.INVALID_VALUE,
                  r
                ) || this
              );
            }
            return (0, c.__extends)(a, e), a;
          })(es),
          ed = (function (e) {
            function a(a, n, o) {
              return (
                e.call(
                  this,
                  'Value for "'.concat(a, '" must be of type ').concat(n),
                  s.INVALID_VALUE,
                  o
                ) || this
              );
            }
            return (0, c.__extends)(a, e), a;
          })(es),
          ec = (function (e) {
            function a(a, n) {
              return (
                e.call(
                  this,
                  'The intl string context variable "'
                    .concat(a, '" was not provided to the string "')
                    .concat(n, '"'),
                  s.MISSING_VALUE,
                  n
                ) || this
              );
            }
            return (0, c.__extends)(a, e), a;
          })(es);
        function eb(e) {
          return {
            create: function () {
              return {
                get: function (a) {
                  return e[a];
                },
                set: function (a, n) {
                  e[a] = n;
                },
              };
            },
          };
        }
        !(function (e) {
          (e[(e.literal = 0)] = "literal"), (e[(e.object = 1)] = "object");
        })(i || (i = {}));
        var em = (function () {
          function e(a, o, r, t) {
            void 0 === o && (o = e.defaultLocale);
            var d,
              m,
              l = this;
            if (
              ((this.formatterCache = {
                number: {},
                dateTime: {},
                pluralRules: {},
              }),
              (this.format = function (e) {
                var a = l.formatToParts(e);
                if (1 === a.length) return a[0].value;
                var n = a.reduce(function (e, a) {
                  return (
                    e.length &&
                    a.type === i.literal &&
                    "string" == typeof e[e.length - 1]
                      ? (e[e.length - 1] += a.value)
                      : e.push(a.value),
                    e
                  );
                }, []);
                return n.length <= 1 ? n[0] || "" : n;
              }),
              (this.formatToParts = function (e) {
                return (function e(a, o, r, t, d, c, b) {
                  if (1 === a.length && p(a[0]))
                    return [{ type: i.literal, value: a[0].value }];
                  for (var m = [], l = 0; l < a.length; l++) {
                    var f = a[l];
                    if (p(f)) {
                      m.push({ type: i.literal, value: f.value });
                      continue;
                    }
                    if (f.type === n.pound) {
                      "number" == typeof c &&
                        m.push({
                          type: i.literal,
                          value: r.getNumberFormat(o).format(c),
                        });
                      continue;
                    }
                    var k = f.value;
                    if (!(d && k in d)) throw new ec(k, b);
                    var u = d[k];
                    if (f.type === n.argument) {
                      (u && "string" != typeof u && "number" != typeof u) ||
                        (u =
                          "string" == typeof u || "number" == typeof u
                            ? String(u)
                            : ""),
                        m.push({
                          type: "string" == typeof u ? i.literal : i.object,
                          value: u,
                        });
                      continue;
                    }
                    if (g(f)) {
                      var h =
                        "string" == typeof f.style
                          ? t.date[f.style]
                          : R(f.style)
                          ? f.style.parsedOptions
                          : void 0;
                      m.push({
                        type: i.literal,
                        value: r.getDateTimeFormat(o, h).format(u),
                      });
                      continue;
                    }
                    if (C(f)) {
                      var h =
                        "string" == typeof f.style
                          ? t.time[f.style]
                          : R(f.style)
                          ? f.style.parsedOptions
                          : t.time.medium;
                      m.push({
                        type: i.literal,
                        value: r.getDateTimeFormat(o, h).format(u),
                      });
                      continue;
                    }
                    if (x(f)) {
                      var h =
                        "string" == typeof f.style
                          ? t.number[f.style]
                          : T(f.style)
                          ? f.style.parsedOptions
                          : void 0;
                      h && h.scale && (u *= h.scale || 1),
                        m.push({
                          type: i.literal,
                          value: r.getNumberFormat(o, h).format(u),
                        });
                      continue;
                    }
                    if (N(f)) {
                      var E = f.children,
                        A = f.value,
                        w = d[A];
                      if ("function" != typeof w)
                        throw new ed(A, "function", b);
                      var S = w(
                        e(E, o, r, t, d, c).map(function (e) {
                          return e.value;
                        })
                      );
                      Array.isArray(S) || (S = [S]),
                        m.push.apply(
                          m,
                          S.map(function (e) {
                            return {
                              type: "string" == typeof e ? i.literal : i.object,
                              value: e,
                            };
                          })
                        );
                    }
                    if (v(f)) {
                      var I = f.options[u] || f.options.other;
                      if (!I)
                        throw new ei(f.value, u, Object.keys(f.options), b);
                      m.push.apply(m, e(I.value, o, r, t, d));
                      continue;
                    }
                    if (y(f)) {
                      var I = f.options["=".concat(u)];
                      if (!I) {
                        if (!Intl.PluralRules)
                          throw new es(
                            'Intl.PluralRules is not available in this environment.\nTry polyfilling it using "@formatjs/intl-pluralrules"\n',
                            s.MISSING_INTL_API,
                            b
                          );
                        var O = r
                          .getPluralRules(o, { type: f.pluralType })
                          .select(u - (f.offset || 0));
                        I = f.options[O] || f.options.other;
                      }
                      if (!I)
                        throw new ei(f.value, u, Object.keys(f.options), b);
                      m.push.apply(
                        m,
                        e(I.value, o, r, t, d, u - (f.offset || 0))
                      );
                      continue;
                    }
                  }
                  return m.length < 2
                    ? m
                    : m.reduce(function (e, a) {
                        var n = e[e.length - 1];
                        return (
                          n && n.type === i.literal && a.type === i.literal
                            ? (n.value += a.value)
                            : e.push(a),
                          e
                        );
                      }, []);
                })(
                  l.ast,
                  l.locales,
                  l.formatters,
                  l.formats,
                  e,
                  void 0,
                  l.message
                );
              }),
              (this.resolvedOptions = function () {
                var e;
                return {
                  locale:
                    (null == (e = l.resolvedLocale) ? void 0 : e.toString()) ||
                    Intl.NumberFormat.supportedLocalesOf(l.locales)[0],
                };
              }),
              (this.getAst = function () {
                return l.ast;
              }),
              (this.locales = o),
              (this.resolvedLocale = e.resolveLocale(o)),
              "string" == typeof a)
            ) {
              if (((this.message = a), !e.__parse))
                throw TypeError(
                  "IntlMessageFormat.__parse must be set to process `message` of type `string`"
                );
              var f = t || {},
                k = (f.formatters, (0, c.__rest)(f, ["formatters"]));
              this.ast = e.__parse(
                a,
                (0, c.__assign)((0, c.__assign)({}, k), {
                  locale: this.resolvedLocale,
                })
              );
            } else this.ast = a;
            if (!Array.isArray(this.ast))
              throw TypeError("A message must be provided as a String or AST.");
            (this.formats =
              ((d = e.formats),
              r
                ? Object.keys(d).reduce(function (e, a) {
                    var n, o;
                    return (
                      (e[a] =
                        ((n = d[a]),
                        (o = r[a])
                          ? (0, c.__assign)(
                              (0, c.__assign)(
                                (0, c.__assign)({}, n || {}),
                                o || {}
                              ),
                              Object.keys(n).reduce(function (e, a) {
                                return (
                                  (e[a] = (0, c.__assign)(
                                    (0, c.__assign)({}, n[a]),
                                    o[a] || {}
                                  )),
                                  e
                                );
                              }, {})
                            )
                          : n)),
                      e
                    );
                  }, (0, c.__assign)({}, d))
                : d)),
              (this.formatters =
                (t && t.formatters) ||
                (void 0 === (m = this.formatterCache) &&
                  (m = { number: {}, dateTime: {}, pluralRules: {} }),
                {
                  getNumberFormat: b(
                    function () {
                      for (var e, a = [], n = 0; n < arguments.length; n++)
                        a[n] = arguments[n];
                      return new ((e = Intl.NumberFormat).bind.apply(
                        e,
                        (0, c.__spreadArray)([void 0], a, !1)
                      ))();
                    },
                    { cache: eb(m.number), strategy: h.variadic }
                  ),
                  getDateTimeFormat: b(
                    function () {
                      for (var e, a = [], n = 0; n < arguments.length; n++)
                        a[n] = arguments[n];
                      return new ((e = Intl.DateTimeFormat).bind.apply(
                        e,
                        (0, c.__spreadArray)([void 0], a, !1)
                      ))();
                    },
                    { cache: eb(m.dateTime), strategy: h.variadic }
                  ),
                  getPluralRules: b(
                    function () {
                      for (var e, a = [], n = 0; n < arguments.length; n++)
                        a[n] = arguments[n];
                      return new ((e = Intl.PluralRules).bind.apply(
                        e,
                        (0, c.__spreadArray)([void 0], a, !1)
                      ))();
                    },
                    { cache: eb(m.pluralRules), strategy: h.variadic }
                  ),
                }));
          }
          return (
            Object.defineProperty(e, "defaultLocale", {
              get: function () {
                return (
                  e.memoizedDefaultLocale ||
                    (e.memoizedDefaultLocale =
                      new Intl.NumberFormat().resolvedOptions().locale),
                  e.memoizedDefaultLocale
                );
              },
              enumerable: !1,
              configurable: !0,
            }),
            (e.memoizedDefaultLocale = null),
            (e.resolveLocale = function (e) {
              if (void 0 !== Intl.Locale) {
                var a = Intl.NumberFormat.supportedLocalesOf(e);
                return new Intl.Locale(
                  a.length > 0 ? a[0] : "string" == typeof e ? e : e[0]
                );
              }
            }),
            (e.__parse = et),
            (e.formats = {
              number: {
                integer: { maximumFractionDigits: 0 },
                currency: { style: "currency" },
                percent: { style: "percent" },
              },
              date: {
                short: { month: "numeric", day: "numeric", year: "2-digit" },
                medium: { month: "short", day: "numeric", year: "numeric" },
                long: { month: "long", day: "numeric", year: "numeric" },
                full: {
                  weekday: "long",
                  month: "long",
                  day: "numeric",
                  year: "numeric",
                },
              },
              time: {
                short: { hour: "numeric", minute: "numeric" },
                medium: {
                  hour: "numeric",
                  minute: "numeric",
                  second: "numeric",
                },
                long: {
                  hour: "numeric",
                  minute: "numeric",
                  second: "numeric",
                  timeZoneName: "short",
                },
                full: {
                  hour: "numeric",
                  minute: "numeric",
                  second: "numeric",
                  timeZoneName: "short",
                },
              },
            }),
            e
          );
        })();
        class el extends Error {
          constructor(e, a) {
            let n = e;
            a && (n += ": " + a),
              super(n),
              (this.code = e),
              a && (this.originalMessage = a);
          }
        }
        var ef = (function (e) {
          return (
            (e.MISSING_MESSAGE = "MISSING_MESSAGE"),
            (e.MISSING_FORMAT = "MISSING_FORMAT"),
            (e.ENVIRONMENT_FALLBACK = "ENVIRONMENT_FALLBACK"),
            (e.INSUFFICIENT_PATH = "INSUFFICIENT_PATH"),
            (e.INVALID_MESSAGE = "INVALID_MESSAGE"),
            (e.INVALID_KEY = "INVALID_KEY"),
            (e.FORMATTING_ERROR = "FORMATTING_ERROR"),
            e
          );
        })(ef || {});
        function ek() {
          for (var e = arguments.length, a = Array(e), n = 0; n < e; n++)
            a[n] = arguments[n];
          return a.filter(Boolean).join(".");
        }
        function eu(e) {
          return ek(e.namespace, e.key);
        }
        function eh(e) {
          console.error(e);
        }
        function ep() {
          return {
            dateTime: {},
            number: {},
            message: {},
            relativeTime: {},
            pluralRules: {},
            list: {},
            displayNames: {},
          };
        }
        function ex(e, a) {
          return b(e, {
            cache: {
              create: () => ({
                get: (e) => a[e],
                set(e, n) {
                  a[e] = n;
                },
              }),
            },
            strategy: h.variadic,
          });
        }
        function eg(e, a) {
          return ex(function () {
            for (var a = arguments.length, n = Array(a), o = 0; o < a; o++)
              n[o] = arguments[o];
            return new e(...n);
          }, a);
        }
        function eC(e) {
          return {
            getDateTimeFormat: eg(Intl.DateTimeFormat, e.dateTime),
            getNumberFormat: eg(Intl.NumberFormat, e.number),
            getPluralRules: eg(Intl.PluralRules, e.pluralRules),
            getRelativeTimeFormat: eg(Intl.RelativeTimeFormat, e.relativeTime),
            getListFormat: eg(Intl.ListFormat, e.list),
            getDisplayNames: eg(Intl.DisplayNames, e.displayNames),
          };
        }
        function ev(e, a, n, o) {
          let r = ek(o, n);
          if (!a) throw Error(r);
          let t = a;
          return (
            n.split(".").forEach((a) => {
              let n = t[a];
              if (null == a || null == n) throw Error(r + " (".concat(e, ")"));
              t = n;
            }),
            t
          );
        }
        function ey(e) {
          let a = (function (e, a, n) {
            let o =
              arguments.length > 3 && void 0 !== arguments[3]
                ? arguments[3]
                : eh;
            try {
              if (!a) throw Error(void 0);
              let o = n ? ev(e, a, n) : a;
              if (!o) throw Error(n);
              return o;
            } catch (a) {
              let e = new el(ef.MISSING_MESSAGE, a.message);
              return o(e), e;
            }
          })(e.locale, e.messages, e.namespace, e.onError);
          return (function (e) {
            let {
                cache: a,
                formats: n,
                formatters: o,
                getMessageFallback: r = eu,
                locale: t,
                messagesOrError: s,
                namespace: i,
                onError: c,
                timeZone: b,
              } = e,
              m = s instanceof el;
            function l(e, a, n) {
              let o = new el(a, n);
              return c(o), r({ error: o, key: e, namespace: i });
            }
            function f(e, c, f) {
              var k;
              let u, h;
              if (m) return r({ error: s, key: e, namespace: i });
              try {
                u = ev(t, s, e, i);
              } catch (a) {
                return l(e, ef.MISSING_MESSAGE, a.message);
              }
              if ("object" == typeof u) {
                let a;
                return l(
                  e,
                  Array.isArray(u) ? ef.INVALID_MESSAGE : ef.INSUFFICIENT_PATH,
                  a
                );
              }
              let p = ((k = u), c || /'[{}]/.test(k) ? void 0 : k);
              if (p) return p;
              o.getMessageFormat ||
                (o.getMessageFormat = ex(function () {
                  for (
                    var e = arguments.length, a = Array(e), n = 0;
                    n < e;
                    n++
                  )
                    a[n] = arguments[n];
                  return new em(a[0], a[1], a[2], { formatters: o, ...a[3] });
                }, a.message));
              try {
                h = o.getMessageFormat(
                  u,
                  t,
                  (function (e, a, n) {
                    let o = em.formats.date,
                      r = em.formats.time,
                      t = {
                        ...(null == e ? void 0 : e.dateTime),
                        ...(null == a ? void 0 : a.dateTime),
                      },
                      s = {
                        date: { ...o, ...t },
                        time: { ...r, ...t },
                        number: {
                          ...(null == e ? void 0 : e.number),
                          ...(null == a ? void 0 : a.number),
                        },
                      };
                    return (
                      n &&
                        ["date", "time"].forEach((e) => {
                          let a = s[e];
                          for (let [e, o] of Object.entries(a))
                            a[e] = { timeZone: n, ...o };
                        }),
                      s
                    );
                  })(n, f, b),
                  {
                    formatters: {
                      ...o,
                      getDateTimeFormat: (e, a) =>
                        o.getDateTimeFormat(e, { timeZone: b, ...a }),
                    },
                  }
                );
              } catch (a) {
                return l(e, ef.INVALID_MESSAGE, a.message);
              }
              try {
                let e = h.format(
                  c
                    ? (function (e) {
                        let a = {};
                        return (
                          Object.keys(e).forEach((n) => {
                            let o,
                              r = 0,
                              t = e[n];
                            (o =
                              "function" == typeof t
                                ? (e) => {
                                    let a = t(e);
                                    return (0, d.isValidElement)(a)
                                      ? (0, d.cloneElement)(a, { key: n + r++ })
                                      : a;
                                  }
                                : t),
                              (a[n] = o);
                          }),
                          a
                        );
                      })(c)
                    : c
                );
                if (null == e) throw Error(void 0);
                return (0, d.isValidElement)(e) ||
                  Array.isArray(e) ||
                  "string" == typeof e
                  ? e
                  : String(e);
              } catch (a) {
                return l(e, ef.FORMATTING_ERROR, a.message);
              }
            }
            function k(e, a, n) {
              let o = f(e, a, n);
              return "string" != typeof o
                ? l(e, ef.INVALID_MESSAGE, void 0)
                : o;
            }
            return (
              (k.rich = f),
              (k.markup = (e, a, n) => f(e, a, n)),
              (k.raw = (e) => {
                if (m) return r({ error: s, key: e, namespace: i });
                try {
                  return ev(t, s, e, i);
                } catch (a) {
                  return l(e, ef.MISSING_MESSAGE, a.message);
                }
              }),
              (k.has = (e) => {
                if (m) return !1;
                try {
                  return ev(t, s, e, i), !0;
                } catch (e) {
                  return !1;
                }
              }),
              k
            );
          })({ ...e, messagesOrError: a });
        }
        function eN(e, a) {
          return e === a ? void 0 : e.slice((a + ".").length);
        }
        let eT = {
          second: 1,
          seconds: 1,
          minute: 60,
          minutes: 60,
          hour: 3600,
          hours: 3600,
          day: 86400,
          days: 86400,
          week: 604800,
          weeks: 604800,
          month: 2628e3,
          months: 2628e3,
          quarter: 7884e3,
          quarters: 7884e3,
          year: 31536e3,
          years: 31536e3,
        };
        function eR(e) {
          let {
            _cache: a = ep(),
            _formatters: n = eC(a),
            formats: o,
            locale: r,
            onError: t = eh,
            timeZone: s,
          } = e;
          function i(e) {
            return (
              (null == e ? void 0 : e.timeZone) ||
                (s
                  ? (e = { ...e, timeZone: s })
                  : t(new el(ef.ENVIRONMENT_FALLBACK, void 0))),
              e
            );
          }
          function d(e, a, n, o, r) {
            let s;
            try {
              s = (function (e, a, n) {
                let o;
                if ("string" == typeof a) {
                  if (!(o = null == e ? void 0 : e[a])) {
                    let e = new el(ef.MISSING_FORMAT, void 0);
                    throw (t(e), e);
                  }
                } else o = a;
                return n && (o = { ...o, ...n }), o;
              })(n, e, a);
            } catch (e) {
              return r();
            }
            try {
              return o(s);
            } catch (e) {
              return t(new el(ef.FORMATTING_ERROR, e.message)), r();
            }
          }
          function c(e, a, t) {
            return d(
              a,
              t,
              null == o ? void 0 : o.dateTime,
              (a) => ((a = i(a)), n.getDateTimeFormat(r, a).format(e)),
              () => String(e)
            );
          }
          function b() {
            return e.now
              ? e.now
              : (t(new el(ef.ENVIRONMENT_FALLBACK, void 0)), new Date());
          }
          return {
            dateTime: c,
            number: function (e, a, t) {
              return d(
                a,
                t,
                null == o ? void 0 : o.number,
                (a) => n.getNumberFormat(r, a).format(e),
                () => String(e)
              );
            },
            relativeTime: function (e, a) {
              try {
                var o;
                let t,
                  s,
                  i = {};
                a instanceof Date || "number" == typeof a
                  ? (t = new Date(a))
                  : a &&
                    ((t = null != a.now ? new Date(a.now) : b()),
                    (s = a.unit),
                    (i.style = a.style),
                    (i.numberingSystem = a.numberingSystem)),
                  t || (t = b());
                let d = (new Date(e).getTime() - t.getTime()) / 1e3;
                s ||
                  (s = (function (e) {
                    let a = Math.abs(e);
                    return a < 60
                      ? "second"
                      : a < 3600
                      ? "minute"
                      : a < 86400
                      ? "hour"
                      : a < 604800
                      ? "day"
                      : a < 2628e3
                      ? "week"
                      : a < 31536e3
                      ? "month"
                      : "year";
                  })(d)),
                  (i.numeric = "second" === s ? "auto" : "always");
                let c = ((o = s), Math.round(d / eT[o]));
                return n.getRelativeTimeFormat(r, i).format(c, s);
              } catch (a) {
                return t(new el(ef.FORMATTING_ERROR, a.message)), String(e);
              }
            },
            list: function (e, a, t) {
              let s = [],
                i = new Map(),
                c = 0;
              for (let a of e) {
                let e;
                "object" == typeof a
                  ? ((e = String(c)), i.set(e, a))
                  : (e = String(a)),
                  s.push(e),
                  c++;
              }
              return d(
                a,
                t,
                null == o ? void 0 : o.list,
                (e) => {
                  let a = n
                    .getListFormat(r, e)
                    .formatToParts(s)
                    .map((e) =>
                      "literal" === e.type ? e.value : i.get(e.value) || e.value
                    );
                  return i.size > 0 ? a : a.join("");
                },
                () => String(e)
              );
            },
            dateTimeRange: function (e, a, t, s) {
              return d(
                t,
                s,
                null == o ? void 0 : o.dateTime,
                (o) => (
                  (o = i(o)), n.getDateTimeFormat(r, o).formatRange(e, a)
                ),
                () => [c(e), c(a)].join(" – ")
              );
            },
          };
        }
        function eE(e) {
          let {
            formats: a,
            getMessageFallback: n,
            messages: o,
            onError: r,
            ...t
          } = e;
          return {
            ...t,
            formats: a || void 0,
            messages: o || void 0,
            onError: r || eh,
            getMessageFallback: n || eu,
          };
        }
        var eA = e.i(150840);
        let ew = (0, d.createContext)(void 0);
        function eS(e) {
          let {
              children: a,
              formats: n,
              getMessageFallback: o,
              locale: r,
              messages: t,
              now: s,
              onError: i,
              timeZone: c,
            } = e,
            b = (0, d.useContext)(ew),
            m = (0, d.useMemo)(
              () => (null == b ? void 0 : b.cache) || ep(),
              [r, null == b ? void 0 : b.cache]
            ),
            l = (0, d.useMemo)(
              () => (null == b ? void 0 : b.formatters) || eC(m),
              [m, null == b ? void 0 : b.formatters]
            ),
            f = (0, d.useMemo)(
              () => ({
                ...eE({
                  locale: r,
                  formats: void 0 === n ? (null == b ? void 0 : b.formats) : n,
                  getMessageFallback:
                    o || (null == b ? void 0 : b.getMessageFallback),
                  messages:
                    void 0 === t ? (null == b ? void 0 : b.messages) : t,
                  now: s || (null == b ? void 0 : b.now),
                  onError: i || (null == b ? void 0 : b.onError),
                  timeZone: c || (null == b ? void 0 : b.timeZone),
                }),
                formatters: l,
                cache: m,
              }),
              [m, n, l, o, r, t, s, i, b, c]
            );
          return (0, eA.jsx)(ew.Provider, { value: f, children: a });
        }
        function eI() {
          let e = (0, d.useContext)(ew);
          if (!e) throw Error(void 0);
          return e;
        }
        let eO = !1,
          eP = "undefined" == typeof window;
        function eD(e) {
          return (function (e, a, n) {
            let {
                cache: o,
                formats: r,
                formatters: t,
                getMessageFallback: s,
                locale: i,
                onError: c,
                timeZone: b,
              } = eI(),
              m = e["!"],
              l = eN(a, "!");
            return (
              b ||
                eO ||
                !eP ||
                ((eO = !0), c(new el(ef.ENVIRONMENT_FALLBACK, void 0))),
              (0, d.useMemo)(
                () =>
                  ey({
                    cache: o,
                    formatters: t,
                    getMessageFallback: s,
                    messages: m,
                    namespace: l,
                    onError: c,
                    formats: r,
                    locale: i,
                    timeZone: b,
                  }),
                [o, t, s, m, l, c, r, i, b]
              )
            );
          })({ "!": eI().messages }, e ? "!.".concat(e) : "!", "!");
        }
        function eL() {
          return eI().locale;
        }
        function eM() {
          let e = eI();
          if (!e.messages) throw Error(void 0);
          return e.messages;
        }
        function eB() {
          let {
            formats: e,
            formatters: a,
            locale: n,
            now: o,
            onError: r,
            timeZone: t,
          } = eI();
          return (0, d.useMemo)(
            () =>
              eR({
                formats: e,
                locale: n,
                now: o,
                onError: r,
                timeZone: t,
                _formatters: a,
              }),
            [e, a, o, n, r, t]
          );
        }
      },
      [577788],
    ],
    972651: (e) => {
      "use strict";
      e.s({ useTranslations: () => o });
      var a = e.i(699677);
      function n(e, a) {
        return function () {
          for (var e = arguments.length, n = Array(e), o = 0; o < e; o++)
            n[o] = arguments[o];
          try {
            return a(...n);
          } catch (e) {
            throw Error(void 0);
          }
        };
      }
      let o = n(0, a.useTranslations);
      n(0, a.useFormatter);
    },
    530890: (e) => {
      "use strict";
      e.s({ NETWORKS: () => a });
      let a = {
        ethereum: {
          key: "ethereum",
          label: "ETH",
          caip2id: "eip155:1",
          title: "Ethereum",
        },
        bsc: {
          key: "bsc",
          label: "BSC",
          caip2id: "eip155:56",
          title: "Binance Smart Chain",
        },
        solana: {
          key: "solana",
          label: "SOL",
          caip2id: "solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp",
          title: "Solana",
        },
      };
    },
    505758: [
      (e) => {
        "use strict";
        let a, n;
        e.s({}, 505758),
          e.s({}, 501624),
          e.s({ W3mFrameProviderSingleton: () => r }, 604320);
        var o = e.i(805914);
        class r {
          static getInstance(e) {
            let {
              projectId: a,
              chainId: n,
              enableLogger: t,
              onTimeout: s,
              abortController: i,
              getActiveCaipNetwork: d,
            } = e;
            return (
              r.instance ||
                (r.instance = new o.W3mFrameProvider({
                  projectId: a,
                  chainId: n,
                  enableLogger: t,
                  onTimeout: s,
                  abortController: i,
                  getActiveCaipNetwork: d,
                })),
              r.instance
            );
          }
          constructor() {}
        }
        var t = e.i(969030),
          s = e.i(605726),
          i = e.i(352385),
          d = e.i(188274),
          c = e.i(705258),
          b = e.i(362168),
          m = e.i(69393),
          l = e.i(596373),
          f = e.i(394589),
          k = e.i(631867),
          u = e.i(875073),
          h = e.i(489040),
          p = e.i(225335),
          x = e.i(76107),
          g = e.i(159055),
          C = e.i(686753),
          v = e.i(755111),
          y = e.i(563493),
          N = e.i(840527),
          T = e.i(737460),
          R = e.i(339910),
          E = e.i(157653),
          A = e.i(646559),
          w = e.i(663563),
          S = e.i(174797),
          I = e.i(527410),
          O = e.i(350666),
          P = e.i(77217),
          D = e.i(456997);
        e.i(508431);
        var L = e.i(46416);
        e.i(433829);
        var M = e.i(361156),
          B = e.i(488103),
          U = e.i(672142),
          _ = e.i(28529);
        e.i(973439);
        var F = e.i(251909);
        let H = {
          createLogger(e) {
            let a =
                arguments.length > 1 && void 0 !== arguments[1]
                  ? arguments[1]
                  : "error",
              n = (0, F.getDefaultLoggerOptions)({ level: a }),
              { logger: o } = (0, F.generatePlatformLogger)({ opts: n });
            return (
              (o.error = function () {
                for (var a = arguments.length, n = Array(a), o = 0; o < a; o++)
                  n[o] = arguments[o];
                for (let a of n) if (a instanceof Error) return void e(a, ...n);
                e(void 0, ...n);
              }),
              o
            );
          },
        };
        var G = e.i(538752),
          X = e.i(780835),
          W = e.i(86352),
          K = e.i(994290);
        e.s({ AdapterBlueprint: () => er }, 6142);
        var V = e.i(398618);
        let z = {
            hexStringToNumber: (e) =>
              parseInt(e.startsWith("0x") ? e.slice(2) : e, 16),
            numberToHexString: (e) => "0x".concat(e.toString(16)),
            async getUserInfo(e) {
              let [a, n] = await Promise.all([
                z.getAddresses(e),
                z.getChainId(e),
              ]);
              return { chainId: n, addresses: a };
            },
            getChainId: async (e) =>
              Number(await e.request({ method: "eth_chainId" })),
            async getAddress(e) {
              let [a] = await e.request({ method: "eth_accounts" });
              return a;
            },
            getAddresses: async (e) =>
              await e.request({ method: "eth_accounts" }),
            async addEthereumChain(e, a) {
              var n, o;
              let r =
                (null == (n = a.rpcUrls.chainDefault) ? void 0 : n.http) || [];
              await e.request({
                method: "wallet_addEthereumChain",
                params: [
                  {
                    chainId: z.numberToHexString(a.id),
                    rpcUrls: [...r],
                    chainName: a.name,
                    nativeCurrency: {
                      name: a.nativeCurrency.name,
                      decimals: a.nativeCurrency.decimals,
                      symbol: a.nativeCurrency.symbol,
                    },
                    blockExplorerUrls: [
                      null == (o = a.blockExplorers) ? void 0 : o.default.url,
                    ],
                    iconUrls: [V.PresetsUtil.NetworkImageIds[a.id]],
                  },
                ],
              });
            },
          },
          j = { ACCOUNT_INDEXES: { PAYMENT: 0, ORDINAL: 1 } };
        function q(e) {
          return {
            formatters: void 0,
            fees: void 0,
            serializers: void 0,
            ...e,
          };
        }
        e.s({ WcHelpersUtil: () => J }, 912117), e.s({}, 107007);
        let Y = q({
            id: "5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp",
            name: "Solana",
            network: "solana-mainnet",
            nativeCurrency: { name: "Solana", symbol: "SOL", decimals: 9 },
            rpcUrls: {
              default: { http: ["https://rpc.walletconnect.org/v1"] },
            },
            blockExplorers: {
              default: { name: "Solscan", url: "https://solscan.io" },
            },
            testnet: !1,
            chainNamespace: "solana",
            caipNetworkId: "solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp",
            deprecatedCaipNetworkId: "solana:4sGjMW1sUnHzSxGspuhpqLDx6wiyjNtZ",
          }),
          Z = q({
            id: "EtWTRABZaYq6iMfeYKouRu166VU2xqa1",
            name: "Solana Devnet",
            network: "solana-devnet",
            nativeCurrency: { name: "Solana", symbol: "SOL", decimals: 9 },
            rpcUrls: {
              default: { http: ["https://rpc.walletconnect.org/v1"] },
            },
            blockExplorers: {
              default: { name: "Solscan", url: "https://solscan.io" },
            },
            testnet: !0,
            chainNamespace: "solana",
            caipNetworkId: "solana:EtWTRABZaYq6iMfeYKouRu166VU2xqa1",
            deprecatedCaipNetworkId: "solana:8E9rvCKLFQia2Y35HXjjpWzj8weVo44K",
          });
        q({
          id: "4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z",
          name: "Solana Testnet",
          network: "solana-testnet",
          nativeCurrency: { name: "Solana", symbol: "SOL", decimals: 9 },
          rpcUrls: { default: { http: ["https://rpc.walletconnect.org/v1"] } },
          blockExplorers: {
            default: { name: "Solscan", url: "https://solscan.io" },
          },
          testnet: !0,
          chainNamespace: "solana",
          caipNetworkId: "solana:4uhcVJyU9pJkvQyS88uRDiswHXSCkY3z",
        }),
          q({
            id: "000000000019d6689c085ae165831e93",
            caipNetworkId: "bip122:000000000019d6689c085ae165831e93",
            chainNamespace: "bip122",
            name: "Bitcoin",
            nativeCurrency: { name: "Bitcoin", symbol: "BTC", decimals: 8 },
            rpcUrls: {
              default: { http: ["https://rpc.walletconnect.org/v1"] },
            },
          }),
          q({
            id: "000000000933ea01ad0ee984209779ba",
            caipNetworkId: "bip122:000000000933ea01ad0ee984209779ba",
            chainNamespace: "bip122",
            name: "Bitcoin Testnet",
            nativeCurrency: { name: "Bitcoin", symbol: "BTC", decimals: 8 },
            rpcUrls: {
              default: { http: ["https://rpc.walletconnect.org/v1"] },
            },
            testnet: !0,
          });
        let Q = {
            solana: [
              "solana_signMessage",
              "solana_signTransaction",
              "solana_requestAccounts",
              "solana_getAccounts",
              "solana_signAllTransactions",
              "solana_signAndSendTransaction",
            ],
            eip155: [
              "eth_accounts",
              "eth_requestAccounts",
              "eth_sendRawTransaction",
              "eth_sign",
              "eth_signTransaction",
              "eth_signTypedData",
              "eth_signTypedData_v3",
              "eth_signTypedData_v4",
              "eth_sendTransaction",
              "personal_sign",
              "wallet_switchEthereumChain",
              "wallet_addEthereumChain",
              "wallet_getPermissions",
              "wallet_requestPermissions",
              "wallet_registerOnboarding",
              "wallet_watchAsset",
              "wallet_scanQRCode",
              "wallet_getCallsStatus",
              "wallet_showCallsStatus",
              "wallet_sendCalls",
              "wallet_getCapabilities",
              "wallet_grantPermissions",
              "wallet_revokePermissions",
              "wallet_getAssets",
            ],
            bip122: [
              "sendTransfer",
              "signMessage",
              "signPsbt",
              "getAccountAddresses",
            ],
          },
          J = {
            getMethodsByChainNamespace: (e) => Q[e] || [],
            createDefaultNamespace(e) {
              return {
                methods: this.getMethodsByChainNamespace(e),
                events: ["accountsChanged", "chainChanged"],
                chains: [],
                rpcMap: {},
              };
            },
            applyNamespaceOverrides(e, a) {
              if (!a) return { ...e };
              let n = { ...e },
                o = new Set();
              if (
                (a.methods && Object.keys(a.methods).forEach((e) => o.add(e)),
                a.chains && Object.keys(a.chains).forEach((e) => o.add(e)),
                a.events && Object.keys(a.events).forEach((e) => o.add(e)),
                a.rpcMap &&
                  Object.keys(a.rpcMap).forEach((e) => {
                    let [a] = e.split(":");
                    a && o.add(a);
                  }),
                o.forEach((e) => {
                  n[e] || (n[e] = this.createDefaultNamespace(e));
                }),
                a.methods &&
                  Object.entries(a.methods).forEach((e) => {
                    let [a, o] = e;
                    n[a] && (n[a].methods = o);
                  }),
                a.chains &&
                  Object.entries(a.chains).forEach((e) => {
                    let [a, o] = e;
                    n[a] && (n[a].chains = o);
                  }),
                a.events &&
                  Object.entries(a.events).forEach((e) => {
                    let [a, o] = e;
                    n[a] && (n[a].events = o);
                  }),
                a.rpcMap)
              ) {
                let e = new Set();
                Object.entries(a.rpcMap).forEach((a) => {
                  let [o, r] = a,
                    [t, s] = o.split(":");
                  t &&
                    s &&
                    n[t] &&
                    (n[t].rpcMap || (n[t].rpcMap = {}),
                    e.has(t) || ((n[t].rpcMap = {}), e.add(t)),
                    (n[t].rpcMap[s] = r));
                });
              }
              return n;
            },
            createNamespaces(e, a) {
              let n = e.reduce((e, a) => {
                let { id: n, chainNamespace: o, rpcUrls: r } = a,
                  t = r.default.http[0];
                e[o] || (e[o] = this.createDefaultNamespace(o));
                let s = "".concat(o, ":").concat(n),
                  i = e[o];
                switch ((i.chains.push(s), s)) {
                  case Y.caipNetworkId:
                    i.chains.push(Y.deprecatedCaipNetworkId);
                    break;
                  case Z.caipNetworkId:
                    i.chains.push(Z.deprecatedCaipNetworkId);
                }
                return (
                  (null == i ? void 0 : i.rpcMap) && t && (i.rpcMap[n] = t), e
                );
              }, {});
              return this.applyNamespaceOverrides(n, a);
            },
            resolveReownName: async (e) => {
              var a;
              let n = await C.EnsController.resolveName(e);
              return (
                (null ==
                (a = (Object.values(null == n ? void 0 : n.addresses) || [])[0])
                  ? void 0
                  : a.address) || !1
              );
            },
            getChainsFromNamespaces() {
              let e =
                arguments.length > 0 && void 0 !== arguments[0]
                  ? arguments[0]
                  : {};
              return Object.values(e).flatMap((e) =>
                Array.from(
                  new Set([
                    ...(e.chains || []),
                    ...e.accounts.map((e) => {
                      let [a, n] = e.split(":");
                      return "".concat(a, ":").concat(n);
                    }),
                  ])
                )
              );
            },
            isSessionEventData: (e) =>
              "object" == typeof e &&
              null !== e &&
              "id" in e &&
              "topic" in e &&
              "params" in e &&
              "object" == typeof e.params &&
              null !== e.params &&
              "chainId" in e.params &&
              "event" in e.params &&
              "object" == typeof e.params.event &&
              null !== e.params.event,
            isOriginAllowed(e, a, n) {
              for (let o of [...a, ...n])
                if (o.includes("*")) {
                  let a = o.replace(/[.*+?^${}()|[\]\\]/gu, "\\$&");
                  if (
                    RegExp(
                      "^".concat(a.replace(/\\\*/gu, ".*"), "$"),
                      "u"
                    ).test(e)
                  )
                    return !0;
                } else
                  try {
                    if (new URL(o).origin === e) return !0;
                  } catch (a) {
                    if (o === e) return !0;
                  }
              return !1;
            },
            listenWcProvider(e) {
              let {
                universalProvider: a,
                namespace: n,
                onConnect: o,
                onDisconnect: r,
                onAccountsChanged: t,
                onChainChanged: s,
                onDisplayUri: i,
              } = e;
              o &&
                a.on("connect", () => {
                  o(J.getWalletConnectAccounts(a, n));
                }),
                r &&
                  a.on("disconnect", () => {
                    r();
                  }),
                t &&
                  a.on("session_event", (e) => {
                    if (J.isSessionEventData(e)) {
                      let { name: a, data: o } = e.params.event;
                      "accountsChanged" === a &&
                        Array.isArray(o) &&
                        t(
                          o
                            .filter((e) => g.CoreHelperUtil.isCaipAddress(e))
                            .map((e) => d.ParseUtil.parseCaipAddress(e))
                            .filter((e) => e.chainNamespace === n)
                        );
                    }
                  }),
                s &&
                  a.on("chainChanged", (e) => {
                    s(e);
                  }),
                i &&
                  a.on("display_uri", (e) => {
                    i(e);
                  });
            },
            getWalletConnectAccounts(e, a) {
              var n, o, r, t;
              let s = new Set(),
                i =
                  null == e ||
                  null == (t = e.session) ||
                  null == (r = t.namespaces) ||
                  null == (o = r[a]) ||
                  null == (n = o.accounts)
                    ? void 0
                    : n
                        .map((e) => d.ParseUtil.parseCaipAddress(e))
                        .filter((e) => {
                          let { address: a } = e;
                          return (
                            !s.has(a.toLowerCase()) &&
                            (s.add(a.toLowerCase()), !0)
                          );
                        });
              return i && i.length > 0 ? i : [];
            },
          };
        class $ {
          async syncConnections(e) {
            switch (this.namespace) {
              case s.ConstantsUtil.CHAIN.EVM:
                await this.syncEVMConnections(e);
                break;
              case s.ConstantsUtil.CHAIN.SOLANA:
                await this.syncSolanaConnections(e);
                break;
              case s.ConstantsUtil.CHAIN.BITCOIN:
                await this.syncBitcoinConnections(e);
                break;
              default:
                throw Error(
                  "Unsupported chain namespace: ".concat(this.namespace)
                );
            }
          }
          async syncEVMConnections(e) {
            let {
              connectors: a,
              caipNetworks: n,
              universalProvider: o,
              getConnectionStatusInfo: r,
              onConnection: t,
              onListenProvider: i,
            } = e;
            await Promise.all(
              a
                .filter((e) => {
                  let { hasDisconnected: a, hasConnected: n } = r(e.id);
                  return !a && n;
                })
                .map(async (e) => {
                  if (e.id === s.ConstantsUtil.CONNECTOR_ID.WALLET_CONNECT) {
                    let a = J.getWalletConnectAccounts(o, this.namespace),
                      r = n.find((e) => {
                        var n, o;
                        return (
                          e.chainNamespace === this.namespace &&
                          e.id.toString() ===
                            (null == (o = a[0]) || null == (n = o.chainId)
                              ? void 0
                              : n.toString())
                        );
                      });
                    a.length > 0 &&
                      t({
                        connectorId: e.id,
                        accounts: a.map((e) => ({ address: e.address })),
                        caipNetwork: r,
                      });
                  } else {
                    let { accounts: a, chainId: o } =
                      await D.ConnectorUtil.fetchProviderData(e);
                    if (a.length > 0 && o) {
                      let r = n.find(
                        (e) =>
                          e.chainNamespace === this.namespace &&
                          e.id.toString() === o.toString()
                      );
                      t({
                        connectorId: e.id,
                        accounts: a.map((e) => ({ address: e })),
                        caipNetwork: r,
                      }),
                        e.provider &&
                          e.id !== s.ConstantsUtil.CONNECTOR_ID.AUTH &&
                          e.id !==
                            s.ConstantsUtil.CONNECTOR_ID.WALLET_CONNECT &&
                          i(e.id, e.provider);
                    }
                  }
                })
            );
          }
          async syncSolanaConnections(e) {
            let {
              connectors: a,
              caipNetwork: n,
              universalProvider: o,
              getConnectionStatusInfo: r,
              onConnection: t,
              onListenProvider: i,
            } = e;
            await Promise.all(
              a
                .filter((e) => {
                  let { hasDisconnected: a, hasConnected: n } = r(e.id);
                  return !a && n;
                })
                .map(async (e) => {
                  if (e.id === s.ConstantsUtil.CONNECTOR_ID.WALLET_CONNECT) {
                    let a = J.getWalletConnectAccounts(o, this.namespace);
                    a.length > 0 &&
                      t({
                        connectorId: e.id,
                        accounts: a.map((e) => ({ address: e.address })),
                        caipNetwork: n,
                      });
                  } else {
                    let a = await e.connect({
                      chainId: null == n ? void 0 : n.id,
                    });
                    a &&
                      (t({
                        connectorId: e.id,
                        accounts: [{ address: a }],
                        caipNetwork: n,
                      }),
                      i(e.id, e.provider));
                  }
                })
            );
          }
          async syncBitcoinConnections(e) {
            let {
              connectors: a,
              caipNetwork: n,
              universalProvider: o,
              getConnectionStatusInfo: r,
              onConnection: t,
              onListenProvider: i,
            } = e;
            await Promise.all(
              a
                .filter((e) => {
                  let { hasDisconnected: a, hasConnected: n } = r(e.id);
                  return !a && n;
                })
                .map(async (e) => {
                  if (e.id === s.ConstantsUtil.CONNECTOR_ID.WALLET_CONNECT) {
                    let a = J.getWalletConnectAccounts(o, this.namespace);
                    a.length > 0 &&
                      t({
                        connectorId: e.id,
                        accounts: a.map((e) => ({ address: e.address })),
                        caipNetwork: n,
                      });
                    return;
                  }
                  let a = await e.connect(),
                    r = await e.getAccountAddresses(),
                    d =
                      null == r
                        ? void 0
                        : r.map((e) =>
                            g.CoreHelperUtil.createAccount(
                              s.ConstantsUtil.CHAIN.BITCOIN,
                              e.address,
                              e.purpose || "payment",
                              e.publicKey,
                              e.path
                            )
                          );
                  if (d && d.length > 1) {
                    var c, b, m, l, f, k, u, h, p, x, C, v;
                    d = [
                      {
                        namespace: s.ConstantsUtil.CHAIN.BITCOIN,
                        publicKey:
                          null !=
                          (u =
                            null == (c = d[j.ACCOUNT_INDEXES.PAYMENT])
                              ? void 0
                              : c.publicKey)
                            ? u
                            : "",
                        path:
                          null !=
                          (h =
                            null == (b = d[j.ACCOUNT_INDEXES.PAYMENT])
                              ? void 0
                              : b.path)
                            ? h
                            : "",
                        address:
                          null !=
                          (p =
                            null == (m = d[j.ACCOUNT_INDEXES.PAYMENT])
                              ? void 0
                              : m.address)
                            ? p
                            : "",
                        type: "payment",
                      },
                      {
                        namespace: s.ConstantsUtil.CHAIN.BITCOIN,
                        publicKey:
                          null !=
                          (x =
                            null == (l = d[j.ACCOUNT_INDEXES.ORDINAL])
                              ? void 0
                              : l.publicKey)
                            ? x
                            : "",
                        path:
                          null !=
                          (C =
                            null == (f = d[j.ACCOUNT_INDEXES.ORDINAL])
                              ? void 0
                              : f.path)
                            ? C
                            : "",
                        address:
                          null !=
                          (v =
                            null == (k = d[j.ACCOUNT_INDEXES.ORDINAL])
                              ? void 0
                              : k.address)
                            ? v
                            : "",
                        type: "ordinal",
                      },
                    ];
                  }
                  if (
                    !(
                      e.chains.find(
                        (e) => e.id === (null == n ? void 0 : n.id)
                      ) || e.chains[0]
                    )
                  )
                    throw Error(
                      "The connector does not support any of the requested chains"
                    );
                  a &&
                    (i(e.id, e.provider),
                    t({
                      connectorId: e.id,
                      accounts: d.map((e) => ({
                        address: e.address,
                        type: e.type,
                      })),
                      caipNetwork: n,
                    }));
                })
            );
          }
          getConnection(e) {
            let {
              address: a,
              connectorId: n,
              connections: o,
              connectors: r,
            } = e;
            if (n) {
              let e = o.find((e) =>
                _.HelpersUtil.isLowerCaseMatch(e.connectorId, n)
              );
              if (!e) return null;
              let t = r.find((a) =>
                  _.HelpersUtil.isLowerCaseMatch(a.id, e.connectorId)
                ),
                s = a
                  ? e.accounts.find((e) =>
                      _.HelpersUtil.isLowerCaseMatch(e.address, a)
                    )
                  : e.accounts[0];
              return { ...e, account: s, connector: t };
            }
            let t = o.find(
              (e) =>
                e.accounts.length > 0 &&
                r.some((a) =>
                  _.HelpersUtil.isLowerCaseMatch(a.id, e.connectorId)
                )
            );
            if (t) {
              let [e] = t.accounts,
                a = r.find((e) =>
                  _.HelpersUtil.isLowerCaseMatch(e.id, t.connectorId)
                );
              return { ...t, account: e, connector: a };
            }
            return null;
          }
          constructor(e) {
            this.namespace = e.namespace;
          }
        }
        e.s({ WalletConnectConnector: () => ea }, 508800), e.s({}, 52164);
        let ee = {
          ERROR_CODE_UNRECOGNIZED_CHAIN_ID: 4902,
          ERROR_CODE_DEFAULT: 5e3,
          ERROR_INVALID_CHAIN_ID: 32603,
          DEFAULT_ALLOWED_ANCESTORS: [
            "http://localhost:*",
            "https://localhost:*",
            "http://127.0.0.1:*",
            "https://127.0.0.1:*",
            "https://*.pages.dev",
            "https://*.vercel.app",
            "https://*.ngrok-free.app",
            "https://secure-mobile.walletconnect.com",
            "https://secure-mobile.walletconnect.org",
          ],
        };
        class ea {
          get chains() {
            return this.getCaipNetworks();
          }
          async connectWalletConnect() {
            if (!(await this.authenticate())) {
              let e = this.getCaipNetworks(),
                a = T.OptionsController.state.universalProviderConfigOverride,
                n = J.createNamespaces(e, a);
              await this.provider.connect({ optionalNamespaces: n });
            }
            return {
              clientId: await this.provider.client.core.crypto.getClientId(),
              session: this.provider.session,
            };
          }
          async disconnect() {
            await this.provider.disconnect();
          }
          async authenticate() {
            let e = this.chains.map((e) => e.caipNetworkId);
            return A.SIWXUtil.universalProviderAuthenticate({
              universalProvider: this.provider,
              chains: e,
              methods: en,
            });
          }
          constructor({ provider: e, namespace: a }) {
            (this.id = s.ConstantsUtil.CONNECTOR_ID.WALLET_CONNECT),
              (this.name =
                V.PresetsUtil.ConnectorNamesMap[
                  s.ConstantsUtil.CONNECTOR_ID.WALLET_CONNECT
                ]),
              (this.type = "WALLET_CONNECT"),
              (this.imageId =
                V.PresetsUtil.ConnectorImageIds[
                  s.ConstantsUtil.CONNECTOR_ID.WALLET_CONNECT
                ]),
              (this.getCaipNetworks = k.ChainController.getCaipNetworks.bind(
                k.ChainController
              )),
              (this.caipNetworks = this.getCaipNetworks()),
              (this.provider = e),
              (this.chain = a);
          }
        }
        let en = [
            "eth_accounts",
            "eth_requestAccounts",
            "eth_sendRawTransaction",
            "eth_sign",
            "eth_signTransaction",
            "eth_signTypedData",
            "eth_signTypedData_v3",
            "eth_signTypedData_v4",
            "eth_sendTransaction",
            "personal_sign",
            "wallet_switchEthereumChain",
            "wallet_addEthereumChain",
            "wallet_getPermissions",
            "wallet_requestPermissions",
            "wallet_registerOnboarding",
            "wallet_watchAsset",
            "wallet_scanQRCode",
            "wallet_getCallsStatus",
            "wallet_sendCalls",
            "wallet_getCapabilities",
            "wallet_grantPermissions",
            "wallet_revokePermissions",
            "wallet_getAssets",
          ],
          eo = [
            s.ConstantsUtil.CONNECTOR_ID.AUTH,
            s.ConstantsUtil.CONNECTOR_ID.WALLET_CONNECT,
          ];
        class er {
          construct(e) {
            (this.projectId = e.projectId),
              (this.namespace = e.namespace),
              (this.adapterType = e.adapterType);
          }
          get connectors() {
            return this.availableConnectors;
          }
          get connections() {
            return this.availableConnections;
          }
          get networks() {
            return this.getCaipNetworks(this.namespace);
          }
          onAuthConnected(e) {
            let { accounts: a, chainId: n } = e,
              o = this.getCaipNetworks()
                .filter((e) => e.chainNamespace === this.namespace)
                .find(
                  (e) => e.id.toString() === (null == n ? void 0 : n.toString())
                );
            a &&
              o &&
              this.addConnection({
                connectorId: s.ConstantsUtil.CONNECTOR_ID.AUTH,
                accounts: a,
                caipNetwork: o,
              });
          }
          setAuthProvider(e) {
            e.onConnect(this.onAuthConnected.bind(this)),
              e.onSocialConnected(this.onAuthConnected.bind(this)),
              this.addConnector({
                id: s.ConstantsUtil.CONNECTOR_ID.AUTH,
                type: "AUTH",
                name: s.ConstantsUtil.CONNECTOR_NAMES.AUTH,
                provider: e,
                imageId:
                  V.PresetsUtil.ConnectorImageIds[
                    s.ConstantsUtil.CONNECTOR_ID.AUTH
                  ],
                chain: this.namespace,
                chains: [],
              });
          }
          addConnector() {
            for (var e = arguments.length, a = Array(e), n = 0; n < e; n++)
              a[n] = arguments[n];
            let o = new Set();
            (this.availableConnectors = [
              ...a,
              ...this.availableConnectors,
            ].filter((e) => !o.has(e.id) && (o.add(e.id), !0))),
              this.emit("connectors", this.availableConnectors);
          }
          addConnection() {
            for (var e = arguments.length, a = Array(e), n = 0; n < e; n++)
              a[n] = arguments[n];
            let o = new Set();
            (this.availableConnections = [
              ...a,
              ...this.availableConnections,
            ].filter(
              (e) =>
                !o.has(e.connectorId.toLowerCase()) &&
                (o.add(e.connectorId.toLowerCase()), !0)
            )),
              this.emit("connections", this.availableConnections);
          }
          deleteConnection(e) {
            (this.availableConnections = this.availableConnections.filter(
              (a) => !_.HelpersUtil.isLowerCaseMatch(a.connectorId, e)
            )),
              this.emit("connections", this.availableConnections);
          }
          clearConnections() {
            let e =
              arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
            (this.availableConnections = []),
              e && this.emit("connections", this.availableConnections);
          }
          setStatus(e, a) {
            c.AccountController.setStatus(e, a);
          }
          on(e, a) {
            var n;
            this.eventListeners.has(e) || this.eventListeners.set(e, new Set()),
              null == (n = this.eventListeners.get(e)) || n.add(a);
          }
          off(e, a) {
            let n = this.eventListeners.get(e);
            n && n.delete(a);
          }
          removeAllEventListeners() {
            this.eventListeners.forEach((e) => {
              e.clear();
            });
          }
          emit(e, a) {
            let n = this.eventListeners.get(e);
            n && n.forEach((e) => e(a));
          }
          async connectWalletConnect(e) {
            let a = this.getWalletConnectConnector();
            return { clientId: (await a.connectWalletConnect()).clientId };
          }
          async switchNetwork(e) {
            let { caipNetwork: a, providerType: n } = e;
            if (!e.provider) return;
            let o = "provider" in e.provider ? e.provider.provider : e.provider;
            if ("WALLET_CONNECT" === n)
              return void o.setDefaultChain(a.caipNetworkId);
            if (o && "AUTH" === n) {
              let e = (0, P.getPreferredAccountType)(a.chainNamespace);
              await o.switchNetwork({ chainId: a.caipNetworkId });
              let n = await o.getUser({
                chainId: a.caipNetworkId,
                preferredAccountType: e,
              });
              this.emit("switchNetwork", n);
            }
          }
          getWalletConnectConnector() {
            let e = this.connectors.find((e) => e instanceof ea);
            if (!e) throw Error("WalletConnectConnector not found");
            return e;
          }
          onConnect(e, a) {
            if (e.length > 0) {
              let { address: n, chainId: o } = g.CoreHelperUtil.getAccount(
                  e[0]
                ),
                r = this.getCaipNetworks()
                  .filter((e) => e.chainNamespace === this.namespace)
                  .find(
                    (e) =>
                      e.id.toString() === (null == o ? void 0 : o.toString())
                  ),
                t = this.connectors.find((e) => e.id === a);
              n &&
                (this.emit("accountChanged", {
                  address: n,
                  chainId: o,
                  connector: t,
                }),
                this.addConnection({
                  connectorId: a,
                  accounts: e.map((e) => {
                    let { address: a } = g.CoreHelperUtil.getAccount(e);
                    return { address: a };
                  }),
                  caipNetwork: r,
                }));
            }
          }
          onAccountsChanged(e, a) {
            let n =
              !(arguments.length > 2) ||
              void 0 === arguments[2] ||
              arguments[2];
            if (e.length > 0) {
              var o, r;
              let { address: n } = g.CoreHelperUtil.getAccount(e[0]),
                t =
                  null == (o = this.connectionManager)
                    ? void 0
                    : o.getConnection({
                        connectorId: a,
                        connections: this.connections,
                        connectors: this.connectors,
                      });
              n &&
                _.HelpersUtil.isLowerCaseMatch(
                  this.getConnectorId(s.ConstantsUtil.CHAIN.EVM),
                  a
                ) &&
                this.emit("accountChanged", {
                  address: n,
                  chainId:
                    null == t || null == (r = t.caipNetwork) ? void 0 : r.id,
                  connector: null == t ? void 0 : t.connector,
                }),
                this.addConnection({
                  connectorId: a,
                  accounts: e.map((e) => {
                    let { address: a } = g.CoreHelperUtil.getAccount(e);
                    return { address: a };
                  }),
                  caipNetwork: null == t ? void 0 : t.caipNetwork,
                });
            } else n && this.onDisconnect(a);
          }
          onDisconnect(e) {
            this.removeProviderListeners(e),
              this.deleteConnection(e),
              _.HelpersUtil.isLowerCaseMatch(
                this.getConnectorId(s.ConstantsUtil.CHAIN.EVM),
                e
              ) && this.emitFirstAvailableConnection(),
              0 === this.connections.length && this.emit("disconnect");
          }
          onChainChanged(e, a) {
            var n;
            let o =
                "string" == typeof e && e.startsWith("0x")
                  ? z.hexStringToNumber(e).toString()
                  : e.toString(),
              r =
                null == (n = this.connectionManager)
                  ? void 0
                  : n.getConnection({
                      connectorId: a,
                      connections: this.connections,
                      connectors: this.connectors,
                    }),
              t = this.getCaipNetworks()
                .filter((e) => e.chainNamespace === this.namespace)
                .find((e) => e.id.toString() === o);
            r &&
              this.addConnection({
                connectorId: a,
                accounts: r.accounts,
                caipNetwork: t,
              }),
              _.HelpersUtil.isLowerCaseMatch(
                this.getConnectorId(s.ConstantsUtil.CHAIN.EVM),
                a
              ) && this.emit("switchNetwork", { chainId: o });
          }
          listenProviderEvents(e, a) {
            if (eo.includes(e)) return;
            let n = (a) => this.onAccountsChanged(a, e),
              o = (a) => this.onChainChanged(a, e),
              r = () => this.onDisconnect(e);
            this.providerHandlers[e] ||
              (a.on("disconnect", r),
              a.on("accountsChanged", n),
              a.on("chainChanged", o),
              (this.providerHandlers[e] = {
                provider: a,
                disconnect: r,
                accountsChanged: n,
                chainChanged: o,
              }));
          }
          removeProviderListeners(e) {
            if (this.providerHandlers[e]) {
              let {
                provider: a,
                disconnect: n,
                accountsChanged: o,
                chainChanged: r,
              } = this.providerHandlers[e];
              a.removeListener("disconnect", n),
                a.removeListener("accountsChanged", o),
                a.removeListener("chainChanged", r),
                (this.providerHandlers[e] = null);
            }
          }
          emitFirstAvailableConnection() {
            var e, a;
            let n =
              null == (e = this.connectionManager)
                ? void 0
                : e.getConnection({
                    connections: this.connections,
                    connectors: this.connectors,
                  });
            if (n) {
              let [e] = n.accounts;
              this.emit("accountChanged", {
                address: null == e ? void 0 : e.address,
                chainId: null == (a = n.caipNetwork) ? void 0 : a.id,
                connector: n.connector,
              });
            }
          }
          constructor(e) {
            (this.availableConnectors = []),
              (this.availableConnections = []),
              (this.providerHandlers = {}),
              (this.eventListeners = new Map()),
              (this.getCaipNetworks = (e) =>
                k.ChainController.getCaipNetworks(e)),
              (this.getConnectorId = (e) =>
                p.ConnectorController.getConnectorId(e)),
              e && this.construct(e),
              (null == e ? void 0 : e.namespace) &&
                (this.connectionManager = new $({ namespace: e.namespace }));
          }
        }
        class et extends er {
          async setUniversalProvider(e) {
            if (!this.namespace)
              throw Error(
                "UniversalAdapter:setUniversalProvider - namespace is required"
              );
            return (
              this.addConnector(
                new ea({
                  provider: e,
                  caipNetworks: this.getCaipNetworks(),
                  namespace: this.namespace,
                })
              ),
              Promise.resolve()
            );
          }
          async connect(e) {
            return Promise.resolve({
              id: "WALLET_CONNECT",
              type: "WALLET_CONNECT",
              chainId: Number(e.chainId),
              provider: this.provider,
              address: "",
            });
          }
          async disconnect() {
            try {
              let e = this.getWalletConnectConnector();
              await e.disconnect(), this.emit("disconnect");
            } catch (e) {
              console.warn("UniversalAdapter:disconnect - error", e);
            }
            return { connections: [] };
          }
          syncConnections() {
            return Promise.resolve();
          }
          async getAccounts(e) {
            var a, n, o, r;
            let { namespace: t } = e,
              s = this.provider;
            return Promise.resolve({
              accounts: (
                (null == s ||
                null == (r = s.session) ||
                null == (o = r.namespaces) ||
                null == (n = o[t]) ||
                null == (a = n.accounts)
                  ? void 0
                  : a
                      .map((e) => {
                        let [, , a] = e.split(":");
                        return a;
                      })
                      .filter((e, a, n) => n.indexOf(e) === a)) || []
              ).map((e) =>
                g.CoreHelperUtil.createAccount(
                  t,
                  e,
                  "bip122" === t ? "payment" : "eoa"
                )
              ),
            });
          }
          async syncConnectors() {
            return Promise.resolve();
          }
          async getBalance(e) {
            var a, n, o, r, t;
            if (
              !(
                e.caipNetwork &&
                x.ConstantsUtil.BALANCE_SUPPORTED_CHAINS.includes(
                  null == (a = e.caipNetwork) ? void 0 : a.chainNamespace
                )
              ) ||
              (null == (n = e.caipNetwork) ? void 0 : n.testnet)
            )
              return {
                balance: "0.00",
                symbol:
                  (null == (t = e.caipNetwork)
                    ? void 0
                    : t.nativeCurrency.symbol) || "",
              };
            if (
              c.AccountController.state.balanceLoading &&
              e.chainId ===
                (null == (o = k.ChainController.state.activeCaipNetwork)
                  ? void 0
                  : o.id)
            )
              return {
                balance: c.AccountController.state.balance || "0.00",
                symbol: c.AccountController.state.balanceSymbol || "",
              };
            let s = (await c.AccountController.fetchTokenBalance()).find(
              (a) => {
                var n, o;
                return (
                  a.chainId ===
                    ""
                      .concat(
                        null == (n = e.caipNetwork) ? void 0 : n.chainNamespace,
                        ":"
                      )
                      .concat(e.chainId) &&
                  a.symbol ===
                    (null == (o = e.caipNetwork)
                      ? void 0
                      : o.nativeCurrency.symbol)
                );
              }
            );
            return {
              balance: (null == s ? void 0 : s.quantity.numeric) || "0.00",
              symbol:
                (null == s ? void 0 : s.symbol) ||
                (null == (r = e.caipNetwork)
                  ? void 0
                  : r.nativeCurrency.symbol) ||
                "",
            };
          }
          async signMessage(e) {
            var a, n, o;
            let { provider: r, message: t, address: i } = e;
            if (!r)
              throw Error(
                "UniversalAdapter:signMessage - provider is undefined"
              );
            return {
              signature:
                (null == (a = k.ChainController.state.activeCaipNetwork)
                  ? void 0
                  : a.chainNamespace) === s.ConstantsUtil.CHAIN.SOLANA
                  ? (
                      await r.request(
                        {
                          method: "solana_signMessage",
                          params: {
                            message: W.default.encode(
                              new TextEncoder().encode(t)
                            ),
                            pubkey: i,
                          },
                        },
                        null == (n = k.ChainController.state.activeCaipNetwork)
                          ? void 0
                          : n.caipNetworkId
                      )
                    ).signature
                  : await r.request(
                      { method: "personal_sign", params: [t, i] },
                      null == (o = k.ChainController.state.activeCaipNetwork)
                        ? void 0
                        : o.caipNetworkId
                    ),
            };
          }
          async estimateGas() {
            return Promise.resolve({ gas: BigInt(0) });
          }
          async sendTransaction() {
            return Promise.resolve({ hash: "" });
          }
          walletGetAssets(e) {
            return Promise.resolve({});
          }
          async writeContract() {
            return Promise.resolve({ hash: "" });
          }
          emitFirstAvailableConnection() {}
          parseUnits() {
            return 0n;
          }
          formatUnits() {
            return "0";
          }
          async getCapabilities() {
            return Promise.resolve({});
          }
          async grantPermissions() {
            return Promise.resolve({});
          }
          async revokePermissions() {
            return Promise.resolve("0x");
          }
          async syncConnection() {
            return Promise.resolve({
              id: "WALLET_CONNECT",
              type: "WALLET_CONNECT",
              chainId: 1,
              provider: this.provider,
              address: "",
            });
          }
          async switchNetwork(e) {
            let { caipNetwork: a } = e,
              n = this.getWalletConnectConnector();
            if (a.chainNamespace === s.ConstantsUtil.CHAIN.EVM) {
              var o, r, t, i, d, c;
              try {
                await (null == (o = n.provider)
                  ? void 0
                  : o.request({
                      method: "wallet_switchEthereumChain",
                      params: [{ chainId: (0, K.toHex)(a.id) }],
                    }));
              } catch (e) {
                if (
                  e.code === ee.ERROR_CODE_UNRECOGNIZED_CHAIN_ID ||
                  e.code === ee.ERROR_INVALID_CHAIN_ID ||
                  e.code === ee.ERROR_CODE_DEFAULT ||
                  (null == e ||
                  null == (t = e.data) ||
                  null == (r = t.originalError)
                    ? void 0
                    : r.code) === ee.ERROR_CODE_UNRECOGNIZED_CHAIN_ID
                )
                  try {
                    await (null == (c = n.provider)
                      ? void 0
                      : c.request({
                          method: "wallet_addEthereumChain",
                          params: [
                            {
                              chainId: (0, K.toHex)(a.id),
                              rpcUrls: [
                                null == a ||
                                null == (i = a.rpcUrls.chainDefault)
                                  ? void 0
                                  : i.http,
                              ],
                              chainName: a.name,
                              nativeCurrency: a.nativeCurrency,
                              blockExplorerUrls: [
                                null == (d = a.blockExplorers)
                                  ? void 0
                                  : d.default.url,
                              ],
                            },
                          ],
                        }));
                  } catch (e) {
                    throw Error("Chain is not supported");
                  }
              }
            }
            n.provider.setDefaultChain(a.caipNetworkId);
          }
          getWalletConnectProvider() {
            let e = this.connectors.find((e) => "WALLET_CONNECT" === e.type);
            return null == e ? void 0 : e.provider;
          }
        }
        let es = [
            "email",
            "socials",
            "swaps",
            "onramp",
            "activity",
            "reownBranding",
            "multiWallet",
          ],
          ei = {
            email: {
              apiFeatureName: "social_login",
              localFeatureName: "email",
              returnType: !1,
              isLegacy: !1,
              isAvailableOnBasic: !1,
              processApi: (e) => {
                if (!(null == e ? void 0 : e.config)) return !1;
                let a = e.config;
                return !!e.isEnabled && a.includes("email");
              },
              processFallback: (e) =>
                void 0 === e
                  ? x.ConstantsUtil.DEFAULT_REMOTE_FEATURES.email
                  : !!e,
            },
            socials: {
              apiFeatureName: "social_login",
              localFeatureName: "socials",
              returnType: !1,
              isLegacy: !1,
              isAvailableOnBasic: !1,
              processApi: (e) => {
                if (!(null == e ? void 0 : e.config)) return !1;
                let a = e.config;
                return (
                  !!e.isEnabled &&
                  a.length > 0 &&
                  a.filter((e) => "email" !== e)
                );
              },
              processFallback: (e) =>
                void 0 === e
                  ? x.ConstantsUtil.DEFAULT_REMOTE_FEATURES.socials
                  : "boolean" == typeof e
                  ? !!e && x.ConstantsUtil.DEFAULT_REMOTE_FEATURES.socials
                  : e,
            },
            swaps: {
              apiFeatureName: "swap",
              localFeatureName: "swaps",
              returnType: !1,
              isLegacy: !1,
              isAvailableOnBasic: !1,
              processApi: (e) => {
                if (!(null == e ? void 0 : e.config)) return !1;
                let a = e.config;
                return !!e.isEnabled && a.length > 0 && a;
              },
              processFallback: (e) =>
                void 0 === e
                  ? x.ConstantsUtil.DEFAULT_REMOTE_FEATURES.swaps
                  : "boolean" == typeof e
                  ? !!e && x.ConstantsUtil.DEFAULT_REMOTE_FEATURES.swaps
                  : e,
            },
            onramp: {
              apiFeatureName: "onramp",
              localFeatureName: "onramp",
              returnType: !1,
              isLegacy: !1,
              isAvailableOnBasic: !1,
              processApi: (e) => {
                if (!(null == e ? void 0 : e.config)) return !1;
                let a = e.config;
                return !!e.isEnabled && a.length > 0 && a;
              },
              processFallback: (e) =>
                void 0 === e
                  ? x.ConstantsUtil.DEFAULT_REMOTE_FEATURES.onramp
                  : "boolean" == typeof e
                  ? !!e && x.ConstantsUtil.DEFAULT_REMOTE_FEATURES.onramp
                  : e,
            },
            activity: {
              apiFeatureName: "activity",
              localFeatureName: "history",
              returnType: !1,
              isLegacy: !0,
              isAvailableOnBasic: !1,
              processApi: (e) => !!e.isEnabled,
              processFallback: (e) =>
                void 0 === e
                  ? x.ConstantsUtil.DEFAULT_REMOTE_FEATURES.activity
                  : !!e,
            },
            reownBranding: {
              apiFeatureName: "reown_branding",
              localFeatureName: "reownBranding",
              returnType: !1,
              isLegacy: !1,
              isAvailableOnBasic: !1,
              processApi: (e) => !!e.isEnabled,
              processFallback: (e) =>
                void 0 === e
                  ? x.ConstantsUtil.DEFAULT_REMOTE_FEATURES.reownBranding
                  : !!e,
            },
            multiWallet: {
              apiFeatureName: "multi_wallet",
              localFeatureName: "multiWallet",
              returnType: !1,
              isLegacy: !1,
              isAvailableOnBasic: !1,
              processApi: (e) => !!e.isEnabled,
              processFallback: () =>
                x.ConstantsUtil.DEFAULT_REMOTE_FEATURES.multiWallet,
            },
          },
          ed = {
            localSettingsOverridden: new Set(),
            getApiConfig: (e, a) =>
              null == a ? void 0 : a.find((a) => a.id === e),
            addWarning(e, a) {
              if (void 0 !== e) {
                let e = ei[a],
                  n = e.isLegacy
                    ? '"features.'
                        .concat(e.localFeatureName, '" (now "')
                        .concat(a, '")')
                    : '"features.'.concat(a, '"');
                this.localSettingsOverridden.add(n);
              }
            },
            processFeature(e, a, n, o, r) {
              let t = ei[e],
                s = a[t.localFeatureName];
              if (r && !t.isAvailableOnBasic) return !1;
              if (o) {
                let a = this.getApiConfig(t.apiFeatureName, n);
                return (null == a ? void 0 : a.config) === null
                  ? this.processFallbackFeature(e, s)
                  : !!(null == a ? void 0 : a.config) &&
                      (void 0 !== s && this.addWarning(s, e),
                      this.processApiFeature(e, a));
              }
              return this.processFallbackFeature(e, s);
            },
            processApiFeature: (e, a) => ei[e].processApi(a),
            processFallbackFeature: (e, a) => ei[e].processFallback(a),
            async fetchRemoteFeatures(e) {
              var a;
              let n = null != (a = e.basic) && a,
                o = e.features || {};
              this.localSettingsOverridden.clear();
              let r = null,
                t = !1;
              try {
                t = null != (r = await m.ApiController.fetchProjectConfig());
              } catch (e) {
                console.warn(
                  "[Reown Config] Failed to fetch remote project configuration. Using local/default values.",
                  e
                );
              }
              let s =
                t && !n
                  ? x.ConstantsUtil.DEFAULT_REMOTE_FEATURES
                  : x.ConstantsUtil.DEFAULT_REMOTE_FEATURES_DISABLED;
              try {
                for (let e of es) {
                  let a = this.processFeature(e, o, r, t, n);
                  Object.assign(s, { [e]: a });
                }
              } catch (e) {
                return (
                  console.warn(
                    "[Reown Config] Failed to process the configuration from Cloud. Using default values.",
                    e
                  ),
                  x.ConstantsUtil.DEFAULT_REMOTE_FEATURES
                );
              }
              if (t && this.localSettingsOverridden.size > 0) {
                let e = "Your local configuration for ".concat(
                  Array.from(this.localSettingsOverridden).join(", "),
                  " was ignored because a remote configuration was successfully fetched. Please manage these features via your project dashboard on dashboard.reown.com."
                );
                b.AlertController.open(
                  {
                    shortMessage: "Local configuration ignored",
                    longMessage: "[Reown Config Notice] ".concat(e),
                  },
                  "warning"
                );
              }
              return s;
            },
          };
        class ec {
          getChainNamespacesSet(e, a) {
            let n =
              null == e ? void 0 : e.map((e) => e.namespace).filter((e) => !!e);
            return (null == n ? void 0 : n.length)
              ? [...new Set(n)]
              : [
                  ...new Set(
                    null == a ? void 0 : a.map((e) => e.chainNamespace)
                  ),
                ];
          }
          async initialize(e) {
            var a, n, o;
            this.initializeProjectSettings(e),
              this.initControllers(e),
              await this.initChainAdapters(),
              this.sendInitializeEvent(e),
              T.OptionsController.state.enableReconnect
                ? (await this.syncExistingConnection(),
                  await this.syncAdapterConnections())
                : await this.unSyncExistingConnection(),
              (this.remoteFeatures = await ed.fetchRemoteFeatures(e)),
              T.OptionsController.setRemoteFeatures(this.remoteFeatures),
              this.remoteFeatures.onramp &&
                N.OnRampController.setOnrampProviders(
                  this.remoteFeatures.onramp
                ),
              ((null == (a = T.OptionsController.state.remoteFeatures)
                ? void 0
                : a.email) ||
                (Array.isArray(
                  null == (n = T.OptionsController.state.remoteFeatures)
                    ? void 0
                    : n.socials
                ) &&
                  (null == (o = T.OptionsController.state.remoteFeatures)
                    ? void 0
                    : o.socials.length) > 0)) &&
                (await this.checkAllowedOrigins());
          }
          async checkAllowedOrigins() {
            try {
              let e = await m.ApiController.fetchAllowedOrigins();
              if (!e || !g.CoreHelperUtil.isClient())
                return void b.AlertController.open(
                  U.ErrorUtil.ALERT_ERRORS.PROJECT_ID_NOT_CONFIGURED,
                  "error"
                );
              let a = window.location.origin;
              J.isOriginAllowed(a, e, ee.DEFAULT_ALLOWED_ANCESTORS) ||
                b.AlertController.open(
                  U.ErrorUtil.ALERT_ERRORS.ORIGIN_NOT_ALLOWED,
                  "error"
                );
            } catch (e) {
              if (!(e instanceof Error))
                return void b.AlertController.open(
                  U.ErrorUtil.ALERT_ERRORS.PROJECT_ID_NOT_CONFIGURED,
                  "error"
                );
              switch (e.message) {
                case "RATE_LIMITED":
                  b.AlertController.open(
                    U.ErrorUtil.ALERT_ERRORS.RATE_LIMITED_APP_CONFIGURATION,
                    "error"
                  );
                  break;
                case "SERVER_ERROR": {
                  let a = e.cause instanceof Error ? e.cause : e;
                  b.AlertController.open(
                    {
                      shortMessage:
                        U.ErrorUtil.ALERT_ERRORS.SERVER_ERROR_APP_CONFIGURATION
                          .shortMessage,
                      longMessage:
                        U.ErrorUtil.ALERT_ERRORS.SERVER_ERROR_APP_CONFIGURATION.longMessage(
                          a.message
                        ),
                    },
                    "error"
                  );
                  break;
                }
                default:
                  b.AlertController.open(
                    U.ErrorUtil.ALERT_ERRORS.PROJECT_ID_NOT_CONFIGURED,
                    "error"
                  );
              }
            }
          }
          sendInitializeEvent(e) {
            var a;
            let { ...n } = e;
            delete n.adapters,
              delete n.universalProvider,
              v.EventsController.sendEvent({
                type: "track",
                event: "INITIALIZE",
                properties: {
                  ...n,
                  networks: e.networks.map((e) => e.id),
                  siweConfig: {
                    options:
                      (null == (a = e.siweConfig) ? void 0 : a.options) || {},
                  },
                },
              });
          }
          initControllers(e) {
            this.initializeOptionsController(e),
              this.initializeChainController(e),
              this.initializeThemeController(e),
              this.initializeConnectionController(e),
              this.initializeConnectorController();
          }
          initializeThemeController(e) {
            e.themeMode && O.ThemeController.setThemeMode(e.themeMode),
              e.themeVariables &&
                O.ThemeController.setThemeVariables(e.themeVariables);
          }
          initializeChainController(e) {
            var a;
            if (
              !this.connectionControllerClient ||
              !this.networkControllerClient
            )
              throw Error(
                "ConnectionControllerClient and NetworkControllerClient must be set"
              );
            k.ChainController.initialize(
              null != (a = e.adapters) ? a : [],
              this.caipNetworks,
              {
                connectionControllerClient: this.connectionControllerClient,
                networkControllerClient: this.networkControllerClient,
              }
            );
            let n = this.getDefaultNetwork();
            n && k.ChainController.setActiveCaipNetwork(n);
          }
          initializeConnectionController(e) {
            var a, n;
            u.ConnectionController.initialize(
              null != (a = e.adapters) ? a : []
            ),
              u.ConnectionController.setWcBasic(null != (n = e.basic) && n);
          }
          initializeConnectorController() {
            p.ConnectorController.initialize(this.chainNamespaces);
          }
          initializeProjectSettings(e) {
            T.OptionsController.setProjectId(e.projectId),
              T.OptionsController.setSdkVersion(e.sdkVersion);
          }
          initializeOptionsController(e) {
            var a;
            T.OptionsController.setDebug(!1 !== e.debug),
              T.OptionsController.setEnableWalletConnect(
                !1 !== e.enableWalletConnect
              ),
              T.OptionsController.setEnableWalletGuide(
                !1 !== e.enableWalletGuide
              ),
              T.OptionsController.setEnableWallets(!1 !== e.enableWallets),
              T.OptionsController.setEIP6963Enabled(!1 !== e.enableEIP6963),
              T.OptionsController.setEnableNetworkSwitch(
                !1 !== e.enableNetworkSwitch
              ),
              T.OptionsController.setEnableReconnect(!1 !== e.enableReconnect),
              T.OptionsController.setEnableAuthLogger(
                !1 !== e.enableAuthLogger
              ),
              T.OptionsController.setCustomRpcUrls(e.customRpcUrls),
              T.OptionsController.setEnableEmbedded(e.enableEmbedded),
              T.OptionsController.setAllWallets(e.allWallets),
              T.OptionsController.setIncludeWalletIds(e.includeWalletIds),
              T.OptionsController.setExcludeWalletIds(e.excludeWalletIds),
              T.OptionsController.setFeaturedWalletIds(e.featuredWalletIds),
              T.OptionsController.setTokens(e.tokens),
              T.OptionsController.setTermsConditionsUrl(e.termsConditionsUrl),
              T.OptionsController.setPrivacyPolicyUrl(e.privacyPolicyUrl),
              T.OptionsController.setCustomWallets(e.customWallets),
              T.OptionsController.setFeatures(e.features),
              T.OptionsController.setAllowUnsupportedChain(
                e.allowUnsupportedChain
              ),
              T.OptionsController.setUniversalProviderConfigOverride(
                e.universalProviderConfigOverride
              ),
              T.OptionsController.setPreferUniversalLinks(
                e.experimental_preferUniversalLinks
              ),
              T.OptionsController.setDefaultAccountTypes(e.defaultAccountTypes);
            let n = this.getDefaultMetaData();
            if (
              (!e.metadata && n && (e.metadata = n),
              T.OptionsController.setMetadata(e.metadata),
              T.OptionsController.setDisableAppend(e.disableAppend),
              T.OptionsController.setEnableEmbedded(e.enableEmbedded),
              T.OptionsController.setSIWX(e.siwx),
              !e.projectId)
            )
              return void b.AlertController.open(
                U.ErrorUtil.ALERT_ERRORS.PROJECT_ID_NOT_CONFIGURED,
                "error"
              );
            if (
              (null == (a = e.adapters)
                ? void 0
                : a.find((e) => e.namespace === s.ConstantsUtil.CHAIN.EVM)) &&
              e.siweConfig
            ) {
              if (e.siwx)
                throw Error("Cannot set both `siweConfig` and `siwx` options");
              T.OptionsController.setSIWX(e.siweConfig.mapToSIWX());
            }
          }
          getDefaultMetaData() {
            if (g.CoreHelperUtil.isClient()) {
              var e, a, n, o;
              return {
                name:
                  (null == (a = document.getElementsByTagName("title")) ||
                  null == (e = a[0])
                    ? void 0
                    : e.textContent) || "",
                description:
                  (null ==
                  (n = document.querySelector(
                    'meta[property="og:description"]'
                  ))
                    ? void 0
                    : n.content) || "",
                url: window.location.origin,
                icons: [
                  (null == (o = document.querySelector('link[rel~="icon"]'))
                    ? void 0
                    : o.href) || "",
                ],
              };
            }
            return null;
          }
          setUnsupportedNetwork(e) {
            let a = this.getActiveChainNamespace();
            if (a) {
              let n = B.CaipNetworksUtil.getUnsupportedNetwork(
                "".concat(a, ":").concat(e)
              );
              k.ChainController.setActiveCaipNetwork(n);
            }
          }
          getDefaultNetwork() {
            return B.CaipNetworksUtil.getCaipNetworkFromStorage(
              this.defaultCaipNetwork
            );
          }
          extendCaipNetwork(e, a) {
            return B.CaipNetworksUtil.extendCaipNetwork(e, {
              customNetworkImageUrls: a.chainImages,
              projectId: a.projectId,
            });
          }
          extendCaipNetworks(e) {
            return B.CaipNetworksUtil.extendCaipNetworks(e.networks, {
              customNetworkImageUrls: e.chainImages,
              customRpcUrls: e.customRpcUrls,
              projectId: e.projectId,
            });
          }
          extendDefaultCaipNetwork(e) {
            let a = e.networks.find((a) => {
              var n;
              return a.id === (null == (n = e.defaultNetwork) ? void 0 : n.id);
            });
            return a
              ? B.CaipNetworksUtil.extendCaipNetwork(a, {
                  customNetworkImageUrls: e.chainImages,
                  customRpcUrls: e.customRpcUrls,
                  projectId: e.projectId,
                })
              : void 0;
          }
          async disconnectNamespace(e, a) {
            try {
              this.setLoading(!0, e);
              let n = { connections: [] },
                o = this.getAdapter(e),
                { caipAddress: r } = k.ChainController.getAccountData(e) || {};
              return (
                (r || !T.OptionsController.state.enableReconnect) &&
                  (null == o ? void 0 : o.disconnect) &&
                  (n = await o.disconnect({ id: a })),
                this.setLoading(!1, e),
                n
              );
            } catch (a) {
              throw (
                (this.setLoading(!1, e),
                Error("Failed to disconnect chains: ".concat(a.message)))
              );
            }
          }
          createClients() {
            (this.connectionControllerClient = {
              connectWalletConnect: async () => {
                var e;
                let a = k.ChainController.state.activeChain,
                  n = this.getAdapter(a),
                  o = null == (e = this.getCaipNetwork(a)) ? void 0 : e.id,
                  r = u.ConnectionController.getConnections(a),
                  t = this.remoteFeatures.multiWallet,
                  s = r.length > 0;
                if (!n) throw Error("Adapter not found");
                let i = await n.connectWalletConnect(o);
                (s && t) || this.close(),
                  this.setClientId((null == i ? void 0 : i.clientId) || null),
                  I.StorageUtil.setConnectedNamespaces([
                    ...k.ChainController.state.chains.keys(),
                  ]),
                  await this.syncWalletConnectAccount(),
                  await A.SIWXUtil.initializeIfEnabled();
              },
              connectExternal: async (e) => {
                var a, n, o, r, t, s;
                let {
                    id: i,
                    address: d,
                    info: c,
                    type: b,
                    provider: m,
                    chain: l,
                    caipNetwork: f,
                    socialUri: u,
                  } = e,
                  h = k.ChainController.state.activeChain,
                  p = l || h,
                  x = this.getAdapter(p);
                if (l && l !== h && !f) {
                  let e = this.getCaipNetworks().find(
                    (e) => e.chainNamespace === l
                  );
                  e && this.setCaipNetwork(e);
                }
                if (!p) throw Error("connectExternal: namespace not found");
                if (!x) throw Error("connectExternal: adapter not found");
                let g = this.getCaipNetwork(p),
                  C = await x.connect({
                    id: i,
                    address: d,
                    info: c,
                    type: b,
                    provider: m,
                    socialUri: u,
                    chainId:
                      (null == f ? void 0 : f.id) ||
                      (null == g ? void 0 : g.id),
                    rpcUrl:
                      (null == f ||
                      null == (o = f.rpcUrls) ||
                      null == (n = o.default) ||
                      null == (a = n.http)
                        ? void 0
                        : a[0]) ||
                      (null == g ||
                      null == (s = g.rpcUrls) ||
                      null == (t = s.default) ||
                      null == (r = t.http)
                        ? void 0
                        : r[0]),
                  });
                if (C)
                  return (
                    I.StorageUtil.addConnectedNamespace(p),
                    this.syncProvider({ ...C, chainNamespace: p }),
                    this.setStatus("connected", p),
                    this.syncConnectedWalletInfo(p),
                    I.StorageUtil.removeDisconnectedConnectorId(i, p),
                    { address: C.address }
                  );
              },
              reconnectExternal: async (e) => {
                let { id: a, info: n, type: o, provider: r } = e,
                  t = k.ChainController.state.activeChain,
                  s = this.getAdapter(t);
                if (!t) throw Error("reconnectExternal: namespace not found");
                if (!s) throw Error("reconnectExternal: adapter not found");
                if (null == s ? void 0 : s.reconnect) {
                  var i;
                  await (null == s
                    ? void 0
                    : s.reconnect({
                        id: a,
                        info: n,
                        type: o,
                        provider: r,
                        chainId:
                          null == (i = this.getCaipNetwork()) ? void 0 : i.id,
                      })),
                    I.StorageUtil.addConnectedNamespace(t),
                    this.syncConnectedWalletInfo(t);
                }
              },
              disconnect: async (e) => {
                let {
                    id: a,
                    chainNamespace: n,
                    initialDisconnect: o,
                  } = e || {},
                  r = n || k.ChainController.state.activeChain,
                  t = p.ConnectorController.getConnectorId(r),
                  i =
                    a === s.ConstantsUtil.CONNECTOR_ID.AUTH ||
                    t === s.ConstantsUtil.CONNECTOR_ID.AUTH,
                  d =
                    a === s.ConstantsUtil.CONNECTOR_ID.WALLET_CONNECT ||
                    t === s.ConstantsUtil.CONNECTOR_ID.WALLET_CONNECT;
                try {
                  var c;
                  let e = Array.from(k.ChainController.state.chains.keys()),
                    r = n ? [n] : e;
                  (d || i) && (r = e);
                  let t = r.map(async (e) => {
                      let n = p.ConnectorController.getConnectorId(e),
                        r = await this.disconnectNamespace(e, a || n);
                      r &&
                        (i && I.StorageUtil.deleteConnectedSocialProvider(),
                        r.connections.forEach((a) => {
                          I.StorageUtil.addDisconnectedConnectorId(
                            a.connectorId,
                            e
                          );
                        })),
                        o &&
                          this.onDisconnectNamespace({
                            chainNamespace: e,
                            closeModal: !1,
                          });
                    }),
                    s = await Promise.allSettled(t);
                  w.SendController.resetSend(),
                    u.ConnectionController.resetWcConnection(),
                    (null == (c = A.SIWXUtil.getSIWX())
                      ? void 0
                      : c.signOutOnDisconnect) &&
                      (await A.SIWXUtil.clearSessions()),
                    p.ConnectorController.setFilterByNamespace(void 0),
                    u.ConnectionController.syncStorageConnections();
                  let b = s.filter((e) => "rejected" === e.status);
                  if (b.length > 0)
                    throw Error(b.map((e) => e.reason.message).join(", "));
                  v.EventsController.sendEvent({
                    type: "track",
                    event: "DISCONNECT_SUCCESS",
                    properties: { namespace: n || "all" },
                  });
                } catch (e) {
                  throw Error(
                    "Failed to disconnect chains: ".concat(e.message)
                  );
                }
              },
              checkInstalled: (e) =>
                e
                  ? e.some((e) => {
                      var a;
                      return !!(null == (a = window.ethereum)
                        ? void 0
                        : a[String(e)]);
                    })
                  : !!window.ethereum,
              signMessage: async (e) => {
                let a = k.ChainController.state.activeChain,
                  n = this.getAdapter(k.ChainController.state.activeChain);
                if (!a) throw Error("signMessage: namespace not found");
                if (!n) throw Error("signMessage: adapter not found");
                let o = await (null == n
                  ? void 0
                  : n.signMessage({
                      message: e,
                      address: c.AccountController.state.address,
                      provider: X.ProviderUtil.getProvider(a),
                    }));
                return (null == o ? void 0 : o.signature) || "";
              },
              sendTransaction: async (e) => {
                let a = e.chainNamespace;
                if (!a) throw Error("sendTransaction: namespace not found");
                if (x.ConstantsUtil.SEND_SUPPORTED_NAMESPACES.includes(a)) {
                  let n = this.getAdapter(a);
                  if (!n) throw Error("sendTransaction: adapter not found");
                  let o = X.ProviderUtil.getProvider(a),
                    r = await (null == n
                      ? void 0
                      : n.sendTransaction({
                          ...e,
                          caipNetwork: this.getCaipNetwork(),
                          provider: o,
                        }));
                  return (null == r ? void 0 : r.hash) || "";
                }
                return "";
              },
              estimateGas: async (e) => {
                let a = e.chainNamespace;
                if (a === s.ConstantsUtil.CHAIN.EVM) {
                  let n = this.getAdapter(a);
                  if (!n)
                    throw Error(
                      "estimateGas: adapter is required but got undefined"
                    );
                  let o = X.ProviderUtil.getProvider(a),
                    r = this.getCaipNetwork();
                  if (!r)
                    throw Error(
                      "estimateGas: caipNetwork is required but got undefined"
                    );
                  let t = await (null == n
                    ? void 0
                    : n.estimateGas({ ...e, provider: o, caipNetwork: r }));
                  return (null == t ? void 0 : t.gas) || 0n;
                }
                return 0n;
              },
              getEnsAvatar: async () => {
                var e;
                let a = k.ChainController.state.activeChain;
                if (!a)
                  throw Error(
                    "getEnsAvatar: namespace is required but got undefined"
                  );
                return (
                  await this.syncIdentity({
                    address: c.AccountController.state.address,
                    chainId: Number(
                      null == (e = this.getCaipNetwork()) ? void 0 : e.id
                    ),
                    chainNamespace: a,
                  }),
                  c.AccountController.state.profileImage || !1
                );
              },
              getEnsAddress: async (e) => await J.resolveReownName(e),
              writeContract: async (e) => {
                let a = k.ChainController.state.activeChain,
                  n = this.getAdapter(a);
                if (!a)
                  throw Error(
                    "writeContract: namespace is required but got undefined"
                  );
                if (!n)
                  throw Error(
                    "writeContract: adapter is required but got undefined"
                  );
                let o = this.getCaipNetwork(),
                  r = this.getCaipAddress(),
                  t = X.ProviderUtil.getProvider(a);
                if (!o || !r)
                  throw Error(
                    "writeContract: caipNetwork or caipAddress is required but got undefined"
                  );
                let s = await (null == n
                  ? void 0
                  : n.writeContract({
                      ...e,
                      caipNetwork: o,
                      provider: t,
                      caipAddress: r,
                    }));
                return null == s ? void 0 : s.hash;
              },
              parseUnits: (e, a) => {
                var n;
                let o = this.getAdapter(k.ChainController.state.activeChain);
                if (!o)
                  throw Error(
                    "parseUnits: adapter is required but got undefined"
                  );
                return null !=
                  (n =
                    null == o
                      ? void 0
                      : o.parseUnits({ value: e, decimals: a }))
                  ? n
                  : 0n;
              },
              formatUnits: (e, a) => {
                var n;
                let o = this.getAdapter(k.ChainController.state.activeChain);
                if (!o)
                  throw Error(
                    "formatUnits: adapter is required but got undefined"
                  );
                return null !=
                  (n =
                    null == o
                      ? void 0
                      : o.formatUnits({ value: e, decimals: a }))
                  ? n
                  : "0";
              },
              getCapabilities: async (e) => {
                let a = this.getAdapter(k.ChainController.state.activeChain);
                if (!a)
                  throw Error(
                    "getCapabilities: adapter is required but got undefined"
                  );
                return await (null == a ? void 0 : a.getCapabilities(e));
              },
              grantPermissions: async (e) => {
                let a = this.getAdapter(k.ChainController.state.activeChain);
                if (!a)
                  throw Error(
                    "grantPermissions: adapter is required but got undefined"
                  );
                return await (null == a ? void 0 : a.grantPermissions(e));
              },
              revokePermissions: async (e) => {
                let a = this.getAdapter(k.ChainController.state.activeChain);
                if (!a)
                  throw Error(
                    "revokePermissions: adapter is required but got undefined"
                  );
                return (null == a ? void 0 : a.revokePermissions)
                  ? await a.revokePermissions(e)
                  : "0x";
              },
              walletGetAssets: async (e) => {
                var a;
                let n = this.getAdapter(k.ChainController.state.activeChain);
                if (!n)
                  throw Error(
                    "walletGetAssets: adapter is required but got undefined"
                  );
                return null !=
                  (a = await (null == n ? void 0 : n.walletGetAssets(e)))
                  ? a
                  : {};
              },
              updateBalance: (e) => {
                let a = this.getCaipNetwork(e);
                a &&
                  c.AccountController.state.address &&
                  this.updateNativeBalance(
                    c.AccountController.state.address,
                    null == a ? void 0 : a.id,
                    e
                  );
              },
            }),
              (this.networkControllerClient = {
                switchCaipNetwork: async (e) => await this.switchCaipNetwork(e),
                getApprovedCaipNetworksData: async () =>
                  this.getApprovedCaipNetworksData(),
              }),
              u.ConnectionController.setClient(this.connectionControllerClient);
          }
          getApprovedCaipNetworksData() {
            if (
              X.ProviderUtil.getProviderId(
                k.ChainController.state.activeChain
              ) === G.ConstantsUtil.CONNECTOR_TYPE_WALLET_CONNECT
            ) {
              var e, a, n, o, r;
              let t =
                null == (a = this.universalProvider) || null == (e = a.session)
                  ? void 0
                  : e.namespaces;
              return {
                supportsAllNetworks:
                  (null == (r = this.universalProvider) ||
                  null == (o = r.session) ||
                  null == (n = o.peer)
                    ? void 0
                    : n.metadata.name) === "MetaMask Wallet",
                approvedCaipNetworkIds: this.getChainsFromNamespaces(t),
              };
            }
            return { supportsAllNetworks: !0, approvedCaipNetworkIds: [] };
          }
          async switchCaipNetwork(e) {
            if (!e) return;
            let a = e.chainNamespace;
            if (this.getAddressByChainNamespace(e.chainNamespace)) {
              let n = X.ProviderUtil.getProvider(a),
                o = X.ProviderUtil.getProviderId(a);
              if (e.chainNamespace === k.ChainController.state.activeChain) {
                let r = this.getAdapter(a);
                await (null == r
                  ? void 0
                  : r.switchNetwork({
                      caipNetwork: e,
                      provider: n,
                      providerType: o,
                    }));
              } else if (
                (this.setCaipNetwork(e),
                o === G.ConstantsUtil.CONNECTOR_TYPE_WALLET_CONNECT)
              )
                this.syncWalletConnectAccount();
              else {
                let n = this.getAddressByChainNamespace(a);
                n &&
                  this.syncAccount({
                    address: n,
                    chainId: e.id,
                    chainNamespace: a,
                  });
              }
            } else this.setCaipNetwork(e);
          }
          getChainsFromNamespaces() {
            let e =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {};
            return Object.values(e).flatMap((e) =>
              Array.from(
                new Set([
                  ...(e.chains || []),
                  ...e.accounts.map((e) => {
                    let { chainId: a, chainNamespace: n } =
                      d.ParseUtil.parseCaipAddress(e);
                    return "".concat(n, ":").concat(a);
                  }),
                ])
              )
            );
          }
          createAdapters(e) {
            return (
              this.createClients(),
              this.chainNamespaces.reduce((a, n) => {
                let o = null == e ? void 0 : e.find((e) => e.namespace === n);
                if (o) {
                  var r;
                  o.construct({
                    namespace: n,
                    projectId:
                      null == (r = this.options) ? void 0 : r.projectId,
                    networks: this.getCaipNetworks(),
                  }),
                    (a[n] = o);
                } else
                  a[n] = new et({
                    namespace: n,
                    networks: this.getCaipNetworks(),
                  });
                return a;
              }, {})
            );
          }
          async initChainAdapter(e) {
            var a;
            this.onConnectors(e),
              this.listenAdapter(e),
              await (null == (a = this.chainAdapters)
                ? void 0
                : a[e].syncConnectors(this.options, this)),
              await this.createUniversalProviderForAdapter(e);
          }
          async initChainAdapters() {
            await Promise.all(
              this.chainNamespaces.map(async (e) => {
                await this.initChainAdapter(e);
              })
            );
          }
          onConnectors(e) {
            let a = this.getAdapter(e);
            null == a || a.on("connectors", this.setConnectors.bind(this));
          }
          listenAdapter(e) {
            let a = this.getAdapter(e);
            if (!a) return;
            let n = I.StorageUtil.getConnectionStatus();
            !1 === T.OptionsController.state.enableReconnect
              ? this.setStatus("disconnected", e)
              : "connected" === n
              ? this.setStatus("connecting", e)
              : ("disconnected" === n && I.StorageUtil.clearAddressCache(),
                this.setStatus(n, e)),
              a.on("switchNetwork", (a) => {
                let { address: n, chainId: o } = a,
                  r = this.getCaipNetworks().find(
                    (e) =>
                      e.id.toString() === o.toString() ||
                      e.caipNetworkId.toString() === o.toString()
                  ),
                  t = k.ChainController.state.activeChain === e,
                  s = k.ChainController.getAccountProp("address", e);
                if (r) {
                  let a = t && n ? n : s;
                  a &&
                    this.syncAccount({
                      address: a,
                      chainId: r.id,
                      chainNamespace: e,
                    });
                } else this.setUnsupportedNetwork(o);
              }),
              a.on("disconnect", () => {
                this.onDisconnectNamespace({ chainNamespace: e });
              }),
              a.on("connections", (a) => {
                this.setConnections(a, e);
              }),
              a.on("pendingTransactions", () => {
                let e = c.AccountController.state.address,
                  a = k.ChainController.state.activeCaipNetwork;
                e &&
                  (null == a ? void 0 : a.id) &&
                  this.updateNativeBalance(e, a.id, a.chainNamespace);
              }),
              a.on("accountChanged", (a) => {
                var n, o;
                let { address: r, chainId: t, connector: s } = a,
                  i = k.ChainController.state.activeChain === e;
                (null == s ? void 0 : s.provider) &&
                  (this.syncProvider({
                    id: s.id,
                    type: s.type,
                    provider: s.provider,
                    chainNamespace: e,
                  }),
                  this.syncConnectedWalletInfo(e)),
                  i && t
                    ? this.syncAccount({
                        address: r,
                        chainId: t,
                        chainNamespace: e,
                      })
                    : i &&
                      (null == (n = k.ChainController.state.activeCaipNetwork)
                        ? void 0
                        : n.id)
                    ? this.syncAccount({
                        address: r,
                        chainId:
                          null ==
                          (o = k.ChainController.state.activeCaipNetwork)
                            ? void 0
                            : o.id,
                        chainNamespace: e,
                      })
                    : this.syncAccountInfo(r, t, e),
                  I.StorageUtil.addConnectedNamespace(e);
              });
          }
          async createUniversalProviderForAdapter(e) {
            if ((await this.getUniversalProvider(), this.universalProvider)) {
              var a, n, o;
              await (null == (o = this.chainAdapters) ||
              null == (n = o[e]) ||
              null == (a = n.setUniversalProvider)
                ? void 0
                : a.call(n, this.universalProvider));
            }
          }
          async syncExistingConnection() {
            await Promise.allSettled(
              this.chainNamespaces.map((e) => this.syncNamespaceConnection(e))
            );
          }
          async unSyncExistingConnection() {
            try {
              await Promise.allSettled(
                this.chainNamespaces.map((e) =>
                  u.ConnectionController.disconnect({
                    namespace: e,
                    initialDisconnect: !0,
                  })
                )
              );
            } catch (e) {
              console.error("Error disconnecting existing connections:", e);
            }
          }
          async syncNamespaceConnection(e) {
            try {
              e === s.ConstantsUtil.CHAIN.EVM &&
                g.CoreHelperUtil.isSafeApp() &&
                p.ConnectorController.setConnectorId(
                  s.ConstantsUtil.CONNECTOR_ID.SAFE,
                  e
                );
              let a = p.ConnectorController.getConnectorId(e);
              switch ((this.setStatus("connecting", e), a)) {
                case s.ConstantsUtil.CONNECTOR_ID.WALLET_CONNECT:
                  await this.syncWalletConnectAccount();
                  break;
                case s.ConstantsUtil.CONNECTOR_ID.AUTH:
                  break;
                default:
                  await this.syncAdapterConnection(e);
              }
            } catch (a) {
              console.warn("AppKit couldn't sync existing connection", a),
                this.setStatus("disconnected", e);
            }
          }
          onDisconnectNamespace(e) {
            let { chainNamespace: a, closeModal: n } = e || {};
            k.ChainController.resetAccount(a),
              k.ChainController.resetNetwork(a),
              I.StorageUtil.removeConnectedNamespace(a);
            let o = Array.from(k.ChainController.state.chains.keys());
            (a ? [a] : o).forEach((e) =>
              I.StorageUtil.addDisconnectedConnectorId(
                p.ConnectorController.getConnectorId(e) || "",
                e
              )
            ),
              p.ConnectorController.removeConnectorId(a),
              X.ProviderUtil.resetChain(a),
              this.setUser(void 0, a),
              this.setStatus("disconnected", a),
              this.setConnectedWalletInfo(void 0, a),
              !1 !== n && y.ModalController.close();
          }
          async syncAdapterConnections() {
            await Promise.allSettled(
              this.chainNamespaces.map((e) => {
                var a;
                let n = this.getCaipAddress(e),
                  o = this.getCaipNetwork(e);
                return null == (a = this.chainAdapters)
                  ? void 0
                  : a[e].syncConnections({
                      connectToFirstConnector: !n,
                      caipNetwork: o,
                      getConnectorStorageInfo(a) {
                        var n;
                        let o =
                          null != (n = I.StorageUtil.getConnections()[e])
                            ? n
                            : [];
                        return {
                          hasDisconnected:
                            I.StorageUtil.isConnectorDisconnected(a, e),
                          hasConnected: o.some((e) =>
                            _.HelpersUtil.isLowerCaseMatch(e.connectorId, a)
                          ),
                        };
                      },
                    });
              })
            );
          }
          async syncAdapterConnection(e) {
            let a = this.getAdapter(e),
              n = p.ConnectorController.getConnectorId(e),
              o = this.getCaipNetwork(e),
              r = p.ConnectorController.getConnectors(e).find(
                (e) => e.id === n
              );
            try {
              var t, s, i;
              if (!a || !r)
                throw Error(
                  "Adapter or connector not found for namespace ".concat(e)
                );
              if (!(null == o ? void 0 : o.id))
                throw Error("CaipNetwork not found");
              let n = await (null == a
                ? void 0
                : a.syncConnection({
                    namespace: e,
                    id: r.id,
                    chainId: o.id,
                    rpcUrl:
                      null == o ||
                      null == (i = o.rpcUrls) ||
                      null == (s = i.default) ||
                      null == (t = s.http)
                        ? void 0
                        : t[0],
                  }));
              n
                ? (this.syncProvider({ ...n, chainNamespace: e }),
                  await this.syncAccount({ ...n, chainNamespace: e }),
                  this.setStatus("connected", e))
                : this.setStatus("disconnected", e);
            } catch (a) {
              this.onDisconnectNamespace({ chainNamespace: e, closeModal: !1 });
            }
          }
          async syncWalletConnectAccount() {
            var e, a;
            let n = Object.keys(
                (null == (a = this.universalProvider) || null == (e = a.session)
                  ? void 0
                  : e.namespaces) || {}
              ),
              o = this.chainNamespaces.map(async (e) => {
                var a, o, r, t, i;
                let c = this.getAdapter(e);
                if (!c) return;
                let b =
                    (null == (t = this.universalProvider) ||
                    null == (r = t.session) ||
                    null == (o = r.namespaces) ||
                    null == (a = o[e])
                      ? void 0
                      : a.accounts) || [],
                  m =
                    null == (i = k.ChainController.state.activeCaipNetwork)
                      ? void 0
                      : i.id,
                  l =
                    b.find((e) => {
                      let { chainId: a } = d.ParseUtil.parseCaipAddress(e);
                      return a === (null == m ? void 0 : m.toString());
                    }) || b[0];
                if (l) {
                  let a = d.ParseUtil.validateCaipAddress(l),
                    { chainId: n, address: o } =
                      d.ParseUtil.parseCaipAddress(a);
                  if (
                    (X.ProviderUtil.setProviderId(
                      e,
                      G.ConstantsUtil.CONNECTOR_TYPE_WALLET_CONNECT
                    ),
                    this.caipNetworks &&
                      k.ChainController.state.activeCaipNetwork &&
                      c.namespace !== s.ConstantsUtil.CHAIN.EVM)
                  ) {
                    let a = c.getWalletConnectProvider({
                      caipNetworks: this.getCaipNetworks(),
                      provider: this.universalProvider,
                      activeCaipNetwork:
                        k.ChainController.state.activeCaipNetwork,
                    });
                    X.ProviderUtil.setProvider(e, a);
                  } else X.ProviderUtil.setProvider(e, this.universalProvider);
                  p.ConnectorController.setConnectorId(
                    s.ConstantsUtil.CONNECTOR_ID.WALLET_CONNECT,
                    e
                  ),
                    I.StorageUtil.addConnectedNamespace(e),
                    await this.syncAccount({
                      address: o,
                      chainId: n,
                      chainNamespace: e,
                    });
                } else n.includes(e) && this.setStatus("disconnected", e);
                this.syncConnectedWalletInfo(e),
                  await k.ChainController.setApprovedCaipNetworksData(e);
              });
            await Promise.all(o);
          }
          syncProvider(e) {
            let { type: a, provider: n, id: o, chainNamespace: r } = e;
            X.ProviderUtil.setProviderId(r, a),
              X.ProviderUtil.setProvider(r, n),
              p.ConnectorController.setConnectorId(o, r);
          }
          async syncAccount(e) {
            var a, n;
            let o = e.chainNamespace === k.ChainController.state.activeChain,
              r = k.ChainController.getCaipNetworkByNamespace(
                e.chainNamespace,
                e.chainId
              ),
              { address: t, chainId: i, chainNamespace: b } = e,
              { chainId: m } = I.StorageUtil.getActiveNetworkProps(),
              l = i || m,
              f =
                (null == (a = k.ChainController.state.activeCaipNetwork)
                  ? void 0
                  : a.name) === s.ConstantsUtil.UNSUPPORTED_NETWORK_NAME,
              u = k.ChainController.getNetworkProp("supportsAllNetworks", b);
            if ((this.setStatus("connected", b), (!f || u) && l)) {
              let e = this.getCaipNetworks().find(
                  (e) => e.id.toString() === l.toString()
                ),
                a = this.getCaipNetworks().find((e) => e.chainNamespace === b);
              if (!u && !e && !a) {
                let n = this.getApprovedCaipNetworkIds() || [],
                  o = n.find((e) => {
                    var a;
                    return (
                      (null == (a = d.ParseUtil.parseCaipNetworkId(e))
                        ? void 0
                        : a.chainId) === l.toString()
                    );
                  }),
                  r = n.find((e) => {
                    var a;
                    return (
                      (null == (a = d.ParseUtil.parseCaipNetworkId(e))
                        ? void 0
                        : a.chainNamespace) === b
                    );
                  });
                (e = this.getCaipNetworks().find((e) => e.caipNetworkId === o)),
                  (a = this.getCaipNetworks().find(
                    (e) =>
                      e.caipNetworkId === r ||
                      ("deprecatedCaipNetworkId" in e &&
                        e.deprecatedCaipNetworkId === r)
                  ));
              }
              let i = e || a;
              (null == i ? void 0 : i.chainNamespace) ===
              k.ChainController.state.activeChain
                ? T.OptionsController.state.enableNetworkSwitch &&
                  !T.OptionsController.state.allowUnsupportedChain &&
                  (null == (n = k.ChainController.state.activeCaipNetwork)
                    ? void 0
                    : n.name) === s.ConstantsUtil.UNSUPPORTED_NETWORK_NAME
                  ? k.ChainController.showUnsupportedChainUI()
                  : this.setCaipNetwork(i)
                : !o && r && this.setCaipNetworkOfNamespace(r, b),
                this.syncConnectedWalletInfo(b),
                _.HelpersUtil.isLowerCaseMatch(
                  t,
                  c.AccountController.state.address
                ) || this.syncAccountInfo(t, null == i ? void 0 : i.id, b),
                o
                  ? await this.syncBalance({
                      address: t,
                      chainId: null == i ? void 0 : i.id,
                      chainNamespace: b,
                    })
                  : await this.syncBalance({
                      address: t,
                      chainId: null == r ? void 0 : r.id,
                      chainNamespace: b,
                    });
            }
          }
          async syncAccountInfo(e, a, n) {
            let o = this.getCaipAddress(n),
              r = a || (null == o ? void 0 : o.split(":")[1]);
            if (!r) return;
            let t = "".concat(n, ":").concat(r, ":").concat(e);
            this.setCaipAddress(t, n),
              await this.syncIdentity({
                address: e,
                chainId: r,
                chainNamespace: n,
              });
          }
          async syncReownName(e, a) {
            try {
              let n = await this.getReownName(e);
              if (n[0]) {
                let e = n[0];
                this.setProfileName(e.name, a);
              } else this.setProfileName(null, a);
            } catch (e) {
              this.setProfileName(null, a);
            }
          }
          syncConnectedWalletInfo(e) {
            let a = p.ConnectorController.getConnectorId(e),
              n = X.ProviderUtil.getProviderId(e);
            if (
              n === G.ConstantsUtil.CONNECTOR_TYPE_ANNOUNCED ||
              n === G.ConstantsUtil.CONNECTOR_TYPE_INJECTED
            ) {
              if (a) {
                let n = this.getConnectors().find((e) => {
                  var n, o;
                  let r = e.id === a,
                    t = (null == (n = e.info) ? void 0 : n.rdns) === a,
                    s =
                      null == (o = e.connectors)
                        ? void 0
                        : o.some((e) => {
                            var n;
                            return (
                              e.id === a ||
                              (null == (n = e.info) ? void 0 : n.rdns) === a
                            );
                          });
                  return r || t || !!s;
                });
                if (n) {
                  let { info: a, name: o, imageUrl: r } = n,
                    t = r || this.getConnectorImage(n);
                  this.setConnectedWalletInfo({ name: o, icon: t, ...a }, e);
                }
              }
            } else if (n === G.ConstantsUtil.CONNECTOR_TYPE_WALLET_CONNECT) {
              let a = X.ProviderUtil.getProvider(e);
              if (null == a ? void 0 : a.session) {
                var o;
                this.setConnectedWalletInfo(
                  {
                    ...a.session.peer.metadata,
                    name: a.session.peer.metadata.name,
                    icon:
                      null == (o = a.session.peer.metadata.icons)
                        ? void 0
                        : o[0],
                  },
                  e
                );
              }
            } else if (a && a === s.ConstantsUtil.CONNECTOR_ID.COINBASE) {
              let a = this.getConnectors().find(
                (e) => e.id === s.ConstantsUtil.CONNECTOR_ID.COINBASE
              );
              this.setConnectedWalletInfo(
                { name: "Coinbase Wallet", icon: this.getConnectorImage(a) },
                e
              );
            }
          }
          async syncBalance(e) {
            i.NetworkUtil.getNetworksByNamespace(
              this.getCaipNetworks(),
              e.chainNamespace
            ).find((a) => {
              var n;
              return (
                a.id.toString() ===
                (null == (n = e.chainId) ? void 0 : n.toString())
              );
            }) &&
              e.chainId &&
              (await this.updateNativeBalance(
                e.address,
                e.chainId,
                e.chainNamespace
              ));
          }
          async ready() {
            await this.readyPromise;
          }
          async updateNativeBalance(e, a, n) {
            let o = this.getAdapter(n),
              r = k.ChainController.getCaipNetworkByNamespace(n, a);
            if (o) {
              let t = await o.getBalance({
                address: e,
                chainId: a,
                caipNetwork: r,
                tokens: this.options.tokens,
              });
              return this.setBalance(t.balance, t.symbol, n), t;
            }
          }
          async initializeUniversalAdapter() {
            var e,
              a,
              n,
              o,
              r,
              s,
              i,
              d,
              c,
              b,
              m,
              l = this;
            let f = H.createLogger(function (e) {
                for (
                  var a = arguments.length, n = Array(a > 1 ? a - 1 : 0), o = 1;
                  o < a;
                  o++
                )
                  n[o - 1] = arguments[o];
                e && l.handleAlertError(e), console.error(...n);
              }),
              k = {
                projectId: null == (e = this.options) ? void 0 : e.projectId,
                metadata: {
                  name: (null == (a = this.options) ? void 0 : a.metadata)
                    ? null == (n = this.options)
                      ? void 0
                      : n.metadata.name
                    : "",
                  description: (
                    null == (o = this.options) ? void 0 : o.metadata
                  )
                    ? null == (r = this.options)
                      ? void 0
                      : r.metadata.description
                    : "",
                  url: (null == (s = this.options) ? void 0 : s.metadata)
                    ? null == (i = this.options)
                      ? void 0
                      : i.metadata.url
                    : "",
                  icons: (null == (d = this.options) ? void 0 : d.metadata)
                    ? null == (c = this.options)
                      ? void 0
                      : c.metadata.icons
                    : [""],
                },
                logger: f,
              };
            T.OptionsController.setManualWCControl(
              !!(null == (b = this.options) ? void 0 : b.manualWCControl)
            ),
              (this.universalProvider =
                null != (m = this.options.universalProvider)
                  ? m
                  : await t.default.init(k)),
              !1 === T.OptionsController.state.enableReconnect &&
                this.universalProvider.session &&
                (await this.universalProvider.disconnect()),
              this.listenWalletConnect();
          }
          listenWalletConnect() {
            this.universalProvider &&
              this.chainNamespaces.forEach((e) => {
                J.listenWcProvider({
                  universalProvider: this.universalProvider,
                  namespace: e,
                  onDisplayUri: (e) => {
                    u.ConnectionController.setUri(e);
                  },
                  onConnect: () => {
                    u.ConnectionController.finalizeWcConnection();
                  },
                  onDisconnect: () => {
                    k.ChainController.state.noAdapters && this.resetAccount(e),
                      u.ConnectionController.resetWcConnection();
                  },
                  onChainChanged: (a) => {
                    let n = k.ChainController.state.activeChain,
                      o =
                        n &&
                        p.ConnectorController.state.activeConnectorIds[n] ===
                          s.ConstantsUtil.CONNECTOR_ID.WALLET_CONNECT;
                    if (n === e && (k.ChainController.state.noAdapters || o)) {
                      let e = this.getCaipNetworks().find(
                          (e) =>
                            e.id.toString() === a.toString() ||
                            e.caipNetworkId.toString() === a.toString()
                        ),
                        n = this.getCaipNetwork();
                      if (!e) return void this.setUnsupportedNetwork(a);
                      (null == n ? void 0 : n.id.toString()) !==
                        (null == e ? void 0 : e.id.toString()) &&
                        (null == n ? void 0 : n.chainNamespace) ===
                          (null == e ? void 0 : e.chainNamespace) &&
                        this.setCaipNetwork(e);
                    }
                  },
                  onAccountsChanged: (a) => {
                    let n = k.ChainController.state.activeChain,
                      o =
                        n &&
                        p.ConnectorController.state.activeConnectorIds[n] ===
                          s.ConstantsUtil.CONNECTOR_ID.WALLET_CONNECT;
                    if (
                      n === e &&
                      (k.ChainController.state.noAdapters || o) &&
                      a.length > 0
                    ) {
                      let e = a[0];
                      this.syncAccount({
                        address: e.address,
                        chainId: e.chainId,
                        chainNamespace: e.chainNamespace,
                      });
                    }
                  },
                });
              });
          }
          createUniversalProvider() {
            var e;
            return (
              !this.universalProviderInitPromise &&
                g.CoreHelperUtil.isClient() &&
                (null == (e = this.options) ? void 0 : e.projectId) &&
                (this.universalProviderInitPromise =
                  this.initializeUniversalAdapter()),
              this.universalProviderInitPromise
            );
          }
          async getUniversalProvider() {
            if (!this.universalProvider)
              try {
                await this.createUniversalProvider();
              } catch (e) {
                v.EventsController.sendEvent({
                  type: "error",
                  event: "INTERNAL_SDK_ERROR",
                  properties: {
                    errorType: "UniversalProviderInitError",
                    errorMessage: e instanceof Error ? e.message : "Unknown",
                    uncaught: !1,
                  },
                }),
                  console.error(
                    "AppKit:getUniversalProvider - Cannot create provider",
                    e
                  );
              }
            return this.universalProvider;
          }
          handleAlertError(e) {
            let a = Object.entries(U.ErrorUtil.UniversalProviderErrors).find(
                (a) => {
                  let [, { message: n }] = a;
                  return e.message.includes(n);
                }
              ),
              [n, o] = null != a ? a : [],
              { message: r, alertErrorKey: t } = null != o ? o : {};
            if (n && r && !this.reportedAlertErrors[n]) {
              let e = U.ErrorUtil.ALERT_ERRORS[t];
              e &&
                (b.AlertController.open(e, "error"),
                (this.reportedAlertErrors[n] = !0));
            }
          }
          getAdapter(e) {
            var a;
            if (e) return null == (a = this.chainAdapters) ? void 0 : a[e];
          }
          createAdapter(e) {
            var a;
            if (!e) return;
            let n = e.namespace;
            n &&
              (this.createClients(),
              (e.namespace = n),
              e.construct({
                namespace: n,
                projectId: null == (a = this.options) ? void 0 : a.projectId,
                networks: this.getCaipNetworks(),
              }),
              this.chainNamespaces.includes(n) || this.chainNamespaces.push(n),
              this.chainAdapters && (this.chainAdapters[n] = e));
          }
          async open(e) {
            return (await this.injectModalUi(),
            (null == e ? void 0 : e.uri) &&
              u.ConnectionController.setUri(e.uri),
            (null == e ? void 0 : e.arguments) &&
              (null == e ? void 0 : e.view) === "Swap")
              ? y.ModalController.open({ ...e, data: { swap: e.arguments } })
              : y.ModalController.open(e);
          }
          async close() {
            await this.injectModalUi(), y.ModalController.close();
          }
          setLoading(e, a) {
            y.ModalController.setLoading(e, a);
          }
          async disconnect(e) {
            await u.ConnectionController.disconnect({ namespace: e });
          }
          getSIWX() {
            return T.OptionsController.state.siwx;
          }
          getError() {
            return "";
          }
          getChainId() {
            var e;
            return null == (e = k.ChainController.state.activeCaipNetwork)
              ? void 0
              : e.id;
          }
          async switchNetwork(e) {
            let a = this.getCaipNetworks().find((a) => a.id === e.id);
            if (!a)
              return void b.AlertController.open(
                U.ErrorUtil.ALERT_ERRORS.SWITCH_NETWORK_NOT_FOUND,
                "error"
              );
            await k.ChainController.switchActiveNetwork(a);
          }
          getWalletProvider() {
            return k.ChainController.state.activeChain
              ? X.ProviderUtil.state.providers[
                  k.ChainController.state.activeChain
                ]
              : null;
          }
          getWalletProviderType() {
            return X.ProviderUtil.getProviderId(
              k.ChainController.state.activeChain
            );
          }
          subscribeProviders(e) {
            return X.ProviderUtil.subscribeProviders(e);
          }
          getThemeMode() {
            return O.ThemeController.state.themeMode;
          }
          getThemeVariables() {
            return O.ThemeController.state.themeVariables;
          }
          setThemeMode(e) {
            O.ThemeController.setThemeMode(e),
              (0, M.setColorTheme)(O.ThemeController.state.themeMode);
          }
          setTermsConditionsUrl(e) {
            T.OptionsController.setTermsConditionsUrl(e);
          }
          setPrivacyPolicyUrl(e) {
            T.OptionsController.setPrivacyPolicyUrl(e);
          }
          setThemeVariables(e) {
            O.ThemeController.setThemeVariables(e),
              (0, M.setThemeVariables)(O.ThemeController.state.themeVariables);
          }
          subscribeTheme(e) {
            return O.ThemeController.subscribe(e);
          }
          subscribeConnections(e) {
            return this.remoteFeatures.multiWallet
              ? u.ConnectionController.subscribe(e)
              : (b.AlertController.open(
                  s.ConstantsUtil.REMOTE_FEATURES_ALERTS
                    .MULTI_WALLET_NOT_ENABLED.DEFAULT,
                  "info"
                ),
                () => void 0);
          }
          getWalletInfo(e) {
            return e
              ? k.ChainController.getAccountProp("connectedWalletInfo", e)
              : c.AccountController.state.connectedWalletInfo;
          }
          getAccount(e) {
            let a = e || k.ChainController.state.activeChain,
              n = p.ConnectorController.getAuthConnector(a),
              o = k.ChainController.getAccountData(a),
              r = I.StorageUtil.getConnectedConnectorId(
                k.ChainController.state.activeChain
              ),
              t = u.ConnectionController.getConnections(a);
            if (!a) throw Error("AppKit:getAccount - namespace is required");
            let i = t.flatMap((e) =>
              e.accounts.map((e) => {
                let { address: n, type: o } = e;
                return g.CoreHelperUtil.createAccount(a, n, o || "eoa");
              })
            );
            if (o)
              return {
                allAccounts: i,
                caipAddress: o.caipAddress,
                address: g.CoreHelperUtil.getPlainAddress(o.caipAddress),
                isConnected: !!o.caipAddress,
                status: o.status,
                embeddedWalletInfo:
                  n && r === s.ConstantsUtil.CONNECTOR_ID.AUTH
                    ? {
                        user: o.user
                          ? {
                              ...o.user,
                              username:
                                I.StorageUtil.getConnectedSocialUsername(),
                            }
                          : void 0,
                        authProvider: o.socialProvider || "email",
                        accountType: (0, P.getPreferredAccountType)(a),
                        isSmartAccountDeployed: !!o.smartAccountDeployed,
                      }
                    : void 0,
              };
          }
          subscribeAccount(e, a) {
            let n = () => {
              let n = this.getAccount(a);
              n && e(n);
            };
            a
              ? k.ChainController.subscribeChainProp("accountState", n, a)
              : k.ChainController.subscribe(n),
              p.ConnectorController.subscribe(n);
          }
          subscribeNetwork(e) {
            return k.ChainController.subscribe((a) => {
              let { activeCaipNetwork: n } = a;
              e({
                caipNetwork: n,
                chainId: null == n ? void 0 : n.id,
                caipNetworkId: null == n ? void 0 : n.caipNetworkId,
              });
            });
          }
          subscribeWalletInfo(e, a) {
            return a
              ? c.AccountController.subscribeKey("connectedWalletInfo", e, a)
              : c.AccountController.subscribeKey("connectedWalletInfo", e);
          }
          subscribeShouldUpdateToAddress(e) {
            c.AccountController.subscribeKey("shouldUpdateToAddress", e);
          }
          subscribeCaipNetworkChange(e) {
            k.ChainController.subscribeKey("activeCaipNetwork", e);
          }
          getState() {
            return R.PublicStateController.state;
          }
          getRemoteFeatures() {
            return T.OptionsController.state.remoteFeatures;
          }
          subscribeState(e) {
            return R.PublicStateController.subscribe(e);
          }
          subscribeRemoteFeatures(e) {
            return T.OptionsController.subscribeKey("remoteFeatures", e);
          }
          showErrorMessage(e) {
            S.SnackController.showError(e);
          }
          showSuccessMessage(e) {
            S.SnackController.showSuccess(e);
          }
          getEvent() {
            return { ...v.EventsController.state };
          }
          subscribeEvents(e) {
            return v.EventsController.subscribe(e);
          }
          replace(e) {
            E.RouterController.replace(e);
          }
          redirect(e) {
            E.RouterController.push(e);
          }
          popTransactionStack(e) {
            E.RouterController.popTransactionStack(e);
          }
          isOpen() {
            return y.ModalController.state.open;
          }
          isTransactionStackEmpty() {
            return 0 === E.RouterController.state.transactionStack.length;
          }
          static getInstance() {
            return this.instance;
          }
          updateFeatures(e) {
            T.OptionsController.setFeatures(e);
          }
          updateRemoteFeatures(e) {
            T.OptionsController.setRemoteFeatures(e);
          }
          updateOptions(e) {
            let a = { ...(T.OptionsController.state || {}), ...e };
            T.OptionsController.setOptions(a);
          }
          setConnectMethodsOrder(e) {
            T.OptionsController.setConnectMethodsOrder(e);
          }
          setWalletFeaturesOrder(e) {
            T.OptionsController.setWalletFeaturesOrder(e);
          }
          setCollapseWallets(e) {
            T.OptionsController.setCollapseWallets(e);
          }
          setSocialsOrder(e) {
            T.OptionsController.setSocialsOrder(e);
          }
          getConnectMethodsOrder() {
            return L.WalletUtil.getConnectOrderMethod(
              T.OptionsController.state.features,
              p.ConnectorController.getConnectors()
            );
          }
          addNetwork(e, a) {
            if (this.chainAdapters && !this.chainAdapters[e])
              throw Error("Adapter for namespace ".concat(e, " doesn't exist"));
            let n = this.extendCaipNetwork(a, this.options);
            this.getCaipNetworks().find((e) => e.id === n.id) ||
              k.ChainController.addNetwork(n);
          }
          removeNetwork(e, a) {
            if (this.chainAdapters && !this.chainAdapters[e])
              throw Error("Adapter for namespace ".concat(e, " doesn't exist"));
            this.getCaipNetworks().find((e) => e.id === a) &&
              k.ChainController.removeNetwork(e, a);
          }
          constructor(e) {
            (this.chainNamespaces = []),
              (this.remoteFeatures = {}),
              (this.reportedAlertErrors = {}),
              (this.getCaipNetwork = (e, a) => {
                if (e) {
                  var n, o, r;
                  let t =
                    null == (n = k.ChainController.getCaipNetworks(e))
                      ? void 0
                      : n.find((e) => e.id === a);
                  if (t) return t;
                  let s =
                    null == (o = k.ChainController.getNetworkData(e))
                      ? void 0
                      : o.caipNetwork;
                  return (
                    s ||
                    (null ==
                    (r = k.ChainController.getRequestedCaipNetworks(e).filter(
                      (a) => a.chainNamespace === e
                    ))
                      ? void 0
                      : r[0])
                  );
                }
                return (
                  k.ChainController.state.activeCaipNetwork ||
                  this.defaultCaipNetwork
                );
              }),
              (this.getCaipNetworkId = () => {
                let e = this.getCaipNetwork();
                if (e) return e.id;
              }),
              (this.getCaipNetworks = (e) =>
                k.ChainController.getCaipNetworks(e)),
              (this.getActiveChainNamespace = () =>
                k.ChainController.state.activeChain),
              (this.setRequestedCaipNetworks = (e, a) => {
                k.ChainController.setRequestedCaipNetworks(e, a);
              }),
              (this.getApprovedCaipNetworkIds = () =>
                k.ChainController.getAllApprovedCaipNetworkIds()),
              (this.getCaipAddress = (e) =>
                k.ChainController.state.activeChain !== e && e
                  ? k.ChainController.getAccountProp("caipAddress", e)
                  : k.ChainController.state.activeCaipAddress),
              (this.setClientId = (e) => {
                f.BlockchainApiController.setClientId(e);
              }),
              (this.getProvider = (e) => X.ProviderUtil.getProvider(e)),
              (this.getProviderType = (e) => X.ProviderUtil.getProviderId(e)),
              (this.getPreferredAccountType = (e) =>
                (0, P.getPreferredAccountType)(e)),
              (this.setCaipAddress = (e, a) => {
                c.AccountController.setCaipAddress(e, a);
              }),
              (this.setBalance = (e, a, n) => {
                c.AccountController.setBalance(e, a, n);
              }),
              (this.setProfileName = (e, a) => {
                c.AccountController.setProfileName(e, a);
              }),
              (this.setProfileImage = (e, a) => {
                c.AccountController.setProfileImage(e, a);
              }),
              (this.setUser = (e, a) => {
                c.AccountController.setUser(e, a);
              }),
              (this.resetAccount = (e) => {
                c.AccountController.resetAccount(e);
              }),
              (this.setCaipNetwork = (e) => {
                k.ChainController.setActiveCaipNetwork(e);
              }),
              (this.setCaipNetworkOfNamespace = (e, a) => {
                k.ChainController.setChainNetworkData(a, { caipNetwork: e });
              }),
              (this.setStatus = (e, a) => {
                c.AccountController.setStatus(e, a),
                  p.ConnectorController.isConnected()
                    ? I.StorageUtil.setConnectionStatus("connected")
                    : I.StorageUtil.setConnectionStatus("disconnected");
              }),
              (this.getAddressByChainNamespace = (e) =>
                k.ChainController.getAccountProp("address", e)),
              (this.setConnectors = (e) => {
                let a = [...p.ConnectorController.state.allConnectors, ...e];
                p.ConnectorController.setConnectors(a);
              }),
              (this.setConnections = (e, a) => {
                I.StorageUtil.setConnections(e, a),
                  u.ConnectionController.setConnections(e, a);
              }),
              (this.fetchIdentity = (e) =>
                f.BlockchainApiController.fetchIdentity(e)),
              (this.getReownName = (e) =>
                C.EnsController.getNamesForAddress(e)),
              (this.getConnectors = () =>
                p.ConnectorController.getConnectors()),
              (this.getConnectorImage = (e) =>
                l.AssetUtil.getConnectorImage(e)),
              (this.getConnections = (e) =>
                this.remoteFeatures.multiWallet
                  ? h.ConnectionControllerUtil.getConnectionsData(e).connections
                  : (b.AlertController.open(
                      s.ConstantsUtil.REMOTE_FEATURES_ALERTS
                        .MULTI_WALLET_NOT_ENABLED.DEFAULT,
                      "info"
                    ),
                    [])),
              (this.getRecentConnections = (e) =>
                this.remoteFeatures.multiWallet
                  ? h.ConnectionControllerUtil.getConnectionsData(e)
                      .recentConnections
                  : (b.AlertController.open(
                      s.ConstantsUtil.REMOTE_FEATURES_ALERTS
                        .MULTI_WALLET_NOT_ENABLED.DEFAULT,
                      "info"
                    ),
                    [])),
              (this.switchConnection = async (e) => {
                if (!this.remoteFeatures.multiWallet)
                  return void b.AlertController.open(
                    s.ConstantsUtil.REMOTE_FEATURES_ALERTS
                      .MULTI_WALLET_NOT_ENABLED.DEFAULT,
                    "info"
                  );
                await u.ConnectionController.switchConnection(e);
              }),
              (this.deleteConnection = (e) => {
                if (!this.remoteFeatures.multiWallet)
                  return void b.AlertController.open(
                    s.ConstantsUtil.REMOTE_FEATURES_ALERTS
                      .MULTI_WALLET_NOT_ENABLED.DEFAULT,
                    "info"
                  );
                I.StorageUtil.deleteAddressFromConnection(e),
                  u.ConnectionController.syncStorageConnections();
              }),
              (this.setConnectedWalletInfo = (e, a) => {
                let n = X.ProviderUtil.getProviderId(a),
                  o = e ? { ...e, type: n } : void 0;
                c.AccountController.setConnectedWalletInfo(o, a);
              }),
              (this.getIsConnectedState = () =>
                !!k.ChainController.state.activeCaipAddress),
              (this.addAddressLabel = (e, a, n) => {
                c.AccountController.addAddressLabel(e, a, n);
              }),
              (this.removeAddressLabel = (e, a) => {
                c.AccountController.removeAddressLabel(e, a);
              }),
              (this.getAddress = (e) =>
                k.ChainController.state.activeChain !== e && e
                  ? k.ChainController.getAccountProp("address", e)
                  : c.AccountController.state.address),
              (this.setApprovedCaipNetworksData = (e) =>
                k.ChainController.setApprovedCaipNetworksData(e)),
              (this.resetNetwork = (e) => {
                k.ChainController.resetNetwork(e);
              }),
              (this.addConnector = (e) => {
                p.ConnectorController.addConnector(e);
              }),
              (this.resetWcConnection = () => {
                u.ConnectionController.resetWcConnection();
              }),
              (this.setAddressExplorerUrl = (e, a) => {
                c.AccountController.setAddressExplorerUrl(e, a);
              }),
              (this.setSmartAccountDeployed = (e, a) => {
                c.AccountController.setSmartAccountDeployed(e, a);
              }),
              (this.setPreferredAccountType = (e, a) => {
                k.ChainController.setAccountProp("preferredAccountType", e, a);
              }),
              (this.setEIP6963Enabled = (e) => {
                T.OptionsController.setEIP6963Enabled(e);
              }),
              (this.handleUnsafeRPCRequest = () => {
                this.isOpen()
                  ? this.isTransactionStackEmpty() ||
                    this.redirect("ApproveTransaction")
                  : this.open({ view: "ApproveTransaction" });
              }),
              (this.options = e),
              (this.version = e.sdkVersion),
              (this.caipNetworks = this.extendCaipNetworks(e)),
              (this.chainNamespaces = this.getChainNamespacesSet(
                e.adapters,
                this.caipNetworks
              )),
              (this.defaultCaipNetwork = this.extendDefaultCaipNetwork(e)),
              (this.chainAdapters = this.createAdapters(e.adapters)),
              (this.readyPromise = this.initialize(e));
          }
        }
        e.s({ AppKit: () => ek }, 203218);
        var eb = e.i(517889),
          em = e.i(905379),
          el = e.i(351667);
        let ef = !1;
        class ek extends ec {
          async onAuthProviderConnected(e) {
            e.message &&
              e.signature &&
              e.siwxMessage &&
              (await A.SIWXUtil.addEmbeddedWalletSession(
                {
                  chainId: e.siwxMessage.chainId,
                  accountAddress: e.address,
                  notBefore: e.siwxMessage.notBefore,
                  statement: e.siwxMessage.statement,
                  resources: e.siwxMessage.resources,
                  requestId: e.siwxMessage.requestId,
                  issuedAt: e.siwxMessage.issuedAt,
                  domain: e.siwxMessage.domain,
                  uri: e.siwxMessage.uri,
                  version: e.siwxMessage.version,
                  nonce: e.siwxMessage.nonce,
                },
                e.message,
                e.signature
              ));
            let a = k.ChainController.state.activeChain;
            if (!a)
              throw Error(
                "AppKit:onAuthProviderConnected - namespace is required"
              );
            let n =
                a === s.ConstantsUtil.CHAIN.EVM
                  ? "eip155:".concat(e.chainId, ":").concat(e.address)
                  : "".concat(e.chainId, ":").concat(e.address),
              o = T.OptionsController.state.defaultAccountTypes[a],
              r = (0, P.getPreferredAccountType)(a),
              t = e.preferredAccountType || r || o;
            _.HelpersUtil.isLowerCaseMatch(
              e.address,
              c.AccountController.state.address
            ) ||
              this.syncIdentity({
                address: e.address,
                chainId: e.chainId,
                chainNamespace: a,
              }),
              this.setCaipAddress(n, a);
            let { signature: i, siwxMessage: d, message: b, ...m } = e;
            this.setUser(
              { ...(c.AccountController.state.user || {}), ...m },
              a
            ),
              this.setSmartAccountDeployed(!!e.smartAccountDeployed, a),
              this.setPreferredAccountType(t, a),
              this.setLoading(!1, a);
          }
          setupAuthConnectorListeners(e) {
            e.onRpcRequest((a) => {
              em.W3mFrameHelpers.checkIfRequestExists(a)
                ? em.W3mFrameHelpers.checkIfRequestIsSafe(a) ||
                  this.handleUnsafeRPCRequest()
                : (this.open(),
                  console.error(
                    el.W3mFrameRpcConstants.RPC_METHOD_NOT_ALLOWED_MESSAGE,
                    { method: a.method }
                  ),
                  setTimeout(() => {
                    this.showErrorMessage(
                      el.W3mFrameRpcConstants.RPC_METHOD_NOT_ALLOWED_UI_MESSAGE
                    );
                  }, 300),
                  e.rejectRpcRequests());
            }),
              e.onRpcError(() => {
                this.isOpen() &&
                  (this.isTransactionStackEmpty()
                    ? this.close()
                    : this.popTransactionStack("error"));
              }),
              e.onRpcSuccess((e, a) => {
                let n = em.W3mFrameHelpers.checkIfRequestIsSafe(a),
                  o = c.AccountController.state.address,
                  r = k.ChainController.state.activeCaipNetwork;
                n ||
                  (o &&
                    (null == r ? void 0 : r.id) &&
                    this.updateNativeBalance(o, r.id, r.chainNamespace),
                  this.isTransactionStackEmpty()
                    ? this.close()
                    : this.popTransactionStack("success"));
              }),
              e.onNotConnected(() => {
                let e = k.ChainController.state.activeChain;
                if (!e)
                  throw Error("AppKit:onNotConnected - namespace is required");
                p.ConnectorController.getConnectorId(e) ===
                  s.ConstantsUtil.CONNECTOR_ID.AUTH &&
                  (this.setCaipAddress(void 0, e), this.setLoading(!1, e));
              }),
              e.onConnect(this.onAuthProviderConnected.bind(this)),
              e.onSocialConnected(this.onAuthProviderConnected.bind(this)),
              e.onSetPreferredAccount((e) => {
                let { address: a, type: n } = e,
                  o = k.ChainController.state.activeChain;
                if (!o)
                  throw Error(
                    "AppKit:onSetPreferredAccount - namespace is required"
                  );
                a && this.setPreferredAccountType(n, o);
              });
          }
          async syncAuthConnectorTheme(e) {
            if (!e) return;
            let a = O.ThemeController.getSnapshot(),
              n = T.OptionsController.getSnapshot();
            await Promise.all([
              e.syncDappData({
                metadata: n.metadata,
                sdkVersion: n.sdkVersion,
                projectId: n.projectId,
                sdkType: n.sdkType,
              }),
              e.syncTheme({
                themeMode: a.themeMode,
                themeVariables: a.themeVariables,
                w3mThemeVariables: (0, eb.getW3mThemeVariables)(
                  a.themeVariables,
                  a.themeMode
                ),
              }),
            ]);
          }
          async syncAuthConnector(e, a) {
            var n, o, r, t;
            let i = s.ConstantsUtil.AUTH_CONNECTOR_SUPPORTED_CHAINS.includes(a),
              d = a === k.ChainController.state.activeChain;
            if (!i) return;
            this.setLoading(!0, a);
            let b = e.getLoginEmailUsed();
            this.setLoading(b, a), b && this.setStatus("connecting", a);
            let m = e.getEmail(),
              l = e.getUsername();
            this.setUser(
              {
                ...((null == (n = c.AccountController.state)
                  ? void 0
                  : n.user) || {}),
                username: l,
                email: m,
              },
              a
            ),
              this.setupAuthConnectorListeners(e);
            let { isConnected: f } = await e.isConnected();
            if ((await this.syncAuthConnectorTheme(e), a && i && d)) {
              let n = await e.getSmartAccountEnabledNetworks();
              k.ChainController.setSmartAccountEnabledNetworks(
                (null == n ? void 0 : n.smartAccountEnabledNetworks) || [],
                a
              ),
                f &&
                (null == (o = this.connectionControllerClient)
                  ? void 0
                  : o.connectExternal)
                  ? (await (null == (t = this.connectionControllerClient)
                      ? void 0
                      : t.connectExternal({
                          id: s.ConstantsUtil.CONNECTOR_ID.AUTH,
                          info: { name: s.ConstantsUtil.CONNECTOR_ID.AUTH },
                          type: G.ConstantsUtil.CONNECTOR_TYPE_AUTH,
                          provider: e,
                          chainId:
                            null ==
                            (r = k.ChainController.state.activeCaipNetwork)
                              ? void 0
                              : r.id,
                          chain: a,
                        })),
                    this.setStatus("connected", a))
                  : p.ConnectorController.getConnectorId(a) ===
                      s.ConstantsUtil.CONNECTOR_ID.AUTH &&
                    (this.setStatus("disconnected", a),
                    I.StorageUtil.removeConnectedNamespace(a));
            }
            this.setLoading(!1, a);
          }
          async checkExistingTelegramSocialConnection(e) {
            try {
              var a, n;
              if (!g.CoreHelperUtil.isTelegram()) return;
              let o = I.StorageUtil.getTelegramSocialProvider();
              if (!o || !g.CoreHelperUtil.isClient()) return;
              let r = new URL(window.location.href).searchParams.get(
                "result_uri"
              );
              if (!r) return;
              c.AccountController.setSocialProvider(o, e),
                await (null == (a = this.authProvider) ? void 0 : a.init());
              let t = p.ConnectorController.getAuthConnector();
              o &&
                t &&
                (this.setLoading(!0, e),
                await u.ConnectionController.connectExternal(
                  { id: t.id, type: t.type, socialUri: r },
                  t.chain
                ),
                I.StorageUtil.setConnectedSocialProvider(o),
                I.StorageUtil.removeTelegramSocialProvider(),
                v.EventsController.sendEvent({
                  type: "track",
                  event: "SOCIAL_LOGIN_SUCCESS",
                  properties: {
                    provider: o,
                    caipNetworkId:
                      null == (n = k.ChainController.getActiveCaipNetwork())
                        ? void 0
                        : n.caipNetworkId,
                  },
                }));
            } catch (a) {
              this.setLoading(!1, e),
                console.error("checkExistingSTelegramocialConnection error", a);
            }
            try {
              let e = new URL(window.location.href);
              e.searchParams.delete("result_uri"),
                window.history.replaceState({}, document.title, e.toString());
            } catch (e) {
              console.error("tma social login failed", e);
            }
          }
          createAuthProvider(e) {
            var a, n, o, t;
            if (!s.ConstantsUtil.AUTH_CONNECTOR_SUPPORTED_CHAINS.includes(e))
              return;
            let i = null == (a = this.remoteFeatures) ? void 0 : a.email,
              d =
                Array.isArray(
                  null == (n = this.remoteFeatures) ? void 0 : n.socials
                ) && this.remoteFeatures.socials.length > 0,
              c = _.HelpersUtil.getActiveNamespaceConnectedToAuth() || e;
            !this.authProvider &&
              (null == (o = this.options) ? void 0 : o.projectId) &&
              (i || d) &&
              ((this.authProvider = r.getInstance({
                projectId: this.options.projectId,
                enableLogger: this.options.enableAuthLogger,
                chainId:
                  null == (t = this.getCaipNetwork(c))
                    ? void 0
                    : t.caipNetworkId,
                abortController: U.ErrorUtil.EmbeddedWalletAbortController,
                onTimeout: (e) => {
                  "iframe_load_failed" === e
                    ? b.AlertController.open(
                        U.ErrorUtil.ALERT_ERRORS.IFRAME_LOAD_FAILED,
                        "error"
                      )
                    : "iframe_request_timeout" === e
                    ? b.AlertController.open(
                        U.ErrorUtil.ALERT_ERRORS.IFRAME_REQUEST_TIMEOUT,
                        "error"
                      )
                    : "unverified_domain" === e &&
                      b.AlertController.open(
                        U.ErrorUtil.ALERT_ERRORS.UNVERIFIED_DOMAIN,
                        "error"
                      );
                },
                getActiveCaipNetwork: (e) =>
                  k.ChainController.getActiveCaipNetwork(e),
              })),
              R.PublicStateController.subscribeOpen((e) => {
                if (!e && this.isTransactionStackEmpty()) {
                  var a;
                  null == (a = this.authProvider) || a.rejectRpcRequests();
                }
              }));
            let m =
              e === k.ChainController.state.activeChain &&
              T.OptionsController.state.enableReconnect;
            !1 === T.OptionsController.state.enableReconnect
              ? this.syncAuthConnectorTheme(this.authProvider)
              : this.authProvider &&
                m &&
                (this.syncAuthConnector(this.authProvider, e),
                this.checkExistingTelegramSocialConnection(e));
          }
          createAuthProviderForAdapter(e) {
            if ((this.createAuthProvider(e), this.authProvider)) {
              var a, n, o;
              null == (o = this.chainAdapters) ||
                null == (n = o[e]) ||
                null == (a = n.setAuthProvider) ||
                a.call(n, this.authProvider);
            }
          }
          initControllers(e) {
            super.initControllers(e),
              this.options.excludeWalletIds &&
                m.ApiController.initializeExcludedWallets({
                  ids: this.options.excludeWalletIds,
                });
          }
          async switchCaipNetwork(e) {
            if (!e) return;
            let a = k.ChainController.state.activeChain,
              n = e.chainNamespace,
              o = this.getAddressByChainNamespace(n);
            if (n === a && o) {
              let a = this.getAdapter(n),
                o = X.ProviderUtil.getProvider(n),
                r = X.ProviderUtil.getProviderId(n);
              await (null == a
                ? void 0
                : a.switchNetwork({
                    caipNetwork: e,
                    provider: o,
                    providerType: r,
                  })),
                this.setCaipNetwork(e);
            } else {
              let i =
                  X.ProviderUtil.getProviderId(a) ===
                  G.ConstantsUtil.CONNECTOR_TYPE_AUTH,
                d = X.ProviderUtil.getProviderId(n),
                c = d === G.ConstantsUtil.CONNECTOR_TYPE_AUTH,
                b = s.ConstantsUtil.AUTH_CONNECTOR_SUPPORTED_CHAINS.includes(n);
              if (!n)
                throw Error(
                  "AppKit:switchCaipNetwork - networkNamespace is required"
                );
              if (((i && void 0 === d) || c) && b)
                try {
                  if (
                    ((k.ChainController.state.activeChain = e.chainNamespace),
                    o)
                  ) {
                    let a = this.getAdapter(n);
                    await (null == a
                      ? void 0
                      : a.switchNetwork({
                          caipNetwork: e,
                          provider: this.authProvider,
                          providerType: d,
                        }));
                  } else {
                    var r, t;
                    await (null == (t = this.connectionControllerClient) ||
                    null == (r = t.connectExternal)
                      ? void 0
                      : r.call(t, {
                          id: s.ConstantsUtil.CONNECTOR_ID.AUTH,
                          provider: this.authProvider,
                          chain: n,
                          chainId: e.id,
                          type: G.ConstantsUtil.CONNECTOR_TYPE_AUTH,
                          caipNetwork: e,
                        }));
                  }
                  this.setCaipNetwork(e);
                } catch (o) {
                  let a = this.getAdapter(n);
                  await (null == a
                    ? void 0
                    : a.switchNetwork({
                        caipNetwork: e,
                        provider: this.authProvider,
                        providerType: d,
                      }));
                }
              else if (d === G.ConstantsUtil.CONNECTOR_TYPE_WALLET_CONNECT) {
                if (!k.ChainController.state.noAdapters) {
                  let a = this.getAdapter(n),
                    o = X.ProviderUtil.getProvider(n),
                    r = X.ProviderUtil.getProviderId(n);
                  await (null == a
                    ? void 0
                    : a.switchNetwork({
                        caipNetwork: e,
                        provider: o,
                        providerType: r,
                      }));
                }
                this.setCaipNetwork(e), this.syncWalletConnectAccount();
              } else
                this.setCaipNetwork(e),
                  o &&
                    this.syncAccount({
                      address: o,
                      chainId: e.id,
                      chainNamespace: n,
                    });
            }
          }
          async initialize(e) {
            var a;
            await super.initialize(e),
              null == (a = this.chainNamespaces) ||
                a.forEach((e) => {
                  this.createAuthProviderForAdapter(e);
                }),
              await this.injectModalUi(),
              R.PublicStateController.set({ initialized: !0 });
          }
          async syncIdentity(e) {
            var a;
            let { address: n, chainId: o, chainNamespace: r } = e,
              t = "".concat(r, ":").concat(o),
              i =
                null == (a = this.caipNetworks)
                  ? void 0
                  : a.find((e) => e.caipNetworkId === t);
            if (
              r !== s.ConstantsUtil.CHAIN.EVM ||
              (null == i ? void 0 : i.testnet)
            ) {
              this.setProfileName(null, r), this.setProfileImage(null, r);
              return;
            }
            try {
              let { name: e, avatar: a } = await this.fetchIdentity({
                address: n,
                caipNetworkId: t,
              });
              this.setProfileName(e, r), this.setProfileImage(a, r);
            } catch (e) {
              await this.syncReownName(n, r),
                1 !== o && this.setProfileImage(null, r);
            }
          }
          syncConnectedWalletInfo(e) {
            let a = X.ProviderUtil.getProviderId(e);
            if (a === G.ConstantsUtil.CONNECTOR_TYPE_AUTH) {
              let r = this.authProvider;
              if (r) {
                var n, o;
                let t =
                    null != (n = I.StorageUtil.getConnectedSocialProvider())
                      ? n
                      : "email",
                  s = null != (o = r.getEmail()) ? o : r.getUsername();
                this.setConnectedWalletInfo(
                  { name: a, identifier: s, social: t },
                  e
                );
              }
            } else super.syncConnectedWalletInfo(e);
          }
          async injectModalUi() {
            if (g.CoreHelperUtil.isClient() && !ef)
              try {
                let e = {
                    ...x.ConstantsUtil.DEFAULT_FEATURES,
                    ...this.options.features,
                  },
                  a = this.remoteFeatures;
                if (
                  (await this.loadModalComponents(e, a),
                  g.CoreHelperUtil.isClient() &&
                    !document.querySelector("w3m-modal"))
                ) {
                  let e = document.createElement("w3m-modal");
                  T.OptionsController.state.disableAppend ||
                    T.OptionsController.state.enableEmbedded ||
                    document.body.insertAdjacentElement("beforeend", e);
                }
                ef = !0;
              } catch (e) {
                console.error("Error injecting modal UI:", e);
              }
          }
          async loadModalComponents(a, n) {
            if (!g.CoreHelperUtil.isClient()) return;
            let o = [];
            (n.email || (n.socials && n.socials.length > 0)) &&
              o.push(e.r(421991)(e.i)),
              n.email && o.push(e.r(714793)(e.i)),
              n.socials && o.push(e.r(154056)(e.i)),
              n.swaps && n.swaps.length > 0 && o.push(e.r(28007)(e.i)),
              a.send && o.push(e.r(615502)(e.i)),
              a.receive && o.push(e.r(8216)(e.i)),
              n.onramp && n.onramp.length > 0 && o.push(e.r(247984)(e.i)),
              n.activity && o.push(e.r(77929)(e.i)),
              a.pay && o.push(e.r(676539)(e.i)),
              await Promise.all([...o, e.r(22689)(e.i), e.r(220507)(e.i)]);
          }
        }
        var eu = e.i(756253);
        e.s(
          {
            getAppKit: () => ev,
            useAppKit: () => ey,
            useAppKitEvents: () => eT,
            useWalletInfo: () => eN,
          },
          804055
        );
        var eh = e.i(740487),
          ep = e.i(861600);
        let ex = {
            get url() {
              return `file://${e.P(
                "node_modules/.pnpm/valtio@2.1.5_@types+react@19.1.0_react@19.1.0/node_modules/valtio/esm/react.mjs"
              )}`;
            },
          },
          eg = new WeakMap();
        function eC(e, a) {
          let n = null == a ? void 0 : a.sync,
            o = (0, eu.useMemo)(() => e && new WeakMap(), [e]),
            r = (0, eu.useRef)(void 0),
            t = !0,
            s = (0, eu.useSyncExternalStore)(
              (0, eu.useCallback)(
                (a) => {
                  let o = (0, ep.subscribe)(e, a, n);
                  return a(), o;
                },
                [e, n]
              ),
              () => {
                let a = (0, ep.snapshot)(e);
                try {
                  if (
                    !t &&
                    r.current &&
                    !(0, eh.isChanged)(r.current, a, o, new WeakMap())
                  )
                    return r.current;
                } catch (e) {}
                return a;
              },
              () => (0, ep.snapshot)(e)
            );
          (t = !1),
            (0, eu.useLayoutEffect)(() => {
              r.current = s;
            }),
            (ex.env ? ex.env.MODE : void 0) !== "production" &&
              ((e, a) => {
                let n = (0, eu.useRef)(void 0);
                (0, eu.useEffect)(() => {
                  n.current = (0, eh.affectedToPathList)(e, a, !0);
                }),
                  (0, eu.useDebugValue)(n.current);
              })(s, o);
          let i = (0, eu.useMemo)(() => new WeakMap(), []);
          return (0, eh.createProxy)(s, o, i, eg);
        }
        function ev(e) {
          e && (a = e);
        }
        function ey() {
          if (!a)
            throw Error(
              'Please call "createAppKit" before using "useAppKit" hook'
            );
          return {
            open: async function (e) {
              await (null == a ? void 0 : a.open(e));
            },
            close: async function () {
              await (null == a ? void 0 : a.close());
            },
          };
        }
        function eN(e) {
          if (!a)
            throw Error(
              'Please call "createAppKit" before using "useWalletInfo" hook'
            );
          return {
            walletInfo: (0, eu.useSyncExternalStore)(
              (n) => {
                let o = null == a ? void 0 : a.subscribeWalletInfo(n, e);
                return () => (null == o ? void 0 : o());
              },
              () => (null == a ? void 0 : a.getWalletInfo(e)),
              () => (null == a ? void 0 : a.getWalletInfo(e))
            ),
          };
        }
        function eT() {
          if (!a)
            throw Error(
              'Please call "createAppKit" before using "useAppKitEvents" hook'
            );
          let [e, n] = (0, eu.useState)(a.getEvent());
          return (
            (0, eu.useEffect)(() => {
              let e =
                null == a
                  ? void 0
                  : a.subscribeEvents((e) => {
                      n({ ...e });
                    });
              return () => {
                null == e || e();
              };
            }, []),
            e
          );
        }
        e.s({ PACKAGE_VERSION: () => eR }, 350423);
        let eR = "1.7.15";
        function eE() {
          let { activeCaipNetwork: e } = eC(k.ChainController.state);
          return {
            caipNetwork: e,
            chainId: null == e ? void 0 : e.id,
            caipNetworkId: null == e ? void 0 : e.caipNetworkId,
          };
        }
        function eA(e) {
          var a;
          let n = eC(k.ChainController.state),
            { activeConnectorIds: o } = eC(p.ConnectorController.state),
            r = (null == e ? void 0 : e.namespace) || n.activeChain;
          if (!r)
            return {
              allAccounts: [],
              address: void 0,
              caipAddress: void 0,
              status: void 0,
              isConnected: !1,
              embeddedWalletInfo: void 0,
            };
          let t = null == (a = n.chains.get(r)) ? void 0 : a.accountState,
            i = p.ConnectorController.getAuthConnector(r),
            d = o[r];
          return {
            allAccounts: u.ConnectionController.getConnections(r).flatMap((e) =>
              e.accounts.map((e) => {
                let { address: a } = e;
                return g.CoreHelperUtil.createAccount(r, a, "eoa");
              })
            ),
            caipAddress: null == t ? void 0 : t.caipAddress,
            address: g.CoreHelperUtil.getPlainAddress(
              null == t ? void 0 : t.caipAddress
            ),
            isConnected: !!(null == t ? void 0 : t.caipAddress),
            status: null == t ? void 0 : t.status,
            embeddedWalletInfo:
              i && d === s.ConstantsUtil.CONNECTOR_ID.AUTH
                ? {
                    user: (null == t ? void 0 : t.user)
                      ? {
                          ...t.user,
                          username: I.StorageUtil.getConnectedSocialUsername(),
                        }
                      : void 0,
                    authProvider:
                      (null == t ? void 0 : t.socialProvider) || "email",
                    accountType: null == t ? void 0 : t.preferredAccountType,
                    isSmartAccountDeployed: !!(null == t
                      ? void 0
                      : t.smartAccountDeployed),
                  }
                : void 0,
          };
        }
        function ew() {
          return {
            disconnect: async function (e) {
              await u.ConnectionController.disconnect(e);
            },
          };
        }
        function eS(e) {
          if (!n) {
            var a;
            ev(
              (n = new ek({
                ...e,
                sdkVersion: g.CoreHelperUtil.generateSdkVersion(
                  null != (a = e.adapters) ? a : [],
                  "react",
                  eR
                ),
              }))
            );
          }
          return n;
        }
        function eI() {
          let { caipNetwork: e, caipNetworkId: a, chainId: o } = eE();
          return {
            caipNetwork: e,
            caipNetworkId: a,
            chainId: o,
            switchNetwork: function (e) {
              null == n || n.switchNetwork(e);
            },
          };
        }
        e.s({ createAppKit: () => eS, useAppKitNetwork: () => eI }, 794214),
          e.s(
            {
              useAppKitAccount: () => eA,
              useAppKitNetworkCore: () => eE,
              useDisconnect: () => ew,
            },
            906460
          ),
          e.i(841768),
          e.s({ bsc: () => eP }, 631007);
        var eO = e.i(989915);
        let eP = (0, eO.defineChain)({
          id: 56,
          name: "BNB Smart Chain",
          nativeCurrency: { decimals: 18, name: "BNB", symbol: "BNB" },
          rpcUrls: { default: { http: ["https://56.rpc.thirdweb.com"] } },
          blockExplorers: {
            default: {
              name: "BscScan",
              url: "https://bscscan.com",
              apiUrl: "https://api.bscscan.com/api",
            },
          },
          contracts: {
            multicall3: {
              address: "0xca11bde05977b3631167028862be2a173976ca11",
              blockCreated: 0xf2f12c,
            },
          },
        });
        e.s({ mainnet: () => eD }, 724638);
        let eD = (0, eO.defineChain)({
          id: 1,
          name: "Ethereum",
          nativeCurrency: { name: "Ether", symbol: "ETH", decimals: 18 },
          rpcUrls: { default: { http: ["https://eth.merkle.io"] } },
          blockExplorers: {
            default: {
              name: "Etherscan",
              url: "https://etherscan.io",
              apiUrl: "https://api.etherscan.io/api",
            },
          },
          contracts: {
            ensRegistry: {
              address: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
            },
            ensUniversalResolver: {
              address: "0xce01f8eee7E479C928F8919abD53E553a36CeF67",
              blockCreated: 0x125db65,
            },
            multicall3: {
              address: "0xca11bde05977b3631167028862be2a173976ca11",
              blockCreated: 0xdb04c1,
            },
          },
        });
      },
      [
        604320, 107007, 912117, 52164, 508800, 6142, 203218, 501624, 804055,
        350423, 906460, 794214, 631007, 724638,
      ],
    ],
    168491: [
      (e) => {
        "use strict";
        e.s(
          { trackWalletConnectStart: () => s, trackWalletConnected: () => i },
          168491
        ),
          e.s(
            {
              EVENT_NAMES: () => a,
              WORKFLOW_NAMES: () => n,
              WORKFLOW_STEPS: () => o,
            },
            779026
          );
        let a = {
            WORKFLOW_STEP: "workflowStep",
            PURCHASE: "purchase",
            SUBSCRIBE_EMAIL: "subscribeEmail",
          },
          n = {
            CONNECT_WALLET: "connectWallet",
            APPROVE_USDT: "approveUSDT",
            SWAP: "swap",
          },
          o = {
            START: "start",
            SUCCESSFUL: "successful",
            IS_RECONNECTED: "isReconnected",
            CTA: "cta",
            SWAP_AMOUNT: "swapAmount",
            CONFIRM_TX: "confirmTransaction",
            SWAP_SUCCESS: "swapSuccessful",
            COMPLETE: "complete",
          };
        e.s({ sendEvent: () => t }, 386523);
        var r = e.i(174519);
        let t = (e, a) => {
            let n = "true" === r.default.env.NEXT_PUBLIC_DEBUG_EVENTS;
            try {
              n && console.log("[GTM] Send Event:", e, a),
                (window.dataLayer = window.dataLayer || []),
                window.dataLayer.push({ event: e, ...a }),
                n && console.log("[GTM] Event Sent:", e, a);
            } catch (e) {
              console.error("[GTM] Error sending event to GTM:", e);
            }
          },
          s = () => {
            t(a.WORKFLOW_STEP, {
              workflowName: n.CONNECT_WALLET,
              workflowStepNumber: 1,
              workflowStepName: o.START,
              workflowCompleteFlag: 0,
              workflowErrorCode: 0,
            });
          },
          i = (e) => {
            var r;
            t(a.WORKFLOW_STEP, {
              workflowName: n.CONNECT_WALLET,
              workflowStepNumber: 2,
              workflowStepName: o.SUCCESSFUL,
              workflowCompleteFlag: 1,
              walletAddress: e.walletAddress,
              walletName: e.walletName,
              workflowErrorCode: null != (r = e.workflowErrorCode) ? r : 0,
            });
          };
        e.s({ useEvmEvents: () => m }, 575453), e.i(505758);
        var d = e.i(906460),
          c = e.i(804055),
          b = e.i(756253);
        let m = () => {
          let { data: e } = (0, c.useAppKitEvents)(),
            { address: a } = (0, d.useAppKitAccount)(),
            n = "true" === r.default.env.NEXT_PUBLIC_DEBUG_EVENTS;
          return (
            (0, b.useEffect)(() => {
              if (e)
                switch (e.event) {
                  case "CONNECT_SUCCESS":
                    i({
                      walletAddress: a || e.address,
                      walletName: e.properties.name,
                    });
                    break;
                  case "CONNECT_ERROR":
                    i({ workflowErrorCode: 1 });
                    break;
                  default:
                    n && console.warn("Unhandled AppKit event:", e.event, e);
                }
            }, [e, a]),
            null
          );
        };
      },
      [779026, 386523, 575453],
    ],
    545221: [
      (e) => {
        "use strict";
        e.s({ focusManager: () => W }, 545221);
        var a,
          n,
          o,
          r,
          t,
          s,
          i,
          d,
          c,
          b,
          m,
          l,
          f,
          k,
          u,
          h = e.i(632859),
          p = e.i(526050),
          x = e.i(607618);
        e.s({ Subscribable: () => g }, 502373);
        var g = class {
          subscribe(e) {
            return (
              this.listeners.add(e),
              this.onSubscribe(),
              () => {
                this.listeners.delete(e), this.onUnsubscribe();
              }
            );
          }
          hasListeners() {
            return this.listeners.size > 0;
          }
          onSubscribe() {}
          onUnsubscribe() {}
          constructor() {
            (this.listeners = new Set()),
              (this.subscribe = this.subscribe.bind(this));
          }
        };
        e.s(
          {
            addToEnd: () => _,
            addToStart: () => F,
            ensureQueryFn: () => G,
            functionalUpdate: () => y,
            hashKey: () => I,
            hashQueryKeyByOptions: () => S,
            isServer: () => C,
            isValidTimeout: () => N,
            matchMutation: () => w,
            matchQuery: () => A,
            noop: () => v,
            partialMatchKey: () => O,
            replaceData: () => U,
            resolveEnabled: () => E,
            resolveStaleTime: () => R,
            shallowEqualObjects: () => P,
            shouldThrowError: () => X,
            skipToken: () => H,
            sleep: () => B,
            timeUntilStale: () => T,
          },
          406371
        ),
          e.i(174519);
        var C = "undefined" == typeof window || "Deno" in globalThis;
        function v() {}
        function y(e, a) {
          return "function" == typeof e ? e(a) : e;
        }
        function N(e) {
          return "number" == typeof e && e >= 0 && e !== 1 / 0;
        }
        function T(e, a) {
          return Math.max(e + (a || 0) - Date.now(), 0);
        }
        function R(e, a) {
          return "function" == typeof e ? e(a) : e;
        }
        function E(e, a) {
          return "function" == typeof e ? e(a) : e;
        }
        function A(e, a) {
          let {
            type: n = "all",
            exact: o,
            fetchStatus: r,
            predicate: t,
            queryKey: s,
            stale: i,
          } = e;
          if (s) {
            if (o) {
              if (a.queryHash !== S(s, a.options)) return !1;
            } else if (!O(a.queryKey, s)) return !1;
          }
          if ("all" !== n) {
            let e = a.isActive();
            if (("active" === n && !e) || ("inactive" === n && e)) return !1;
          }
          return (
            ("boolean" != typeof i || a.isStale() === i) &&
            (!r || r === a.state.fetchStatus) &&
            (!t || !!t(a))
          );
        }
        function w(e, a) {
          let { exact: n, status: o, predicate: r, mutationKey: t } = e;
          if (t) {
            if (!a.options.mutationKey) return !1;
            if (n) {
              if (I(a.options.mutationKey) !== I(t)) return !1;
            } else if (!O(a.options.mutationKey, t)) return !1;
          }
          return (!o || a.state.status === o) && (!r || !!r(a));
        }
        function S(e, a) {
          return ((null == a ? void 0 : a.queryKeyHashFn) || I)(e);
        }
        function I(e) {
          return JSON.stringify(e, (e, a) =>
            L(a)
              ? Object.keys(a)
                  .sort()
                  .reduce((e, n) => ((e[n] = a[n]), e), {})
              : a
          );
        }
        function O(e, a) {
          return (
            e === a ||
            (typeof e == typeof a &&
              !!e &&
              !!a &&
              "object" == typeof e &&
              "object" == typeof a &&
              Object.keys(a).every((n) => O(e[n], a[n])))
          );
        }
        function P(e, a) {
          if (!a || Object.keys(e).length !== Object.keys(a).length) return !1;
          for (let n in e) if (e[n] !== a[n]) return !1;
          return !0;
        }
        function D(e) {
          return Array.isArray(e) && e.length === Object.keys(e).length;
        }
        function L(e) {
          if (!M(e)) return !1;
          let a = e.constructor;
          if (void 0 === a) return !0;
          let n = a.prototype;
          return (
            !!M(n) &&
            !!n.hasOwnProperty("isPrototypeOf") &&
            Object.getPrototypeOf(e) === Object.prototype
          );
        }
        function M(e) {
          return "[object Object]" === Object.prototype.toString.call(e);
        }
        function B(e) {
          return new Promise((a) => {
            setTimeout(a, e);
          });
        }
        function U(e, a, n) {
          return "function" == typeof n.structuralSharing
            ? n.structuralSharing(e, a)
            : !1 !== n.structuralSharing
            ? (function e(a, n) {
                if (a === n) return a;
                let o = D(a) && D(n);
                if (o || (L(a) && L(n))) {
                  let r = o ? a : Object.keys(a),
                    t = r.length,
                    s = o ? n : Object.keys(n),
                    i = s.length,
                    d = o ? [] : {},
                    c = new Set(r),
                    b = 0;
                  for (let r = 0; r < i; r++) {
                    let t = o ? r : s[r];
                    ((!o && c.has(t)) || o) &&
                    void 0 === a[t] &&
                    void 0 === n[t]
                      ? ((d[t] = void 0), b++)
                      : ((d[t] = e(a[t], n[t])),
                        d[t] === a[t] && void 0 !== a[t] && b++);
                  }
                  return t === i && b === t ? a : d;
                }
                return n;
              })(e, a)
            : a;
        }
        function _(e, a) {
          let n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : 0,
            o = [...e, a];
          return n && o.length > n ? o.slice(1) : o;
        }
        function F(e, a) {
          let n =
              arguments.length > 2 && void 0 !== arguments[2]
                ? arguments[2]
                : 0,
            o = [a, ...e];
          return n && o.length > n ? o.slice(0, -1) : o;
        }
        var H = Symbol();
        function G(e, a) {
          return !e.queryFn && (null == a ? void 0 : a.initialPromise)
            ? () => a.initialPromise
            : e.queryFn && e.queryFn !== H
            ? e.queryFn
            : () =>
                Promise.reject(
                  Error("Missing queryFn: '".concat(e.queryHash, "'"))
                );
        }
        function X(e, a) {
          return "function" == typeof e ? e(...a) : !!e;
        }
        var W = new ((a = new WeakMap()),
        (n = new WeakMap()),
        (o = new WeakMap()),
        class extends g {
          onSubscribe() {
            (0, h._)(this, n) || this.setEventListener((0, h._)(this, o));
          }
          onUnsubscribe() {
            var e;
            this.hasListeners() ||
              (null == (e = (0, h._)(this, n)) || e.call(this),
              (0, x._)(this, n, void 0));
          }
          setEventListener(e) {
            var a;
            (0, x._)(this, o, e),
              null == (a = (0, h._)(this, n)) || a.call(this),
              (0, x._)(
                this,
                n,
                e((e) => {
                  "boolean" == typeof e ? this.setFocused(e) : this.onFocus();
                })
              );
          }
          setFocused(e) {
            (0, h._)(this, a) !== e && ((0, x._)(this, a, e), this.onFocus());
          }
          onFocus() {
            let e = this.isFocused();
            this.listeners.forEach((a) => {
              a(e);
            });
          }
          isFocused() {
            var e;
            return "boolean" == typeof (0, h._)(this, a)
              ? (0, h._)(this, a)
              : (null == (e = globalThis.document)
                  ? void 0
                  : e.visibilityState) !== "hidden";
          }
          constructor() {
            super(),
              (0, p._)(this, a, { writable: !0, value: void 0 }),
              (0, p._)(this, n, { writable: !0, value: void 0 }),
              (0, p._)(this, o, { writable: !0, value: void 0 }),
              (0, x._)(this, o, (e) => {
                if (!C && window.addEventListener) {
                  let a = () => e();
                  return (
                    window.addEventListener("visibilitychange", a, !1),
                    () => {
                      window.removeEventListener("visibilitychange", a);
                    }
                  );
                }
              });
          }
        })();
        e.s({ notifyManager: () => V }, 14047);
        var K = (e) => setTimeout(e, 0),
          V = (function () {
            let e = [],
              a = 0,
              n = (e) => {
                e();
              },
              o = (e) => {
                e();
              },
              r = K,
              t = (o) => {
                a
                  ? e.push(o)
                  : r(() => {
                      n(o);
                    });
              };
            return {
              batch: (t) => {
                let s;
                a++;
                try {
                  s = t();
                } finally {
                  --a ||
                    (() => {
                      let a = e;
                      (e = []),
                        a.length &&
                          r(() => {
                            o(() => {
                              a.forEach((e) => {
                                n(e);
                              });
                            });
                          });
                    })();
                }
                return s;
              },
              batchCalls: (e) =>
                function () {
                  for (
                    var a = arguments.length, n = Array(a), o = 0;
                    o < a;
                    o++
                  )
                    n[o] = arguments[o];
                  t(() => {
                    e(...n);
                  });
                },
              schedule: t,
              setNotifyFunction: (e) => {
                n = e;
              },
              setBatchNotifyFunction: (e) => {
                o = e;
              },
              setScheduler: (e) => {
                r = e;
              },
            };
          })();
        e.s({ Query: () => en, fetchState: () => eo }, 912353);
        var z = e.i(238193),
          j = e.i(526350);
        e.s(
          {
            canFetch: () => Q,
            createRetryer: () => ee,
            isCancelledError: () => $,
          },
          528593
        ),
          e.s({ onlineManager: () => q }, 785895);
        var q = new ((r = new WeakMap()),
        (t = new WeakMap()),
        (s = new WeakMap()),
        class extends g {
          onSubscribe() {
            (0, h._)(this, t) || this.setEventListener((0, h._)(this, s));
          }
          onUnsubscribe() {
            var e;
            this.hasListeners() ||
              (null == (e = (0, h._)(this, t)) || e.call(this),
              (0, x._)(this, t, void 0));
          }
          setEventListener(e) {
            var a;
            (0, x._)(this, s, e),
              null == (a = (0, h._)(this, t)) || a.call(this),
              (0, x._)(this, t, e(this.setOnline.bind(this)));
          }
          setOnline(e) {
            (0, h._)(this, r) !== e &&
              ((0, x._)(this, r, e),
              this.listeners.forEach((a) => {
                a(e);
              }));
          }
          isOnline() {
            return (0, h._)(this, r);
          }
          constructor() {
            super(),
              (0, p._)(this, r, { writable: !0, value: !0 }),
              (0, p._)(this, t, { writable: !0, value: void 0 }),
              (0, p._)(this, s, { writable: !0, value: void 0 }),
              (0, x._)(this, s, (e) => {
                if (!C && window.addEventListener) {
                  let a = () => e(!0),
                    n = () => e(!1);
                  return (
                    window.addEventListener("online", a, !1),
                    window.addEventListener("offline", n, !1),
                    () => {
                      window.removeEventListener("online", a),
                        window.removeEventListener("offline", n);
                    }
                  );
                }
              });
          }
        })();
        function Y() {
          let e,
            a,
            n = new Promise((n, o) => {
              (e = n), (a = o);
            });
          function o(e) {
            Object.assign(n, e), delete n.resolve, delete n.reject;
          }
          return (
            (n.status = "pending"),
            n.catch(() => {}),
            (n.resolve = (a) => {
              o({ status: "fulfilled", value: a }), e(a);
            }),
            (n.reject = (e) => {
              o({ status: "rejected", reason: e }), a(e);
            }),
            n
          );
        }
        function Z(e) {
          return Math.min(1e3 * 2 ** e, 3e4);
        }
        function Q(e) {
          return (null != e ? e : "online") !== "online" || q.isOnline();
        }
        e.s({ pendingThenable: () => Y }, 41167);
        var J = class extends Error {
          constructor(e) {
            super("CancelledError"),
              (this.revert = null == e ? void 0 : e.revert),
              (this.silent = null == e ? void 0 : e.silent);
          }
        };
        function $(e) {
          return e instanceof J;
        }
        function ee(e) {
          let a,
            n = !1,
            o = 0,
            r = !1,
            t = Y(),
            s = () =>
              W.isFocused() &&
              ("always" === e.networkMode || q.isOnline()) &&
              e.canRun(),
            i = () => Q(e.networkMode) && e.canRun(),
            d = (n) => {
              if (!r) {
                var o;
                (r = !0),
                  null == (o = e.onSuccess) || o.call(e, n),
                  null == a || a(),
                  t.resolve(n);
              }
            },
            c = (n) => {
              if (!r) {
                var o;
                (r = !0),
                  null == (o = e.onError) || o.call(e, n),
                  null == a || a(),
                  t.reject(n);
              }
            },
            b = () =>
              new Promise((n) => {
                var o;
                (a = (e) => {
                  (r || s()) && n(e);
                }),
                  null == (o = e.onPause) || o.call(e);
              }).then(() => {
                if (((a = void 0), !r)) {
                  var n;
                  null == (n = e.onContinue) || n.call(e);
                }
              }),
            m = () => {
              let a;
              if (r) return;
              let t = 0 === o ? e.initialPromise : void 0;
              try {
                a = null != t ? t : e.fn();
              } catch (e) {
                a = Promise.reject(e);
              }
              Promise.resolve(a)
                .then(d)
                .catch((a) => {
                  var t, i, d;
                  if (r) return;
                  let l = null != (i = e.retry) ? i : 3 * !C,
                    f = null != (d = e.retryDelay) ? d : Z,
                    k = "function" == typeof f ? f(o, a) : f,
                    u =
                      !0 === l ||
                      ("number" == typeof l && o < l) ||
                      ("function" == typeof l && l(o, a));
                  if (n || !u) return void c(a);
                  o++,
                    null == (t = e.onFail) || t.call(e, o, a),
                    B(k)
                      .then(() => (s() ? void 0 : b()))
                      .then(() => {
                        n ? c(a) : m();
                      });
                });
            };
          return {
            promise: t,
            cancel: (a) => {
              if (!r) {
                var n;
                c(new J(a)), null == (n = e.abort) || n.call(e);
              }
            },
            continue: () => (null == a || a(), t),
            cancelRetry: () => {
              n = !0;
            },
            continueRetry: () => {
              n = !1;
            },
            canStart: i,
            start: () => (i() ? m() : b().then(m), t),
          };
        }
        e.s({ Removable: () => ea }, 667505);
        var ea =
            ((i = new WeakMap()),
            class {
              destroy() {
                this.clearGcTimeout();
              }
              scheduleGc() {
                this.clearGcTimeout(),
                  N(this.gcTime) &&
                    (0, x._)(
                      this,
                      i,
                      setTimeout(() => {
                        this.optionalRemove();
                      }, this.gcTime)
                    );
              }
              updateGcTime(e) {
                this.gcTime = Math.max(
                  this.gcTime || 0,
                  null != e ? e : C ? 1 / 0 : 3e5
                );
              }
              clearGcTimeout() {
                (0, h._)(this, i) &&
                  (clearTimeout((0, h._)(this, i)), (0, x._)(this, i, void 0));
              }
              constructor() {
                (0, p._)(this, i, { writable: !0, value: void 0 });
              }
            }),
          en =
            ((d = new WeakMap()),
            (c = new WeakMap()),
            (b = new WeakMap()),
            (m = new WeakMap()),
            (l = new WeakMap()),
            (f = new WeakMap()),
            (k = new WeakMap()),
            (u = new WeakSet()),
            class extends ea {
              get meta() {
                return this.options.meta;
              }
              get promise() {
                var e;
                return null == (e = (0, h._)(this, l)) ? void 0 : e.promise;
              }
              setOptions(e) {
                (this.options = { ...(0, h._)(this, f), ...e }),
                  this.updateGcTime(this.options.gcTime);
              }
              optionalRemove() {
                this.observers.length ||
                  "idle" !== this.state.fetchStatus ||
                  (0, h._)(this, b).remove(this);
              }
              setData(e, a) {
                let n = U(this.state.data, e, this.options);
                return (
                  (0, z._)(this, u, er).call(this, {
                    data: n,
                    type: "success",
                    dataUpdatedAt: null == a ? void 0 : a.updatedAt,
                    manual: null == a ? void 0 : a.manual,
                  }),
                  n
                );
              }
              setState(e, a) {
                (0, z._)(this, u, er).call(this, {
                  type: "setState",
                  state: e,
                  setStateOptions: a,
                });
              }
              cancel(e) {
                var a, n;
                let o = null == (a = (0, h._)(this, l)) ? void 0 : a.promise;
                return (
                  null == (n = (0, h._)(this, l)) || n.cancel(e),
                  o ? o.then(v).catch(v) : Promise.resolve()
                );
              }
              destroy() {
                super.destroy(), this.cancel({ silent: !0 });
              }
              reset() {
                this.destroy(), this.setState((0, h._)(this, d));
              }
              isActive() {
                return this.observers.some(
                  (e) => !1 !== E(e.options.enabled, this)
                );
              }
              isDisabled() {
                return this.getObserversCount() > 0
                  ? !this.isActive()
                  : this.options.queryFn === H ||
                      this.state.dataUpdateCount +
                        this.state.errorUpdateCount ===
                        0;
              }
              isStatic() {
                return (
                  this.getObserversCount() > 0 &&
                  this.observers.some(
                    (e) => "static" === R(e.options.staleTime, this)
                  )
                );
              }
              isStale() {
                return this.getObserversCount() > 0
                  ? this.observers.some((e) => e.getCurrentResult().isStale)
                  : void 0 === this.state.data || this.state.isInvalidated;
              }
              isStaleByTime() {
                let e =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : 0;
                return (
                  void 0 === this.state.data ||
                  ("static" !== e &&
                    (!!this.state.isInvalidated ||
                      !T(this.state.dataUpdatedAt, e)))
                );
              }
              onFocus() {
                var e;
                let a = this.observers.find((e) =>
                  e.shouldFetchOnWindowFocus()
                );
                null == a || a.refetch({ cancelRefetch: !1 }),
                  null == (e = (0, h._)(this, l)) || e.continue();
              }
              onOnline() {
                var e;
                let a = this.observers.find((e) => e.shouldFetchOnReconnect());
                null == a || a.refetch({ cancelRefetch: !1 }),
                  null == (e = (0, h._)(this, l)) || e.continue();
              }
              addObserver(e) {
                this.observers.includes(e) ||
                  (this.observers.push(e),
                  this.clearGcTimeout(),
                  (0, h._)(this, b).notify({
                    type: "observerAdded",
                    query: this,
                    observer: e,
                  }));
              }
              removeObserver(e) {
                this.observers.includes(e) &&
                  ((this.observers = this.observers.filter((a) => a !== e)),
                  this.observers.length ||
                    ((0, h._)(this, l) &&
                      ((0, h._)(this, k)
                        ? (0, h._)(this, l).cancel({ revert: !0 })
                        : (0, h._)(this, l).cancelRetry()),
                    this.scheduleGc()),
                  (0, h._)(this, b).notify({
                    type: "observerRemoved",
                    query: this,
                    observer: e,
                  }));
              }
              getObserversCount() {
                return this.observers.length;
              }
              invalidate() {
                this.state.isInvalidated ||
                  (0, z._)(this, u, er).call(this, { type: "invalidate" });
              }
              fetch(e, a) {
                var n, o, r;
                if ("idle" !== this.state.fetchStatus) {
                  if (
                    void 0 !== this.state.data &&
                    (null == a ? void 0 : a.cancelRefetch)
                  )
                    this.cancel({ silent: !0 });
                  else if ((0, h._)(this, l))
                    return (
                      (0, h._)(this, l).continueRetry(),
                      (0, h._)(this, l).promise
                    );
                }
                if ((e && this.setOptions(e), !this.options.queryFn)) {
                  let e = this.observers.find((e) => e.options.queryFn);
                  e && this.setOptions(e.options);
                }
                let t = new AbortController(),
                  s = (e) => {
                    Object.defineProperty(e, "signal", {
                      enumerable: !0,
                      get: () => ((0, x._)(this, k, !0), t.signal),
                    });
                  },
                  i = () => {
                    let e = G(this.options, a),
                      n = (() => {
                        let e = {
                          client: (0, h._)(this, m),
                          queryKey: this.queryKey,
                          meta: this.meta,
                        };
                        return s(e), e;
                      })();
                    return ((0, x._)(this, k, !1), this.options.persister)
                      ? this.options.persister(e, n, this)
                      : e(n);
                  },
                  d = (() => {
                    let e = {
                      fetchOptions: a,
                      options: this.options,
                      queryKey: this.queryKey,
                      client: (0, h._)(this, m),
                      state: this.state,
                      fetchFn: i,
                    };
                    return s(e), e;
                  })();
                null == (n = this.options.behavior) || n.onFetch(d, this),
                  (0, x._)(this, c, this.state),
                  ("idle" === this.state.fetchStatus ||
                    this.state.fetchMeta !==
                      (null == (o = d.fetchOptions) ? void 0 : o.meta)) &&
                    (0, z._)(this, u, er).call(this, {
                      type: "fetch",
                      meta: null == (r = d.fetchOptions) ? void 0 : r.meta,
                    });
                let f = (e) => {
                  if (
                    (($(e) && e.silent) ||
                      (0, z._)(this, u, er).call(this, {
                        type: "error",
                        error: e,
                      }),
                    !$(e))
                  ) {
                    var a, n, o, r;
                    null == (a = (n = (0, h._)(this, b).config).onError) ||
                      a.call(n, e, this),
                      null == (o = (r = (0, h._)(this, b).config).onSettled) ||
                        o.call(r, this.state.data, e, this);
                  }
                  this.scheduleGc();
                };
                return (
                  (0, x._)(
                    this,
                    l,
                    ee({
                      initialPromise: null == a ? void 0 : a.initialPromise,
                      fn: d.fetchFn,
                      abort: t.abort.bind(t),
                      onSuccess: (e) => {
                        var a, n, o, r;
                        if (void 0 === e)
                          return void f(
                            Error(
                              "".concat(this.queryHash, " data is undefined")
                            )
                          );
                        try {
                          this.setData(e);
                        } catch (e) {
                          f(e);
                          return;
                        }
                        null ==
                          (a = (n = (0, h._)(this, b).config).onSuccess) ||
                          a.call(n, e, this),
                          null ==
                            (o = (r = (0, h._)(this, b).config).onSettled) ||
                            o.call(r, e, this.state.error, this),
                          this.scheduleGc();
                      },
                      onError: f,
                      onFail: (e, a) => {
                        (0, z._)(this, u, er).call(this, {
                          type: "failed",
                          failureCount: e,
                          error: a,
                        });
                      },
                      onPause: () => {
                        (0, z._)(this, u, er).call(this, { type: "pause" });
                      },
                      onContinue: () => {
                        (0, z._)(this, u, er).call(this, { type: "continue" });
                      },
                      retry: d.options.retry,
                      retryDelay: d.options.retryDelay,
                      networkMode: d.options.networkMode,
                      canRun: () => !0,
                    })
                  ),
                  (0, h._)(this, l).start()
                );
              }
              constructor(e) {
                var a;
                super(),
                  (0, j._)(this, u),
                  (0, p._)(this, d, { writable: !0, value: void 0 }),
                  (0, p._)(this, c, { writable: !0, value: void 0 }),
                  (0, p._)(this, b, { writable: !0, value: void 0 }),
                  (0, p._)(this, m, { writable: !0, value: void 0 }),
                  (0, p._)(this, l, { writable: !0, value: void 0 }),
                  (0, p._)(this, f, { writable: !0, value: void 0 }),
                  (0, p._)(this, k, { writable: !0, value: void 0 }),
                  (0, x._)(this, k, !1),
                  (0, x._)(this, f, e.defaultOptions),
                  this.setOptions(e.options),
                  (this.observers = []),
                  (0, x._)(this, m, e.client),
                  (0, x._)(this, b, (0, h._)(this, m).getQueryCache()),
                  (this.queryKey = e.queryKey),
                  (this.queryHash = e.queryHash),
                  (0, x._)(
                    this,
                    d,
                    (function (e) {
                      let a =
                          "function" == typeof e.initialData
                            ? e.initialData()
                            : e.initialData,
                        n = void 0 !== a,
                        o = n
                          ? "function" == typeof e.initialDataUpdatedAt
                            ? e.initialDataUpdatedAt()
                            : e.initialDataUpdatedAt
                          : 0;
                      return {
                        data: a,
                        dataUpdateCount: 0,
                        dataUpdatedAt: n ? (null != o ? o : Date.now()) : 0,
                        error: null,
                        errorUpdateCount: 0,
                        errorUpdatedAt: 0,
                        fetchFailureCount: 0,
                        fetchFailureReason: null,
                        fetchMeta: null,
                        isInvalidated: !1,
                        status: n ? "success" : "pending",
                        fetchStatus: "idle",
                      };
                    })(this.options)
                  ),
                  (this.state = null != (a = e.state) ? a : (0, h._)(this, d)),
                  this.scheduleGc();
              }
            });
        function eo(e, a) {
          return {
            fetchFailureCount: 0,
            fetchFailureReason: null,
            fetchStatus: Q(a.networkMode) ? "fetching" : "paused",
            ...(void 0 === e && { error: null, status: "pending" }),
          };
        }
        function er(e) {
          let a = (a) => {
            var n, o;
            switch (e.type) {
              case "failed":
                return {
                  ...a,
                  fetchFailureCount: e.failureCount,
                  fetchFailureReason: e.error,
                };
              case "pause":
                return { ...a, fetchStatus: "paused" };
              case "continue":
                return { ...a, fetchStatus: "fetching" };
              case "fetch":
                return {
                  ...a,
                  ...eo(a.data, this.options),
                  fetchMeta: null != (n = e.meta) ? n : null,
                };
              case "success":
                return (
                  (0, x._)(this, c, void 0),
                  {
                    ...a,
                    data: e.data,
                    dataUpdateCount: a.dataUpdateCount + 1,
                    dataUpdatedAt:
                      null != (o = e.dataUpdatedAt) ? o : Date.now(),
                    error: null,
                    isInvalidated: !1,
                    status: "success",
                    ...(!e.manual && {
                      fetchStatus: "idle",
                      fetchFailureCount: 0,
                      fetchFailureReason: null,
                    }),
                  }
                );
              case "error":
                let r = e.error;
                if ($(r) && r.revert && (0, h._)(this, c))
                  return { ...(0, h._)(this, c), fetchStatus: "idle" };
                return {
                  ...a,
                  error: r,
                  errorUpdateCount: a.errorUpdateCount + 1,
                  errorUpdatedAt: Date.now(),
                  fetchFailureCount: a.fetchFailureCount + 1,
                  fetchFailureReason: r,
                  fetchStatus: "idle",
                  status: "error",
                };
              case "invalidate":
                return { ...a, isInvalidated: !0 };
              case "setState":
                return { ...a, ...e.state };
            }
          };
          (this.state = a(this.state)),
            V.batch(() => {
              this.observers.forEach((e) => {
                e.onQueryUpdate();
              }),
                (0, h._)(this, b).notify({
                  query: this,
                  type: "updated",
                  action: e,
                });
            });
        }
        e.s(
          { QueryClientProvider: () => ec, useQueryClient: () => ed },
          185872
        );
        var et = e.i(756253),
          es = e.i(150840),
          ei = et.createContext(void 0),
          ed = (e) => {
            let a = et.useContext(ei);
            if (e) return e;
            if (!a)
              throw Error(
                "No QueryClient set, use QueryClientProvider to set one"
              );
            return a;
          },
          ec = (e) => {
            let { client: a, children: n } = e;
            return (
              et.useEffect(
                () => (
                  a.mount(),
                  () => {
                    a.unmount();
                  }
                ),
                [a]
              ),
              (0, es.jsx)(ei.Provider, { value: a, children: n })
            );
          };
      },
      [502373, 406371, 14047, 785895, 41167, 528593, 667505, 912353, 185872],
    ],
    377450: [
      (e) => {
        "use strict";
        e.s(
          {
            PresaleContext: () => eo,
            PresaleProvider: () => er,
            usePresaleContext: () => et,
          },
          377450
        );
        var a,
          n,
          o,
          r,
          t,
          s,
          i,
          d,
          c,
          b,
          m,
          l,
          f,
          k,
          u,
          h,
          p,
          x,
          g,
          C,
          v,
          y,
          N,
          T,
          R = e.i(150840);
        e.s({ useQuery: () => en }, 952223);
        var E = e.i(632859),
          A = e.i(526050),
          w = e.i(607618),
          S = e.i(238193),
          I = e.i(526350),
          O = e.i(545221),
          P = e.i(14047),
          D = e.i(912353),
          L = e.i(502373),
          M = e.i(41167),
          B = e.i(406371),
          U =
            ((a = new WeakMap()),
            (n = new WeakMap()),
            (o = new WeakMap()),
            (r = new WeakMap()),
            (t = new WeakMap()),
            (s = new WeakMap()),
            (i = new WeakMap()),
            (d = new WeakMap()),
            (c = new WeakMap()),
            (b = new WeakMap()),
            (m = new WeakMap()),
            (l = new WeakMap()),
            (f = new WeakMap()),
            (k = new WeakMap()),
            (u = new WeakMap()),
            (h = new WeakSet()),
            (p = new WeakSet()),
            (x = new WeakSet()),
            (g = new WeakSet()),
            (C = new WeakSet()),
            (v = new WeakSet()),
            (y = new WeakSet()),
            (N = new WeakSet()),
            (T = new WeakSet()),
            class extends L.Subscribable {
              bindMethods() {
                this.refetch = this.refetch.bind(this);
              }
              onSubscribe() {
                1 === this.listeners.size &&
                  ((0, E._)(this, n).addObserver(this),
                  _((0, E._)(this, n), this.options)
                    ? (0, S._)(this, h, X).call(this)
                    : this.updateResult(),
                  (0, S._)(this, C, z).call(this));
              }
              onUnsubscribe() {
                this.hasListeners() || this.destroy();
              }
              shouldFetchOnReconnect() {
                return F(
                  (0, E._)(this, n),
                  this.options,
                  this.options.refetchOnReconnect
                );
              }
              shouldFetchOnWindowFocus() {
                return F(
                  (0, E._)(this, n),
                  this.options,
                  this.options.refetchOnWindowFocus
                );
              }
              destroy() {
                (this.listeners = new Set()),
                  (0, S._)(this, v, j).call(this),
                  (0, S._)(this, y, q).call(this),
                  (0, E._)(this, n).removeObserver(this);
              }
              setOptions(e) {
                let o = this.options,
                  r = (0, E._)(this, n);
                if (
                  ((this.options = (0, E._)(this, a).defaultQueryOptions(e)),
                  void 0 !== this.options.enabled &&
                    "boolean" != typeof this.options.enabled &&
                    "function" != typeof this.options.enabled &&
                    "boolean" !=
                      typeof (0, B.resolveEnabled)(
                        this.options.enabled,
                        (0, E._)(this, n)
                      ))
                )
                  throw Error(
                    "Expected enabled to be a boolean or a callback that returns a boolean"
                  );
                (0, S._)(this, N, Y).call(this),
                  (0, E._)(this, n).setOptions(this.options),
                  o._defaulted &&
                    !(0, B.shallowEqualObjects)(this.options, o) &&
                    (0, E._)(this, a)
                      .getQueryCache()
                      .notify({
                        type: "observerOptionsUpdated",
                        query: (0, E._)(this, n),
                        observer: this,
                      });
                let t = this.hasListeners();
                t &&
                  H((0, E._)(this, n), r, this.options, o) &&
                  (0, S._)(this, h, X).call(this),
                  this.updateResult(),
                  t &&
                    ((0, E._)(this, n) !== r ||
                      (0, B.resolveEnabled)(
                        this.options.enabled,
                        (0, E._)(this, n)
                      ) !==
                        (0, B.resolveEnabled)(o.enabled, (0, E._)(this, n)) ||
                      (0, B.resolveStaleTime)(
                        this.options.staleTime,
                        (0, E._)(this, n)
                      ) !==
                        (0, B.resolveStaleTime)(
                          o.staleTime,
                          (0, E._)(this, n)
                        )) &&
                    (0, S._)(this, p, W).call(this);
                let s = (0, S._)(this, x, K).call(this);
                t &&
                  ((0, E._)(this, n) !== r ||
                    (0, B.resolveEnabled)(
                      this.options.enabled,
                      (0, E._)(this, n)
                    ) !== (0, B.resolveEnabled)(o.enabled, (0, E._)(this, n)) ||
                    s !== (0, E._)(this, k)) &&
                  (0, S._)(this, g, V).call(this, s);
              }
              getOptimisticResult(e) {
                var o, i;
                let d = (0, E._)(this, a)
                    .getQueryCache()
                    .build((0, E._)(this, a), e),
                  c = this.createResult(d, e);
                return (
                  (o = this),
                  (i = c),
                  (0, B.shallowEqualObjects)(o.getCurrentResult(), i) ||
                    ((0, w._)(this, r, c),
                    (0, w._)(this, s, this.options),
                    (0, w._)(this, t, (0, E._)(this, n).state)),
                  c
                );
              }
              getCurrentResult() {
                return (0, E._)(this, r);
              }
              trackResult(e, a) {
                return new Proxy(e, {
                  get: (e, n) => (
                    this.trackProp(n), null == a || a(n), Reflect.get(e, n)
                  ),
                });
              }
              trackProp(e) {
                (0, E._)(this, u).add(e);
              }
              getCurrentQuery() {
                return (0, E._)(this, n);
              }
              refetch() {
                let { ...e } =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : {};
                return this.fetch({ ...e });
              }
              fetchOptimistic(e) {
                let n = (0, E._)(this, a).defaultQueryOptions(e),
                  o = (0, E._)(this, a)
                    .getQueryCache()
                    .build((0, E._)(this, a), n);
                return o.fetch().then(() => this.createResult(o, n));
              }
              fetch(e) {
                var a;
                return (0, S._)(this, h, X)
                  .call(this, {
                    ...e,
                    cancelRefetch: null == (a = e.cancelRefetch) || a,
                  })
                  .then(() => (this.updateResult(), (0, E._)(this, r)));
              }
              createResult(e, a) {
                let l,
                  f = (0, E._)(this, n),
                  k = this.options,
                  u = (0, E._)(this, r),
                  h = (0, E._)(this, t),
                  p = (0, E._)(this, s),
                  x = e !== f ? e.state : (0, E._)(this, o),
                  { state: g } = e,
                  C = { ...g },
                  v = !1;
                if (a._optimisticResults) {
                  let n = this.hasListeners(),
                    o = !n && _(e, a),
                    r = n && H(e, f, a, k);
                  (o || r) &&
                    (C = { ...C, ...(0, D.fetchState)(g.data, e.options) }),
                    "isRestoring" === a._optimisticResults &&
                      (C.fetchStatus = "idle");
                }
                let { error: y, errorUpdatedAt: N, status: T } = C;
                l = C.data;
                let R = !1;
                if (
                  void 0 !== a.placeholderData &&
                  void 0 === l &&
                  "pending" === T
                ) {
                  let e;
                  if (
                    (null == u ? void 0 : u.isPlaceholderData) &&
                    a.placeholderData ===
                      (null == p ? void 0 : p.placeholderData)
                  )
                    (e = u.data), (R = !0);
                  else {
                    var A;
                    e =
                      "function" == typeof a.placeholderData
                        ? a.placeholderData(
                            null == (A = (0, E._)(this, m))
                              ? void 0
                              : A.state.data,
                            (0, E._)(this, m)
                          )
                        : a.placeholderData;
                  }
                  void 0 !== e &&
                    ((T = "success"),
                    (l = (0, B.replaceData)(null == u ? void 0 : u.data, e, a)),
                    (v = !0));
                }
                if (a.select && void 0 !== l && !R)
                  if (
                    u &&
                    l === (null == h ? void 0 : h.data) &&
                    a.select === (0, E._)(this, c)
                  )
                    l = (0, E._)(this, b);
                  else
                    try {
                      (0, w._)(this, c, a.select),
                        (l = a.select(l)),
                        (l = (0, B.replaceData)(
                          null == u ? void 0 : u.data,
                          l,
                          a
                        )),
                        (0, w._)(this, b, l),
                        (0, w._)(this, d, null);
                    } catch (e) {
                      (0, w._)(this, d, e);
                    }
                (0, E._)(this, d) &&
                  ((y = (0, E._)(this, d)),
                  (l = (0, E._)(this, b)),
                  (N = Date.now()),
                  (T = "error"));
                let S = "fetching" === C.fetchStatus,
                  I = "pending" === T,
                  O = "error" === T,
                  P = I && S,
                  L = void 0 !== l,
                  U = {
                    status: T,
                    fetchStatus: C.fetchStatus,
                    isPending: I,
                    isSuccess: "success" === T,
                    isError: O,
                    isInitialLoading: P,
                    isLoading: P,
                    data: l,
                    dataUpdatedAt: C.dataUpdatedAt,
                    error: y,
                    errorUpdatedAt: N,
                    failureCount: C.fetchFailureCount,
                    failureReason: C.fetchFailureReason,
                    errorUpdateCount: C.errorUpdateCount,
                    isFetched: C.dataUpdateCount > 0 || C.errorUpdateCount > 0,
                    isFetchedAfterMount:
                      C.dataUpdateCount > x.dataUpdateCount ||
                      C.errorUpdateCount > x.errorUpdateCount,
                    isFetching: S,
                    isRefetching: S && !I,
                    isLoadingError: O && !L,
                    isPaused: "paused" === C.fetchStatus,
                    isPlaceholderData: v,
                    isRefetchError: O && L,
                    isStale: G(e, a),
                    refetch: this.refetch,
                    promise: (0, E._)(this, i),
                    isEnabled: !1 !== (0, B.resolveEnabled)(a.enabled, e),
                  };
                if (this.options.experimental_prefetchInRender) {
                  let a = (e) => {
                      "error" === U.status
                        ? e.reject(U.error)
                        : void 0 !== U.data && e.resolve(U.data);
                    },
                    n = () => {
                      a(
                        (0, w._)(
                          this,
                          i,
                          (U.promise = (0, M.pendingThenable)())
                        )
                      );
                    },
                    o = (0, E._)(this, i);
                  switch (o.status) {
                    case "pending":
                      e.queryHash === f.queryHash && a(o);
                      break;
                    case "fulfilled":
                      ("error" === U.status || U.data !== o.value) && n();
                      break;
                    case "rejected":
                      ("error" !== U.status || U.error !== o.reason) && n();
                  }
                }
                return U;
              }
              updateResult() {
                let e = (0, E._)(this, r),
                  a = this.createResult((0, E._)(this, n), this.options);
                if (
                  ((0, w._)(this, t, (0, E._)(this, n).state),
                  (0, w._)(this, s, this.options),
                  void 0 !== (0, E._)(this, t).data &&
                    (0, w._)(this, m, (0, E._)(this, n)),
                  (0, B.shallowEqualObjects)(a, e))
                )
                  return;
                (0, w._)(this, r, a);
                let o = () => {
                  if (!e) return !0;
                  let { notifyOnChangeProps: a } = this.options,
                    n = "function" == typeof a ? a() : a;
                  if ("all" === n || (!n && !(0, E._)(this, u).size)) return !0;
                  let o = new Set(null != n ? n : (0, E._)(this, u));
                  return (
                    this.options.throwOnError && o.add("error"),
                    Object.keys((0, E._)(this, r)).some(
                      (a) => (0, E._)(this, r)[a] !== e[a] && o.has(a)
                    )
                  );
                };
                (0, S._)(this, T, Z).call(this, { listeners: o() });
              }
              onQueryUpdate() {
                this.updateResult(),
                  this.hasListeners() && (0, S._)(this, C, z).call(this);
              }
              constructor(e, R) {
                super(),
                  (0, I._)(this, h),
                  (0, I._)(this, p),
                  (0, I._)(this, x),
                  (0, I._)(this, g),
                  (0, I._)(this, C),
                  (0, I._)(this, v),
                  (0, I._)(this, y),
                  (0, I._)(this, N),
                  (0, I._)(this, T),
                  (0, A._)(this, a, { writable: !0, value: void 0 }),
                  (0, A._)(this, n, { writable: !0, value: void 0 }),
                  (0, A._)(this, o, { writable: !0, value: void 0 }),
                  (0, A._)(this, r, { writable: !0, value: void 0 }),
                  (0, A._)(this, t, { writable: !0, value: void 0 }),
                  (0, A._)(this, s, { writable: !0, value: void 0 }),
                  (0, A._)(this, i, { writable: !0, value: void 0 }),
                  (0, A._)(this, d, { writable: !0, value: void 0 }),
                  (0, A._)(this, c, { writable: !0, value: void 0 }),
                  (0, A._)(this, b, { writable: !0, value: void 0 }),
                  (0, A._)(this, m, { writable: !0, value: void 0 }),
                  (0, A._)(this, l, { writable: !0, value: void 0 }),
                  (0, A._)(this, f, { writable: !0, value: void 0 }),
                  (0, A._)(this, k, { writable: !0, value: void 0 }),
                  (0, A._)(this, u, { writable: !0, value: new Set() }),
                  (this.options = R),
                  (0, w._)(this, a, e),
                  (0, w._)(this, d, null),
                  (0, w._)(this, i, (0, M.pendingThenable)()),
                  this.options.experimental_prefetchInRender ||
                    (0, E._)(this, i).reject(
                      Error(
                        "experimental_prefetchInRender feature flag is not enabled"
                      )
                    ),
                  this.bindMethods(),
                  this.setOptions(R);
              }
            });
        function _(e, a) {
          return (
            (!1 !== (0, B.resolveEnabled)(a.enabled, e) &&
              void 0 === e.state.data &&
              ("error" !== e.state.status || !1 !== a.retryOnMount)) ||
            (void 0 !== e.state.data && F(e, a, a.refetchOnMount))
          );
        }
        function F(e, a, n) {
          if (
            !1 !== (0, B.resolveEnabled)(a.enabled, e) &&
            "static" !== (0, B.resolveStaleTime)(a.staleTime, e)
          ) {
            let o = "function" == typeof n ? n(e) : n;
            return "always" === o || (!1 !== o && G(e, a));
          }
          return !1;
        }
        function H(e, a, n, o) {
          return (
            (e !== a || !1 === (0, B.resolveEnabled)(o.enabled, e)) &&
            (!n.suspense || "error" !== e.state.status) &&
            G(e, n)
          );
        }
        function G(e, a) {
          return (
            !1 !== (0, B.resolveEnabled)(a.enabled, e) &&
            e.isStaleByTime((0, B.resolveStaleTime)(a.staleTime, e))
          );
        }
        function X(e) {
          (0, S._)(this, N, Y).call(this);
          let a = (0, E._)(this, n).fetch(this.options, e);
          return (
            (null == e ? void 0 : e.throwOnError) || (a = a.catch(B.noop)), a
          );
        }
        function W() {
          (0, S._)(this, v, j).call(this);
          let e = (0, B.resolveStaleTime)(
            this.options.staleTime,
            (0, E._)(this, n)
          );
          if (
            B.isServer ||
            (0, E._)(this, r).isStale ||
            !(0, B.isValidTimeout)(e)
          )
            return;
          let a = (0, B.timeUntilStale)((0, E._)(this, r).dataUpdatedAt, e);
          (0, w._)(
            this,
            l,
            setTimeout(() => {
              (0, E._)(this, r).isStale || this.updateResult();
            }, a + 1)
          );
        }
        function K() {
          var e;
          return (
            null !=
              (e =
                "function" == typeof this.options.refetchInterval
                  ? this.options.refetchInterval((0, E._)(this, n))
                  : this.options.refetchInterval) && e
          );
        }
        function V(e) {
          (0, S._)(this, y, q).call(this),
            (0, w._)(this, k, e),
            !B.isServer &&
              !1 !==
                (0, B.resolveEnabled)(
                  this.options.enabled,
                  (0, E._)(this, n)
                ) &&
              (0, B.isValidTimeout)((0, E._)(this, k)) &&
              0 !== (0, E._)(this, k) &&
              (0, w._)(
                this,
                f,
                setInterval(() => {
                  (this.options.refetchIntervalInBackground ||
                    O.focusManager.isFocused()) &&
                    (0, S._)(this, h, X).call(this);
                }, (0, E._)(this, k))
              );
        }
        function z() {
          (0, S._)(this, p, W).call(this),
            (0, S._)(this, g, V).call(this, (0, S._)(this, x, K).call(this));
        }
        function j() {
          (0, E._)(this, l) &&
            (clearTimeout((0, E._)(this, l)), (0, w._)(this, l, void 0));
        }
        function q() {
          (0, E._)(this, f) &&
            (clearInterval((0, E._)(this, f)), (0, w._)(this, f, void 0));
        }
        function Y() {
          let e = (0, E._)(this, a)
            .getQueryCache()
            .build((0, E._)(this, a), this.options);
          if (e === (0, E._)(this, n)) return;
          let r = (0, E._)(this, n);
          (0, w._)(this, n, e),
            (0, w._)(this, o, e.state),
            this.hasListeners() &&
              (null == r || r.removeObserver(this), e.addObserver(this));
        }
        function Z(e) {
          P.notifyManager.batch(() => {
            e.listeners &&
              this.listeners.forEach((e) => {
                e((0, E._)(this, r));
              }),
              (0, E._)(this, a)
                .getQueryCache()
                .notify({
                  query: (0, E._)(this, n),
                  type: "observerResultsUpdated",
                });
          });
        }
        e.i(174519);
        var Q = e.i(756253),
          J = e.i(185872),
          $ = Q.createContext(
            (function () {
              let e = !1;
              return {
                clearReset: () => {
                  e = !1;
                },
                reset: () => {
                  e = !0;
                },
                isReset: () => e,
              };
            })()
          ),
          ee = Q.createContext(!1);
        ee.Provider;
        var ea = (e, a, n) =>
          a.fetchOptimistic(e).catch(() => {
            n.clearReset();
          });
        function en(e, a) {
          return (function (e, a, n) {
            var o, r, t, s, i;
            let d = Q.useContext(ee),
              c = Q.useContext($),
              b = (0, J.useQueryClient)(n),
              m = b.defaultQueryOptions(e);
            if (
              (null == (r = b.getDefaultOptions().queries) ||
                null == (o = r._experimental_beforeQuery) ||
                o.call(r, m),
              (m._optimisticResults = d ? "isRestoring" : "optimistic"),
              m.suspense)
            ) {
              let e = (e) =>
                  "static" === e ? e : Math.max(null != e ? e : 1e3, 1e3),
                a = m.staleTime;
              (m.staleTime =
                "function" == typeof a
                  ? function () {
                      for (
                        var n = arguments.length, o = Array(n), r = 0;
                        r < n;
                        r++
                      )
                        o[r] = arguments[r];
                      return e(a(...o));
                    }
                  : e(a)),
                "number" == typeof m.gcTime &&
                  (m.gcTime = Math.max(m.gcTime, 1e3));
            }
            (m.suspense || m.throwOnError || m.experimental_prefetchInRender) &&
              !c.isReset() &&
              (m.retryOnMount = !1),
              Q.useEffect(() => {
                c.clearReset();
              }, [c]);
            let l = !b.getQueryCache().get(m.queryHash),
              [f] = Q.useState(() => new a(b, m)),
              k = f.getOptimisticResult(m),
              u = !d && !1 !== e.subscribed;
            if (
              (Q.useSyncExternalStore(
                Q.useCallback(
                  (e) => {
                    let a = u
                      ? f.subscribe(P.notifyManager.batchCalls(e))
                      : B.noop;
                    return f.updateResult(), a;
                  },
                  [f, u]
                ),
                () => f.getCurrentResult(),
                () => f.getCurrentResult()
              ),
              Q.useEffect(() => {
                f.setOptions(m);
              }, [m, f]),
              (null == m ? void 0 : m.suspense) && k.isPending)
            )
              throw ea(m, f, c);
            if (
              ((e) => {
                let {
                  result: a,
                  errorResetBoundary: n,
                  throwOnError: o,
                  query: r,
                  suspense: t,
                } = e;
                return (
                  a.isError &&
                  !n.isReset() &&
                  !a.isFetching &&
                  r &&
                  ((t && void 0 === a.data) ||
                    (0, B.shouldThrowError)(o, [a.error, r]))
                );
              })({
                result: k,
                errorResetBoundary: c,
                throwOnError: m.throwOnError,
                query: b.getQueryCache().get(m.queryHash),
                suspense: m.suspense,
              })
            )
              throw k.error;
            if (
              (null == (s = b.getDefaultOptions().queries) ||
                null == (t = s._experimental_afterQuery) ||
                t.call(s, m, k),
              m.experimental_prefetchInRender &&
                !B.isServer &&
                k.isLoading &&
                k.isFetching &&
                !d)
            ) {
              let e = l
                ? ea(m, f, c)
                : null == (i = b.getQueryCache().get(m.queryHash))
                ? void 0
                : i.promise;
              null == e ||
                e.catch(B.noop).finally(() => {
                  f.updateResult();
                });
            }
            return m.notifyOnChangeProps ? k : f.trackResult(k);
          })(e, U, a);
        }
        let eo = (0, Q.createContext)({}),
          er = (e) => {
            let { children: a, prefetchedState: n, forceComingSoon: o } = e,
              [r, t] = (0, Q.useState)(null != n ? n : { isComingSoon: !0 }),
              {
                data: s,
                isLoading: i,
                isPending: d,
                isFetched: c,
                isError: b,
                refetch: m,
              } = en({
                queryKey: ["presale-state"],
                queryFn: () => fetch("/api/state").then((e) => e.json()),
                refetchInterval: 15e3,
                enabled: !!n,
              });
            (0, Q.useEffect)(() => {
              s &&
                (s.error ||
                  t(
                    ((e) => {
                      var a, n, o, r;
                      return {
                        tokenSymbol: e.tokenSymbol,
                        isComingSoon: e.isComingSoon,
                        hasEnded: e.hasEnded,
                        isClaimingEnabled: e.isClaimingEnabled,
                        activeStage: {
                          ...e.activeStage,
                          startDate: (
                            null == e || null == (a = e.activeStage)
                              ? void 0
                              : a.startDate
                          )
                            ? new Date(e.activeStage.startDate)
                            : void 0,
                          endDate: (
                            null == e || null == (n = e.activeStage)
                              ? void 0
                              : n.endDate
                          )
                            ? new Date(e.activeStage.endDate)
                            : void 0,
                        },
                        currentStage: {
                          usdRaised: e.raisedAmount,
                          usdGoal: e.raiseGoal,
                          tokensSold: e.tokensSold,
                          tokensMax: e.tokensMax,
                          percentSold: e.raisedPercentage,
                          currentPrice: e.currentPrice,
                          nextStagePrice: e.nextStagePrice,
                          paymentMethods: e.paymentMethods,
                        },
                        currentStageFormatted: {
                          usdRaised: e.raisedAmount.toLocaleString(),
                          usdGoal: e.raiseGoal.toLocaleString(),
                          tokensSold: e.tokensSold.toLocaleString(),
                          tokensMax: e.tokensMax.toLocaleString(),
                          percentSold: (
                            e.raisedPercentage || 0
                          ).toLocaleString(),
                          currentPrice: {
                            USD: (
                              (null == (o = e.currentPrice) ? void 0 : o.USD) ||
                              0
                            )
                              .toFixed(5)
                              .replace(/\.?0+$/, ""),
                          },
                          nextStagePrice: {
                            USD: (
                              (null == (r = e.nextStagePrice)
                                ? void 0
                                : r.USD) || 0
                            )
                              .toFixed(5)
                              .replace(/\.?0+$/, ""),
                          },
                        },
                        presaleStartDate: e.presaleStartDate
                          ? new Date(e.presaleStartDate)
                          : void 0,
                        presaleEndDate: e.presaleEndDate
                          ? new Date(e.presaleEndDate)
                          : void 0,
                        presaleStageEndDate: e.presaleStageEndDate
                          ? new Date(e.presaleStageEndDate)
                          : void 0,
                        lastStagePrice: e.lastStagePrice,
                        totalTokensSold: e.totalTokensSold,
                        totalAmountRaised: e.totalAmountRaised,
                        tokenCapRemaining: e.tokenCapRemaining,
                        currentStageNumber: e.currentStageNumber || 1,
                        lastStageNumber: e.lastStageNumber || 1,
                        stagePrices: e.stagePrices,
                        stakingPools: e.stakingPools || [],
                        cryptoPrices: e.cryptoPrices || {},
                      };
                    })(s)
                  ));
            }, [s]);
            let l = { ...r, isComingSoon: !!o || r.isComingSoon };
            return (0, R.jsx)(eo.Provider, {
              value: {
                state: l,
                isLoading: i,
                isPending: d,
                isFetched: !!n || c,
                isError: b,
                refetch: m,
              },
              children: a,
            });
          },
          et = () => {
            let e = (0, Q.useContext)(eo);
            if (!e)
              throw Error(
                "usePresaleContext must be used within a PresaleProvider"
              );
            return e;
          };
      },
      [952223],
    ],
    34790: (e) => {
      "use strict";
      e.s({
        WalletProviderContext: () => k,
        default: () => u,
        useWalletProvider: () => h,
      });
      var a = e.i(150840);
      e.i(505758);
      var n = e.i(906460),
        o = e.i(794214),
        r = e.i(804055),
        t = e.i(289267),
        s = e.i(756253),
        i = e.i(631007),
        d = e.i(724638),
        c = e.i(168491),
        b = e.i(575453),
        m = e.i(113029),
        l = e.i(377450),
        f = e.i(79401);
      let k = (0, s.createContext)({}),
        u = (e) => {
          var u, h, p;
          let { children: x, defaultPaymentMethod: g } = e,
            { state: C } = (0, l.usePresaleContext)(),
            [v, y] = (0, s.useState)(!0),
            N =
              null == (u = C.currentStage)
                ? void 0
                : u.paymentMethods.find(
                    (e) => "solana" === e.network && "SOL" === e.name
                  );
          (null == g ? void 0 : g.name) &&
            (null == g ? void 0 : g.network) &&
            (N =
              null == (p = C.currentStage)
                ? void 0
                : p.paymentMethods.find(
                    (e) => e.network === g.network && e.name === g.name
                  ));
          let [T, R] = (0, s.useState)(N),
            [E, A] = (0, s.useState)([]),
            [w, S] = (0, s.useState)({});
          (0, s.useEffect)(() => {
            var e;
            A((null == (e = C.currentStage) ? void 0 : e.paymentMethods) || []),
              S(
                E.reduce((e, a) => {
                  let n = a.network || "other";
                  return e[n] || (e[n] = []), e[n].push(a), e;
                }, {})
              );
          }, [null == (h = C.currentStage) ? void 0 : h.paymentMethods]);
          let { isConnected: I, address: O } = (0, n.useAppKitAccount)(),
            { chainId: P, switchNetwork: D } = (0, o.useAppKitNetwork)(),
            { walletInfo: L } = (0, r.useWalletInfo)(),
            { disconnect: M } = (0, n.useDisconnect)(),
            {
              connected: B,
              disconnect: U,
              publicKey: _,
              wallet: F,
            } = (0, t.useWallet)(),
            [H, G] = (0, s.useState)(!1),
            [X, W] = (0, s.useState)("solana"),
            [K, V] = (0, s.useState)(void 0),
            [z, j] = (0, s.useState)(void 0);
          return (
            (0, s.useEffect)(() => {
              G(B || I),
                B
                  ? (W("solana"),
                    V(_ ? (0, f.stripAddressPrefix)(_.toBase58()) : void 0),
                    j(null == F ? void 0 : F.adapter.name),
                    (0, c.trackWalletConnected)({
                      walletAddress: null == _ ? void 0 : _.toBase58(),
                      walletName: null == F ? void 0 : F.adapter.name,
                    }))
                  : I &&
                    (56 === P ? W("bsc") : W("ethereum"),
                    V((0, f.stripAddressPrefix)(O)),
                    j(null == L ? void 0 : L.name)),
                (B || I) && (document.body.style.overflow = "unset");
            }, [P, I, B, O, _]),
            (0, s.useEffect)(() => {
              if (H && (null == T ? void 0 : T.network) !== X && v)
                switch (X) {
                  case "ethereum":
                    let e = E.find(
                      (e) => "ethereum" === e.network && "ETH" === e.name
                    );
                    e && R(e);
                    break;
                  case "bsc":
                    let a = E.find(
                      (e) => "bsc" === e.network && "BNB" === e.name
                    );
                    a && R(a);
                    break;
                  default:
                    let n = E.find(
                      (e) => "solana" === e.network && "SOL" === e.name
                    );
                    n && R(n);
                }
            }, [E, X, R]),
            (0, s.useEffect)(() => {
              if (!H) return void y(!0);
              T && y(T.network === X);
            }, [H]),
            (0, s.useEffect)(() => {
              if (T) {
                if ("bsc" === T.network && P !== i.bsc.id) return void D(i.bsc);
                else if ("ethereum" === T.network && P !== d.mainnet.id)
                  return void D(d.mainnet);
              }
            }, [T]),
            (0, b.useEvmEvents)(),
            (0, a.jsx)(k.Provider, {
              value: {
                isConnected: H,
                network: X,
                address: K,
                walletName: z,
                isCorrectNetwork: v,
                setIsCorrectNetwork: y,
                connectWallet: () => {
                  (0, c.trackWalletConnectStart)(),
                    m.eventBus.emit("wallet-connect-dialog:show");
                },
                disconnectWallet: () => {
                  B ? U() : I && M();
                },
                selectedPaymentMethod: T,
                setSelectedPaymentMethod: R,
                paymentMethods: E,
                groupedPaymentMethods: w,
              },
              children: x,
            })
          );
        },
        h = () => {
          let e = (0, s.useContext)(k);
          if (!e)
            throw Error(
              "useWalletProvider must be used within a WalletProvider"
            );
          return e;
        };
    },
    513546: (e) => {
      "use strict";
      e.s({ NetworkIcon: () => u, TokenIcon: () => k }, 513546);
      var a = e.i(159608),
        n = e.i(756253),
        o = [
          {
            id: "0x0-ai-ai-smart-contract",
            fileName: "0X0",
            symbol: "0x0",
            name: "0x0.ai: AI Smart Contract",
            marketCapRank: 376,
            addresses: {
              ethereum: "0x5a3e6a77ba2f983ec0d371ea3b475f8bc0811ad5",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "0xgasless-2",
            fileName: "0XGAS",
            symbol: "0xgas",
            name: "0xGasless",
            marketCapRank: 3040,
            addresses: {
              ethereum: "0x5fc111f3fa4c6b32eaf65659cfebdeed57234069",
            },
            variants: ["branded", "background"],
          },
          {
            id: "1art",
            fileName: "1ART",
            symbol: "1art",
            name: "OneArt",
            marketCapRank: 2680,
            addresses: {
              "binance-smart-chain":
                "0xd3c325848d7c6e29b574cb0789998b2ff901f17e",
              fantom: "0xd3c325848d7c6e29b574cb0789998b2ff901f17e",
              ethereum: "0xd3c325848d7c6e29b574cb0789998b2ff901f17e",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "1inch",
            fileName: "1INCH",
            symbol: "1inch",
            name: "1inch",
            marketCapRank: 165,
            addresses: {
              ethereum: "0x111111111117dc0aa78b770fa6a738034120c302",
              "harmony-shard-0": "0x58f1b044d8308812881a1433d9bbeff99975e70c",
              avalanche: "0xd501281565bf7789224523144fe5d98e8b28f267",
              "binance-smart-chain":
                "0x111111111117dc0aa78b770fa6a738034120c302",
              "near-protocol":
                "111111111117dc0aa78b770fa6a738034120c302.factory.bridge.near",
              "polygon-pos": "0x9c2c5fd7b07e95ee044ddeba0e97a665f142394f",
              energi: "0xdda6205dc3f47e5280eb726613b27374eee9d130",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "2dai-io",
            fileName: "2DAI",
            symbol: "2dai",
            name: "2DAI.io",
            marketCapRank: 2443,
            addresses: {
              ethereum: "0xb44b653f147569d88a684cbf6549e1968e8b2a1d",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "a-hunters-dream",
            fileName: "CAW",
            symbol: "caw",
            name: "A Hunters Dream",
            marketCapRank: 725,
            addresses: {
              ethereum: "0xf3b9569f82b18aef890de263b84189bd33ebe452",
            },
            variants: ["branded", "background"],
          },
          {
            id: "aag-ventures",
            fileName: "AAG",
            symbol: "aag",
            name: "AAG",
            marketCapRank: 2030,
            addresses: {
              ethereum: "0x5ba19d656b65f1684cfea4af428c23b9f3628f97",
              "harmony-shard-0": "0xae0609a062a4eaed49de28c5f6a193261e0150ea",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "aave",
            fileName: "AAVE",
            symbol: "aave",
            name: "Aave",
            marketCapRank: 66,
            addresses: {
              ethereum: "0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9",
              avalanche: "0x63a72806098bd3d9520cc43356dd78afe5d386d9",
              sora: "0x0091bd8d8295b25cab5a7b8b0e44498e678cfc15d872ede3215f7d4c7635ba36",
              "optimistic-ethereum":
                "0x76fb31fb4af56892a25e32cfc43de717950c9278",
              "near-protocol":
                "7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9.factory.bridge.near",
              "huobi-token": "0x202b4936fe1a82a4965220860ae46d7d3939bb25",
              "polygon-pos": "0xd6df932a45c0f255f85145f286ea0b292b21c90b",
              fantom: "0x6a07a792ab2965c72a5b8088d3a069a7ac3a993b",
              "harmony-shard-0": "0xcf323aad9e522b93f11c352caa519ad0e14eb40f",
              "binance-smart-chain":
                "0xfb6115445bff7b52feb98650c87f44907e58f802",
              energi: "0xa7f2f790355e0c32cab03f92f6eb7f488e6f049a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "aavegotchi",
            fileName: "GHST",
            symbol: "ghst",
            name: "Aavegotchi",
            marketCapRank: 575,
            addresses: {
              ethereum: "0x3f382dbd960e3a9bbceae22651e88158d2791550",
              "polygon-pos": "0x385eeac5cb85a38a9a07a70c73e0a3271cfb54a7",
              energi: "0x4bd75f8c7e067ea9b6e2dfbecd99d805396bc5ff",
            },
            variants: ["branded", "background"],
          },
          {
            id: "access-protocol",
            fileName: "ACS",
            symbol: "acs",
            name: "Access Protocol",
            marketCapRank: 0,
            addresses: {},
            variants: ["branded", "background"],
          },
          {
            id: "acet-token",
            fileName: "ACT",
            symbol: "act",
            name: "Acet",
            marketCapRank: 0,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "acquire-fi",
            fileName: "ACQ",
            symbol: "acq",
            name: "Acquire.Fi",
            marketCapRank: 1334,
            addresses: {
              ethereum: "0x4bdcb66b968060d9390c1d12bd29734496205581",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "acria",
            fileName: "ACRIA",
            symbol: "acria",
            name: "Acria.AI",
            marketCapRank: 1944,
            addresses: {
              ethereum: "0x44f5909e97e1cbf5fbbdf0fc92fd83cde5d5c58a",
              "binance-smart-chain":
                "0x44f5909e97e1cbf5fbbdf0fc92fd83cde5d5c58a",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "across-protocol",
            fileName: "ACX",
            symbol: "acx",
            name: "Across Protocol",
            marketCapRank: 568,
            addresses: {
              ethereum: "0x44108f0223a3c3028f5fe7aec7f9bb2e66bef82f",
              "polygon-pos": "0xf328b73b6c685831f238c30a23fc19140cb4d8fc",
              "optimistic-ethereum":
                "0xff733b2a3557a7ed6697007ab5d11b79fdd1b76b",
              "arbitrum-one": "0x53691596d1bce8cea565b84d4915e69e03d9c99d",
              boba: "0x96821b258955587069f680729cd77369c0892b40",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "adapad",
            fileName: "ADAPAD",
            symbol: "adapad",
            name: "ADAPad",
            marketCapRank: 1962,
            addresses: {
              "binance-smart-chain":
                "0xdb0170e2d0c1cc1b2e7a90313d9b9afa4f250289",
              ethereum: "0xdb0170e2d0c1cc1b2e7a90313d9b9afa4f250289",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "aelf",
            fileName: "ELF",
            symbol: "elf",
            name: "aelf",
            marketCapRank: 195,
            addresses: {
              ethereum: "0xbf2179859fc6d5bee9bf9158632dc51678a4100e",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "affyn",
            fileName: "FYN",
            symbol: "fyn",
            name: "Affyn",
            marketCapRank: 848,
            addresses: {
              "polygon-pos": "0x3b56a704c01d650147ade2b8cee594066b3f9421",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "agoras-currency-of-tau",
            fileName: "AGRS",
            symbol: "agrs",
            name: "Agoras: Currency of Tau",
            marketCapRank: 588,
            addresses: {
              ethereum: "0x738865301a9b7dd80dc3666dd48cf034ec42bdda",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "agoric",
            fileName: "BLD",
            symbol: "bld",
            name: "Agoric",
            marketCapRank: 576,
            addresses: {
              osmosis:
                "ibc/2DA9C149E9AD2BD27FEFA635458FB37093C256C1A940392634A16BEA45262604",
              archway:
                "ibc/8CB56C813A5C2387140BBEAABCCE797AFA0960C8D07B171F71A5188726CFED2C",
              secret: "secret1uxvpq889uxjcpj656yjjexsqa3zqm6ntkyjsjq",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ahatoken",
            fileName: "AHT",
            symbol: "aht",
            name: "AhaToken",
            marketCapRank: 771,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ai-network",
            fileName: "AIN",
            symbol: "ain",
            name: "AI Network",
            marketCapRank: 1388,
            addresses: {
              ethereum: "0x3a810ff7211b40c4fa76205a14efe161615d0385",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "aimbot",
            fileName: "AIMBOT",
            symbol: "aimbot",
            name: "Aimbot AI",
            marketCapRank: 1820,
            addresses: {
              ethereum: "0x0c48250eb1f29491f1efbeec0261eb556f0973c7",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "aimedis-new",
            fileName: "AIMX",
            symbol: "aimx",
            name: "Aimedis (NEW)",
            marketCapRank: 1928,
            addresses: {
              "polygon-pos": "0x33b6d77c607ea499ab5db7e2201c5a516a78a5db",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "aioz-network",
            fileName: "AIOZ",
            symbol: "aioz",
            name: "AIOZ Network",
            marketCapRank: 122,
            addresses: {
              ethereum: "0x626e8036deb333b408be468f951bdb42433cbf18",
              "binance-smart-chain":
                "0x33d08d8c7a168333a85285a68c0042b39fc3741d",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "aipad",
            fileName: "AIPAD",
            symbol: "aipad",
            name: "AIPad",
            marketCapRank: 1249,
            addresses: {
              ethereum: "0xe55d97a97ae6a17706ee281486e98a84095d8aaf",
              "binance-smart-chain":
                "0xe55d97a97ae6a17706ee281486e98a84095d8aaf",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "airbloc-protocol",
            fileName: "ABL",
            symbol: "abl",
            name: "Airbloc",
            marketCapRank: 2698,
            addresses: {
              ethereum: "0xf8b358b3397a8ea5464f8cc753645d42e14b79ea",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "airight",
            fileName: "AIRI",
            symbol: "airi",
            name: "aiRight",
            marketCapRank: 1615,
            addresses: {
              "binance-smart-chain":
                "0x7e2a35c746f2f7c240b664f1da4dd100141ae71f",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "airtor-protocol",
            fileName: "ATOR",
            symbol: "ator",
            name: "AirTor Protocol",
            marketCapRank: 313,
            addresses: {
              ethereum: "0x0f7b3f5a8fed821c5eb60049538a548db2d479ce",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "aisociety",
            fileName: "AIS",
            symbol: "ais",
            name: "AISociety",
            marketCapRank: 2439,
            addresses: {
              ethereum: "0x42a7797351dfd281a80807196c8508eb70bb2af9",
            },
            variants: ["branded", "background"],
          },
          {
            id: "ait-protocol",
            fileName: "AIT",
            symbol: "ait",
            name: "AIT Protocol",
            marketCapRank: 736,
            addresses: {
              ethereum: "0x89d584a1edb3a70b3b07963f9a3ea5399e38b136",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "akash-network",
            fileName: "AKT",
            symbol: "akt",
            name: "Akash Network",
            marketCapRank: 102,
            addresses: { akash: "uakt" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "alaska-gold-rush",
            fileName: "CARAT",
            symbol: "carat",
            name: "Alaska Gold Rush",
            marketCapRank: 2010,
            addresses: {
              "binance-smart-chain":
                "0x426c1c971fb00caaf1883bd801323a8becb0c919",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "alchemix",
            fileName: "ALCX",
            symbol: "alcx",
            name: "Alchemix",
            marketCapRank: 616,
            addresses: {
              ethereum: "0xdbdb4d16eda451d0503b854cf79d55697f90c8df",
              "near-protocol":
                "dbdb4d16eda451d0503b854cf79d55697f90c8df.factory.bridge.near",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "alchemy-pay",
            fileName: "ACH",
            symbol: "ach",
            name: "Alchemy Pay",
            marketCapRank: 355,
            addresses: {
              ethereum: "0xed04915c23f00a313a544955524eb7dbd823143d",
              "binance-smart-chain":
                "0xbc7d6b50616989655afd682fb42743507003056d",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "aldrin",
            fileName: "RIN",
            symbol: "rin",
            name: "Aldrin",
            marketCapRank: 2004,
            addresses: {
              solana: "E5ndSkaB17Dm7CsD22dvcjfrYSDLCxFcMd6z8ddCk5wp",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "aleph",
            fileName: "ALEPH",
            symbol: "aleph",
            name: "Aleph.im",
            marketCapRank: 758,
            addresses: {
              ethereum: "0x27702a26126e0b3702af63ee09ac4d1a084ef628",
              "binance-smart-chain":
                "0x82d2f8e02afb160dd5a480a617692e62de9038c4",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "aleph-zero",
            fileName: "AZERO",
            symbol: "azero",
            name: "Aleph Zero",
            marketCapRank: 256,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "alephium",
            fileName: "ALPH",
            symbol: "alph",
            name: "Alephium",
            marketCapRank: 342,
            addresses: {
              ethereum: "0x590f820444fa3638e022776752c5eef34e2f89a6",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "alethea-artificial-liquid-intelligence-token",
            fileName: "ALI",
            symbol: "ali",
            name: "Artificial Liquid Intelligence",
            marketCapRank: 553,
            addresses: {
              ethereum: "0x6b0b3a982b4634ac68dd83a4dbf02311ce324181",
              cronos: "0x45c135c1cdce8d25a3b729a28659561385c52671",
              "polygon-pos": "0xbfc70507384047aa74c29cdc8c5cb88d0f7213ac",
              base: "0x97c806e7665d3afd84a8fe1837921403d59f3dcc",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "alexgo",
            fileName: "ALEX",
            symbol: "alex",
            name: "ALEX Lab",
            marketCapRank: 239,
            addresses: {
              ethereum: "0xe7c3755482d0da522678af05945062d4427e0923",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "algebra",
            fileName: "ALGB",
            symbol: "algb",
            name: "Algebra",
            marketCapRank: 1431,
            addresses: {
              "polygon-pos": "0x0169ec1f8f639b32eec6d923e24c2a2ff45b9dd6",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "algorand",
            fileName: "ALGO",
            symbol: "algo",
            name: "Algorand",
            marketCapRank: 61,
            addresses: {},
            variants: ["mono", "branded", "background"],
          },
          {
            id: "alien-worlds",
            fileName: "TLM",
            symbol: "tlm",
            name: "Alien Worlds",
            marketCapRank: 500,
            addresses: {
              ethereum: "0x888888848b652b3e3a0f34c96e00eec0f3a23f72",
              "binance-smart-chain":
                "0x2222227e22102fe3322098e4cbfe18cfebd57c95",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "all-art",
            fileName: "AART",
            symbol: "aart",
            name: "ALL.ART",
            marketCapRank: 2009,
            addresses: {
              solana: "F3nefJBcejYbtdREjui1T9DPh5dBgpkKq7u2GAAMXs5B",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "all-in",
            fileName: "ALLIN",
            symbol: "allin",
            name: "All In",
            marketCapRank: 2510,
            addresses: {
              ethereum: "0x9b2b931d6ab97b6a887b2c5d8529537e6fe73ebe",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "allbridge",
            fileName: "ABR",
            symbol: "abr",
            name: "Allbridge",
            marketCapRank: 1822,
            addresses: {
              ethereum: "0xa11bd36801d8fa4448f0ac4ea7a62e3634ce8c7c",
              avalanche: "0xafc43610c7840b20b90caaf93759be5b54b291c9",
              "near-protocol": "abr.a11bd.near",
              "polygon-pos": "0x04429fbb948bbd09327763214b45e505a5293346",
              "huobi-token": "0x2d7e64def6c3311a75c2f6eb45e835cd58e52cde",
              fantom: "0x543acd673960041eee1305500893260f1887b679",
              "binance-smart-chain":
                "0x68784ffaa6ff05e3e04575df77960dc1d9f42b4a",
              aurora: "0x2bae00c8bc1868a5f7a216e881bae9e662630111",
              celo: "0x6e512bfc33be36f2666754e996ff103ad1680cc9",
              solana: "a11bdAAuV8iB2fu7X6AxAvDTo1QZ8FXB3kk5eecdasp",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "allianceblock-nexera",
            fileName: "NXRA",
            symbol: "nxra",
            name: "AllianceBlock Nexera",
            marketCapRank: 349,
            addresses: {
              ethereum: "0x644192291cc835a93d6330b24ea5f5fedd0eef9e",
              avalanche: "0x644192291cc835a93d6330b24ea5f5fedd0eef9e",
              "polygon-pos": "0x644192291cc835a93d6330b24ea5f5fedd0eef9e",
              "binance-smart-chain":
                "0x644192291cc835a93d6330b24ea5f5fedd0eef9e",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "alpaca-finance",
            fileName: "ALPACA",
            symbol: "alpaca",
            name: "Alpaca Finance",
            marketCapRank: 892,
            addresses: {
              "binance-smart-chain":
                "0x8f0528ce5ef7b51152a59745befdd91d97091d2f",
              fantom: "0xad996a45fd2373ed0b10efa4a8ecb9de445a4302",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "alpha-quark-token",
            fileName: "AQT",
            symbol: "aqt",
            name: "Alpha Quark",
            marketCapRank: 764,
            addresses: {
              ethereum: "0x2a9bdcff37ab68b95a53435adfd8892e86084f93",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "altair",
            fileName: "AIR",
            symbol: "air",
            name: "Altair",
            marketCapRank: 1299,
            addresses: {},
            variants: ["branded", "background"],
          },
          {
            id: "alva",
            fileName: "AA",
            symbol: "aa",
            name: "ALVA",
            marketCapRank: 788,
            addresses: {
              "binance-smart-chain":
                "0x99e6ca7e6c5c5aea22b4a992eb6895bc6d433298",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "alvey-chain",
            fileName: "WALV",
            symbol: "walv",
            name: "Alvey Chain",
            marketCapRank: 2288,
            addresses: {
              "binance-smart-chain":
                "0x256d1fce1b1221e8398f65f9b36033ce50b2d497",
              ethereum: "0x256d1fce1b1221e8398f65f9b36033ce50b2d497",
            },
            variants: ["branded", "background"],
          },
          {
            id: "ambire-wallet",
            fileName: "WALLET",
            symbol: "wallet",
            name: "Ambire Wallet",
            marketCapRank: 1583,
            addresses: {
              ethereum: "0x88800092ff476844f74dc2fc427974bbee2794ae",
              "polygon-pos": "0x564906ec1df8399f00e4ad32c0ecac0404a27a1c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ampleforth-governance-token",
            fileName: "FORTH",
            symbol: "forth",
            name: "Ampleforth Governance",
            marketCapRank: 649,
            addresses: {
              ethereum: "0x77fba179c79de5b7653f68b5039af940ada60ce0",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "angola",
            fileName: "AGLA",
            symbol: "agla",
            name: "Angola",
            marketCapRank: 1395,
            addresses: {
              "polygon-pos": "0xd6a33f67b733d422c821c36f0f79ca145b930d01",
              ethereum: "0x1f7e5118521b550bb1a9b435727c003eb033fc51",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "apecoin",
            fileName: "APE",
            symbol: "ape",
            name: "ApeCoin",
            marketCapRank: 97,
            addresses: {
              ethereum: "0x4d224452801aced8b2f0aebe155379bb5d594381",
              "polygon-pos": "0xb7b31a6bc18e48888545ce79e83e06003be70930",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "apefi",
            fileName: "APEFI",
            symbol: "apefi",
            name: "apefi",
            marketCapRank: null,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "apex-token-2",
            fileName: "APEX",
            symbol: "apex",
            name: "ApeX",
            marketCapRank: 412,
            addresses: {
              ethereum: "0x52a8845df664d76c69d2eea607cd793565af42b8",
              "arbitrum-one": "0x61a1ff55c5216b636a294a07d77c6f4df10d3b56",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "apf-coin",
            fileName: "APFC",
            symbol: "apfc",
            name: "APF coin",
            marketCapRank: 1787,
            addresses: {
              ethereum: "0x8ed955a2b7d2c3a17a9d05daca95e01818f8c11e",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "apm-coin",
            fileName: "APM",
            symbol: "apm",
            name: "apM Coin",
            marketCapRank: 2050,
            addresses: {
              ethereum: "0xc8c424b91d8ce0137bab4b832b7f7d154156ba6c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "apollo-2",
            fileName: "APOLLO",
            symbol: "apollo",
            name: "Apollo",
            marketCapRank: 1317,
            addresses: {
              neutron:
                "neutron154gg0wtm2v4h9ur8xg32ep64e8ef0g5twlsgvfeajqwghdryvyqsqhgk8e",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "apollon-limassol",
            fileName: "APL",
            symbol: "apl",
            name: "Apollon Limassol Fan Token",
            marketCapRank: 2001,
            addresses: { chiliz: "0xb407a167fe99eb97970e41b2608d0d9484c489c8" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "apollox-2",
            fileName: "APX",
            symbol: "apx",
            name: "APX",
            marketCapRank: 663,
            addresses: {
              "binance-smart-chain":
                "0x78f5d389f5cdccfc41594abab4b0ed02f31398b3",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "aptos",
            fileName: "APT",
            symbol: "apt",
            name: "Aptos",
            marketCapRank: 24,
            addresses: { aptos: "0x1::aptos_coin::AptosCoin" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "apwine",
            fileName: "APW",
            symbol: "apw",
            name: "Spectra",
            marketCapRank: 1162,
            addresses: {
              ethereum: "0x4104b135dbc9609fc1a9490e61369036497660c8",
              "polygon-pos": "0x6c0ab120dbd11ba701aff6748568311668f63fe0",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "aqtis",
            fileName: "AQTIS",
            symbol: "aqtis",
            name: "AQTIS",
            marketCapRank: 1073,
            addresses: {
              ethereum: "0x6ff2241756549b5816a177659e766eaf14b34429",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "aquarius",
            fileName: "AQUA",
            symbol: "aqua",
            name: "Aquarius",
            marketCapRank: 1124,
            addresses: {
              stellar:
                "GBNZILSTVQZ4R7IKQDGHYGY2QXL5QOFJYQMXPKWRRM5PAV7Y4M67AQUA",
            },
            variants: ["branded", "background"],
          },
          {
            id: "aragon",
            fileName: "ANT",
            symbol: "ant",
            name: "Aragon",
            marketCapRank: 236,
            addresses: {
              ethereum: "0xa117000000f279d81a1d3cc75430faa017fa5a2e",
              energi: "0x4b3686eec98b2b89102f2830003097c7d4e1f691",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "arbitrum",
            fileName: "ARB",
            symbol: "arb",
            name: "Arbitrum",
            marketCapRank: 32,
            addresses: {
              "arbitrum-one": "0x912ce59144191c1204e64559fe8253a0e49e6548",
              "arbitrum-nova": "0xf823c3cd3cebe0a1fa952ba88dc9eef8e0bf46ad",
              ethereum: "0xb50721bcf8d664c30412cfbc6cf7a15145234ad1",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "arc",
            fileName: "ARC",
            symbol: "arc",
            name: "Arc",
            marketCapRank: 567,
            addresses: {
              ethereum: "0xc82e3db60a52cf7529253b4ec688f631aad9e7c2",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "arcblock",
            fileName: "ABT",
            symbol: "abt",
            name: "Arcblock",
            marketCapRank: 343,
            addresses: {
              ethereum: "0xb98d4c97425d9908e66e53a6fdf673acca0be986",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "archway",
            fileName: "ARCH",
            symbol: "arch",
            name: "Archway",
            marketCapRank: 745,
            addresses: {
              archway: "aarch",
              osmosis:
                "ibc/23AB778D694C1ECFC59B91D8C399C115CC53B0BD1C61020D8E19519F002BDD85",
            },
            variants: ["branded", "background"],
          },
          {
            id: "ardor",
            fileName: "ARDR",
            symbol: "ardr",
            name: "Ardor",
            marketCapRank: 431,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "areon-network",
            fileName: "AREA",
            symbol: "area",
            name: "Areon Network",
            marketCapRank: 1339,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ari10",
            fileName: "ARI10",
            symbol: "ari10",
            name: "Ari10",
            marketCapRank: 1579,
            addresses: {
              "binance-smart-chain":
                "0x80262f604acac839724f66846f290a2cc8b48662",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "arianee",
            fileName: "ARIA20",
            symbol: "aria20",
            name: "Arianee",
            marketCapRank: 1594,
            addresses: {
              ethereum: "0xedf6568618a00c6f0908bf7758a16f76b6e04af9",
              "polygon-pos": "0x46f48fbdedaa6f5500993bede9539ef85f4bee8e",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "arix",
            fileName: "ARIX",
            symbol: "arix",
            name: "Arix",
            marketCapRank: 2127,
            addresses: {
              "binance-smart-chain":
                "0x4db2495afad4c0e481ffc40fdaf66e13a786b619",
              ethereum: "0xbb6cf73a00f480d0951ba979a7606857cdde626b",
            },
            variants: ["branded", "background"],
          },
          {
            id: "ark",
            fileName: "ARK",
            symbol: "ark",
            name: "ARK",
            marketCapRank: 354,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "arkadiko-protocol",
            fileName: "DIKO",
            symbol: "diko",
            name: "Arkadiko",
            marketCapRank: 790,
            addresses: { stacks: "SP2C2YFP12AJZB4MABJBAJ55XECVS7E4PMMZ89YZR" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "arkham",
            fileName: "ARKM",
            symbol: "arkm",
            name: "Arkham",
            marketCapRank: 180,
            addresses: {
              ethereum: "0x6e2a43be0b1d33b726f0ca3b8de60b3482b8b050",
            },
            variants: ["mono"],
          },
          {
            id: "arpa",
            fileName: "ARPA",
            symbol: "arpa",
            name: "ARPA",
            marketCapRank: 535,
            addresses: {
              ethereum: "0xba50933c268f567bdc86e1ac131be072c6b0b71a",
              "binance-smart-chain":
                "0x6f769e65c14ebd1f68817f5f1dcdb61cfa2d6f7e",
              "polygon-pos": "0xee800b277a96b0f490a1a732e1d6395fad960a26",
            },
            variants: ["branded", "background"],
          },
          {
            id: "arthswap",
            fileName: "ARSW",
            symbol: "arsw",
            name: "ArthSwap",
            marketCapRank: 2351,
            addresses: { astar: "0xde2578edec4669ba7f41c5d5d2386300bcea4678" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "artrade",
            fileName: "ATR",
            symbol: "atr",
            name: "Artrade",
            marketCapRank: 480,
            addresses: {
              solana: "ATRLuHph8dxnPny4WSNW7fxkhbeivBrtWbY6BfB4xpLj",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "arweave",
            fileName: "AR",
            symbol: "ar",
            name: "Arweave",
            marketCapRank: 53,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "assetmantle",
            fileName: "MNTL",
            symbol: "mntl",
            name: "AssetMantle",
            marketCapRank: 1750,
            addresses: {
              cosmos:
                "ibc/00F2B62EB069321A454B708876476AFCD9C23C8C9C4A5A206DDF1CD96B645057",
              "polygon-pos": "0x38a536a31ba4d8c1bcca016abbf786ecd25877e8",
              ethereum: "0x2c4f1df9c7de0c59778936c9b145ff56813f3295",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "aston-villa-fan-token",
            fileName: "AVL",
            symbol: "avl",
            name: "Aston Villa Fan Token",
            marketCapRank: 2573,
            addresses: { chiliz: "0x095726841dc9bf395114ac83f8fd42b176cfad10" },
            variants: ["branded", "background"],
          },
          {
            id: "atari",
            fileName: "ATRI",
            symbol: "atri",
            name: "Atari",
            marketCapRank: 2016,
            addresses: {
              ethereum: "0xdacd69347de42babfaecd09dc88958378780fb62",
              fantom: "0x818ec0a7fe18ff94269904fced6ae3dae6d6dc0b",
              "polygon-pos": "0xb140665dde25c644c6b418e417c930de8a8a6ac9",
              "binance-smart-chain":
                "0xc0c6e4c6e70c6231b20979bda581a66f062a7967",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "athenadao-token",
            fileName: "ATH",
            symbol: "ath",
            name: "AthenaDAO",
            marketCapRank: 1593,
            addresses: {
              ethereum: "0xa4ffdf3208f46898ce063e25c1c43056fa754739",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "atlas-navi",
            fileName: "NAVI",
            symbol: "navi",
            name: "Atlas Navi",
            marketCapRank: 831,
            addresses: {
              ethereum: "0xfc1c93a2507975e98b9d0e9260ded61a00152bf1",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "atletico-madrid",
            fileName: "ATM",
            symbol: "atm",
            name: "Atletico Madrid Fan Token",
            marketCapRank: 1327,
            addresses: { chiliz: "0xe9506f70be469d2369803ccf41823713bafe8154" },
            variants: ["branded", "background"],
          },
          {
            id: "atpay",
            fileName: "ATPAY",
            symbol: "atpay",
            name: "AtPay",
            marketCapRank: 1328,
            addresses: {
              solana: "8sF1JWbZVCUvb6TyHYbsu9CkM8Qm6jnFVe6PqtAsdzCU",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "auction",
            fileName: "AUCTION",
            symbol: "auction",
            name: "Bounce",
            marketCapRank: 385,
            addresses: {
              ethereum: "0xa9b1eb5908cfc3cdf91f9b8b3a74108598009096",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "audius",
            fileName: "AUDIO",
            symbol: "audio",
            name: "Audius",
            marketCapRank: 229,
            addresses: {
              ethereum: "0x18aaa7115705e8be94bffebde57af9bfc265b998",
              energi: "0x2c25972d4adb478773be354a09e4596f29e31fb3",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "augur",
            fileName: "REP",
            symbol: "rep",
            name: "Augur",
            marketCapRank: 1478,
            addresses: {
              ethereum: "0x221657776846890989a759ba2973e427dff5c9bb",
              energi: "0x2a2666f62157769d09a64488bbb51bd77036f6ce",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "aura-bal",
            fileName: "AURABAL",
            symbol: "aurabal",
            name: "Aura BAL",
            marketCapRank: 786,
            addresses: {
              ethereum: "0x616e8bfa43f920657b3497dbf40d6b1a02d4608d",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "aura-finance",
            fileName: "AURA",
            symbol: "aura",
            name: "Aura Finance",
            marketCapRank: 906,
            addresses: {
              ethereum: "0xc0c293ce456ff0ed870add98a0828dd4d2903dbf",
              xdai: "0x1509706a6c66ca549ff0cb464de88231ddbe213b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "aurigami",
            fileName: "PLY",
            symbol: "ply",
            name: "Aurigami",
            marketCapRank: 2303,
            addresses: {
              aurora: "0x09c9d464b58d96837f8d8b6f4d9fe4ad408d3a4f",
              ethereum: "0x1ab43204a195a0fd37edec621482afd3792ef90b",
              "near-protocol":
                "1ab43204a195a0fd37edec621482afd3792ef90b.factory.bridge.near",
            },
            variants: ["branded", "background"],
          },
          {
            id: "aurora-dao",
            fileName: "IDEX",
            symbol: "idex",
            name: "IDEX",
            marketCapRank: 605,
            addresses: {
              ethereum: "0xb705268213d593b8fd88d3fdeff93aff5cbdcfae",
              "polygon-pos": "0x9cb74c8032b007466865f060ad2c46145d45553d",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "aurora-near",
            fileName: "AURORA",
            symbol: "aurora",
            name: "Aurora",
            marketCapRank: 388,
            addresses: {
              ethereum: "0xaaaaaa20d9e0e2461697782ef11675f668207961",
              aurora: "0x8bec47865ade3b172a928df8f990bc7f2a3b9f79",
              "near-protocol":
                "aaaaaa20d9e0e2461697782ef11675f668207961.factory.bridge.near",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "aurory",
            fileName: "AURY",
            symbol: "aury",
            name: "Aurory",
            marketCapRank: 820,
            addresses: {
              solana: "AURYydfxJib1ZkTir1Jn1J9ECYUtjb6rKQVmtYaixWPP",
              "arbitrum-one": "0x11bf4f05eb28b802ed3ab672594decb20ffe2313",
            },
            variants: ["branded", "background"],
          },
          {
            id: "automata",
            fileName: "ATA",
            symbol: "ata",
            name: "Automata",
            marketCapRank: 563,
            addresses: {
              ethereum: "0xa2120b9e674d3fc3875f415a7df52e382f141225",
              "binance-smart-chain":
                "0xa2120b9e674d3fc3875f415a7df52e382f141225",
              "polygon-pos": "0x0df0f72ee0e5c9b7ca761ecec42754992b2da5bf",
            },
            variants: ["branded", "background"],
          },
          {
            id: "avalanche-2",
            fileName: "AVAX",
            symbol: "avax",
            name: "Avalanche",
            marketCapRank: 11,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "avalaunch",
            fileName: "XAVA",
            symbol: "xava",
            name: "Avalaunch",
            marketCapRank: 760,
            addresses: {
              avalanche: "0xd1c3f94de7e5b45fa4edbba472491a9f4b166fc4",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "avaocado-dao",
            fileName: "AVG",
            symbol: "avg",
            name: "Avocado DAO",
            marketCapRank: 2104,
            addresses: {
              ethereum: "0xa41f142b6eb2b164f8164cae0716892ce02f311f",
              "binance-smart-chain":
                "0xa41f142b6eb2b164f8164cae0716892ce02f311f",
            },
            variants: ["branded", "background"],
          },
          {
            id: "aventus",
            fileName: "AVT",
            symbol: "avt",
            name: "Aventus",
            marketCapRank: 806,
            addresses: {
              ethereum: "0x0d88ed6e74bbfd96b831231638b66c05571e824f",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "aviator",
            fileName: "AVI",
            symbol: "avi",
            name: "Aviator",
            marketCapRank: 890,
            addresses: {
              ethereum: "0xd2bdaaf2b9cc6981fd273dcb7c04023bfbe0a7fe",
            },
            variants: ["branded", "background"],
          },
          {
            id: "avinoc",
            fileName: "AVINOC",
            symbol: "avinoc",
            name: "AVINOC",
            marketCapRank: 1119,
            addresses: {
              ethereum: "0xf1ca9cb74685755965c7458528a36934df52a3ef",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "axe-cap",
            fileName: "AXE",
            symbol: "axe",
            name: "Axe Cap",
            marketCapRank: 2384,
            addresses: {
              ethereum: "0x070e984fda37dd942f5c953f6b2375339adac308",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "axel",
            fileName: "AXEL",
            symbol: "axel",
            name: "AXEL",
            marketCapRank: 1398,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "axelar",
            fileName: "AXL",
            symbol: "axl",
            name: "Axelar",
            marketCapRank: 99,
            addresses: {
              ethereum: "0x467719ad09025fcc6cf6f8311755809d45a5e5f3",
              avalanche: "0x44c784266cf024a60e8acf2427b9857ace194c5d",
              "optimistic-ethereum":
                "0x23ee2343b892b1bb63503a4fabc840e0e2c6810f",
              "arbitrum-one": "0x23ee2343b892b1bb63503a4fabc840e0e2c6810f",
              base: "0x23ee2343b892b1bb63503a4fabc840e0e2c6810f",
              "binance-smart-chain":
                "0x8b1f4432f943c465a973fedc6d7aa50fc96f1f65",
              secret: "secret1vcau4rkn7mvfwl8hf0dqa9p0jr59983e3qqe3z",
              moonbeam: "0x467719ad09025fcc6cf6f8311755809d45a5e5f3",
              fantom: "0x8b1f4432f943c465a973fedc6d7aa50fc96f1f65",
              osmosis:
                "ibc/903A61A498756EA560B85A85132D3AEE21B5DEDD41213725D22ABF276EA6945E",
              "polygon-pos": "0x6e4e624106cb12e168e6533f8ec7c82263358940",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "axie-infinity",
            fileName: "AXS",
            symbol: "axs",
            name: "Axie Infinity",
            marketCapRank: 78,
            addresses: {
              ethereum: "0xbb0e17ef65f82ab018d8edd776e8dd940327b28b",
              ronin: "0x97a9107c1793bc407d6f527b77e7fff4d812bece",
              "binance-smart-chain":
                "0x715d400f88c167884bbcc41c5fea407ed4d2f8a0",
              "harmony-shard-0": "0x14a7b318fed66ffdcc80c1517c172c13852865de",
              energi: "0x7cd3d51bee45434dd80822c5d58b999333b69ffb",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "azit",
            fileName: "AZIT",
            symbol: "azit",
            name: "azit",
            marketCapRank: 1234,
            addresses: {
              "klay-token": "0x6cef6dd9a3c4ad226b8b66effeea2c125df194f1",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "b-cube-ai",
            fileName: "BCUBE",
            symbol: "bcube",
            name: "B-cube.ai",
            marketCapRank: 1834,
            addresses: {
              ethereum: "0x93c9175e26f57d2888c7df8b470c9eea5c0b0a93",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "babb",
            fileName: "BAX",
            symbol: "bax",
            name: "BABB",
            marketCapRank: 1358,
            addresses: {
              ethereum: "0xf920e4f3fbef5b3ad0a25017514b769bdc4ac135",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "bananacat",
            fileName: "BCAT",
            symbol: "bcat",
            name: "BananaCat",
            marketCapRank: 2589,
            addresses: {
              ethereum: "0x0590cc9232ebf68d81f6707a119898219342ecb9",
            },
            variants: ["branded", "background"],
          },
          {
            id: "bancor",
            fileName: "BNT",
            symbol: "bnt",
            name: "Bancor Network",
            marketCapRank: 481,
            addresses: {
              ethereum: "0x1f573d6fb3f13d689ff844b4ce37794d79a7ff1c",
              energi: "0x9419e8edcf570a71eb0dd006602949742b711a80",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "barnbridge",
            fileName: "BOND",
            symbol: "bond",
            name: "BarnBridge",
            marketCapRank: 817,
            addresses: {
              ethereum: "0x0391d2021f89dc339f60fff84546ea23e337750f",
              "optimistic-ethereum":
                "0x3e7ef8f50246f725885102e8238cbba33f276747",
              "arbitrum-one": "0x0d81e50bc677fa67341c44d7eaa9228dee64a4e1",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "basic-attention-token",
            fileName: "BAT",
            symbol: "bat",
            name: "Basic Attention",
            marketCapRank: 189,
            addresses: {
              ethereum: "0x0d8775f648430679a709e98d2b0cb6250d2887ef",
              "harmony-shard-0": "0x2875b4cfab0a4cc4bdc7fbdf94b6e376826a4332",
              avalanche: "0x98443b96ea4b0858fdf3219cd13e98c7a4690588",
              "near-protocol":
                "0d8775f648430679a709e98d2b0cb6250d2887ef.factory.bridge.near",
              "polygon-pos": "0x3cef98bb43d732e2f285ee605a8158cde967d219",
              energi: "0xe8ba8d7765bd33ba7ff3b19b9020c15bf14123b6",
              solana: "EPeUFDgHRxs9xxEPVaL6kfGQvCon7jmAWKVUHuux1Tpz",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "basilisk",
            fileName: "BSX",
            symbol: "bsx",
            name: "Basilisk",
            marketCapRank: 1907,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "bata",
            fileName: "BTA",
            symbol: "bta",
            name: "Bata",
            marketCapRank: 2474,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "battle-infinity",
            fileName: "IBAT",
            symbol: "ibat",
            name: "Battle Infinity",
            marketCapRank: 2567,
            addresses: {
              "binance-smart-chain":
                "0x19cd9b8e42d4ef62c3ea124110d5cfd283ceac43",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "bazaars",
            fileName: "BZR",
            symbol: "bzr",
            name: "Bazaars",
            marketCapRank: 527,
            addresses: {
              ethereum: "0x8d96b4ab6c741a4c8679ae323a100d74f085ba8f",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "beam-2",
            fileName: "BEAM",
            symbol: "beam",
            name: "Beam",
            marketCapRank: 70,
            addresses: {
              ethereum: "0x62d0a8458ed7719fdaf978fe5929c6d342b0bfce",
              "binance-smart-chain":
                "0x62d0a8458ed7719fdaf978fe5929c6d342b0bfce",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "bean",
            fileName: "BEAN",
            symbol: "bean",
            name: "Bean",
            marketCapRank: 813,
            addresses: {
              ethereum: "0xbea0000029ad1c77d3d5d23ba2d8893db9d1efab",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "beethoven-x",
            fileName: "BEETS",
            symbol: "beets",
            name: "Beethoven X",
            marketCapRank: 1535,
            addresses: {
              fantom: "0xf24bcf4d1e507740041c9cfd2dddb29585adce1e",
              "optimistic-ethereum":
                "0xb4bc46bc6cb217b59ea8f4530bae26bf69f677f0",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "beldex",
            fileName: "BDX",
            symbol: "bdx",
            name: "Beldex",
            marketCapRank: 288,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "bella-protocol",
            fileName: "BEL",
            symbol: "bel",
            name: "Bella Protocol",
            marketCapRank: 715,
            addresses: {
              ethereum: "0xa91ac63d040deb1b7a5e4d4134ad23eb0ba07e14",
              "manta-pacific": "0xb385e52903c802b3bdca7c4d0c78460a8988e1ce",
              "binance-smart-chain":
                "0x8443f091997f06a61670b735ed92734f5628692f",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "belt",
            fileName: "BELT",
            symbol: "belt",
            name: "Belt",
            marketCapRank: 2293,
            addresses: {
              "binance-smart-chain":
                "0xe0e514c71282b6f4e823703a39374cf58dc3ea4f",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ben-2",
            fileName: "BEN",
            symbol: "ben",
            name: "Ben",
            marketCapRank: 1331,
            addresses: {
              ethereum: "0x9bf1d7d63dd7a4ce167cf4866388226eeefa702e",
            },
            variants: ["branded", "background"],
          },
          {
            id: "benddao",
            fileName: "BEND",
            symbol: "bend",
            name: "BendDAO",
            marketCapRank: 1862,
            addresses: {
              ethereum: "0x0d02755a5700414b26ff040e1de35d337df56218",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "beoble",
            fileName: "BBL",
            symbol: "bbl",
            name: "Beoble",
            marketCapRank: 1198,
            addresses: {
              ethereum: "0xd979c468a68062e7bdff4ba6df7842dfd3492e0f",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "bepro-network",
            fileName: "BEPRO",
            symbol: "bepro",
            name: "Bepro",
            marketCapRank: 1317,
            addresses: {
              ethereum: "0xcf3c8be2e2c42331da80ef210e9b1b307c03d36a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "berry",
            fileName: "BERRY",
            symbol: "berry",
            name: "Berry",
            marketCapRank: 1814,
            addresses: {
              ethereum: "0x2d787d4f5005bd66ac910c2e821241625c406ed5",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "beta-finance",
            fileName: "BETA",
            symbol: "beta",
            name: "Beta Finance",
            marketCapRank: 590,
            addresses: {
              ethereum: "0xbe1a001fe942f96eea22ba08783140b9dcc09d28",
              avalanche: "0x511d35c52a3c244e7b8bd92c0c297755fbd89212",
              "binance-smart-chain":
                "0xbe1a001fe942f96eea22ba08783140b9dcc09d28",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "betswap-gg",
            fileName: "BSGG",
            symbol: "bsgg",
            name: "Betswap.gg",
            marketCapRank: 1903,
            addresses: {
              ethereum: "0xda16cf041e2780618c49dbae5d734b89a6bac9b3",
              avalanche: "0x49f519002eeced6902f24c0be72b6d898e4d27fc",
              fantom: "0xce22c3e95b5e118ea61c4fb9357fe45cbb34cb56",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "biconomy-exchange-token",
            fileName: "BIT",
            symbol: "bit",
            name: "Biconomy Exchange Token",
            marketCapRank: 2455,
            addresses: {
              "binance-smart-chain":
                "0xc864019047b864b6ab609a968ae2725dfaee808a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "big-data-protocol",
            fileName: "BDP",
            symbol: "bdp",
            name: "Big Data Protocol",
            marketCapRank: 1596,
            addresses: {
              ethereum: "0xf3dcbc6d72a4e1892f7917b7c43b74131df8480e",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "bilira",
            fileName: "TRYB",
            symbol: "tryb",
            name: "BiLira",
            marketCapRank: 1022,
            addresses: {
              ethereum: "0x2c537e5624e4af88a7ae4060c022609376c8d0eb",
              avalanche: "0x564a341df6c126f90cf3ecb92120fd7190acb401",
              "binance-smart-chain":
                "0xc1fdbed7dac39cae2ccc0748f7a80dc446f6a594",
              "polygon-pos": "0x4fb71290ac171e1d144f7221d882becac7196eb5",
              solana: "A94X2fRy3wydNShU4dRaDyap2UuoeWJGWyATtyp61WZf",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "binancecoin",
            fileName: "BNB",
            symbol: "bnb",
            name: "BNB",
            marketCapRank: 4,
            addresses: {
              ethereum: "0xb8c77482e45f1f44de1745f52c74426c631bdd52",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "binaryx",
            fileName: "BNX",
            symbol: "bnx",
            name: "BinaryX [OLD]",
            marketCapRank: 2545,
            addresses: {
              "binance-smart-chain":
                "0x8c851d1a123ff703bd1f9dabe631b69902df5f97",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "bistroo",
            fileName: "BIST",
            symbol: "bist",
            name: "Bistroo",
            marketCapRank: 2498,
            addresses: {
              ethereum: "0x6e8908cfa881c9f6f2c64d3436e7b80b1bf0093f",
              "binance-smart-chain":
                "0xbd525e51384905c6c0936a431bc7efb6c4903ea0",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "biswap",
            fileName: "BSW",
            symbol: "bsw",
            name: "Biswap",
            marketCapRank: 632,
            addresses: {
              "binance-smart-chain":
                "0x965f527d9159dce6288a2219db51fc6eef120dd1",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "bitcicoin",
            fileName: "BITCI",
            symbol: "bitci",
            name: "Bitcicoin",
            marketCapRank: 1361,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "bitcoin",
            fileName: "BTC",
            symbol: "btc",
            name: "Bitcoin",
            marketCapRank: null,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "bitcoin-2",
            fileName: "BTC2",
            symbol: "btc2",
            name: "Bitcoin 2",
            marketCapRank: 1648,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "bitcoin-cash",
            fileName: "BCH",
            symbol: "bch",
            name: "Bitcoin Cash",
            marketCapRank: 15,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "bitcoin-cash-sv",
            fileName: "BSV",
            symbol: "bsv",
            name: "Bitcoin SV",
            marketCapRank: 65,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "bitcoin-diamond",
            fileName: "BCD",
            symbol: "bcd",
            name: "Bitcoin Diamond",
            marketCapRank: 1048,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "bitcoin-gold",
            fileName: "BTG",
            symbol: "btg",
            name: "Bitcoin Gold",
            marketCapRank: 122,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "bitcoin-pro",
            fileName: "BTCP",
            symbol: "btcp",
            name: "Bitcoin Pro",
            marketCapRank: 1722,
            addresses: {
              ethereum: "0x723cbfc05e2cfcc71d3d89e770d32801a5eef5ab",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "bitcone",
            fileName: "CONE",
            symbol: "cone",
            name: "BitCone",
            marketCapRank: 1986,
            addresses: {
              "polygon-pos": "0xba777ae3a3c91fcd83ef85bfe65410592bdd0f7c",
            },
            variants: ["branded", "background"],
          },
          {
            id: "bitkub-coin",
            fileName: "KUB",
            symbol: "kub",
            name: "Bitkub Coin",
            marketCapRank: 313,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "bitmart-token",
            fileName: "BMX",
            symbol: "bmx",
            name: "BitMart",
            marketCapRank: 521,
            addresses: {
              ethereum: "0x986ee2b944c42d017f52af21c4c69b84dbea35d8",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "bitmex-token",
            fileName: "BMEX",
            symbol: "bmex",
            name: "BitMEX",
            marketCapRank: 1028,
            addresses: {
              ethereum: "0xb113c6cf239f60d380359b762e95c13817275277",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "bitrise-token",
            fileName: "BRISE",
            symbol: "brise",
            name: "Bitgert",
            marketCapRank: 534,
            addresses: {
              "binance-smart-chain":
                "0x8fff93e810a2edaafc326edee51071da9d398e83",
              ethereum: "0xf2b2f7b47715256ce4ea43363a867fdce9353e3a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "bitrock",
            fileName: "BROCK",
            symbol: "brock",
            name: "Bitrock",
            marketCapRank: 1084,
            addresses: {
              ethereum: "0xde67d97b8770dc98c746a3fc0093c538666eb493",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "bitshares",
            fileName: "BTS",
            symbol: "bts",
            name: "BitShares",
            marketCapRank: 1443,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "bittensor",
            fileName: "TAO",
            symbol: "tao",
            name: "Bittensor",
            marketCapRank: 44,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "blackdragon-token",
            fileName: "BDT",
            symbol: "bdt",
            name: "BlackDragon",
            marketCapRank: null,
            addresses: {
              "arbitrum-one": "0x21ccbc5e7f353ec43b2f5b1fb12c3e9d89d30dca",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "blacksmith-token",
            fileName: "BS",
            symbol: "bs",
            name: "Blacksmith Token",
            marketCapRank: 2848,
            addresses: {
              ethereum: "0x5eca7b975e34567d9460fa613013a7a6993ad185",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "blank",
            fileName: "BLANK",
            symbol: "blank",
            name: "BlockWallet",
            marketCapRank: 2517,
            addresses: {
              ethereum: "0x41a3dba3d677e573636ba691a70ff2d606c29666",
              "polygon-pos": "0xf4c83080e80ae530d6f8180572cbbf1ac9d5d435",
            },
            variants: ["branded", "background"],
          },
          {
            id: "blastar",
            fileName: "BLAST",
            symbol: "blast",
            name: "Blastar",
            marketCapRank: 2530,
            addresses: {
              pulsechain: "0x6a44be19d96f087494bafa66ee5df1bf7aaf220f",
            },
            variants: ["branded", "background"],
          },
          {
            id: "blockasset",
            fileName: "BLOCK",
            symbol: "block",
            name: "Blockasset",
            marketCapRank: 1212,
            addresses: {
              solana: "NFTUkR4u7wKxy9QLaX2TGvd9oZSWoMo4jqSJqdMb7Nk",
              "binance-smart-chain":
                "0xbc7a566b85ef73f935e640a06b5a8b031cd975df",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "blockbank",
            fileName: "BBANK",
            symbol: "bbank",
            name: "blockbank",
            marketCapRank: 2930,
            addresses: {
              ethereum: "0xf4b5470523ccd314c6b9da041076e7d79e0df267",
              "binance-smart-chain":
                "0xf4b5470523ccd314c6b9da041076e7d79e0df267",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "blockchain-bets",
            fileName: "BCB",
            symbol: "bcb",
            name: "Blockchain Bets",
            marketCapRank: 1192,
            addresses: {
              ethereum: "0x2d886570a0da04885bfd6eb48ed8b8ff01a0eb7e",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "blockchain-brawlers",
            fileName: "BRWL",
            symbol: "brwl",
            name: "Blockchain Brawlers",
            marketCapRank: 1442,
            addresses: {
              ethereum: "0x4086e77c5e993fdb90a406285d00111a974f877a",
            },
            variants: ["branded", "background"],
          },
          {
            id: "blockchain-certified-data-token",
            fileName: "BCDT",
            symbol: "bcdt",
            name: "EvidenZ",
            marketCapRank: 2475,
            addresses: {
              ethereum: "0xacfa209fb73bf3dd5bbfb1101b9bc999c49062a5",
              "binance-smart-chain":
                "0x8683e604cdf911cd72652a04bf9d571697a86a60",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "blockchain-monster-hunt",
            fileName: "BCMC",
            symbol: "bcmc",
            name: "Blockchain Monster Hunt",
            marketCapRank: 2373,
            addresses: {
              ethereum: "0x2ba8349123de45e931a8c8264c332e6e9cf593f9",
              "binance-smart-chain":
                "0xc10358f062663448a3489fc258139944534592ac",
              "polygon-pos": "0xc10358f062663448a3489fc258139944534592ac",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "blockchainspace",
            fileName: "GUILD",
            symbol: "guild",
            name: "BlockchainSpace",
            marketCapRank: 2108,
            addresses: {
              ethereum: "0x83e9f223e1edb3486f876ee888d76bfba26c475a",
              "polygon-pos": "0xaff41da975501e5b71848c975834341777d1a473",
              "binance-smart-chain":
                "0x0565805ca3a4105faee51983b0bd8ffb5ce1455c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "blocksquare",
            fileName: "BST",
            symbol: "bst",
            name: "Blocksquare",
            marketCapRank: 883,
            addresses: {
              ethereum: "0x509a38b7a1cc0dcd83aa9d06214663d9ec7c7f4a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "blockstack",
            fileName: "STX",
            symbol: "stx",
            name: "Stacks",
            marketCapRank: 27,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "blockv",
            fileName: "VEE",
            symbol: "vee",
            name: "BLOCKv",
            marketCapRank: 1006,
            addresses: {
              ethereum: "0x340d2bde5eb28c1eed91b2f790723e3b160613b7",
              "optimistic-ethereum":
                "0xe3c332a5dce0e1d9bc2cc72a68437790570c28a4",
              "polygon-pos": "0xf1c1a3c2481a3a8a3f173a9ab5ade275292a6fa3",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "blocto-token",
            fileName: "BLT",
            symbol: "blt",
            name: "Blocto",
            marketCapRank: 1694,
            addresses: {
              solana: "BLT1noyNr3GttckEVrtcfC6oyK6yV1DpPgSyXbncMwef",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "blocx-3",
            fileName: "BLX",
            symbol: "blx",
            name: "BlocX",
            marketCapRank: 2644,
            addresses: {
              "binance-smart-chain":
                "0xe9da86435265477bcde46c7e9aa7ace5aa7e2d18",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "blox",
            fileName: "CDT",
            symbol: "cdt",
            name: "Blox",
            marketCapRank: 202,
            addresses: {
              ethereum: "0x177d39ac676ed1c67a2b268ad7f1e58826e5b0af",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "blox-2",
            fileName: "BLOX",
            symbol: "blox",
            name: "BLOX",
            marketCapRank: 2240,
            addresses: {
              ethereum: "0xc9f00080d96cea3ef92d2e2e563d4cd41fb5bb36",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "bloxmove-erc20",
            fileName: "BLXM",
            symbol: "blxm",
            name: "bloXmove",
            marketCapRank: 2078,
            addresses: {
              ethereum: "0x38d9eb07a7b8df7d86f440a4a5c4a4c1a27e1a08",
              "binance-smart-chain":
                "0x40e51e0ec04283e300f12f6bb98da157bb22036e",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "bluemove",
            fileName: "MOVE",
            symbol: "move",
            name: "BlueMove",
            marketCapRank: 1608,
            addresses: {
              aptos:
                "0x27fafcc4e39daac97556af8a803dbb52bcb03f0821898dc845ac54225b9793eb::move_coin::MoveCoin",
              sui: "0xd9f9b0b4f35276eecd1eea6985bfabe2a2bbd5575f9adb9162ccbdb4ddebde7f::smove::SMOVE",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "bluesparrow",
            fileName: "BLUESPARROW",
            symbol: "bluesparrow",
            name: "BlueSparrow",
            marketCapRank: 2241,
            addresses: {
              ethereum: "0x24ccedebf841544c9e6a62af4e8c2fa6e5a46fde",
            },
            variants: ["branded", "background"],
          },
          {
            id: "blur",
            fileName: "BLUR",
            symbol: "blur",
            name: "Blur",
            marketCapRank: 121,
            addresses: {
              ethereum: "0x5283d291dbcf85356a21ba090e6db59121208b44",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "bluzelle",
            fileName: "BLZ",
            symbol: "blz",
            name: "Bluzelle",
            marketCapRank: 386,
            addresses: {
              ethereum: "0x5732046a883704404f284ce41ffadd5b007fd668",
              "binance-smart-chain":
                "0x935a544bf5816e3a7c13db2efe3009ffda0acda2",
              energi: "0x3fa2c976654a6ba6dcb1e532a4b1e31fd4dcd3b9",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "bnb48-club-token",
            fileName: "KOGE",
            symbol: "koge",
            name: "KOGE",
            marketCapRank: 681,
            addresses: {
              "binance-smart-chain":
                "0xe6df05ce8c8301223373cf5b969afcb1498c5528",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "bob-token",
            fileName: "BOB",
            symbol: "bob",
            name: "BOB Token",
            marketCapRank: 1071,
            addresses: {
              ethereum: "0x7d8146cf21e8d7cbe46054e01588207b51198729",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "boba-network",
            fileName: "BOBA",
            symbol: "boba",
            name: "Boba Network",
            marketCapRank: 332,
            addresses: {
              ethereum: "0x42bbfa2e77757c645eeaad1655e0911a7553efbc",
              boba: "0xa18bf3994c0cc6e3b63ac420308e5383f53120d7",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "bolide",
            fileName: "BLID",
            symbol: "blid",
            name: "Bolide",
            marketCapRank: 1461,
            addresses: {
              ethereum: "0x8a7adc1b690e81c758f1bd0f72dfe27ae6ec56a5",
              "polygon-pos": "0x4b27cd6e6a5e83d236ead376d256fe2f9e9f0d2e",
              "arbitrum-one": "0x81de4945807bb31425362f8f7109c18e3dc4f8f0",
              "binance-smart-chain":
                "0x766afcf83fd5eaf884b3d529b432ca27a6d84617",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "bolt",
            fileName: "BOLT",
            symbol: "bolt",
            name: "Bolt",
            marketCapRank: 1945,
            addresses: {
              ethereum: "0xd5930c307d7395ff807f2921f12c5eb82131a789",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "bomber-coin",
            fileName: "BCOIN",
            symbol: "bcoin",
            name: "BombCrypto",
            marketCapRank: 1703,
            addresses: {
              "binance-smart-chain":
                "0x00e1656e45f18ec6747f5a8496fd39b50b38396d",
            },
            variants: ["branded", "background"],
          },
          {
            id: "bonfida",
            fileName: "FIDA",
            symbol: "fida",
            name: "Bonfida",
            marketCapRank: 620,
            addresses: {
              solana: "EchesyfXePKdLtoiZSL8pBe8Myagyy8ZRqsACNCFGnvp",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "boosted-lusd",
            fileName: "BLUSD",
            symbol: "blusd",
            name: "Boosted LUSD",
            marketCapRank: 1829,
            addresses: {
              ethereum: "0xb9d7dddca9a4ac480991865efef82e01273f79c3",
            },
            variants: ["branded", "background"],
          },
          {
            id: "bosagora",
            fileName: "BOA",
            symbol: "boa",
            name: "BOSagora",
            marketCapRank: 1425,
            addresses: {
              ethereum: "0x746dda2ea243400d5a63e0700f190ab79f06489e",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "bountymarketcap",
            fileName: "BMC",
            symbol: "bmc",
            name: "BountyMarketCap",
            marketCapRank: 1614,
            addresses: {
              ethereum: "0xd945d2031b4c63c0e363304fb771f709b502dc0a",
            },
            variants: ["mono"],
          },
          {
            id: "brick",
            fileName: "BRICK",
            symbol: "brick",
            name: "r/FortNiteBR Bricks",
            marketCapRank: 1550,
            addresses: {
              "arbitrum-nova": "0x6dcb98f460457fe4952e12779ba852f82ecc62c1",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "brickken",
            fileName: "BKN",
            symbol: "bkn",
            name: "Brickken",
            marketCapRank: 1044,
            addresses: {
              ethereum: "0x0a638f07acc6969abf392bb009f216d22adea36d",
              "binance-smart-chain":
                "0x0e28bc9b03971e95acf9ae1326e51ecf9c55b498",
            },
            variants: ["branded", "background"],
          },
          {
            id: "bridge-oracle",
            fileName: "BRG",
            symbol: "brg",
            name: "Bridge Oracle",
            marketCapRank: 1592,
            addresses: {
              "binance-smart-chain":
                "0x6e4a971b81ca58045a2aa982eaa3d50c4ac38f42",
              ethereum: "0xc9c4fd7579133701fa2769b6955e7e56bb386db1",
              "arbitrum-one": "0xc9c4fd7579133701fa2769b6955e7e56bb386db1",
              nuls: "NULSd6Hgu5DRgAg11zwyq1C1NGpKBGYUm3Uhu",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "brn-metaverse",
            fileName: "BRN",
            symbol: "brn",
            name: "BRN Metaverse",
            marketCapRank: 1299,
            addresses: {
              "binance-smart-chain":
                "0x926ecc7687fcfb296e97a2b4501f41a6f5f8c214",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "bsc-station",
            fileName: "BSCS",
            symbol: "bscs",
            name: "BSCS",
            marketCapRank: 2168,
            addresses: {
              "binance-smart-chain":
                "0xbcb24afb019be7e93ea9c43b7e22bb55d5b7f45d",
            },
            variants: ["branded", "background"],
          },
          {
            id: "bscpad",
            fileName: "BSCPAD",
            symbol: "bscpad",
            name: "BSCPAD",
            marketCapRank: 1312,
            addresses: {
              "binance-smart-chain":
                "0x5a3010d4d8d3b5fb49f8b6e57fb9e48063f16700",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "btc-standard-hashrate-token",
            fileName: "BTCST",
            symbol: "btcst",
            name: "BTC Standard Hashrate Token",
            marketCapRank: 1972,
            addresses: {
              "binance-smart-chain":
                "0x78650b139471520656b9e7aa7a5e9276814a38e9",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "btse-token",
            fileName: "BTSE",
            symbol: "btse",
            name: "BTSE Token",
            marketCapRank: 446,
            addresses: {
              ethereum: "0x666d875c600aa06ac1cf15641361dec3b00432ef",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "bullperks",
            fileName: "BLP",
            symbol: "blp",
            name: "BullPerks",
            marketCapRank: 1813,
            addresses: {
              "binance-smart-chain":
                "0xfe1d7f7a8f0bda6e415593a2e4f82c64b446d404",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "burrow",
            fileName: "BRRR",
            symbol: "brrr",
            name: "Burrow",
            marketCapRank: 1756,
            addresses: { "near-protocol": "token.burrow.near" },
            variants: ["branded", "background"],
          },
          {
            id: "bware-infra",
            fileName: "INFRA",
            symbol: "infra",
            name: "Bware",
            marketCapRank: 1824,
            addresses: {
              ethereum: "0x013062189dc3dcc99e9cee714c513033b8d99e3c",
              avalanche: "0xa4fb4f0ff2431262d236778495145ecbc975c38b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "byteball",
            fileName: "GBYTE",
            symbol: "gbyte",
            name: "Obyte",
            marketCapRank: 1250,
            addresses: {
              "binance-smart-chain":
                "0xeb34de0c4b2955ce0ff1526cdf735c9e6d249d09",
              kava: "0x0b93109d05ef330acd2c75148891cc61d20c3ef1",
              ethereum: "0x31f69de127c8a0ff10819c0955490a4ae46fcc2a",
              "polygon-pos": "0xab5f7a0e20b0d056aed4aa4528c78da45be7308b",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "bytecoin",
            fileName: "BCN",
            symbol: "bcn",
            name: "Bytecoin",
            marketCapRank: 1660,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "bytom",
            fileName: "BTM",
            symbol: "btm",
            name: "Bytom",
            marketCapRank: 1130,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "bzx-protocol",
            fileName: "BZRX",
            symbol: "bzrx",
            name: "bZx Protocol",
            marketCapRank: 992,
            addresses: {
              ethereum: "0x56d811088235f11c8920698a204a5010a788f4b3",
              energi: "0xe19ab0a7f5bf5b243e011bd070cf9e26296f7ebc",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "cakepie-xyz",
            fileName: "CKP",
            symbol: "ckp",
            name: "Cakepie",
            marketCapRank: 1140,
            addresses: {
              "binance-smart-chain":
                "0x2b5d9adea07b590b638ffc165792b2c610eda649",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "calamari-network",
            fileName: "KMA",
            symbol: "kma",
            name: "Calamari Network",
            marketCapRank: 1783,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "calaxy",
            fileName: "CLXY",
            symbol: "clxy",
            name: "Calaxy",
            marketCapRank: 1603,
            addresses: {
              "hedera-hashgraph": "0x00000000000000000000000000000000000d1ea6",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "camelot-token",
            fileName: "GRAIL",
            symbol: "grail",
            name: "Camelot Token",
            marketCapRank: 855,
            addresses: {
              "arbitrum-one": "0x3d9907f9a368ad0a51be60f7da3b97cf940982d8",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "canto",
            fileName: "CANTO",
            symbol: "canto",
            name: "CANTO",
            marketCapRank: 358,
            addresses: {
              canto: "0x826551890dc65655a0aceca109ab11abdbd7a07b",
              ethereum: "0x56c03b8c4fa80ba37f5a7b60caaaef749bb5b220",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "cap",
            fileName: "CAP",
            symbol: "cap",
            name: "Cap",
            marketCapRank: 2574,
            addresses: {
              "arbitrum-one": "0x031d35296154279dc1984dcd93e392b1f946737b",
              ethereum: "0x43044f861ec040db59a7e324c40507addb673142",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "carbify",
            fileName: "CBY",
            symbol: "cby",
            name: "Carbify",
            marketCapRank: 898,
            addresses: {
              "polygon-pos": "0xb6a5ae40e79891e4deadad06c8a7ca47396df21c",
              ethereum: "0xb9d27bc093ed0a3b7c18366266704cfe5e7af77b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "carbon",
            fileName: "CARBON",
            symbol: "carbon",
            name: "Carbon",
            marketCapRank: 2627,
            addresses: {
              "binance-smart-chain":
                "0xefb5df8eb84055026018030e71bc2cdfa2f138b9",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "carbon-browser",
            fileName: "CSIX",
            symbol: "csix",
            name: "Carbon Browser",
            marketCapRank: 950,
            addresses: {
              "binance-smart-chain":
                "0x04756126f044634c9a0f0e985e60c88a51acc206",
              ethereum: "0x345887cdb19e12833ed376bbf8b8b38269f5f5c8",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "carbon-credit",
            fileName: "CCT",
            symbol: "cct",
            name: "Carbon Credit",
            marketCapRank: 1921,
            addresses: { algorand: "657291910" },
            variants: ["branded", "background"],
          },
          {
            id: "cardano",
            fileName: "ADA",
            symbol: "ada",
            name: "Cardano",
            marketCapRank: 10,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "cardstack",
            fileName: "CARD",
            symbol: "card",
            name: "Cardstack",
            marketCapRank: 2272,
            addresses: {
              ethereum: "0x954b890704693af242613edef1b603825afcd708",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "cargox",
            fileName: "CXO",
            symbol: "cxo",
            name: "CargoX",
            marketCapRank: 1271,
            addresses: {
              ethereum: "0xb6ee9668771a79be7967ee29a63d4184f8097143",
              "polygon-pos": "0xf2ae0038696774d65e67892c9d301c5f2cbbda58",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "carry",
            fileName: "CRE",
            symbol: "cre",
            name: "Carry",
            marketCapRank: 596,
            addresses: {
              ethereum: "0x115ec79f1de567ec68b7ae7eda501b406626478e",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "cartesi",
            fileName: "CTSI",
            symbol: "ctsi",
            name: "Cartesi",
            marketCapRank: 298,
            addresses: {
              ethereum: "0x491604c0fdf08347dd1fa4ee062a822a5dd06b5d",
              avalanche: "0x6b289cceaa8639e3831095d75a3e43520fabf552",
              "optimistic-ethereum":
                "0xec6adef5e1006bb305bb1975333e8fc4071295bf",
              "arbitrum-one": "0x319f865b287fcc10b30d8ce6144e8b6d1b476999",
              "polygon-pos": "0x2727ab1c2d22170abc9b595177b2d5c6e1ab7b7b",
              "binance-smart-chain":
                "0x8da443f84fea710266c8eb6bc34b71702d033ef2",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "cashaa",
            fileName: "CAS",
            symbol: "cas",
            name: "Cashaa",
            marketCapRank: 2057,
            addresses: {
              "binance-smart-chain":
                "0x780207b8c0fdc32cf60e957415bfa1f2d4d9718c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "casper-network",
            fileName: "CSPR",
            symbol: "cspr",
            name: "Casper Network",
            marketCapRank: 199,
            addresses: {},
            variants: ["mono", "branded", "background"],
          },
          {
            id: "castello-coin",
            fileName: "CAST",
            symbol: "cast",
            name: "Castello Coin",
            marketCapRank: 1102,
            addresses: {
              ethereum: "0x3fab0bbaa03bceaf7c49e2b12877db0142be65fc",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "catapult",
            fileName: "ATD",
            symbol: "atd",
            name: "A2DAO",
            marketCapRank: 2620,
            addresses: {
              ethereum: "0x8052327f1baf94a9dc8b26b9100f211ee3774f54",
              "binance-smart-chain":
                "0x1ce440d1a64eea6aa1db2a5aa51c9b326930957c",
            },
            variants: ["branded", "background"],
          },
          {
            id: "catcoin-cash",
            fileName: "CAT",
            symbol: "cat",
            name: "Catcoin",
            marketCapRank: 841,
            addresses: {
              "binance-smart-chain":
                "0x59f4f336bf3d0c49dbfba4a74ebd2a6ace40539a",
              ethereum: "0x59f4f336bf3d0c49dbfba4a74ebd2a6ace40539a",
              solana: "7hWcHohzwtLddDUG81H2PkWq6KEkMtSDNkYXsso18Fy3",
            },
            variants: ["branded", "background"],
          },
          {
            id: "catgirl",
            fileName: "CATGIRL",
            symbol: "catgirl",
            name: "Catgirl",
            marketCapRank: 1031,
            addresses: {
              "binance-smart-chain":
                "0x79ebc9a2ce02277a4b5b3a768b1c0a4ed75bd936",
            },
            variants: ["branded", "background"],
          },
          {
            id: "catheon-gaming",
            fileName: "CATHEON",
            symbol: "catheon",
            name: "Catheon Gaming",
            marketCapRank: 2305,
            addresses: {
              "polygon-pos": "0x7e7737c40878e720b32e7bc9cd096259f876d69f",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "caviar",
            fileName: "CVR",
            symbol: "cvr",
            name: "Caviar",
            marketCapRank: 2319,
            addresses: {
              "polygon-pos": "0x6ae96cc93331c19148541d4d2f31363684917092",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "cdai",
            fileName: "CDAI",
            symbol: "cdai",
            name: "cDAI",
            marketCapRank: 639,
            addresses: {
              ethereum: "0x5d3a536e4d6dbd6114cc1ead35777bab948e3643",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ceek",
            fileName: "CEEK",
            symbol: "ceek",
            name: "CEEK Smart VR",
            marketCapRank: 605,
            addresses: {
              ethereum: "0xb056c38f6b7dc4064367403e26424cd2c60655e1",
              "binance-smart-chain":
                "0xe0f94ac5462997d2bc57287ac3a3ae4c31345d66",
            },
            variants: ["branded", "background"],
          },
          {
            id: "celer-network",
            fileName: "CELR",
            symbol: "celr",
            name: "Celer Network",
            marketCapRank: 362,
            addresses: {
              ethereum: "0x4f9254c83eb525f9fcf346490bbb3ed28a81c667",
              "arbitrum-one": "0x3a8b787f78d775aecfeea15706d4221b40f345ab",
              energi: "0x1833e138fadf220eb951a8590b8ba9058785ddde",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "celestia",
            fileName: "TIA",
            symbol: "tia",
            name: "Celestia",
            marketCapRank: 52,
            addresses: {
              cosmos:
                "ibc/D79E7D83AB399BFFF93433E54FAA480C191248FC556924A2A8351AE2638B3877",
              secret: "secret1s9h6mrp4k9gll4zfv5h78ll68hdq8ml7jrnn20",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "cellframe",
            fileName: "CELL",
            symbol: "cell",
            name: "Cellframe",
            marketCapRank: 801,
            addresses: {
              ethereum: "0x26c8afbbfe1ebaca03c2bb082e69d0476bffe099",
              "binance-smart-chain":
                "0xd98438889ae7364c7e2a3540547fad042fb24642",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "celo",
            fileName: "CELO",
            symbol: "celo",
            name: "Celo",
            marketCapRank: 154,
            addresses: { celo: "0x471ece3750da237f93b8e339c536989b8978a438" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "celo-dollar",
            fileName: "CUSD",
            symbol: "cusd",
            name: "Celo Dollar",
            marketCapRank: 889,
            addresses: {
              celo: "0x765de816845861e75a25fca122bb6898b8b1282a",
              "near-protocol": "cusd.token.a11bd.near",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "celo-euro",
            fileName: "CEUR",
            symbol: "ceur",
            name: "Celo Euro",
            marketCapRank: 1497,
            addresses: { celo: "0xd8763cba276a3738e6de85b4b3bf5fded6d6ca73" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "celsius-degree-token",
            fileName: "CEL",
            symbol: "cel",
            name: "Celsius Network",
            marketCapRank: 476,
            addresses: {
              ethereum: "0xaaaebe6fe48e54f431b0c390cfaf0b017d09d42d",
              fantom: "0x2c78f1b70ccf63cdee49f9233e9faa99d43aa07e",
              energi: "0x1b53c0662414b195fcd5802c09754765b930a312",
              "polygon-pos": "0xd85d1e945766fea5eda9103f918bd915fbca63e6",
              "harmony-shard-0": "0xd562c88e0f8e7dae43076018bb1ea3115617984d",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "centrifuge",
            fileName: "CFG",
            symbol: "cfg",
            name: "Centrifuge",
            marketCapRank: 204,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "cere-network",
            fileName: "CERE",
            symbol: "cere",
            name: "Cere Network",
            marketCapRank: 677,
            addresses: {
              ethereum: "0x2da719db753dfa10a62e140f436e1d67f2ddb0d6",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "certik",
            fileName: "CTK",
            symbol: "ctk",
            name: "Shentu",
            marketCapRank: 442,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "cetus-protocol",
            fileName: "CETUS",
            symbol: "cetus",
            name: "Cetus Protocol",
            marketCapRank: 699,
            addresses: {
              sui: "0x6864a6f921804860930db6ddbe2e16acdf8504495ea7481637a1c8b9a8fe54b::cetus::CETUS",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "chain-games",
            fileName: "CHAIN",
            symbol: "chain",
            name: "Chain Games",
            marketCapRank: 1721,
            addresses: {
              ethereum: "0xc4c2614e694cf534d407ee49f8e44d125e4681c4",
              "harmony-shard-0": "0x84ec08c887dd8c14d389abe56e609379b7c5262e",
              "polygon-pos": "0xd55fce7cdab84d84f2ef3f99816d765a2a94a509",
              "binance-smart-chain":
                "0x35de111558f691f77f791fb0c08b2d6b931a9d47",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "chain-guardians",
            fileName: "CGG",
            symbol: "cgg",
            name: "Chain Guardians",
            marketCapRank: 1875,
            addresses: {
              ethereum: "0x1fe24f25b1cf609b9c4e7e12d802e3640dfa5e43",
              "polygon-pos": "0x2ab4f9ac80f33071211729e45cfc346c1f8446d5",
              "binance-smart-chain":
                "0x1613957159e9b0ac6c80e824f7eea748a32a0ae2",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "chaingpt",
            fileName: "CGPT",
            symbol: "cgpt",
            name: "ChainGPT",
            marketCapRank: 407,
            addresses: {
              "binance-smart-chain":
                "0x9840652dc04fb9db2c43853633f0f62be6f00f98",
              ethereum: "0x25931894a86d47441213199621f1f2994e1c39aa",
            },
            variants: ["branded", "background"],
          },
          {
            id: "chainlink",
            fileName: "LINK",
            symbol: "link",
            name: "Chainlink",
            marketCapRank: 16,
            addresses: {
              ethereum: "0x514910771af9ca656af840dff83e8264ecf986ca",
              fantom: "0xb3654dc3d10ea7645f8319668e8f54d2574fbdc8",
              avalanche: "0x5947bb275c521040051d82396192181b413227a3",
              energi: "0x68ca48ca2626c415a89756471d4ade2cc9034008",
              "optimistic-ethereum":
                "0x350a791bfc2c21f9ed5d10980dad2e2638ffa7f6",
              "near-protocol":
                "514910771af9ca656af840dff83e8264ecf986ca.factory.bridge.near",
              "arbitrum-one": "0xf97f4df75117a78c1a5a0dbb814af92458539fb4",
              "huobi-token": "0x9e004545c59d359f6b7bfb06a26390b087717b42",
              xdai: "0xe2e73a1c69ecf83f464efce6a5be353a37ca09b2",
              "polygon-pos": "0x53e0bca35ec356bd5dddfebbd1fc0fd03fabad39",
              "harmony-shard-0": "0x218532a12a389a4a92fc0c5fb22901d1c19198aa",
              sora: "0x008484148dcf23d1b48908393e7a00d5fdc3bf81029a73eeca62a15ebfb1205a",
              "binance-smart-chain":
                "0xf8a0bf9cf54bb92f17374d9e9a321e6a111a51bd",
              "milkomeda-cardano": "0xf390830df829cf22c53c8840554b98eafc5dcbc2",
              osmosis:
                "ibc/D3327A763C23F01EC43D1F0DB3CEFEC390C362569B6FD191F40A5192F8960049",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "chainport",
            fileName: "PORTX",
            symbol: "portx",
            name: "ChainPort",
            marketCapRank: 2446,
            addresses: {
              ethereum: "0x104f3152d8ebfc3f679392977356962ff36566ac",
              "polygon-pos": "0x189586b5f6317538ae50c20a976597da38984a24",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "champignons-of-arborethia",
            fileName: "CHAMPZ",
            symbol: "champz",
            name: "Champignons of Arborethia",
            marketCapRank: 1660,
            addresses: {
              ethereum: "0x571e21a545842c6ce596663cda5caa8196ac1c7a",
            },
            variants: ["branded", "background"],
          },
          {
            id: "charged-particles",
            fileName: "IONX",
            symbol: "ionx",
            name: "Charged Particles",
            marketCapRank: 2468,
            addresses: {
              ethereum: "0x02d3a27ac3f55d5d91fb0f52759842696a864217",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "charli3",
            fileName: "C3",
            symbol: "c3",
            name: "Charli3",
            marketCapRank: 1917,
            addresses: {
              cardano:
                "8e51398904a5d3fc129fbf4f1589701de23c7824d5c90fdb9490e15a",
            },
            variants: ["branded", "background"],
          },
          {
            id: "cheems",
            fileName: "CHEEMS",
            symbol: "cheems",
            name: "Cheems",
            marketCapRank: 2218,
            addresses: {
              solana: "3FoUAsGDbvTD6YZ4wVKJgTB76onJUKz7GPEBNiR5b8wc",
            },
            variants: ["branded", "background"],
          },
          {
            id: "cheqd-network",
            fileName: "CHEQ",
            symbol: "cheq",
            name: "CHEQD Network",
            marketCapRank: 632,
            addresses: {
              ethereum: "0x70edf1c215d0ce69e7f16fd4e6276ba0d99d4de7",
            },
            variants: ["branded", "background"],
          },
          {
            id: "chia",
            fileName: "XCH",
            symbol: "xch",
            name: "Chia",
            marketCapRank: 209,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "chihuahua-token",
            fileName: "HUAHUA",
            symbol: "huahua",
            name: "Chihuahua Chain",
            marketCapRank: 1228,
            addresses: {
              osmosis:
                "ibc/B9E0A1A524E98BB407D3CED8720EFEFD186002F90C1B1B7964811DD0CCC12228",
            },
            variants: ["branded", "background"],
          },
          {
            id: "chiliz",
            fileName: "CHZ",
            symbol: "chz",
            name: "Chiliz",
            marketCapRank: 89,
            addresses: {
              ethereum: "0x3506424f91fd33084466f402d5d97f05f8e3b4af",
              energi: "0xa82fc24687ffbde40776dede7c70f845b67f3ef7",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "chirpley",
            fileName: "CHRP",
            symbol: "chrp",
            name: "Chirpley",
            marketCapRank: 1275,
            addresses: {
              "binance-smart-chain":
                "0xed00fc7d48b57b81fe65d1ce71c0985e4cf442cb",
              ethereum: "0x70bc0dc6414eb8974bc70685f798838a87d8cce4",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "choise",
            fileName: "CHO",
            symbol: "cho",
            name: "Choise.com",
            marketCapRank: 1721,
            addresses: {
              ethereum: "0xbba39fd2935d5769116ce38d46a71bde9cf03099",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "chromaway",
            fileName: "CHR",
            symbol: "chr",
            name: "Chromia",
            marketCapRank: 228,
            addresses: {
              ethereum: "0x8a2279d4a90b6fe1c4b30fa660cc9f926797baa2",
              "binance-smart-chain":
                "0xf9cec8d50f6c8ad3fb6dccec577e05aa32b224fe",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "chronobank",
            fileName: "TIME",
            symbol: "time",
            name: "chrono.tech",
            marketCapRank: 1109,
            addresses: {
              ethereum: "0x485d17a6f1b8780392d53d64751824253011a260",
              "binance-smart-chain":
                "0x3b198e26e473b8fab2085b37978e36c9de5d7f68",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "chumbai-valley",
            fileName: "CHMB",
            symbol: "chmb",
            name: "Chumbi Valley",
            marketCapRank: 1692,
            addresses: {
              "binance-smart-chain":
                "0x5492ef6aeeba1a3896357359ef039a8b11621b45",
            },
            variants: ["branded", "background"],
          },
          {
            id: "cindicator",
            fileName: "CND",
            symbol: "cnd",
            name: "Cindicator",
            marketCapRank: 2437,
            addresses: {
              ethereum: "0xd4c435f5b09f855c3317c8524cb1f586e42795fa",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "circuits-of-value",
            fileName: "COVAL",
            symbol: "coval",
            name: "Circuits of Value",
            marketCapRank: 695,
            addresses: {
              ethereum: "0x3d658390460295fb963f54dc0899cfb1c30776df",
              xdai: "0x8b8407c6184f1f0fd1082e83d6a3b8349caced12",
              fantom: "0x8b8407c6184f1f0fd1082e83d6a3b8349caced12",
              "polygon-pos": "0x4597c8a59ab28b36840b82b3a674994a279593d0",
              "binance-smart-chain":
                "0xd15cee1deafbad6c0b3fd7489677cc102b141464",
            },
            variants: ["branded", "background"],
          },
          {
            id: "cirus",
            fileName: "CIRUS",
            symbol: "cirus",
            name: "Cirus",
            marketCapRank: 1949,
            addresses: {
              ethereum: "0xa01199c61841fce3b3dafb83fefc1899715c8756",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "city-tycoon-games",
            fileName: "CTG",
            symbol: "ctg",
            name: "City Tycoon Games",
            marketCapRank: 2454,
            addresses: {
              "binance-smart-chain":
                "0xb3ba14f6a482dfdebc3c2fb726ac10df91ee504c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "civic",
            fileName: "CVC",
            symbol: "cvc",
            name: "Civic",
            marketCapRank: 374,
            addresses: {
              ethereum: "0x41e5560054824ea6b0732e656e3ad64e20e94e45",
              energi: "0x0d91d554768dc20e1d3d95ff9d5bc041edc3ba0f",
              "polygon-pos": "0x66dc5a08091d1968e08c16aa5b27bac8398b02be",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "cjournal",
            fileName: "UCJL",
            symbol: "ucjl",
            name: "Utility Cjournal",
            marketCapRank: 2343,
            addresses: {
              "binance-smart-chain":
                "0xf5355ddc7ffbf7ca119bf3222cb0ecac2fbb4502",
            },
            variants: ["branded", "background"],
          },
          {
            id: "clash-of-lilliput",
            fileName: "COL",
            symbol: "col",
            name: "Clash of Lilliput",
            marketCapRank: 635,
            addresses: {
              "binance-smart-chain":
                "0x9ce116224459296abc7858627abd5879514bc629",
            },
            variants: ["branded", "background"],
          },
          {
            id: "cleardao",
            fileName: "CLH",
            symbol: "clh",
            name: "ClearDAO",
            marketCapRank: 2414,
            addresses: {
              ethereum: "0xd7d8f3b8bc8bc48d3acc37879eaba7b85889fa52",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "clearpool",
            fileName: "CPOOL",
            symbol: "cpool",
            name: "Clearpool",
            marketCapRank: 446,
            addresses: {
              ethereum: "0x66761fa41377003622aee3c7675fc7b5c1c2fac5",
            },
            variants: ["branded", "background"],
          },
          {
            id: "clintex-cti",
            fileName: "CTI",
            symbol: "cti",
            name: "ClinTex CTi",
            marketCapRank: 1855,
            addresses: {
              ethereum: "0xcb8fb2438a805664cd8c3e640b85ac473da5be87",
              "binance-smart-chain":
                "0x7c3b67b30efbacc8f787f7ebd3bdc65234299f4c",
              "polygon-pos": "0x03c2f6808502ffd4ab2787ad1a98ec13dbd5718b",
              solana: "9ET2QCQJdFkeKkuaampNbmicbA8eLYauFCWch9Ddh9p5",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "clore-ai",
            fileName: "CLORE",
            symbol: "clore",
            name: "Clore.ai",
            marketCapRank: 547,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "clover-finance",
            fileName: "CLV",
            symbol: "clv",
            name: "Clover Finance",
            marketCapRank: 517,
            addresses: {
              ethereum: "0x80c62fe4487e1351b47ba49809ebd60ed085bf52",
              "binance-smart-chain":
                "0x09e889bb4d5b474f561db0491c38702f367a4e4d",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "cnh-tether",
            fileName: "CNHT",
            symbol: "cnht",
            name: "CNH Tether",
            marketCapRank: 2125,
            addresses: {
              ethereum: "0x6e109e9dd7fa1a58bc3eff667e8e41fc3cc07aef",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "cocktailbar",
            fileName: "COC",
            symbol: "coc",
            name: "The Cocktailbar",
            marketCapRank: 1961,
            addresses: {
              ethereum: "0x22b6c31c2beb8f2d0d5373146eed41ab9ede3caf",
            },
            variants: ["branded", "background"],
          },
          {
            id: "cocos-bcx",
            fileName: "COMBO",
            symbol: "combo",
            name: "COMBO",
            marketCapRank: 600,
            addresses: {
              ethereum: "0xc03fbf20a586fa89c2a5f6f941458e1fbc40c661",
              "binance-smart-chain":
                "0xc03fbf20a586fa89c2a5f6f941458e1fbc40c661",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "coin-capsule",
            fileName: "CAPS",
            symbol: "caps",
            name: "Ternoa",
            marketCapRank: 847,
            addresses: {
              ethereum: "0x03be5c903c727ee2c8c4e9bc0acc860cca4715e2",
              "binance-smart-chain":
                "0xffba7529ac181c2ee1844548e6d7061c9a597df4",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "coin98",
            fileName: "C98",
            symbol: "c98",
            name: "Coin98",
            marketCapRank: 302,
            addresses: {
              "binance-smart-chain":
                "0xaec945e04baf28b135fa7c640f624f8d90f1c3a6",
              tomochain: "0x0fd0288aaae91eaf935e2ec14b23486f86516c8c",
              ethereum: "0xae12c5930881c53715b369cec7606b70d8eb229f",
              "polygon-pos": "0x77f56cf9365955486b12c4816992388ee8606f0e",
              solana: "C98A4nkJXhpVZNAZdHUA95RpTF3T4whtQubL3YobiUX9",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "coinbase-wrapped-staked-eth",
            fileName: "CBETH",
            symbol: "cbeth",
            name: "Coinbase Wrapped Staked ETH",
            marketCapRank: 153,
            addresses: {
              ethereum: "0xbe9895146f7af43049ca1c1ae358b0541ea49704",
              "optimistic-ethereum":
                "0xaddb6a0412de1ba0f936dcaeb8aaa24578dcf3b2",
              "polygon-pos": "0x4b4327db1600b8b1440163f667e199cef35385f5",
              "arbitrum-one": "0x1debd73e752beaf79865fd6446b0c970eae7732f",
              base: "0x2ae3f1ec7f1f5012cfeab0185bfc7aa3cf0dec22",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "coinmerge-os",
            fileName: "CMOS",
            symbol: "cmos",
            name: "CoinMerge OS",
            marketCapRank: 2742,
            addresses: {
              ethereum: "0x87869a9789291a6cec99f3c3ef2ff71fceb12a8e",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "coinmetro",
            fileName: "XCM",
            symbol: "xcm",
            name: "Coinmetro",
            marketCapRank: 1065,
            addresses: {
              ethereum: "0x36ac219f90f5a6a3c77f2a7b660e3cc701f68e25",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "coinnavigator",
            fileName: "CNG",
            symbol: "cng",
            name: "CoinNavigator",
            marketCapRank: 1905,
            addresses: {
              "binance-smart-chain":
                "0xfd60b3c3c1916bdbb4319a3d264894f1dfd5eca2",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "coinweb",
            fileName: "CWEB",
            symbol: "cweb",
            name: "Coinweb",
            marketCapRank: 686,
            addresses: {
              ethereum: "0x505b5eda5e25a67e1c24a2bf1a527ed9eb88bf04",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "coldstack",
            fileName: "CLS",
            symbol: "cls",
            name: "Coldstack",
            marketCapRank: 1762,
            addresses: {
              ethereum: "0x675bbc7514013e2073db7a919f6e4cbef576de37",
              "binance-smart-chain":
                "0x668048e70284107a6afab1711f28d88df3e72948",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "collab-land",
            fileName: "COLLAB",
            symbol: "collab",
            name: "Collab.Land",
            marketCapRank: 2462,
            addresses: {
              "arbitrum-one": "0xf18c263ec50cc211ef3f172228549b6618f10613",
            },
            variants: ["branded", "background"],
          },
          {
            id: "colony",
            fileName: "CLY",
            symbol: "cly",
            name: "Colony",
            marketCapRank: 1008,
            addresses: {
              avalanche: "0xec3492a2508ddf4fdc0cd76f31f340b30d1793e6",
            },
            variants: ["branded", "background"],
          },
          {
            id: "comdex",
            fileName: "CMDX",
            symbol: "cmdx",
            name: "COMDEX",
            marketCapRank: 1733,
            addresses: {
              comdex: "ucmdx",
              archway:
                "ibc/BF8BDCAA292B56035E669D80711D9881CC96796AC6BCB0376836FAD045355E37",
              osmosis:
                "ibc/EA3E1640F9B1532AB129A571203A0B9F789A7F14BB66E350DCBFA18E1A1931F0",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "compound-governance-token",
            fileName: "COMP",
            symbol: "comp",
            name: "Compound",
            marketCapRank: 181,
            addresses: {
              ethereum: "0xc00e94cb662c3520282e6f5717214004a7f26888",
              energi: "0x66bc411714e16b6f0c68be12bd9c666cc4576063",
              avalanche: "0xc3048e19e76cb9a3aa9d77d8c03c29fc906e2437",
              "near-protocol":
                "c00e94cb662c3520282e6f5717214004a7f26888.factory.bridge.near",
              "polygon-pos": "0x8505b9d2254a7ae468c0e9dd10ccea3a837aef5c",
              "harmony-shard-0": "0x32137b9275ea35162812883582623cd6f6950958",
              "arbitrum-one": "0x354a6da3fcde098f8389cad84b0182725c6c91de",
              "binance-smart-chain":
                "0x52ce071bd9b1c4b00a0b92d298c512478cad67e8",
              sora: "0x00dbd45af9f2ea406746f9025110297469e9d29efc60df8d88efb9b0179d6c2c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "compound-usd-coin",
            fileName: "CUSDC",
            symbol: "cusdc",
            name: "cUSDC",
            marketCapRank: 636,
            addresses: {
              ethereum: "0x39aa39c021dfbae8fac545936693ac917d5e7563",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "comtech-gold",
            fileName: "CGO",
            symbol: "cgo",
            name: "Comtech Gold",
            marketCapRank: 1473,
            addresses: {
              "xdc-network": "xdc8f9920283470f52128bf11b0c14e798be704fd15",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "concentrated-voting-power",
            fileName: "CVP",
            symbol: "cvp",
            name: "PowerPool Concentrated Voting Power",
            marketCapRank: 1163,
            addresses: {
              ethereum: "0x38e4adb44ef08f22f5b5b76a8f0c2d0dcbe7dca1",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "concentrator",
            fileName: "CTR",
            symbol: "ctr",
            name: "Concentrator",
            marketCapRank: 2765,
            addresses: {
              ethereum: "0xb3ad645db386d7f6d753b2b9c3f4b853da6890b8",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "concierge-io",
            fileName: "AVA",
            symbol: "ava",
            name: "AVA",
            marketCapRank: 780,
            addresses: {
              ethereum: "0xa6c0c097741d55ecd9a3a7def3a8253fd022ceb9",
              energi: "0x8476d1c07cbc7e2dd9e97ffbd9850836835ee7a8",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "concordium",
            fileName: "CCD",
            symbol: "ccd",
            name: "Concordium",
            marketCapRank: 793,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "conflux-token",
            fileName: "CFX",
            symbol: "cfx",
            name: "Conflux",
            marketCapRank: 69,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "conic-finance",
            fileName: "CNC",
            symbol: "cnc",
            name: "Conic",
            marketCapRank: 1865,
            addresses: {
              ethereum: "0x9ae380f0272e2162340a5bb646c354271c0f5cfc",
            },
            variants: ["branded", "background"],
          },
          {
            id: "connect-financial",
            fileName: "CNFI",
            symbol: "cnfi",
            name: "Connect Financial",
            marketCapRank: 2211,
            addresses: {
              ethereum: "0xeabb8996ea1662cad2f7fb715127852cd3262ae9",
              "arbitrum-one": "0x6f5401c53e2769c858665621d22ddbf53d8d27c5",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "constellation-labs",
            fileName: "DAG",
            symbol: "dag",
            name: "Constellation",
            marketCapRank: 355,
            addresses: {},
            variants: ["mono"],
          },
          {
            id: "constitutiondao",
            fileName: "PEOPLE",
            symbol: "people",
            name: "ConstitutionDAO",
            marketCapRank: 349,
            addresses: {
              ethereum: "0x7a58c0be72be218b41c608b7fe7c5bb630736c71",
            },
            variants: ["branded", "background"],
          },
          {
            id: "contentos",
            fileName: "COS",
            symbol: "cos",
            name: "Contentos",
            marketCapRank: 757,
            addresses: { binancecoin: "COS-2E4" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "convergence",
            fileName: "CONV",
            symbol: "conv",
            name: "Convergence",
            marketCapRank: 2157,
            addresses: {
              ethereum: "0xc834fa996fa3bec7aad3693af486ae53d8aa8b50",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "cope",
            fileName: "COPE",
            symbol: "cope",
            name: "Cope",
            marketCapRank: 2330,
            addresses: {
              solana: "8HGyAAB1yoM1ttS7pXjHMa3dukTFGQggnFFH3hJZgzQh",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "coredaoorg",
            fileName: "CORE",
            symbol: "core",
            name: "Core",
            marketCapRank: 112,
            addresses: {},
            variants: ["branded", "background"],
          },
          {
            id: "cornucopias",
            fileName: "COPI",
            symbol: "copi",
            name: "Cornucopias",
            marketCapRank: 619,
            addresses: {
              "binance-smart-chain":
                "0xfea292e5ea4510881bdb840e3cec63abd43f936f",
              cardano: "asset1c6uau7pufsxhnm7eg0eerhu4snwfd9sn7kvvvz",
              ethereum: "0x42baf1f659d765c65ade5bb7e08eb2c680360d9d",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "cortex",
            fileName: "CTXC",
            symbol: "ctxc",
            name: "Cortex",
            marketCapRank: 513,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "cosmos",
            fileName: "ATOM",
            symbol: "atom",
            name: "Cosmos Hub",
            marketCapRank: 29,
            addresses: {
              kava: "0x15932e26f5bd4923d46a2b205191c4b5d5f43fe3",
              evmos: "0xc5e00d3b04563950941f7137b5afa3a534f0d6d6",
              archway:
                "ibc/27394fb092d2eccd56123c74f36e4c1f926001ceada9ca97ea622b25f41e5eb2",
              osmosis:
                "ibc/27394FB092D2ECCD56123C74F36E4C1F926001CEADA9CA97EA622B25F41E5EB2",
              "binance-smart-chain":
                "0x0eb3a705fc54725037cc9e008bdede697f62f335",
              canto: "0xeceeefcee421d8062ef8d6b4d814efe4dc898265",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "coti",
            fileName: "COTI",
            symbol: "coti",
            name: "COTI",
            marketCapRank: 274,
            addresses: {
              ethereum: "0xddb3422497e61e13543bea06989c0789117555c5",
            },
            variants: ["branded", "background"],
          },
          {
            id: "counterparty",
            fileName: "XCP",
            symbol: "xcp",
            name: "Counterparty",
            marketCapRank: 1070,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "covalent",
            fileName: "CQT",
            symbol: "cqt",
            name: "Covalent",
            marketCapRank: 339,
            addresses: {
              ethereum: "0xd417144312dbf50465b1c641d016962017ef6240",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "covesting",
            fileName: "COV",
            symbol: "cov",
            name: "Covesting",
            marketCapRank: 2782,
            addresses: {
              ethereum: "0xada86b1b313d1d5267e3fc0bb303f0a2b66d0ea7",
              "binance-smart-chain":
                "0x0f237db17aa4e6de062e6f052bd9c805789b01c3",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "cow-protocol",
            fileName: "COW",
            symbol: "cow",
            name: "CoW Protocol",
            marketCapRank: 639,
            addresses: {
              ethereum: "0xdef1ca1fb7fbcdc777520aa7f396b4e015f497ab",
              xdai: "0x177127622c4a00f3d409b75571e12cb3c8973d3c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "cratos",
            fileName: "CRTS",
            symbol: "crts",
            name: "Cratos",
            marketCapRank: 640,
            addresses: {
              ethereum: "0x678e840c640f619e17848045d23072844224dd37",
              "binance-smart-chain":
                "0x678e840c640f619e17848045d23072844224dd37",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "cream-2",
            fileName: "CREAM",
            symbol: "cream",
            name: "Cream",
            marketCapRank: 1121,
            addresses: {
              ethereum: "0x2ba592f78db6436527729929aaf6c908497cb200",
              energi: "0x1cca61099dcebe517f8cac58f27218e7aff2d3bf",
              sora: "0x00521ad5caeadc2e3e04be4d4ebb0b7c8c9b71ba657c2362a3953490ebc81410",
              "near-protocol":
                "2ba592f78db6436527729929aaf6c908497cb200.factory.bridge.near",
              "arbitrum-one": "0xf4d48ce3ee1ac3651998971541badbb9a14d7234",
              fantom: "0x657a1861c15a3ded9af0b6799a195a249ebdcbc6",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "credefi",
            fileName: "CREDI",
            symbol: "credi",
            name: "Credefi",
            marketCapRank: 1122,
            addresses: {
              ethereum: "0xae6e307c3fe9e922e5674dbd7f830ed49c014c6b",
              "binance-smart-chain":
                "0x2235e79086dd23135119366da45851c741874e5b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "creditcoin-2",
            fileName: "CTC",
            symbol: "ctc",
            name: "Creditcoin",
            marketCapRank: 262,
            addresses: {
              ethereum: "0xa3ee21c306a700e682abcdfe9baa6a08f3820419",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "creo-engine",
            fileName: "CREO",
            symbol: "creo",
            name: "Creo Engine",
            marketCapRank: 846,
            addresses: {
              "binance-smart-chain":
                "0x9521728bf66a867bc65a93ece4a543d817871eb7",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "cronos-id",
            fileName: "CROID",
            symbol: "croid",
            name: "Cronos ID",
            marketCapRank: 1034,
            addresses: { cronos: "0xcbf0adea24fd5f32c6e7f0474f0d1b94ace4e2e7" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "cropbytes",
            fileName: "CBX",
            symbol: "cbx",
            name: "CropBytes",
            marketCapRank: 1779,
            addresses: {
              ethereum: "0x37fc4b48ce93469dbea9918468993c735049642a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "crowdswap",
            fileName: "CROWD",
            symbol: "crowd",
            name: "CrowdSwap",
            marketCapRank: 1996,
            addresses: {
              "polygon-pos": "0x483dd3425278c1f79f377f1034d9d2cae55648b6",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "crown-by-third-time-games",
            fileName: "CROWN",
            symbol: "crown",
            name: "Crown by Third Time Games",
            marketCapRank: 313,
            addresses: {
              solana: "GDfnEsia2WLAW5t8yx2X5j2mkfA74i5kwGdDuZHt7XmG",
            },
            variants: ["branded", "background"],
          },
          {
            id: "crowns",
            fileName: "CWS",
            symbol: "cws",
            name: "Seascape Crowns",
            marketCapRank: 1989,
            addresses: {
              "binance-smart-chain":
                "0x99aa29ac023057951781dc5d1784e9a4c362ce23",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "crowny-token",
            fileName: "CRWNY",
            symbol: "crwny",
            name: "Crowny",
            marketCapRank: 1584,
            addresses: {
              solana: "CRWNYkqdgvhGGae9CKfNka58j6QQkaD5bLhKXvUYqnc1",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "crust-network",
            fileName: "CRU",
            symbol: "cru",
            name: "Crust Network",
            marketCapRank: 707,
            addresses: {
              ethereum: "0x32a7c02e79c4ea1008dd6564b35f131428673c41",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "crvusd",
            fileName: "CRVUSD",
            symbol: "crvusd",
            name: "crvUSD",
            marketCapRank: 411,
            addresses: {
              ethereum: "0xf939e0a03fb07f59a73314e73794be0e57ac1b4e",
              "arbitrum-one": "0x498bf2b1e120fed3ad3d42ea2165e9b73f99c1e5",
              "optimistic-ethereum":
                "0xc52d7f23a2e460248db6ee192cb23dd12bddcbf6",
              base: "0x417ac0e078398c154edfadd9ef675d30be60af93",
              xdai: "0xabef652195f98a91e490f047a5006b71c85f058d",
              "polygon-pos": "0xc4ce1d6f5d98d65ee25cf85e9f2e9dcfee6cb5d6",
            },
            variants: ["branded", "background"],
          },
          {
            id: "cryowar-token",
            fileName: "CWAR",
            symbol: "cwar",
            name: "Cryowar",
            marketCapRank: 1561,
            addresses: {
              solana: "HfYFjMKNZygfMC8LsQ8LtpPsPxEJoXJx4M6tqi75Hajo",
            },
            variants: ["branded", "background"],
          },
          {
            id: "crypterium",
            fileName: "CRPT",
            symbol: "crpt",
            name: "Crypterium",
            marketCapRank: 1815,
            addresses: {
              ethereum: "0x08389495d7456e1951ddf7c3a1314a4bfb646d8b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "cryptex-finance",
            fileName: "CTX",
            symbol: "ctx",
            name: "Cryptex Finance",
            marketCapRank: 1057,
            addresses: {
              ethereum: "0x321c2fe4446c7c963dc41dd58879af648838f98d",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "crypto-com-chain",
            fileName: "CRO",
            symbol: "cro",
            name: "Cronos",
            marketCapRank: 36,
            addresses: {
              ethereum: "0xa0b73e1ff0b80914ab6fe0444e65848c4c34450b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "crypto-gladiator-shards",
            fileName: "CGL",
            symbol: "cgl",
            name: "Crypto Gladiator League",
            marketCapRank: 1258,
            addresses: {
              "polygon-pos": "0x2627c26b33f5193da4adfb26df60202479ccd2d3",
            },
            variants: ["branded", "background"],
          },
          {
            id: "cryptocart",
            fileName: "CCV2",
            symbol: "ccv2",
            name: "CryptoCart V2",
            marketCapRank: 2466,
            addresses: {
              ethereum: "0x612e1726435fe38dd49a0b35b4065b56f49c8f11",
              "binance-smart-chain":
                "0x612e1726435fe38dd49a0b35b4065b56f49c8f11",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "cryptofranc",
            fileName: "XCHF",
            symbol: "xchf",
            name: "CryptoFranc",
            marketCapRank: 2295,
            addresses: {
              ethereum: "0xb4272071ecadd69d933adcd19ca99fe80664fc08",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "cryptogpt-token",
            fileName: "LAI",
            symbol: "lai",
            name: "LayerAI",
            marketCapRank: 1173,
            addresses: {
              ethereum: "0x168e209d7b2f58f1f24b8ae7b7d35e662bbf11cc",
              "binance-smart-chain":
                "0x776f9987d9deed90eed791cbd824d971fd5ccf09",
            },
            variants: ["mono"],
          },
          {
            id: "csp-dao-network",
            fileName: "NEBO",
            symbol: "nebo",
            name: "CSP DAO Network",
            marketCapRank: 1796,
            addresses: {
              ethereum: "0x7f0c8b125040f707441cad9e5ed8a8408673b455",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "cube-intelligence",
            fileName: "AUTO",
            symbol: "auto",
            name: "Cube Intelligence",
            marketCapRank: 2017,
            addresses: {
              ethereum: "0x622dffcc4e83c64ba959530a5a5580687a57581b",
            },
            variants: ["branded", "background"],
          },
          {
            id: "cudos",
            fileName: "CUDOS",
            symbol: "cudos",
            name: "Cudos",
            marketCapRank: 438,
            addresses: {
              ethereum: "0x817bbdbc3e8a1204f3691d14bb44992841e3db35",
              archway:
                "ibc/2AE1ECA44CAD0C933CE178742595CE6796530FA1983E4FA7F4E43FBB5854D505",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "cult-dao",
            fileName: "CULT",
            symbol: "cult",
            name: "Cult DAO",
            marketCapRank: 1200,
            addresses: {
              ethereum: "0xf0f9d895aca5c8678f706fb8216fa22957685a13",
            },
            variants: ["branded", "background"],
          },
          {
            id: "cuminu",
            fileName: "CUMINU",
            symbol: "cuminu",
            name: "Cuminu",
            marketCapRank: 1851,
            addresses: {
              ethereum: "0xd6327ce1fb9d6020e8c2c0e124a1ec23dcab7536",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "cumrocket",
            fileName: "CUMMIES",
            symbol: "cummies",
            name: "CumRocket",
            marketCapRank: 1223,
            addresses: {
              "binance-smart-chain":
                "0x27ae27110350b98d564b9a3eed31baebc82d878d",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "curate",
            fileName: "XCUR",
            symbol: "xcur",
            name: "Curate",
            marketCapRank: 2519,
            addresses: {
              ethereum: "0xe1c7e30c42c24582888c758984f6e382096786bd",
              "binance-smart-chain":
                "0xd52669712f253cd6b2fe8a8638f66ed726cb770c",
              solana: "35r2jMGKytAJ7FyKfKRHPanT8kpjg3emPy7WG6GANCNB",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "curio-governance",
            fileName: "CGT",
            symbol: "cgt",
            name: "Curio Governance Token",
            marketCapRank: 1954,
            addresses: {
              ethereum: "0xf56b164efd3cfc02ba739b719b6526a6fa1ca32a",
              "binance-smart-chain":
                "0x3d04edc843e74935c09f54cc4b2fe1870e347ac9",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "curve-dao-token",
            fileName: "CRV",
            symbol: "crv",
            name: "Curve DAO",
            marketCapRank: 131,
            addresses: {
              ethereum: "0xd533a949740bb3306d119cc777fa900ba034cd52",
              energi: "0xd3319eaf3c4743ac75aace77befcfa445ed6e69e",
              "optimistic-ethereum":
                "0x0994206dfe8de6ec6920ff4d779b0d950605fb53",
              "polygon-pos": "0x172370d5cd63279efa6d502dab29171933a610af",
              fantom: "0x1e4f97b9f9f913c46f1632781732927b9019c68b",
              "arbitrum-one": "0x11cdb42b0eb46d95f990bedd4695a6e3fa034978",
              sora: "0x002ead91a2de57b8855b53d4a62c25277073fd7f65f7e5e79f4936ed747fcad0",
            },
            variants: ["branded", "background"],
          },
          {
            id: "cyberconnect",
            fileName: "CYBER",
            symbol: "cyber",
            name: "CyberConnect",
            marketCapRank: 402,
            addresses: {
              ethereum: "0x14778860e937f509e651192a90589de711fb88a9",
              "optimistic-ethereum":
                "0x14778860e937f509e651192a90589de711fb88a9",
              "binance-smart-chain":
                "0x14778860e937f509e651192a90589de711fb88a9",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "cypherium",
            fileName: "CPH",
            symbol: "cph",
            name: "Cypherium",
            marketCapRank: 1494,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "d3d-social",
            fileName: "D3D",
            symbol: "d3d",
            name: "D3D Social",
            marketCapRank: 1285,
            addresses: {
              "binance-smart-chain":
                "0xd3c7e51caab1089002ec05569a04d14bcc478bc4",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "dacxi",
            fileName: "DACXI",
            symbol: "dacxi",
            name: "Dacxi",
            marketCapRank: 1512,
            addresses: {
              ethereum: "0xefab7248d36585e2340e5d25f8a8d243e6e3193f",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "dafi-protocol",
            fileName: "DAFI",
            symbol: "dafi",
            name: "Dafi Protocol",
            marketCapRank: 2302,
            addresses: {
              ethereum: "0xfc979087305a826c2b2a0056cfaba50aad3e6439",
              "binance-smart-chain":
                "0x4e0fe270b856eebb91fb4b4364312be59f499a3f",
              "polygon-pos": "0x638df98ad8069a15569da5a6b01181804c47e34c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "dai",
            fileName: "DAI",
            symbol: "dai",
            name: "Dai",
            marketCapRank: 30,
            addresses: {
              ethereum: "0x6b175474e89094c44da98b954eedeac495271d0f",
              kava: "0x765277eebeca2e31912c9946eae1021199b39c61",
              fantom: "0x8d11ec38a3eb5e956b052f67da8bdc9bef8abf3e",
              energi: "0x0ee5893f434017d8881750101ea2f7c49c0eb503",
              avalanche: "0xd586e7f844cea2f87f50152665bcbc2c279d8d70",
              "polygon-zkevm": "0xc5015b9d9161dca7e18e32f6f25c4ad850731fd4",
              "optimistic-ethereum":
                "0xda10009cbd5d07dd0cecc66161fc93d7c9000da1",
              zksync: "0x4b9eb6c0b6ea15176bbf62841c6b2a8a398cb656",
              cronos: "0xf2001b145b43032aaf5ee2884e456ccd805f677d",
              "arbitrum-one": "0xda10009cbd5d07dd0cecc66161fc93d7c9000da1",
              base: "0x50c5725949a6f0c72e6c4a641f24049a917db0cb",
              "polygon-pos": "0x8f3cf7ad23cd3cadbd9735aff958023239c6a063",
              "binance-smart-chain":
                "0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3",
              "metis-andromeda": "0x4651b38e7ec14bb3db731369bfe5b08f2466bd0a",
              "harmony-shard-0": "0xef977d2f931c1978db5f6747666fa1eacb0d0339",
              sora: "0x0200060000000000000000000000000000000000000000000000000000000000",
              moonriver: "0x80a16016cc4a2e6a2caca8a4a498b1699ff0f844",
              aurora: "0xe3520349f477a5f6eb06107066048508498a291b",
              moonbeam: "0x765277eebeca2e31912c9946eae1021199b39c61",
              syscoin: "0xefaeee334f0fd1712f9a8cc375f427d9cdd40d73",
              "milkomeda-cardano": "0x639a647fbe20b6c8ac19e48e2de44ea792c62c5c",
              cosmos:
                "ibc/0CD3A0285E1341859B5E86B6AB7682F023D03E97607CCC1DC95706411D866DF7",
              astar: "0x6de33698e9e9b787e09d3bd7771ef63557e148bb",
              velas: "0xe3f5a90f9cb311505cd691a46596599aa1a0ad7d",
              "arbitrum-nova": "0xda10009cbd5d07dd0cecc66161fc93d7c9000da1",
              "klay-token": "0x078db7827a5531359f6cb63f62cfa20183c4f10c",
              xdai: "0x44fa8e6f47987339850636f88629646662444217",
              hydra: "abc2cd00700e06922bcf30fe0ad648507113cc56",
              "near-protocol":
                "6b175474e89094c44da98b954eedeac495271d0f.factory.bridge.near",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "danchortoken",
            fileName: "USN",
            symbol: "usn",
            name: "USN",
            marketCapRank: null,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "dao-maker",
            fileName: "DAO",
            symbol: "dao",
            name: "DAO Maker",
            marketCapRank: 221,
            addresses: {
              ethereum: "0x0f51bb10119727a7e5ea3538074fb341f56b09ad",
              "arbitrum-one": "0xcaa38bcc8fb3077975bbe217acfaa449e6596a84",
              "binance-smart-chain":
                "0x4d2d32d8652058bf98c772953e1df5c5c85d9f45",
              "step-network": "0xd67de0e0a0fd7b15dc8348bb9be742f3c5850454",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "darwinia-network-native-token",
            fileName: "RING",
            symbol: "ring",
            name: "Darwinia Network",
            marketCapRank: 1513,
            addresses: {
              ethereum: "0x9469d013805bffb7d3debe5e7839237e535ec483",
              "arbitrum-one": "0x9e523234d36973f9e38642886197d023c88e307e",
              "polygon-pos": "0x9c1c23e60b72bc88a043bf64afdb16a02540ae8f",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "dash",
            fileName: "DASH",
            symbol: "dash",
            name: "Dash",
            marketCapRank: 200,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "dash-2-trade",
            fileName: "D2T",
            symbol: "d2t",
            name: "Dash 2 Trade",
            marketCapRank: 2360,
            addresses: {
              ethereum: "0x4dd942baa75810a3c1e876e79d5cd35e09c97a76",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "data-lake",
            fileName: "LAKE",
            symbol: "lake",
            name: "Data Lake",
            marketCapRank: 1153,
            addresses: {
              ethereum: "0xf9ca9523e5b5a42c3018c62b084db8543478c400",
            },
            variants: ["branded", "background"],
          },
          {
            id: "databroker-dao",
            fileName: "DTX",
            symbol: "dtx",
            name: "DaTa eXchange DTX",
            marketCapRank: 2410,
            addresses: {
              ethereum: "0x765f0c16d1ddc279295c1a7c24b0883f62d33f75",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "datamall-coin",
            fileName: "DMC",
            symbol: "dmc",
            name: "Datamall Coin",
            marketCapRank: 803,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "de-fi",
            fileName: "DEFI",
            symbol: "defi",
            name: "DeFi",
            marketCapRank: 983,
            addresses: {
              ethereum: "0x6b0faca7ba905a86f221ceb5ca404f605e5b3131",
              "binance-smart-chain":
                "0x6d106c0b8d2f47c5465bdbd58d1be253762cbbc1",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "deapcoin",
            fileName: "DEP",
            symbol: "dep",
            name: "DEAPCOIN",
            marketCapRank: 677,
            addresses: {
              ethereum: "0x1a3496c18d558bd9c6c8f609e1b129f67ab08163",
              avalanche: "0xd4d026322c88c2d49942a75dff920fcfbc5614c1",
              "binance-smart-chain":
                "0xcaf5191fc480f43e4df80106c7695eca56e48b18",
              solana: "BgwQjVNMWvt2d8CN51CsbniwRWyZ9H9HfHkEsvikeVuZ",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "decentr",
            fileName: "DEC",
            symbol: "dec",
            name: "Decentr",
            marketCapRank: 2678,
            addresses: {
              ethereum: "0x30f271c9e86d2b7d00a6376cd96a1cfbd5f0b9b3",
              archway:
                "ibc/e3409e92f78ae5bf44dbc7c4741901e21ef73b7b8f98c4d48f2bd360af242c00",
              osmosis:
                "ibc/9BCB27203424535B6230D594553F1659C77EC173E36D9CF4759E7186EE747E84",
            },
            variants: ["branded", "background"],
          },
          {
            id: "decentral-games-governance",
            fileName: "XDG",
            symbol: "xdg",
            name: "Decentral Games Governance",
            marketCapRank: 1444,
            addresses: {
              ethereum: "0x4f81c790581b240a5c948afd173620ecc8c71c8d",
              "polygon-pos": "0xc6480da81151b2277761024599e8db2ad4c388c8",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "decentraland",
            fileName: "MANA",
            symbol: "mana",
            name: "Decentraland",
            marketCapRank: 94,
            addresses: {
              ethereum: "0x0f5d2fb29fb7d3cfee444a200298f468908cc942",
              "polygon-pos": "0xa1c57f48f0deb89f569dfbe6e2b7f46d33606fd4",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "decentralized-advertising",
            fileName: "DAD",
            symbol: "dad",
            name: "DAD",
            marketCapRank: 1651,
            addresses: {
              ethereum: "0x5b322514ff727253292637d9054301600c2c81e8",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "decentraweb",
            fileName: "DWEB",
            symbol: "dweb",
            name: "DecentraWeb",
            marketCapRank: 2719,
            addresses: {
              ethereum: "0xe7f58a92476056627f9fdb92286778abd83b285f",
              "polygon-pos": "0x8839e639f210b80ffea73aedf51baed8dac04499",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "decimal",
            fileName: "DEL",
            symbol: "del",
            name: "Decimal",
            marketCapRank: 998,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "decred",
            fileName: "DCR",
            symbol: "dcr",
            name: "Decred",
            marketCapRank: 202,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "decubate",
            fileName: "DCB",
            symbol: "dcb",
            name: "Decubate",
            marketCapRank: 792,
            addresses: {
              "binance-smart-chain":
                "0xeac9873291ddaca754ea5642114151f3035c67a2",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "deepbrain-chain",
            fileName: "DBC",
            symbol: "dbc",
            name: "DeepBrain Chain",
            marketCapRank: 1221,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "deepfakeai",
            fileName: "FAKEAI",
            symbol: "fakeai",
            name: "DeepFakeAI",
            marketCapRank: 1123,
            addresses: {
              ethereum: "0x5aef5bba19e6a1644805bd4f5c93c8557b87c62c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "deeponion",
            fileName: "ONION",
            symbol: "onion",
            name: "DeepOnion",
            marketCapRank: 2617,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "deepspace",
            fileName: "DPS",
            symbol: "dps",
            name: "DEEPSPACE",
            marketCapRank: 2035,
            addresses: {
              ethereum: "0xb7b1570e26315baad369b8ea0a943b7f140db9eb",
              "binance-smart-chain":
                "0xf275e1ac303a4c9d987a2c48b8e555a77fec3f1c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "defactor",
            fileName: "FACTR",
            symbol: "factr",
            name: "Defactor",
            marketCapRank: 1180,
            addresses: {
              ethereum: "0xe0bceef36f3a6efdd5eebfacd591423f8549b9d5",
              "polygon-pos": "0xe0bceef36f3a6efdd5eebfacd591423f8549b9d5",
              "binance-smart-chain":
                "0xdefac16715671b7b6aeefe012125f1e19ee4b7d7",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "defi-kingdoms",
            fileName: "JEWEL",
            symbol: "jewel",
            name: "DeFi Kingdoms",
            marketCapRank: 1090,
            addresses: {
              avalanche: "0x997ddaa07d716995de90577c123db411584e5e46",
            },
            variants: ["branded", "background"],
          },
          {
            id: "defi-kingdoms-crystal",
            fileName: "CRYSTAL",
            symbol: "crystal",
            name: "DeFi Kingdoms Crystal",
            marketCapRank: 2331,
            addresses: {
              "defi-kingdoms-blockchain":
                "0x04b9da42306b023f3572e106b11d82aad9d32ebb",
            },
            variants: ["branded", "background"],
          },
          {
            id: "defi-yield-protocol",
            fileName: "DYP",
            symbol: "dyp",
            name: "Dypius [OLD]",
            marketCapRank: 1679,
            addresses: {
              ethereum: "0x961c8c0b1aad0c0b10a51fef6a867e3091bcef17",
              avalanche: "0x961c8c0b1aad0c0b10a51fef6a867e3091bcef17",
              "binance-smart-chain":
                "0x961c8c0b1aad0c0b10a51fef6a867e3091bcef17",
            },
            variants: ["branded", "background"],
          },
          {
            id: "defichain",
            fileName: "DFI",
            symbol: "dfi",
            name: "DeFiChain",
            marketCapRank: 641,
            addresses: {
              "binance-smart-chain":
                "0x361c60b7c2828fcab80988d00d1d542c83387b50",
              ethereum: "0x8fc8f8269ebca376d046ce292dc7eac40c8d358a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "definity",
            fileName: "DEFX",
            symbol: "defx",
            name: "DeFinity",
            marketCapRank: 1526,
            addresses: {
              ethereum: "0x5f474906637bdcda05f29c74653f6962bb0f8eda",
              "binance-smart-chain":
                "0xbe4cb2c354480042a39350a0c6c26bf54786539f",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "defipulse-index",
            fileName: "DPI",
            symbol: "dpi",
            name: "DeFi Pulse Index",
            marketCapRank: 1016,
            addresses: {
              ethereum: "0x1494ca1f11d487c2bbe4543e90080aeba4ba3c2b",
              energi: "0x8b8e6090542b612b7e2d73a934f9f5ea7e9a40af",
              "polygon-pos": "0x85955046df4668e1dd369d2de9f3aeb98dd2a369",
              xdai: "0xd3d47d5578e55c880505dc40648f7f9307c3e7a8",
            },
            variants: ["branded", "background"],
          },
          {
            id: "defit",
            fileName: "DEFIT",
            symbol: "defit",
            name: "Digital Fitness",
            marketCapRank: 1693,
            addresses: {
              "polygon-pos": "0x428360b02c1269bc1c79fbc399ad31d58c1e8fda",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "degen-base",
            fileName: "DEGEN",
            symbol: "degen",
            name: "Degen (Base)",
            marketCapRank: 228,
            addresses: { base: "0x4ed4e862860bed51a9570b96d89af5e1b0efefed" },
            variants: ["branded", "background"],
          },
          {
            id: "degen-zoo",
            fileName: "DZOO",
            symbol: "dzoo",
            name: "Degen Zoo",
            marketCapRank: 1797,
            addresses: {
              ethereum: "0xc97d6c52f3add91fa1c5287a453d7444aecbca83",
              "binance-smart-chain":
                "0x56d06a78ef8e95d6043341f24759e2834be6f97b",
            },
            variants: ["branded", "background"],
          },
          {
            id: "degenx",
            fileName: "DGNX",
            symbol: "dgnx",
            name: "DegenX",
            marketCapRank: 2017,
            addresses: {
              avalanche: "0x51e48670098173025c477d9aa3f0eff7bf9f7812",
              ethereum: "0x0000000000300dd8b0230efcfef136ecdf6abcde",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "dego-finance",
            fileName: "DEGO",
            symbol: "dego",
            name: "Dego Finance",
            marketCapRank: 1193,
            addresses: {
              ethereum: "0x3da932456d082cba208feb0b096d49b202bf89c8",
              "binance-smart-chain":
                "0x3da932456d082cba208feb0b096d49b202bf89c8",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "dejitaru-hoshi",
            fileName: "HOSHI",
            symbol: "hoshi",
            name: "Dejitaru Hoshi",
            marketCapRank: 2469,
            addresses: {
              ethereum: "0x5362ca75aa3c0e714bc628296640c43dc5cb9ed6",
            },
            variants: ["branded", "background"],
          },
          {
            id: "dejitaru-tsuka",
            fileName: "TSUKA",
            symbol: "tsuka",
            name: "Dejitaru Tsuka",
            marketCapRank: 875,
            addresses: {
              ethereum: "0xc5fb36dd2fb59d3b98deff88425a3f425ee469ed",
            },
            variants: ["branded", "background"],
          },
          {
            id: "dent",
            fileName: "DENT",
            symbol: "dent",
            name: "Dent",
            marketCapRank: 359,
            addresses: {
              ethereum: "0x3597bfd533a99c9aa083587b074434e61eb0a258",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "derace",
            fileName: "DERC",
            symbol: "derc",
            name: "DeRace",
            marketCapRank: 862,
            addresses: {
              ethereum: "0x9fa69536d1cda4a04cfb50688294de75b505a9ae",
              "binance-smart-chain":
                "0x373e768f79c820aa441540d254dca6d045c6d25b",
              "polygon-pos": "0xb35fcbcf1fd489fce02ee146599e893fdcdc60e6",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "derby-stars-run",
            fileName: "DSRUN",
            symbol: "dsrun",
            name: "Derby Stars RUN",
            marketCapRank: 1886,
            addresses: {
              "polygon-pos": "0xff76c0b48363a7c7307868a81548d340049b0023",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "deri-protocol",
            fileName: "DERI",
            symbol: "deri",
            name: "Deri Protocol",
            marketCapRank: 2148,
            addresses: {
              ethereum: "0xa487bf43cf3b10dffc97a9a744cbb7036965d3b9",
              "manta-pacific": "0xd212377f71f15a1b962c9265dc44fbceaf0bc46d",
              "arbitrum-one": "0x21e60ee73f17ac0a411ae5d690f908c3ed66fe12",
              "binance-smart-chain":
                "0xe60eaf5a997dfae83739e035b005a33afdcc6df5",
              "huobi-token": "0x2bda3e331cf735d9420e41567ab843441980c4b8",
              "polygon-pos": "0x3d1d2afd191b165d140e3e8329e634665ffb0e5e",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "dero",
            fileName: "DERO",
            symbol: "dero",
            name: "Dero",
            marketCapRank: 692,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "desmos",
            fileName: "DSM",
            symbol: "dsm",
            name: "Desmos",
            marketCapRank: 2281,
            addresses: {
              cosmos:
                "ibc/EA4C0A9F72E2CEDF10D0E7A9A6A22954DB3444910DB5BE980DF59B05A46DAD1C",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "deso",
            fileName: "DESO",
            symbol: "deso",
            name: "Decentralized Social",
            marketCapRank: 264,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "devour-2",
            fileName: "DPAY",
            symbol: "dpay",
            name: "Devour",
            marketCapRank: 1450,
            addresses: {
              ethereum: "0xe5a733681bbe6cd8c764bb8078ef8e13a576dd78",
              solana: "Gnca3UkjR4a1FFNZuGfEELmbaHkL6GteSC2swpdWRmf7",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "dex-game",
            fileName: "DXGM",
            symbol: "dxgm",
            name: "DexGame",
            marketCapRank: 2427,
            addresses: {
              ethereum: "0x66f73d0fd4161cfad4302dc145ff994375c13475",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "dexalot",
            fileName: "ALOT",
            symbol: "alot",
            name: "Dexalot",
            marketCapRank: 947,
            addresses: {
              avalanche: "0x093783055f9047c2bff99c4e414501f8a147bc69",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "dexcheck",
            fileName: "DCK",
            symbol: "dck",
            name: "DexCheck",
            marketCapRank: 922,
            addresses: {
              "binance-smart-chain":
                "0x16faf9daa401aa42506af503aa3d80b871c467a3",
              ethereum: "0x672f4fa517894496b8a958b4b3fca068ce513a39",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "dexe",
            fileName: "DEXE",
            symbol: "dexe",
            name: "DeXe",
            marketCapRank: 129,
            addresses: {
              ethereum: "0xde4ee8057785a7e8e800db58f9784845a5c2cbd6",
              "binance-smart-chain":
                "0x6e88056e8376ae7709496ba64d37fa2f8015ce3e",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "dexkit",
            fileName: "KIT",
            symbol: "kit",
            name: "DexKit",
            marketCapRank: 2590,
            addresses: {
              ethereum: "0x7866e48c74cbfb8183cd1a929cd9b95a7a5cb4f4",
              "binance-smart-chain":
                "0x314593fa9a2fa16432913dbccc96104541d32d11",
              "polygon-pos": "0x4d0def42cf57d6f27cd4983042a55dce1c9f853c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "dexlab",
            fileName: "DXL",
            symbol: "dxl",
            name: "Dexlab",
            marketCapRank: 2125,
            addresses: {
              solana: "GsNzxJfFn6zQdJGeYsupJWzUAm57Ba7335mfhWvFiE9Z",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "dexpools",
            fileName: "DXP",
            symbol: "dxp",
            name: "Dexpools",
            marketCapRank: 1880,
            addresses: {
              ethereum: "0x88aa4a6c5050b9a1b2aa7e34d0582025ca6ab745",
              "metis-andromeda": "0xa31848aa61f784cdbb6f74260d224a4356295799",
            },
            variants: ["branded", "background"],
          },
          {
            id: "dextf",
            fileName: "DEXTF",
            symbol: "dextf",
            name: "Domani Protocol",
            marketCapRank: 1097,
            addresses: {
              ethereum: "0x5f64ab1544d28732f0a24f4713c2c8ec0da089f0",
              avalanche: "0x03e8d118a1864c7dc53bf91e007ab7d91f5a06fa",
              zksync: "0x9929bcac4417a21d7e6fc86f6dae1cc7f27a2e41",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "dextools",
            fileName: "DEXT",
            symbol: "dext",
            name: "DexTools",
            marketCapRank: 610,
            addresses: {
              ethereum: "0xfb7b4564402e5500db5bb6d63ae671302777c75a",
              "binance-smart-chain":
                "0xe91a8d2c584ca93c7405f15c22cdfe53c29896e3",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "dforce-token",
            fileName: "DF",
            symbol: "df",
            name: "dForce",
            marketCapRank: 807,
            addresses: {
              ethereum: "0x431ad2ff6a9c365805ebad47ee021148d6f7dbe0",
              energi: "0xc588d81d1a9ef1a119446482fc7cbcdb0012292a",
              "arbitrum-one": "0xae6aab43c4f3e0cea4ab83752c278f8debaba689",
              "binance-smart-chain":
                "0x4a9a2b2b04549c3927dd2c9668a5ef3fca473623",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "dfx-finance",
            fileName: "DFX",
            symbol: "dfx",
            name: "DFX Finance",
            marketCapRank: 2015,
            addresses: {
              ethereum: "0x888888435fde8e7d4c54cab67f206e4199454c60",
              "arbitrum-one": "0x27f485b62c4a7e635f561a87560adf5090239e93",
              "polygon-pos": "0x27f485b62c4a7e635f561a87560adf5090239e93",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "dfyn-network",
            fileName: "DFYN",
            symbol: "dfyn",
            name: "Dfyn Network",
            marketCapRank: 1770,
            addresses: {
              ethereum: "0x9695e0114e12c0d3a3636fab5a18e6b737529023",
              "polygon-pos": "0xc168e40227e4ebd8c1cae80f7a55a4f0e6d66c97",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "dhedge-dao",
            fileName: "DHT",
            symbol: "dht",
            name: "dHEDGE DAO",
            marketCapRank: 1563,
            addresses: {
              ethereum: "0xca1207647ff814039530d7d35df0e1dd2e91fa84",
              "optimistic-ethereum":
                "0xaf9fe3b5ccdae78188b1f8b9a49da7ae9510f151",
              base: "0x54bc229d1cb15f8b6415efeab4290a40bc8b7d84",
              "arbitrum-one": "0x8038f3c971414fd1fc220ba727f2d4a0fc98cb65",
              "polygon-pos": "0x8c92e38eca8210f4fcbf17f0951b198dd7668292",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "dia-data",
            fileName: "DIA",
            symbol: "dia",
            name: "DIA",
            marketCapRank: 608,
            addresses: {
              ethereum: "0x84ca8bc7997272c7cfb4d0cd3d55cd942b3c9419",
              sora: "0x001f7a13792061236adfc93fa3aa8bad1dc8a8e8f889432b3d8d416b986f2c43",
              "binance-smart-chain":
                "0x99956d38059cf7beda96ec91aa7bb2477e0901dd",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "diamond",
            fileName: "DMD",
            symbol: "dmd",
            name: "Diamond",
            marketCapRank: 1640,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "diamond-launch",
            fileName: "DLC",
            symbol: "dlc",
            name: "Diamond Launch",
            marketCapRank: 1312,
            addresses: {
              "binance-smart-chain":
                "0xde83180dd1166d4f8e5c2b7de14a2163b1bb4a87",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "digibyte",
            fileName: "DGB",
            symbol: "dgb",
            name: "DigiByte",
            marketCapRank: 306,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "digitalbits",
            fileName: "XDB",
            symbol: "xdb",
            name: "XDB CHAIN",
            marketCapRank: 1289,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "digix-gold",
            fileName: "DGX",
            symbol: "dgx",
            name: "Digix Gold",
            marketCapRank: 2598,
            addresses: {
              ethereum: "0x4f3afec4e5a3f2a6a1a411def7d7dfe50ee057bf",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "dimitra",
            fileName: "DMTR",
            symbol: "dmtr",
            name: "Dimitra",
            marketCapRank: 530,
            addresses: {
              ethereum: "0x51cb253744189f11241becb29bedd3f1b5384fdb",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "dimo",
            fileName: "DIMO",
            symbol: "dimo",
            name: "DIMO",
            marketCapRank: 562,
            addresses: {
              "polygon-pos": "0xe261d618a959afffd53168cd07d12e37b26761db",
              iotex: "0x61db9b084326d2251ccb0252c18fd9b0e887ca4f",
              ethereum: "0x5fab9761d60419c9eeebe3915a8fa1ed7e8d2e1b",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "dingocoin",
            fileName: "DINGO",
            symbol: "dingo",
            name: "Dingocoin",
            marketCapRank: 2074,
            addresses: {
              solana: "6VYF5jXq6rfq4QRgGMG6co7b1Ev1Lj7KSbHBxfQ9e1L3",
              "binance-smart-chain":
                "0x9b208b117b2c4f76c1534b6f006b033220a681a4",
            },
            variants: ["branded", "background"],
          },
          {
            id: "dinox",
            fileName: "DNXC",
            symbol: "dnxc",
            name: "DinoX",
            marketCapRank: 2668,
            addresses: {
              ethereum: "0x20a8cec5fffea65be7122bcab2ffe32ed4ebf03a",
              "polygon-pos": "0xcaf5191fc480f43e4df80106c7695eca56e48b18",
              "binance-smart-chain":
                "0x3c1748d647e6a56b37b66fcd2b5626d0461d3aa0",
            },
            variants: ["branded", "background"],
          },
          {
            id: "dione",
            fileName: "DIONE",
            symbol: "dione",
            name: "Dione",
            marketCapRank: 476,
            addresses: {
              ethereum: "0x89b69f2d1adffa9a253d40840b6baa7fc903d697",
            },
            variants: ["branded", "background"],
          },
          {
            id: "district0x",
            fileName: "DNT",
            symbol: "dnt",
            name: "district0x",
            marketCapRank: 653,
            addresses: {
              ethereum: "0x0abdace70d3790235af448c88547603b945604ea",
              energi: "0x8dc6bb6ec3caddefb16b0317fa91217a7df93000",
            },
            variants: ["branded", "background"],
          },
          {
            id: "divergence-protocol",
            fileName: "DIVER",
            symbol: "diver",
            name: "Divergence Protocol",
            marketCapRank: 2069,
            addresses: {
              ethereum: "0xfb782396c9b20e564a64896181c7ac8d8979d5f4",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "diversified-staked-eth",
            fileName: "DSETH",
            symbol: "dseth",
            name: "Diversified Staked ETH",
            marketCapRank: 2183,
            addresses: {
              ethereum: "0x341c05c0e9b33c0e38d64de76516b2ce970bb3be",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "divi",
            fileName: "DIVI",
            symbol: "divi",
            name: "Divi",
            marketCapRank: 1552,
            addresses: {
              ethereum: "0x246908bff0b1ba6ecadcf57fb94f6ae2fcd43a77",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "djed",
            fileName: "DJED",
            symbol: "djed",
            name: "Djed",
            marketCapRank: 1956,
            addresses: {
              cardano:
                "8db269c3ec630e06ae29f74bc39edd1f87c819f1056206e879a1cd61446a65644d6963726f555344",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "dkargo",
            fileName: "DKA",
            symbol: "dka",
            name: "dKargo",
            marketCapRank: 431,
            addresses: {
              ethereum: "0x5dc60c4d5e75d22588fa17ffeb90a63e535efce0",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "dodo",
            fileName: "DODO",
            symbol: "dodo",
            name: "DODO",
            marketCapRank: 396,
            addresses: {
              ethereum: "0x43dfc4159d86f3a37a5a4b3d4580b888ad7d4ddd",
              energi: "0x4fec4e046e6b8de5d22785c3fbdb104f14f5a306",
              "near-protocol":
                "43dfc4159d86f3a37a5a4b3d4580b888ad7d4ddd.factory.bridge.near",
              "arbitrum-one": "0x69eb4fa4a2fbd498c257c57ea8b7655a2559a581",
              "binance-smart-chain":
                "0x67ee3cb086f8a16f34bee3ca72fad36f7db929e2",
              aurora: "0xe301ed8c7630c9678c39e4e45193d1e7dfb914f7",
              "polygon-pos": "0xe4bf2864ebec7b7fdf6eeca9bacae7cdfdaffe78",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "dogami",
            fileName: "DOGA",
            symbol: "doga",
            name: "Dogami",
            marketCapRank: 1669,
            addresses: {
              tezos: "KT1Ha4yFVeyzw6KRAdkzq6TxDHB97KG4pZe8",
              "polygon-pos": "0x2f3e306d9f02ee8e8850f9040404918d0b345207",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "doge-eat-doge",
            fileName: "OMNOM",
            symbol: "omnom",
            name: "Doge Eat Doge",
            marketCapRank: 813,
            addresses: {
              dogechain: "0xe3fca919883950c5cd468156392a6477ff5d18de",
            },
            variants: ["branded", "background"],
          },
          {
            id: "dogebonk",
            fileName: "DOBO",
            symbol: "dobo",
            name: "DogeBonk",
            marketCapRank: 1753,
            addresses: {
              "binance-smart-chain":
                "0xae2df9f730c54400934c06a17462c41c08a06ed8",
            },
            variants: ["branded", "background"],
          },
          {
            id: "dogechain",
            fileName: "DC",
            symbol: "dc",
            name: "Dogechain",
            marketCapRank: 966,
            addresses: {
              dogechain: "0x7b4328c127b85369d9f82ca0503b000d09cf9180",
              ethereum: "0x7b4328c127b85369d9f82ca0503b000d09cf9180",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "dogecoin",
            fileName: "DOGE",
            symbol: "doge",
            name: "Dogecoin",
            marketCapRank: 9,
            addresses: {},
            variants: ["branded", "background"],
          },
          {
            id: "dogegf",
            fileName: "DOGEGF",
            symbol: "dogegf",
            name: "DogeGF",
            marketCapRank: 1793,
            addresses: {
              ethereum: "0xfb130d93e49dca13264344966a611dc79a456bc5",
              "polygon-pos": "0x0e7252706393470ffb0629da2caa39fc9340f2d4",
            },
            variants: ["branded", "background"],
          },
          {
            id: "dogelon-mars",
            fileName: "ELON",
            symbol: "elon",
            name: "Dogelon Mars",
            marketCapRank: 343,
            addresses: {
              ethereum: "0x761d38e5ddf6ccf6cf7c55759d5210750b5d60f3",
              fuse: "0x5dd8015cec49f4db01fd228f688bf30337d3e0a9",
              cronos: "0x02dccaf514c98451320a9365c5b46c61d3246ff3",
              "binance-smart-chain":
                "0x7bd6fabd64813c48545c9c0e312a0099d9be2540",
              "polygon-pos": "0xe0339c80ffde91f3e20494df88d4206d86024cdf",
              solana: "7ZCm8WBN9aLa3o47SoYctU6iLdj7wkGG5SV2hE5CgtD5",
            },
            variants: ["branded", "background"],
          },
          {
            id: "dola-borrowing-right",
            fileName: "DBR",
            symbol: "dbr",
            name: "DOLA Borrowing Right",
            marketCapRank: 2510,
            addresses: {
              ethereum: "0xad038eb671c44b853887a7e32528fab35dc5d710",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "dola-usd",
            fileName: "DOLA",
            symbol: "dola",
            name: "DOLA",
            marketCapRank: 651,
            addresses: {
              ethereum: "0x865377367054516e17014ccded1e7d814edc9ce4",
              "optimistic-ethereum":
                "0x8ae125e8653821e851f12a49f7765db9a9ce7384",
              "arbitrum-one": "0x6a7661795c374c0bfc635934efaddff3a7ee23b6",
              base: "0x4621b7a9c75199271f773ebd9a499dbd165c3191",
              "binance-smart-chain":
                "0x2f29bc0ffaf9bff337b31cbe6cb5fb3bf12e5840",
              fantom: "0x3129662808bec728a27ab6a6b9afd3cbaca8a43c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "domi",
            fileName: "DOMI",
            symbol: "domi",
            name: "Domi",
            marketCapRank: 1160,
            addresses: {
              "binance-smart-chain":
                "0xbbca42c60b5290f2c48871a596492f93ff0ddc82",
              avalanche: "0xfc6da929c031162841370af240dec19099861d3b",
              ethereum: "0x45c2f8c9b4c0bdc76200448cc26c48ab6ffef83f",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "don-t-buy-inu",
            fileName: "DBI",
            symbol: "dbi",
            name: "Don't Buy Inu",
            marketCapRank: 1714,
            addresses: {
              ethereum: "0x2de509bf0014ddf697b220be628213034d320ece",
            },
            variants: ["branded", "background"],
          },
          {
            id: "donut",
            fileName: "DONUT",
            symbol: "donut",
            name: "Donut",
            marketCapRank: 2062,
            addresses: {
              ethereum: "0xc0f9bd5fa5698b6505f643900ffa515ea5df54a9",
              xdai: "0x524b969793a64a602342d89bc2789d43a016b13a",
            },
            variants: ["branded", "background"],
          },
          {
            id: "dope-wars-paper",
            fileName: "PAPER",
            symbol: "paper",
            name: "Dope Wars Paper",
            marketCapRank: 2199,
            addresses: {
              ethereum: "0x7ae1d57b58fa6411f32948314badd83583ee0e8c",
              "optimistic-ethereum":
                "0x00f932f0fe257456b32deda4758922e56a4f4b42",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "dopex",
            fileName: "DPX",
            symbol: "dpx",
            name: "Dopex",
            marketCapRank: null,
            addresses: {
              ethereum: "0xeec2be5c91ae7f8a338e1e5f3b5de49d07afdc81",
              "arbitrum-one": "0x6c2c06790b3e3e3c38e12ee22f8183b37a13ee55",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "dopex-rebate-token",
            fileName: "RDPX",
            symbol: "rdpx",
            name: "Dopex Rebate",
            marketCapRank: 1659,
            addresses: {
              ethereum: "0x0ff5a8451a839f5f0bb3562689d9a44089738d11",
              "arbitrum-one": "0x32eb7902d4134bf98a28b963d26de779af92a212",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "dor",
            fileName: "DOR",
            symbol: "dor",
            name: "Dor",
            marketCapRank: 2479,
            addresses: {},
            variants: ["branded", "background"],
          },
          {
            id: "dora-factory-2",
            fileName: "DORA",
            symbol: "dora",
            name: "Dora Factory",
            marketCapRank: 484,
            addresses: {
              ethereum: "0x70b790d0948a760e80bc3f892b142f7779b538b2",
            },
            variants: ["branded", "background"],
          },
          {
            id: "dose-token",
            fileName: "DOSE",
            symbol: "dose",
            name: "DOSE",
            marketCapRank: 1458,
            addresses: {
              ethereum: "0xb31ef9e52d94d4120eb44fe1ddfde5b4654a6515",
              "polygon-pos": "0x81382e9693de2afc33f69b70a6c12ca9b3a73f47",
              "binance-smart-chain":
                "0x7837fd820ba38f95c54d6dac4ca3751b81511357",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "dotmoovs",
            fileName: "MOOV",
            symbol: "moov",
            name: "dotmoovs",
            marketCapRank: 1449,
            addresses: {
              ethereum: "0x24ec2ca132abf8f6f8a6e24a1b97943e31f256a7",
              "binance-smart-chain":
                "0x0ebd9537a25f56713e34c45b38f421a1e7191469",
              "polygon-pos": "0xe46f5128b933e5a6f907fe73ece80059c222db0a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "dragonchain",
            fileName: "DRGN",
            symbol: "drgn",
            name: "Dragonchain",
            marketCapRank: 1116,
            addresses: {
              ethereum: "0x419c4db4b9e25d6db2ad9691ccb832c8d9fda05e",
            },
            variants: ["branded", "background"],
          },
          {
            id: "dream-machine-token",
            fileName: "DMT",
            symbol: "dmt",
            name: "Dream Machine Token",
            marketCapRank: 972,
            addresses: {
              "arbitrum-one": "0x8b0e6f19ee57089f7649a455d89d7bc6314d04e8",
              ethereum: "0x0b7f0e51cd1739d6c96982d55ad8fa634dd43a9c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "drep-new",
            fileName: "DREP",
            symbol: "drep",
            name: "Drep",
            marketCapRank: 1860,
            addresses: {
              ethereum: "0x3ab6ed69ef663bd986ee59205ccad8a20f98b4c2",
              "binance-smart-chain":
                "0xec583f25a049cc145da9a256cdbe9b6201a705ff",
            },
            variants: ["branded", "background"],
          },
          {
            id: "drunk-robots",
            fileName: "METAL",
            symbol: "metal",
            name: "Badmad Robots",
            marketCapRank: 825,
            addresses: {
              "polygon-pos": "0x200c234721b5e549c3693ccc93cf191f90dc2af9",
              "binance-smart-chain":
                "0x200c234721b5e549c3693ccc93cf191f90dc2af9",
            },
            variants: ["branded", "background"],
          },
          {
            id: "dtravel",
            fileName: "TRVL",
            symbol: "trvl",
            name: "TRVL",
            marketCapRank: 1053,
            addresses: {
              ethereum: "0xd47bdf574b4f76210ed503e0efe81b58aa061f3d",
              "binance-smart-chain":
                "0x6a8fd46f88dbd7bdc2d536c604f811c63052ce0f",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "dua-token",
            fileName: "DUA",
            symbol: "dua",
            name: "Brillion",
            marketCapRank: 1305,
            addresses: {
              avalanche: "0xb418417374fca27bb54169d3c777492e6fe17ee7",
              ethereum: "0x6c249b6f6492864d914361308601a7abb32e68f8",
            },
            variants: ["branded", "background"],
          },
          {
            id: "dusk-network",
            fileName: "DUSK",
            symbol: "dusk",
            name: "Dusk",
            marketCapRank: 294,
            addresses: {
              ethereum: "0x940a2db1b7008b6c776d4faaca729d6d4a4aa551",
              energi: "0x458a9f6a008055fd79f321ea7eb3f83a6cb326e2",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "dust-protocol",
            fileName: "DUST",
            symbol: "dust",
            name: "Dust Protocol",
            marketCapRank: 1407,
            addresses: {
              ethereum: "0xb5b1b659da79a2507c27aad509f15b4874edc0cc",
              "polygon-pos": "0x4987a49c253c38b3259092e9aac10ec0c7ef7542",
              solana: "DUSTawucrTsGU8hcqRdHDCbuYhCPADMLM2VcCb8VnFnQ",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "dvision-network",
            fileName: "DVI",
            symbol: "dvi",
            name: "Dvision Network",
            marketCapRank: 1453,
            addresses: {
              ethereum: "0x10633216e7e8281e33c86f02bf8e565a635d9770",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "dydx-chain",
            fileName: "DYDX",
            symbol: "dydx",
            name: "dYdX",
            marketCapRank: 76,
            addresses: {
              cosmos:
                "ibc/831F0B1BBB1D08A2B75311892876D71565478C532967545476DF4C2D7492E48C",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "e-money",
            fileName: "NGM",
            symbol: "ngm",
            name: "e-Money",
            marketCapRank: 2668,
            addresses: {
              ethereum: "0xed0d5747a9ab03a75fbfec3228cd55848245b75d",
              osmosis:
                "ibc/1DC495FCEFDA068A3820F903EDBD78B942FBD204D7E93D3BA2B432E9669D1A59",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "e-radix",
            fileName: "EXRD",
            symbol: "exrd",
            name: "e-Radix",
            marketCapRank: 571,
            addresses: {
              ethereum: "0x6468e79a80c0eab0f9a2b574c8d5bc374af59414",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ecash",
            fileName: "XEC",
            symbol: "xec",
            name: "eCash",
            marketCapRank: 93,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "echelon-prime",
            fileName: "PRIME",
            symbol: "prime",
            name: "Echelon Prime",
            marketCapRank: 136,
            addresses: {
              ethereum: "0xb23d80f5fefcddaa212212f028021b41ded428cf",
              base: "0xfa980ced6895ac314e7de34ef1bfae90a5add21b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "eco",
            fileName: "ECO",
            symbol: "eco",
            name: "ECO",
            marketCapRank: 2037,
            addresses: {
              ethereum: "0x8dbf9a4c99580fc7fd4024ee08f3994420035727",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "ecoin-2",
            fileName: "ECOIN",
            symbol: "ecoin",
            name: "Ecoin",
            marketCapRank: 779,
            addresses: {
              "xdc-network": "xdc536dd70445cea1e97f9bf1bada04cbda5199a2a1",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ecomi",
            fileName: "OMI",
            symbol: "omi",
            name: "ECOMI",
            marketCapRank: 339,
            addresses: {
              ethereum: "0xed35af169af46a02ee13b9d79eb57d6d68c1749e",
              energi: "0x003d765f3793de38ad5ea9d5fd0021cf12c3ba68",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ecox",
            fileName: "ECOX",
            symbol: "ecox",
            name: "ECOx",
            marketCapRank: 742,
            addresses: {
              ethereum: "0xcccd1ba9f7acd6117834e0d28f25645decb1736a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "eden",
            fileName: "EDEN",
            symbol: "eden",
            name: "EDEN",
            marketCapRank: 1256,
            addresses: {
              ethereum: "0x1559fa1b8f28238fd5d76d9f434ad86fd20d1559",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "edge",
            fileName: "EDGE",
            symbol: "edge",
            name: "Edge",
            marketCapRank: 1684,
            addresses: {
              ethereum: "0x4ec1b60b96193a64acae44778e51f7bff2007831",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "edgeware",
            fileName: "EDG",
            symbol: "edg",
            name: "Edgeware",
            marketCapRank: 2128,
            addresses: {
              "binance-smart-chain":
                "0x4e0da40b9063dc48364c1c0ffb4ae9d091fc2270",
              "polygon-pos": "0x4e0da40b9063dc48364c1c0ffb4ae9d091fc2270",
              "arbitrum-one": "0x4e0da40b9063dc48364c1c0ffb4ae9d091fc2270",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "edu-coin",
            fileName: "EDU",
            symbol: "edu",
            name: "Open Campus",
            marketCapRank: 284,
            addresses: {
              "binance-smart-chain":
                "0xbdeae1ca48894a1759a8374d63925f21f2ee2639",
              ethereum: "0x26aad156ba8efa501b32b42ffcdc8413f90e9c99",
              "polygon-pos": "0xb03e3b00baf9954bf1604d09a4dbd5cf88e1f695",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "effect-network",
            fileName: "EFX",
            symbol: "efx",
            name: "Effect Network",
            marketCapRank: 1682,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "efinity",
            fileName: "EFI",
            symbol: "efi",
            name: "Efinity",
            marketCapRank: 1461,
            addresses: {
              ethereum: "0x656c00e1bcd96f256f224ad9112ff426ef053733",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "eggdog",
            fileName: "EGG",
            symbol: "egg",
            name: "Eggdog",
            marketCapRank: 1899,
            addresses: {
              solana: "EXA537HSBVpsFijENbt6Muuy9AADUN8dUmYKD4oKbjJE",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "el-hippo",
            fileName: "HIPP",
            symbol: "hipp",
            name: "El Hippo",
            marketCapRank: 1906,
            addresses: {
              ethereum: "0x7b744eea1deca2f1b7b31f15ba036fa1759452d7",
            },
            variants: ["branded", "background"],
          },
          {
            id: "elastos",
            fileName: "ELA",
            symbol: "ela",
            name: "Elastos",
            marketCapRank: 608,
            addresses: {
              ethereum: "0xe6fd75ff38adca4b97fbcd938c86b98772431867",
              "huobi-token": "0xa1ecfc2bec06e4b43ddd423b94fef84d0dbc8f5c",
            },
            variants: ["mono"],
          },
          {
            id: "electra-protocol",
            fileName: "XEP",
            symbol: "xep",
            name: "Electra Protocol",
            marketCapRank: 1076,
            addresses: {
              "binance-smart-chain":
                "0xb897d0a0f68800f8be7d69ffdd1c24b69f57bf3e",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "electroneum",
            fileName: "ETN",
            symbol: "etn",
            name: "Electroneum",
            marketCapRank: 476,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "electronic-usd",
            fileName: "EUSD",
            symbol: "eusd",
            name: "Electronic USD",
            marketCapRank: 1130,
            addresses: {
              ethereum: "0xa0d69e286b938e21cbf7e51d71f6a4c8918f482f",
              base: "0xcfa3ef56d303ae4faaba0592388f19d7c3399fb4",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "electronicgulden",
            fileName: "EFL",
            symbol: "efl",
            name: "Electronic Gulden",
            marketCapRank: 1956,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "elk-finance",
            fileName: "ELK",
            symbol: "elk",
            name: "Elk Finance",
            marketCapRank: 2288,
            addresses: {
              avalanche: "0xeeeeeb57642040be42185f49c52f7e9b38f8eeee",
              fantom: "0xeeeeeb57642040be42185f49c52f7e9b38f8eeee",
              cronos: "0xeeeeeb57642040be42185f49c52f7e9b38f8eeee",
              "binance-smart-chain":
                "0xeeeeeb57642040be42185f49c52f7e9b38f8eeee",
              fuse: "0xeeeeeb57642040be42185f49c52f7e9b38f8eeee",
              moonriver: "0xeeeeeb57642040be42185f49c52f7e9b38f8eeee",
              elastos: "0xeeeeeb57642040be42185f49c52f7e9b38f8eeee",
              telos: "0xeeeeeb57642040be42185f49c52f7e9b38f8eeee",
              "polygon-pos": "0xeeeeeb57642040be42185f49c52f7e9b38f8eeee",
              ethereum: "0xeeeeeb57642040be42185f49c52f7e9b38f8eeee",
              xdai: "0xeeeeeb57642040be42185f49c52f7e9b38f8eeee",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "elrond-erd-2",
            fileName: "EGLD",
            symbol: "egld",
            name: "MultiversX",
            marketCapRank: 75,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "elumia",
            fileName: "ELU",
            symbol: "elu",
            name: "Elumia",
            marketCapRank: 1575,
            addresses: {
              solana: "4tJZhSdGePuMEfZQ3h5LaHjTPsw1iWTRFTojnZcwsAU6",
            },
            variants: ["branded", "background"],
          },
          {
            id: "elvishmagic",
            fileName: "EMAGIC",
            symbol: "emagic",
            name: "ElvishMagic",
            marketCapRank: 2162,
            addresses: {
              "binance-smart-chain":
                "0xaf55e53cfa099a59aa30554fe106f33c47564a25",
            },
            variants: ["branded", "background"],
          },
          {
            id: "elysia",
            fileName: "EL",
            symbol: "el",
            name: "ELYSIA",
            marketCapRank: 514,
            addresses: {
              ethereum: "0x2781246fe707bb15cee3e5ea354e2154a2877b16",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "eml-protocol",
            fileName: "EML",
            symbol: "eml",
            name: "EML Protocol",
            marketCapRank: 1480,
            addresses: {
              ethereum: "0x03dde9e5bb31ee40a471476e2fccf75c67921062",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "empyreal",
            fileName: "EMP",
            symbol: "emp",
            name: "Empyreal",
            marketCapRank: 1214,
            addresses: {
              "arbitrum-one": "0x772598e9e62155d7fdfe65fdf01eb5a53a8465be",
              ethereum: "0x39d5313c3750140e5042887413ba8aa6145a9bd2",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "energi",
            fileName: "NRG",
            symbol: "nrg",
            name: "Energi",
            marketCapRank: 1436,
            addresses: {
              ethereum: "0x1416946162b1c2c871a73b07e932d2fb6c932069",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "energy-web-token",
            fileName: "EWT",
            symbol: "ewt",
            name: "Energy Web",
            marketCapRank: 473,
            addresses: { xdai: "0x6a8cb6714b1ee5b471a7d2ec4302cb4f5ff25ec2" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "enigma",
            fileName: "ENG",
            symbol: "eng",
            name: "Enigma",
            marketCapRank: 2645,
            addresses: {
              ethereum: "0xf0ee6b27b759c9893ce4f094b49ad28fd15a23e4",
            },
            variants: ["branded", "background"],
          },
          {
            id: "enjincoin",
            fileName: "ENJ",
            symbol: "enj",
            name: "Enjin Coin",
            marketCapRank: 147,
            addresses: {
              ethereum: "0xf629cbd94d3791c9250152bd8dfbdf380e2a3b9c",
              energi: "0x204a90b57d15417864080df1cd6e907831c206a6",
              "harmony-shard-0": "0xadbd41bfb4389de499535c14a8a3a12fead8f66a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "enjinstarter",
            fileName: "EJS",
            symbol: "ejs",
            name: "Enjinstarter",
            marketCapRank: 962,
            addresses: {
              ethereum: "0x96610186f3ab8d73ebee1cf950c750f3b1fb79c2",
              "binance-smart-chain":
                "0x09f423ac3c9babbff6f94d372b16e4206e71439f",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "enreachdao",
            fileName: "NRCH",
            symbol: "nrch",
            name: "Enreach",
            marketCapRank: 1996,
            addresses: {
              ethereum: "0x69fa8e7f6bf1ca1fb0de61e1366f7412b827cc51",
              "binance-smart-chain":
                "0x69fa8e7f6bf1ca1fb0de61e1366f7412b827cc51",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "entangle",
            fileName: "NGL",
            symbol: "ngl",
            name: "Entangle",
            marketCapRank: 328,
            addresses: {
              ethereum: "0x12652c6d93fdb6f4f37d48a8687783c782bb0d10",
            },
            variants: ["branded", "background"],
          },
          {
            id: "eos",
            fileName: "EOS",
            symbol: "eos",
            name: "EOS",
            marketCapRank: 97,
            addresses: {},
            variants: ["mono", "branded", "background"],
          },
          {
            id: "epic-cash",
            fileName: "EPIC",
            symbol: "epic",
            name: "Epic Cash",
            marketCapRank: 1924,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "epik-prime",
            fileName: "EPIK",
            symbol: "epik",
            name: "Epik Prime",
            marketCapRank: 1382,
            addresses: {
              ethereum: "0x4da0c48376c277cdbd7fc6fdc6936dee3e4adf75",
              "binance-smart-chain":
                "0x368ce786ea190f32439074e8d22e12ecb718b44c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "eqifi",
            fileName: "EQX",
            symbol: "eqx",
            name: "EQIFi",
            marketCapRank: 1964,
            addresses: {
              ethereum: "0xbd3de9a069648c84d27d74d701c9fa3253098b15",
              "binance-smart-chain":
                "0x436c52a8cee41d5e9c5e6f4cb146e66d552fb700",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "equalizer-dex",
            fileName: "EQUAL",
            symbol: "equal",
            name: "Equalizer DEX",
            marketCapRank: 2086,
            addresses: { fantom: "0x3fd3a0c85b70754efc07ac9ac0cbbdce664865a6" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "equation",
            fileName: "EQU",
            symbol: "equ",
            name: "Equation",
            marketCapRank: 1973,
            addresses: {
              "arbitrum-one": "0x87aaffdf26c6885f6010219208d5b161ec7609c0",
            },
            variants: ["branded", "background"],
          },
          {
            id: "equilibria-finance",
            fileName: "EQB",
            symbol: "eqb",
            name: "Equilibria Finance",
            marketCapRank: 1308,
            addresses: {
              "arbitrum-one": "0xbfbcfe8873fe28dfa25f1099282b088d52bbad9c",
              ethereum: "0xfe80d611c6403f70e5b1b9b722d2b3510b740b2b",
              "binance-smart-chain":
                "0x374ca32fd7934c5d43240e1e73fa9b2283468609",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "equilibrium-eosdt",
            fileName: "EOSDT",
            symbol: "eosdt",
            name: "Equilibrium EOSDT",
            marketCapRank: 2390,
            addresses: {},
            variants: ["mono", "branded", "background"],
          },
          {
            id: "era-swap-token",
            fileName: "ES",
            symbol: "es",
            name: "Era Swap",
            marketCapRank: 1602,
            addresses: {
              ethereum: "0x72108a8cc3254813c6be2f1b77be53e185abfdd9",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ergo",
            fileName: "ERG",
            symbol: "erg",
            name: "Ergo",
            marketCapRank: 418,
            addresses: {},
            variants: ["mono", "branded", "background"],
          },
          {
            id: "ertha",
            fileName: "ERTHA",
            symbol: "ertha",
            name: "Ertha",
            marketCapRank: 2020,
            addresses: {
              "binance-smart-chain":
                "0x62823659d09f9f9d2222058878f89437425eb261",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "ethereans",
            fileName: "OS",
            symbol: "os",
            name: "Ethereans",
            marketCapRank: 2059,
            addresses: {
              ethereum: "0x6100dd79fcaa88420750dcee3f735d168abcb771",
              "optimistic-ethereum":
                "0x6af3cb766d6cd37449bfd321d961a61b0515c1bc",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "etherempires",
            fileName: "ETE",
            symbol: "ete",
            name: "Etherempires",
            marketCapRank: 1717,
            addresses: {
              ethereum: "0xd27b128dc6536309cdebf7f1aff0cb7717bc0268",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ethereum",
            fileName: "ETH",
            symbol: "eth",
            name: "Ethereum",
            marketCapRank: 2,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ethereum-classic",
            fileName: "ETC",
            symbol: "etc",
            name: "Ethereum Classic",
            marketCapRank: 29,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ethereum-meta",
            fileName: "ETHM",
            symbol: "ethm",
            name: "Ethereum Meta",
            marketCapRank: 1245,
            addresses: {
              ethereum: "0xfd957f21bd95e723645c07c48a2d8acb8ffb3794",
              "binance-smart-chain":
                "0x0b33542240d6fa323c796749f6d6869fdb7f13ca",
              "polygon-pos": "0x55b1a124c04a54eefdefe5fa2ef5f852fb5f2f26",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ethereum-name-service",
            fileName: "ENS",
            symbol: "ens",
            name: "Ethereum Name Service",
            marketCapRank: 152,
            addresses: {
              ethereum: "0xc18360217d8f7ab5e7c516566761ea12ce7f9d72",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ethereum-pow-iou",
            fileName: "ETHW",
            symbol: "ethw",
            name: "EthereumPoW",
            marketCapRank: 188,
            addresses: {},
            variants: ["branded", "background"],
          },
          {
            id: "ethereum-push-notification-service",
            fileName: "PUSH",
            symbol: "push",
            name: "Push Protocol",
            marketCapRank: 1232,
            addresses: {
              ethereum: "0xf418588522d5dd018b425e472991e52ebbeeeeee",
              "polygon-pos": "0x58001cc1a9e17a20935079ab40b1b8f4fc19efd1",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "etherisc",
            fileName: "DIP",
            symbol: "dip",
            name: "Etherisc DIP",
            marketCapRank: 1437,
            addresses: {
              ethereum: "0xc719d010b63e5bbf2c0551872cd5316ed26acd83",
              xdai: "0x48b1b0d077b4919b65b4e4114806dd803901e1d9",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "etherland",
            fileName: "ELAND",
            symbol: "eland",
            name: "Etherland",
            marketCapRank: 1602,
            addresses: {
              ethereum: "0x33e07f5055173cf8febede8b21b12d1e2b523205",
              "polygon-pos": "0xb0f61c597bbcc29f3f38396b01f9c0f0c2e8bff0",
              "binance-smart-chain":
                "0x708cb02ad77e1b245b1640cee51b3cc844bcaef4",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ethernity-chain",
            fileName: "ERN",
            symbol: "ern",
            name: "Ethernity Chain",
            marketCapRank: 473,
            addresses: {
              ethereum: "0xbbc2ae13b23d715c30720f079fcd9b4a74093505",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ethichub",
            fileName: "ETHIX",
            symbol: "ethix",
            name: "Ethix",
            marketCapRank: 1317,
            addresses: {
              ethereum: "0xfd09911130e6930bf87f2b0554c44f400bd80d3e",
              xdai: "0xec3f3e6d7907acda3a7431abd230196cda3fbb19",
              celo: "0x9995cc8f20db5896943afc8ee0ba463259c931ed",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ethos",
            fileName: "VGX",
            symbol: "vgx",
            name: "Voyager VGX",
            marketCapRank: 957,
            addresses: {
              ethereum: "0x3c4b6e6e1ea3d4863700d7f76b36b7f3d3f13e3d",
              energi: "0xad3eac6a2ef827833880a10592c6e46605e4f9d6",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "etica",
            fileName: "ETI",
            symbol: "eti",
            name: "Etica",
            marketCapRank: 2646,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "euler",
            fileName: "EUL",
            symbol: "eul",
            name: "Euler",
            marketCapRank: 511,
            addresses: {
              ethereum: "0xd9fcd98c322942075a5c3860693e9f4f03aae07b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "euno",
            fileName: "EUNO",
            symbol: "euno",
            name: "EUNO",
            marketCapRank: 2340,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "euroe-stablecoin",
            fileName: "EUROE",
            symbol: "euroe",
            name: "EUROe Stablecoin",
            marketCapRank: 2328,
            addresses: {
              ethereum: "0x820802fa8a99901f52e39acd21177b0be6ee2974",
              avalanche: "0x820802fa8a99901f52e39acd21177b0be6ee2974",
              "optimistic-ethereum":
                "0x820802fa8a99901f52e39acd21177b0be6ee2974",
              "arbitrum-one": "0xcf985aba4647a432e60efceeb8054bbd64244305",
              "polygon-pos": "0x820802fa8a99901f52e39acd21177b0be6ee2974",
              solana: "2VhjJ9WxaGC3EZFwJG9BDUs9KxKCAjQY4vgd1qxgYWVg",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "eve-ai",
            fileName: "EVEAI",
            symbol: "eveai",
            name: "Eve AI",
            marketCapRank: 1834,
            addresses: {
              ethereum: "0x05fe069626543842439ef90d9fa1633640c50cf1",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "everdome",
            fileName: "DOME",
            symbol: "dome",
            name: "Everdome",
            marketCapRank: 1281,
            addresses: {
              "binance-smart-chain":
                "0x475bfaa1848591ae0e6ab69600f48d828f61a80e",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "evergrowcoin",
            fileName: "EGC",
            symbol: "egc",
            name: "EverGrow Coin",
            marketCapRank: 723,
            addresses: {
              "binance-smart-chain":
                "0xc001bbe2b87079294c63ece98bdd0a88d761434e",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "everipedia",
            fileName: "IQ",
            symbol: "iq",
            name: "IQ",
            marketCapRank: 301,
            addresses: {
              ethereum: "0x579cea1889991f68acc35ff5c3dd0621ff29b0c9",
              "polygon-pos": "0xb9638272ad6998708de56bbc0a290a1de534a578",
              "binance-smart-chain":
                "0x0e37d70b51ffa2b98b4d34a5712c5291115464e3",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "everrise",
            fileName: "RISE",
            symbol: "rise",
            name: "EverRise",
            marketCapRank: 1491,
            addresses: {
              "binance-smart-chain":
                "0xc17c30e98541188614df99239cabd40280810ca3",
              avalanche: "0xc17c30e98541188614df99239cabd40280810ca3",
              ethereum: "0xc17c30e98541188614df99239cabd40280810ca3",
              fantom: "0xc17c30e98541188614df99239cabd40280810ca3",
              "polygon-pos": "0xc17c30e98541188614df99239cabd40280810ca3",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "everscale",
            fileName: "EVER",
            symbol: "ever",
            name: "Everscale",
            marketCapRank: 614,
            addresses: {
              ethereum: "0x1ffefd8036409cb6d652bd610de465933b226917",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "everton-fan-token",
            fileName: "EFC",
            symbol: "efc",
            name: "Everton Fan Token",
            marketCapRank: 2e3,
            addresses: { chiliz: "0xabee61f8ff0eadd8d4ee87092792aaf2d9b2ca8e" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "evmos",
            fileName: "EVMOS",
            symbol: "evmos",
            name: "Evmos",
            marketCapRank: 854,
            addresses: {
              evmos: "0xd4949664cd82660aae99bedc034a0dea8a0bd517",
              ethereum: "0x93581991f68dbae1ea105233b67f7fa0d6bdee7b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "exorde",
            fileName: "EXD",
            symbol: "exd",
            name: "Exorde",
            marketCapRank: 2275,
            addresses: {
              ethereum: "0x02de007d412266a2e0fa9287c103474170f06560",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "exosama-network",
            fileName: "SAMA",
            symbol: "sama",
            name: "Moonsama",
            marketCapRank: 1531,
            addresses: {
              ethereum: "0xe04f47ff45576249bc5083dfdf987e03d0550113",
              exosama: "0x8c992cba48189a79204223d106fcb1d797a5f87a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "extra-finance",
            fileName: "EXTRA",
            symbol: "extra",
            name: "Extra Finance",
            marketCapRank: 944,
            addresses: {
              "optimistic-ethereum":
                "0x2dad3a13ef0c6366220f989157009e501e7938f8",
              base: "0x2dad3a13ef0c6366220f989157009e501e7938f8",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "fable-of-the-dragon",
            fileName: "TYRANT",
            symbol: "tyrant",
            name: "Fable Of The Dragon",
            marketCapRank: 2442,
            addresses: {
              ethereum: "0x8ee325ae3e54e83956ef2d5952d3c8bc1fa6ec27",
            },
            variants: ["branded", "background"],
          },
          {
            id: "fabwelt",
            fileName: "WELT",
            symbol: "welt",
            name: "Fabwelt",
            marketCapRank: 1924,
            addresses: {
              "polygon-pos": "0x23e8b6a3f6891254988b84da3738d2bfe5e703b9",
              "binance-smart-chain":
                "0x1785113910847770290f5f840b4c74fc46451201",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "factor",
            fileName: "FCTR",
            symbol: "fctr",
            name: "FactorDAO",
            marketCapRank: 2478,
            addresses: {
              "arbitrum-one": "0x6dd963c510c2d2f09d5eddb48ede45fed063eb36",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "fantom",
            fileName: "FTM",
            symbol: "ftm",
            name: "Fantom",
            marketCapRank: 51,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "faraland",
            fileName: "FARA",
            symbol: "fara",
            name: "FaraLand",
            marketCapRank: 2530,
            addresses: {
              "binance-smart-chain":
                "0xf4ed363144981d3a65f42e7d0dc54ff9eef559a1",
            },
            variants: ["branded", "background"],
          },
          {
            id: "fasttoken",
            fileName: "FTN",
            symbol: "ftn",
            name: "Fasttoken",
            marketCapRank: 178,
            addresses: {
              ethereum: "0xaedf386b755465871ff874e3e37af5976e247064",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "fear",
            fileName: "FEAR",
            symbol: "fear",
            name: "FEAR",
            marketCapRank: 2049,
            addresses: {
              ethereum: "0x88a9a52f944315d5b4e917b9689e65445c401e83",
              "polygon-pos": "0xa2ca40dbe72028d3ac78b5250a8cb8c404e7fb8c",
              "binance-smart-chain":
                "0x9ba6a67a6f3b21705a46b380a1b97373a33da311",
              fantom: "0x14418c22165553251b002b289f8abe4d1ed41d76",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "feathercoin",
            fileName: "FTC",
            symbol: "ftc",
            name: "Feathercoin",
            marketCapRank: 2570,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "fedoracoin",
            fileName: "TIPS",
            symbol: "tips",
            name: "Fedoracoin",
            marketCapRank: 2101,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "feg-bsc",
            fileName: "FEG",
            symbol: "feg",
            name: "FEG BSC",
            marketCapRank: 857,
            addresses: {
              "binance-smart-chain":
                "0xbededdf2ef49e87037c4fb2ca34d1ff3d3992a11",
            },
            variants: ["branded", "background"],
          },
          {
            id: "fei-usd",
            fileName: "FEI",
            symbol: "fei",
            name: "Fei USD",
            marketCapRank: 1319,
            addresses: {
              ethereum: "0x956f47f50a910163d8bf957cf5846d573e7f87ca",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "feisty-doge-nft",
            fileName: "NFD",
            symbol: "nfd",
            name: "Feisty Doge NFT",
            marketCapRank: 1320,
            addresses: {
              ethereum: "0xdfdb7f72c1f195c5951a234e8db9806eb0635346",
            },
            variants: ["branded", "background"],
          },
          {
            id: "ferro",
            fileName: "FER",
            symbol: "fer",
            name: "Ferro",
            marketCapRank: 1464,
            addresses: {
              cronos: "0x39bc1e38c842c60775ce37566d03b41a7a66c782",
              ethereum: "0x2f32b39023da7d6a6486a85d12b346eb9c2a0d19",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ferrum-network",
            fileName: "FRM",
            symbol: "frm",
            name: "Ferrum Network",
            marketCapRank: 1059,
            addresses: {
              ethereum: "0xe5caef4af8780e59df925470b050fb23c43ca68c",
              energi: "0xee0837e18f64ec6cf3bece2da75a1e5f679a6d84",
              avalanche: "0xe5caef4af8780e59df925470b050fb23c43ca68c",
              "arbitrum-one": "0x9f6abbf0ba6b5bfa27f4deb6597cc6ec20573fda",
              "polygon-pos": "0xd99bafe5031cc8b345cb2e8c80135991f12d7130",
              "binance-smart-chain":
                "0xa719b8ab7ea7af0ddb4358719a34631bb79d15dc",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "fetch-ai",
            fileName: "FET",
            symbol: "fet",
            name: "Fetch.ai",
            marketCapRank: 48,
            addresses: {
              ethereum: "0xaea46a60368a7bd060eec7df8cba43b7ef41ad85",
              "binance-smart-chain":
                "0x031b41e504677879370e9dbcf937283a8691fa7f",
              osmosis:
                "ibc/5D1F516200EE8C6B2354102143B78A2DEDA25EDE771AC0F8DC3C1837C8FD4447",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "filecoin",
            fileName: "FIL",
            symbol: "fil",
            name: "Filecoin",
            marketCapRank: 26,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "findora",
            fileName: "FRA",
            symbol: "fra",
            name: "Fractal",
            marketCapRank: 1334,
            addresses: {
              findora: "0x0000000000000000000000000000000000001000",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "fio-protocol",
            fileName: "FIO",
            symbol: "fio",
            name: "FIO Protocol",
            marketCapRank: 907,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "firestarter",
            fileName: "FLAME",
            symbol: "flame",
            name: "FireStarter",
            marketCapRank: 1563,
            addresses: {
              "polygon-pos": "0x22e3f02f86bc8ea0d73718a2ae8851854e62adc5",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "firmachain",
            fileName: "FCT",
            symbol: "fct",
            name: "Firmachain",
            marketCapRank: 659,
            addresses: {
              ethereum: "0xe1bad922f84b198a08292fb600319300ae32471b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "first-digital-usd",
            fileName: "FDUSD",
            symbol: "fdusd",
            name: "First Digital USD",
            marketCapRank: 52,
            addresses: {
              ethereum: "0xc5f0f7b66764f6ec8c8dff7ba683102295e16409",
              "binance-smart-chain":
                "0xc5f0f7b66764f6ec8c8dff7ba683102295e16409",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "flamingo-finance",
            fileName: "FLM",
            symbol: "flm",
            name: "Flamingo Finance",
            marketCapRank: 611,
            addresses: {},
            variants: ["branded", "background"],
          },
          {
            id: "flare-networks",
            fileName: "FLR",
            symbol: "flr",
            name: "Flare",
            marketCapRank: 94,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "flatqube",
            fileName: "QUBE",
            symbol: "qube",
            name: "FlatQube",
            marketCapRank: 2263,
            addresses: {
              everscale:
                "0:9f20666ce123602fd7a995508aeaa0ece4f92133503c0dfbd609b3239f3901e2",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "flex-coin",
            fileName: "FLEX",
            symbol: "flex",
            name: "FLEX Coin",
            marketCapRank: 1137,
            addresses: {
              ethereum: "0xfcf8eda095e37a41e002e266daad7efc1579bc0a",
              smartbch: "0x98dd7ec28fb43b3c4c770ae532417015fa939dd3",
            },
            variants: ["branded", "background"],
          },
          {
            id: "flits",
            fileName: "FLS",
            symbol: "fls",
            name: "Flits",
            marketCapRank: 2886,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "floordao",
            fileName: "FLOOR",
            symbol: "floor",
            name: "FloorDAO (Old)",
            marketCapRank: 1906,
            addresses: {
              ethereum: "0xf59257e961883636290411c11ec5ae622d19455e",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "flow",
            fileName: "FLOW",
            symbol: "flow",
            name: "Flow",
            marketCapRank: 64,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "fluid-2",
            fileName: "FLUID",
            symbol: "fluid",
            name: "Fluid",
            marketCapRank: 2281,
            addresses: {
              ethereum: "0x4e47951508fd4a4126f8ff9cf5e6fa3b7cc8e073",
              "arbitrum-one": "0x4e47951508fd4a4126f8ff9cf5e6fa3b7cc8e073",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "flux-token",
            fileName: "FLX",
            symbol: "flx",
            name: "SEDA Protocol",
            marketCapRank: 799,
            addresses: {
              ethereum: "0x3ea8ea4237344c9931214796d9417af1a1180770",
              aurora: "0xea62791aa682d455614eaa2a12ba3d9a2fd197af",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "foam-protocol",
            fileName: "FOAM",
            symbol: "foam",
            name: "FOAM",
            marketCapRank: 1435,
            addresses: {
              ethereum: "0x4946fcea7c692606e8908002e55a582af44ac121",
            },
            variants: ["branded", "background"],
          },
          {
            id: "foom",
            fileName: "FOOM",
            symbol: "foom",
            name: "Foom",
            marketCapRank: 1838,
            addresses: {
              ethereum: "0xd0d56273290d339aaf1417d9bfa1bb8cfe8a0933",
            },
            variants: ["branded", "background"],
          },
          {
            id: "force-protocol",
            fileName: "FOR",
            symbol: "for",
            name: "ForTube",
            marketCapRank: 1152,
            addresses: {
              ethereum: "0x1fcdce58959f536621d76f5b7ffb955baa5a672f",
              "binance-smart-chain":
                "0x658a109c5900bc6d2357c87549b651670e5b0539",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "fore-protocol",
            fileName: "FORE",
            symbol: "fore",
            name: "FORE Protocol",
            marketCapRank: 1924,
            addresses: {
              "arbitrum-one": "0xcbe94d75ec713b7ead84f55620dc3174beeb1cfe",
              ethereum: "0xb2ee0adbe0ef1281025d0676511bb1df14600f4d",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "forta",
            fileName: "FORT",
            symbol: "fort",
            name: "Forta",
            marketCapRank: 574,
            addresses: {
              ethereum: "0x41545f8b9472d758bb669ed8eaeeecd7a9c4ec29",
              "polygon-pos": "0x9ff62d1fc52a907b6dcba8077c2ddca6e6a9d3e1",
            },
            variants: ["mono"],
          },
          {
            id: "frax",
            fileName: "FRAX",
            symbol: "frax",
            name: "Frax",
            marketCapRank: 156,
            addresses: {
              ethereum: "0x853d955acef822db058eb8505911ed77f175b99e",
              moonbeam: "0x322e86852e492a7ee17f28a78c663da38fb33bfb",
              avalanche: "0xd24c2ad096400b6fbcd2ad8b24e7acbc21a1da64",
              "polygon-zkevm": "0xff8544fed5379d9ffa8d47a74ce6b91e632ac44d",
              "optimistic-ethereum":
                "0x2e3d870790dc77a83dd1d18184acc7439a53f475",
              "near-protocol":
                "853d955acef822db058eb8505911ed77f175b99e.factory.bridge.near",
              "arbitrum-one": "0x17fc002b466eec40dae837fc4be5c67993ddbd6f",
              "binance-smart-chain":
                "0x90c97f71e18723b0cf0dfa30ee176ab653e89f40",
              moonriver: "0x1a93b23281cc1cde4c4741353f3064709a16197d",
              fantom: "0xdc301622e621166bd8e82f2ca0a26c13ad0be355",
              "harmony-shard-0": "0xfa7191d292d5633f702b0bd7e3e3bccc0e633200",
              "polygon-pos": "0x45c32fa6df82ead1e2ef74d17b76547eddfaff89",
              evmos: "0xe03494d0033687543a80c9b1ca7d6237f2ea8bd8",
              solana: "FR87nWEUxVgerFGhZM8Y4AggKGLnaXswr1Pd8wZ4kZcp",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "frax-price-index-share",
            fileName: "FPIS",
            symbol: "fpis",
            name: "Frax Price Index Share",
            marketCapRank: 919,
            addresses: {
              ethereum: "0xc2544a32872a91f4a553b404c6950e89de901fdb",
              "arbitrum-one": "0x3405e88af759992937b84e58f2fe691ef0eea320",
              "binance-smart-chain":
                "0xd1738eb733a636d1b8665f48bc8a24da889c2562",
            },
            variants: ["mono"],
          },
          {
            id: "frax-share",
            fileName: "FXS",
            symbol: "fxs",
            name: "Frax Share",
            marketCapRank: 165,
            addresses: {
              ethereum: "0x3432b6a60d23ca0dfca7761b7ab56459d9c964d0",
              fantom: "0x7d016eec9c25232b01f23ef992d98ca97fc2af5a",
              "polygon-zkevm": "0x6b856a14cea1d7dcfaf80fa6936c0b75972ccace",
              "arbitrum-one": "0x9d2f299715d94d8a7e6f5eaa8e654e8c74a988a7",
              "polygon-pos": "0x1a3acf6d19267e2d3e7f898f42803e90c9219062",
              avalanche: "0x214db107654ff987ad859f34125307783fc8e387",
              "binance-smart-chain":
                "0xe48a3d7d0bc88d552f730b62c006bc925eadb9ee",
              moonriver: "0x6f1d1ee50846fcbc3de91723e61cb68cfa6d0e98",
              "harmony-shard-0": "0x0767d8e1b05efa8d6a301a65b324b6b66a1cc14c",
              evmos: "0xd8176865dd0d672c6ab4a427572f80a72b4b4a9c",
              solana: "6LX8BhMQ4Sy2otmAWj7Y5sKd9YTVVUgfMsBzT6B9W7ct",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "freedom-coin",
            fileName: "FREE",
            symbol: "free",
            name: "FREEdom coin",
            marketCapRank: 2231,
            addresses: {
              ethereum: "0x2f141ce366a2462f02cea3d12cf93e4dca49e4fd",
              "binance-smart-chain":
                "0x12e34cdf6a031a10fe241864c32fb03a4fdad739",
            },
            variants: ["branded", "background"],
          },
          {
            id: "frencoin-2",
            fileName: "FREN",
            symbol: "fren",
            name: "Frencoin",
            marketCapRank: 2541,
            addresses: {},
            variants: ["branded", "background"],
          },
          {
            id: "friends-with-benefits-pro",
            fileName: "FWB",
            symbol: "fwb",
            name: "Friends With Benefits Pro",
            marketCapRank: 1896,
            addresses: {
              ethereum: "0x35bd01fc9d6d5d81ca9e055db88dc49aa2c699a8",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "fringe-finance",
            fileName: "FRIN",
            symbol: "frin",
            name: "Fringe Finance",
            marketCapRank: 2236,
            addresses: {
              ethereum: "0xc9fe6e1c76210be83dc1b5b20ec7fd010b0b1d15",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "frontier-token",
            fileName: "FRONT",
            symbol: "front",
            name: "Frontier",
            marketCapRank: 487,
            addresses: {
              ethereum: "0xf8c3527cc04340b208c854e985240c02f7b7793f",
              "harmony-shard-0": "0x1ee5839950fd7a227f91cf679b1931dd6f5798b3",
              "polygon-pos": "0xa3ed22eee92a3872709823a6970069e12a4540eb",
              "binance-smart-chain":
                "0x928e55dab735aa8260af3cedada18b5f70c72f1b",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "fsn",
            fileName: "FSN",
            symbol: "fsn",
            name: "FUSION",
            marketCapRank: 1293,
            addresses: {
              ethereum: "0x979aca85ba37c675e78322ed5d97fa980b9bdf00",
              "binance-smart-chain":
                "0xfa4fa764f15d0f6e20aaec8e0d696870e5b77c6e",
              fantom: "0x50eb82cc284e3d35936827023b048106aaecfc5f",
              "huobi-token": "0xa790b07796abed3cdaf81701b4535014bf5e1a65",
              "fusion-network":
                "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
              "polygon-pos": "0x2bf9b864cdc97b08b6d79ad4663e71b8ab65c45c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "funfair",
            fileName: "FUN",
            symbol: "fun",
            name: "FUNToken",
            marketCapRank: 622,
            addresses: {
              ethereum: "0x419d0d8bdd9af5e606ae2232ed285aff190e711b",
              energi: "0x04cd06cf05b816f09395375f0143584b4a95ea9f",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "fuse-network-token",
            fileName: "FUSE",
            symbol: "fuse",
            name: "Fuse",
            marketCapRank: 1181,
            addresses: {
              ethereum: "0x970b9bb2c0444f5e81e9d0efb84c8ccdcdcaf84d",
              "optimistic-ethereum":
                "0xe453d6649643f1f460c371dc3d1da98f7922fe51",
              xdai: "0xd589f00fa2eb83367f732ab3cda92ee0940389cf",
              "arbitrum-one": "0x6b021b3f68491974be6d4009fee61a4e3c708fd6",
              "binance-smart-chain":
                "0x5857c96dae9cf8511b08cb07f85753c472d36ea3",
              "polygon-pos": "0x6b021b3f68491974be6d4009fee61a4e3c708fd6",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "futurecoin",
            fileName: "FUTURE",
            symbol: "future",
            name: "FutureCoin",
            marketCapRank: 1982,
            addresses: {
              "binance-smart-chain":
                "0x9fbff386a9405b4c98329824418ec02b5c20976b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "fx-coin",
            fileName: "FX",
            symbol: "fx",
            name: "Function X",
            marketCapRank: 428,
            addresses: {
              ethereum: "0x8c15ef5b4b21951d50e53e4fbda8298ffad25057",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "g-token",
            fileName: "G",
            symbol: "g",
            name: "Gravity",
            marketCapRank: null,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "gains",
            fileName: "GAINS",
            symbol: "gains",
            name: "Gains",
            marketCapRank: 1331,
            addresses: {
              ethereum: "0x056c1d42fb1326f57da7f19ebb7dda4673f1ff55",
              "binance-smart-chain":
                "0xf1c3e69494e27bf067c4076a6f244a46446719d6",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "gains-network",
            fileName: "GNS",
            symbol: "gns",
            name: "Gains Network",
            marketCapRank: 385,
            addresses: {
              "polygon-pos": "0xe5417af564e4bfda1c483642db72007871397896",
              "arbitrum-one": "0x18c11fd286c5ec11c3b683caa813b77f5163a122",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "gala",
            fileName: "GALA",
            symbol: "gala",
            name: "GALA",
            marketCapRank: 56,
            addresses: {
              ethereum: "0xd1d2eb1b1e90b638588728b4130137d262c87cae",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "gala-music",
            fileName: "MUSIC",
            symbol: "music",
            name: "Gala Music",
            marketCapRank: 1282,
            addresses: {
              ethereum: "0xd8c0b13b551718b808fc97ead59499d5ef862775",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "galaxia",
            fileName: "GXA",
            symbol: "gxa",
            name: "Galaxia",
            marketCapRank: 1749,
            addresses: {
              "klay-token": "0xa80e96cceb1419f9bd9f1c67f7978f51b534a11b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "galaxy-fight-club",
            fileName: "GCOIN",
            symbol: "gcoin",
            name: "Galaxy Fight Club",
            marketCapRank: 2615,
            addresses: {
              "polygon-pos": "0x071ac29d569a47ebffb9e57517f855cb577dcc4c",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "galeon",
            fileName: "GALEON",
            symbol: "galeon",
            name: "Galeon",
            marketCapRank: 1358,
            addresses: {
              "binance-smart-chain":
                "0x1d0ac23f03870f768ca005c84cbb6fb82aa884fd",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "gameai",
            fileName: "GAT",
            symbol: "gat",
            name: "GameAI",
            marketCapRank: 1361,
            addresses: {
              "binance-smart-chain":
                "0xdacd068618fcdb358f8951eca2af3e2d7e7555c6",
            },
            variants: ["branded", "background"],
          },
          {
            id: "gamee",
            fileName: "GMEE",
            symbol: "gmee",
            name: "GAMEE",
            marketCapRank: 1423,
            addresses: {
              ethereum: "0xd9016a907dc0ecfa3ca425ab20b6b785b42f2373",
              "the-open-network":
                "EQCqnhZndBGbwjPpV8K_8WOK58ZkQPXlS_bshau9DKWnAF-p",
              "binance-smart-chain":
                "0x84e9a6f9d240fdd33801f7135908bfa16866939a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "gamefi",
            fileName: "GAFI",
            symbol: "gafi",
            name: "GameFi.org",
            marketCapRank: 550,
            addresses: {
              "binance-smart-chain":
                "0x89af13a10b32f1b2f8d1588f93027f69b6f4e27e",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "gamercoin",
            fileName: "GHX",
            symbol: "ghx",
            name: "GamerCoin",
            marketCapRank: 454,
            addresses: {
              ethereum: "0x728f30fa2f100742c7949d1961804fa8e0b1387d",
              "binance-smart-chain":
                "0xbd7b8e4de08d9b01938f7ff2058f110ee1e0e8d4",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "games-for-a-living",
            fileName: "GFAL",
            symbol: "gfal",
            name: "Games for a Living",
            marketCapRank: 751,
            addresses: {
              "binance-smart-chain":
                "0x47c454ca6be2f6def6f32b638c80f91c9c3c5949",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "gamespad",
            fileName: "GMPD",
            symbol: "gmpd",
            name: "GamesPad",
            marketCapRank: 2552,
            addresses: {
              "binance-smart-chain":
                "0x9720ca160bbd4e7f3dd4bb3f8bd4227ca0342e63",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "gamestarter",
            fileName: "GAME",
            symbol: "game",
            name: "Gamestarter",
            marketCapRank: 1611,
            addresses: {
              ethereum: "0xd567b5f02b9073ad3a982a099a23bf019ff11d1c",
              "binance-smart-chain":
                "0x66109633715d2110dda791e64a7b2afadb517abb",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "gameswap-org",
            fileName: "GSWAP",
            symbol: "gswap",
            name: "Gameswap",
            marketCapRank: 1667,
            addresses: {
              ethereum: "0xaac41ec512808d64625576eddd580e7ea40ef8b2",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "gameswift",
            fileName: "GSWIFT",
            symbol: "gswift",
            name: "GameSwift",
            marketCapRank: 901,
            addresses: {
              "arbitrum-one": "0x580e933d90091b9ce380740e3a4a39c67eb85b4c",
              ethereum: "0x580e933d90091b9ce380740e3a4a39c67eb85b4c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "gamezone",
            fileName: "GZONE",
            symbol: "gzone",
            name: "GameZone",
            marketCapRank: 1461,
            addresses: {
              "binance-smart-chain":
                "0xb6adb74efb5801160ff749b1985fd3bd5000e938",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "gami-world",
            fileName: "GAMI",
            symbol: "gami",
            name: "GAMI World",
            marketCapRank: 1628,
            addresses: {
              "binance-smart-chain":
                "0x1236a887ef31b4d32e1f0a2b5e4531f52cec7e75",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "gamium",
            fileName: "GMM",
            symbol: "gmm",
            name: "Gamium",
            marketCapRank: 889,
            addresses: {
              "binance-smart-chain":
                "0x5b6bf0c7f989de824677cfbd507d9635965e9cd3",
              ethereum: "0x4b19c70da4c6fa4baa0660825e889d2f7eabc279",
            },
            variants: ["mono"],
          },
          {
            id: "gamma-strategies",
            fileName: "GAMMA",
            symbol: "gamma",
            name: "Gamma Strategies",
            marketCapRank: 1357,
            addresses: {
              ethereum: "0x6bea7cfef803d1e3d5f7c0103f7ded065644e197",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "garden-2",
            fileName: "SEED",
            symbol: "seed",
            name: "Garden",
            marketCapRank: 2138,
            addresses: {
              ethereum: "0x5eed99d066a8caf10f3e4327c1b3d8b673485eed",
              "arbitrum-one": "0x86f65121804d2cdbef79f9f072d4e0c2eebabc08",
            },
            variants: ["branded", "background"],
          },
          {
            id: "gari-network",
            fileName: "GARI",
            symbol: "gari",
            name: "Gari Network",
            marketCapRank: 1268,
            addresses: {
              solana: "CKaKtYvz6dKPyMvYq9Rh3UBrnNqYZAyd7iF4hJtjUvks",
            },
            variants: ["branded", "background"],
          },
          {
            id: "gas",
            fileName: "GAS",
            symbol: "gas",
            name: "Gas",
            marketCapRank: 208,
            addresses: {
              neo: "602c79718b16e442de58778e148d0b1084e3b2dffd5de6b7b16cee7969282de7",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "gatechain-token",
            fileName: "GT",
            symbol: "gt",
            name: "Gate",
            marketCapRank: 86,
            addresses: {
              ethereum: "0xe66747a101bff2dba3697199dcce5b743b454759",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "geeq",
            fileName: "GEEQ",
            symbol: "geeq",
            name: "GEEQ",
            marketCapRank: 1452,
            addresses: {
              ethereum: "0x6b9f031d718dded0d681c20cb754f97b3bb81b78",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "gelato",
            fileName: "GEL",
            symbol: "gel",
            name: "Gelato",
            marketCapRank: 436,
            addresses: {
              ethereum: "0x15b7c0c907e4c6b9adaaaabc300c08991d6cea05",
              fantom: "0x15b7c0c907e4c6b9adaaaabc300c08991d6cea05",
              "polygon-pos": "0x15b7c0c907e4c6b9adaaaabc300c08991d6cea05",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "gemhub",
            fileName: "GHUB",
            symbol: "ghub",
            name: "GemHUB",
            marketCapRank: 1497,
            addresses: {
              "klay-token": "0x4836cc1f355bb2a61c210eaa0cd3f729160cd95e",
            },
            variants: ["branded", "background"],
          },
          {
            id: "gemini-dollar",
            fileName: "GUSD",
            symbol: "gusd",
            name: "Gemini Dollar",
            marketCapRank: 454,
            addresses: {
              ethereum: "0x056fd409e1d7a124bd7017459dfea2f387b6d5cd",
              "near-protocol":
                "056fd409e1d7a124bd7017459dfea2f387b6d5cd.factory.bridge.near",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "gemlink",
            fileName: "GLINK",
            symbol: "glink",
            name: "GemLink",
            marketCapRank: 2423,
            addresses: {
              "binance-smart-chain":
                "0x0ee7292bd28f4a490f849fb30c28cabab9440f9e",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "generaitiv",
            fileName: "GAI",
            symbol: "gai",
            name: "Generaitiv",
            marketCapRank: 2168,
            addresses: {
              ethereum: "0x0d8ca4b20b115d4da5c13dc45dd582a5de3e78bf",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "genesysgo-shadow",
            fileName: "SHDW",
            symbol: "shdw",
            name: "Shadow Token",
            marketCapRank: 264,
            addresses: {
              solana: "SHDWyBxihqiCj6YekG2GUr7wqKLeLAMK1gHZck9pL6y",
            },
            variants: ["branded", "background"],
          },
          {
            id: "genius",
            fileName: "GENI",
            symbol: "geni",
            name: "Genius",
            marketCapRank: 2434,
            addresses: {
              ethereum: "0x444444444444c1a66f394025ac839a535246fcc8",
              avalanche: "0x444444444444c1a66f394025ac839a535246fcc8",
              "polygon-pos": "0x444444444444c1a66f394025ac839a535246fcc8",
              "binance-smart-chain":
                "0x444444444444c1a66f394025ac839a535246fcc8",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "gensokishis-metaverse",
            fileName: "MV",
            symbol: "mv",
            name: "GensoKishi Metaverse",
            marketCapRank: 1482,
            addresses: {
              "polygon-pos": "0xa3c322ad15218fbfaed26ba7f616249f7705d945",
              ethereum: "0xae788f80f2756a86aa2f410c651f2af83639b95b",
            },
            variants: ["branded", "background"],
          },
          {
            id: "geodnet",
            fileName: "GEOD",
            symbol: "geod",
            name: "Geodnet",
            marketCapRank: 1159,
            addresses: {
              "polygon-pos": "0xac0f66379a6d7801d7726d5a943356a172549adb",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "geojam",
            fileName: "JAM",
            symbol: "jam",
            name: "Geojam",
            marketCapRank: 1380,
            addresses: {
              ethereum: "0x23894dc9da6c94ecb439911caf7d337746575a72",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "get-token",
            fileName: "GET",
            symbol: "get",
            name: "GET Protocol",
            marketCapRank: 696,
            addresses: {
              ethereum: "0x8a854288a5976036a725879164ca3e91d30c6a1b",
              "polygon-pos": "0xdb725f82818de83e99f1dac22a9b5b51d3d04dd4",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "getkicks",
            fileName: "KICKS",
            symbol: "kicks",
            name: "GetKicks",
            marketCapRank: 2378,
            addresses: {
              "binance-smart-chain":
                "0xfeb4e9b932ef708c498cc997abe51d0ee39300cf",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "gho",
            fileName: "GHO",
            symbol: "gho",
            name: "GHO",
            marketCapRank: 857,
            addresses: {
              ethereum: "0x40d16fc0246ad3160ccc09b8d0d3a2cd28ae6c2f",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ghost-by-mcafee",
            fileName: "GHOST",
            symbol: "ghost",
            name: "Ghost",
            marketCapRank: 2184,
            addresses: {
              "polygon-pos": "0xb5e0cfe1b4db501ac003b740665bf43192cc7853",
            },
            variants: ["mono"],
          },
          {
            id: "gifto",
            fileName: "GFT",
            symbol: "gft",
            name: "Gifto",
            marketCapRank: 1009,
            addresses: {
              "binance-smart-chain":
                "0x72ff5742319ef07061836f5c924ac6d72c919080",
            },
            variants: ["branded", "background"],
          },
          {
            id: "gitcoin",
            fileName: "GTC",
            symbol: "gtc",
            name: "Gitcoin",
            marketCapRank: 451,
            addresses: {
              ethereum: "0xde30da39c46104798bb5aa3fe8b9e0e1f348163f",
              "near-protocol":
                "de30da39c46104798bb5aa3fe8b9e0e1f348163f.factory.bridge.near",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "giveth",
            fileName: "GIV",
            symbol: "giv",
            name: "Giveth",
            marketCapRank: 2140,
            addresses: {
              ethereum: "0x900db999074d9277c5da2a43f252d74366230da0",
              xdai: "0x4f4f9b8d5b4d0dc10506e5551b0513b61fd59e75",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "gleec-coin",
            fileName: "GLEEC",
            symbol: "gleec",
            name: "Gleec Coin",
            marketCapRank: 2201,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "global-coin-research",
            fileName: "GCR",
            symbol: "gcr",
            name: "Global Coin Research",
            marketCapRank: 2454,
            addresses: {
              ethereum: "0x6307b25a665efc992ec1c1bc403c38f3ddd7c661",
              "polygon-pos": "0xa69d14d6369e414a32a5c7e729b7afbafd285965",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "global-digital-cluster-co",
            fileName: "GDCC",
            symbol: "gdcc",
            name: "Global Digital Cluster Coin",
            marketCapRank: 2163,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "globiance-exchange",
            fileName: "GBEX",
            symbol: "gbex",
            name: "Globiance Exchange",
            marketCapRank: 1222,
            addresses: {
              "xdc-network": "xdc34514748f86a8da01ef082306b6d6e738f777f5a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "gmx",
            fileName: "GMX",
            symbol: "gmx",
            name: "GMX",
            marketCapRank: 212,
            addresses: {
              "arbitrum-one": "0xfc5a1a6eb076a2c7ad06ed22c90d7e710e35ad0a",
              avalanche: "0x62edc0692bd897d2295872a9ffcac5425011c661",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "gnosis",
            fileName: "GNO",
            symbol: "gno",
            name: "Gnosis",
            marketCapRank: 119,
            addresses: {
              ethereum: "0x6810e776880c02933d47db1b9fc05908e5386b96",
              energi: "0xf452bff8e958c6f335f06fc3aac427ee195366fe",
              "arbitrum-one": "0xa0b862f60edef4452f25b4160f177db44deb6cf1",
              xdai: "0x9c58bacc331c9aa871afd802db6379a98e80cedb",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "gny",
            fileName: "GNY",
            symbol: "gny",
            name: "GNY",
            marketCapRank: 1826,
            addresses: {
              ethereum: "0xb1f871ae9462f1b2c6826e88a7827e76f86751d4",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "gochain",
            fileName: "GO",
            symbol: "go",
            name: "GoChain",
            marketCapRank: 1557,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "gods-unchained",
            fileName: "GODS",
            symbol: "gods",
            name: "Gods Unchained",
            marketCapRank: 519,
            addresses: {
              ethereum: "0xccc8cb5229b0ac8069c51fd58367fd1e622afd97",
            },
            variants: ["branded", "background"],
          },
          {
            id: "gogopool",
            fileName: "GGP",
            symbol: "ggp",
            name: "GoGoPool",
            marketCapRank: 894,
            addresses: {
              avalanche: "0x69260b9483f9871ca57f81a90d91e2f96c2cd11d",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "goldcoin",
            fileName: "GLC",
            symbol: "glc",
            name: "Goldcoin",
            marketCapRank: 1467,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "golden-inu-token",
            fileName: "GOLDEN",
            symbol: "golden",
            name: "Golden Inu",
            marketCapRank: 2364,
            addresses: {
              ethereum: "0xd87996ff3d06858bfc20989aef50cc5fcd4d84ca",
            },
            variants: ["branded", "background"],
          },
          {
            id: "golem",
            fileName: "GLM",
            symbol: "glm",
            name: "Golem",
            marketCapRank: 165,
            addresses: {
              ethereum: "0x7dd9c5cba05e151c895fde1cf355c9a1d5da6429",
              energi: "0xf3ff3bf1d1afcbebd98a304482c4099dc953e9a8",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "good-games-guild",
            fileName: "GGG",
            symbol: "ggg",
            name: "Good Games Guild",
            marketCapRank: 1828,
            addresses: {
              "binance-smart-chain":
                "0xd8047afecb86e44eff3add991b9f063ed4ca716b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "good-person-coin",
            fileName: "GPCX",
            symbol: "gpcx",
            name: "Good Person Coin",
            marketCapRank: 1785,
            addresses: {},
            variants: ["branded", "background"],
          },
          {
            id: "goons-of-balatroon",
            fileName: "GOB",
            symbol: "gob",
            name: "Goons of Balatroon",
            marketCapRank: 2289,
            addresses: {
              "arbitrum-one": "0xa2f9ecf83a48b86265ff5fd36cdbaaa1f349916c",
              beam: "0x7fb5a9921cf98362aa425e42f66bf3484c2c2b5f",
              ethereum: "0x830eb1204380e9c44434db8700257025358707c6",
            },
            variants: ["branded", "background"],
          },
          {
            id: "goosefx",
            fileName: "GOFX",
            symbol: "gofx",
            name: "GooseFX",
            marketCapRank: 1550,
            addresses: {
              solana: "GFX1ZjR2P15tmrSwow6FjyDYcEkoFb4p4gJCpLBjaxHD",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "goracle-network",
            fileName: "GORA",
            symbol: "gora",
            name: "Gora",
            marketCapRank: 2130,
            addresses: { algorand: "1138500612" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "gorilla",
            fileName: "GORILLA",
            symbol: "gorilla",
            name: "Gorilla",
            marketCapRank: 1879,
            addresses: {
              ethereum: "0x33c04bed4533e31f2afb8ac4a61a48eda38c4fa0",
            },
            variants: ["branded", "background"],
          },
          {
            id: "governance-zil",
            fileName: "GZIL",
            symbol: "gzil",
            name: "governance ZIL",
            marketCapRank: 1970,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "govi",
            fileName: "GOVI",
            symbol: "govi",
            name: "CVI",
            marketCapRank: 1850,
            addresses: {
              ethereum: "0xeeaa40b28a2d1b0b08f6f97bb1dd4b75316c6107",
              zksync: "0xd63ef5e9c628c8a0e8984cdfb7444aee44b09044",
              "arbitrum-one": "0x07e49d5de43dda6162fa28d24d5935c151875283",
              "polygon-pos": "0x43df9c0a1156c96cea98737b511ac89d0e2a1f46",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "goztepe-s-k-fan-token",
            fileName: "GOZ",
            symbol: "goz",
            name: "Göztepe S.K. Fan Token",
            marketCapRank: 2226,
            addresses: { chiliz: "0x0e469d1c78421c7952e4d9626800dad22f45361d" },
            variants: ["branded", "background"],
          },
          {
            id: "grai",
            fileName: "GRAI",
            symbol: "grai",
            name: "Grai",
            marketCapRank: 1747,
            addresses: {
              ethereum: "0x15f74458ae0bfdaa1a96ca1aa779d715cc1eefe4",
              "arbitrum-one": "0x894134a25a5fac1c2c26f1d8fbf05111a3cb9487",
              zksync: "0x5fc44e95eaa48f9eb84be17bd3ac66b6a82af709",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "granary",
            fileName: "GRAIN",
            symbol: "grain",
            name: "Granary",
            marketCapRank: 2118,
            addresses: {
              ethereum: "0xf88baf18fab7e330fa0c4f83949e23f52fececce",
              fantom: "0x02838746d9e1413e07ee064fcbada57055417f21",
              avalanche: "0x9df4ac62f9e435dbcd85e06c990a7f0ea32739a9",
              "optimistic-ethereum":
                "0xfd389dc9533717239856190f42475d3f263a270d",
              "arbitrum-one": "0x80bb30d62a16e1f2084deae84dc293531c3ac3a1",
              "binance-smart-chain":
                "0x8f87a7d376821c7b2658a005aaf190ec778bf37a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "graphlinq-protocol",
            fileName: "GLQ",
            symbol: "glq",
            name: "GraphLinq Protocol",
            marketCapRank: 787,
            addresses: {
              ethereum: "0x9f9c8ec3534c3ce16f928381372bfbfbfb9f4d24",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "graviton",
            fileName: "GRAV",
            symbol: "grav",
            name: "Graviton",
            marketCapRank: 2241,
            addresses: {
              "gravity-bridge": "ugraviton",
              osmosis:
                "ibc/E97634A40119F1898989C2A23224ED83FDD0A57EA46B3A094E287288D1672B44",
              archway:
                "ibc/31D711D31CD5D83D98E76B1486EEDA1A38CD1F7D6FCBD03521FE51323115AECA",
              kujira:
                "kujira1jlyyyg0m649v75nqzm40jfdmjar9sf7rh3qnuz8yqa4345s9tqvqhxwxjq",
              crescent:
                "ibc/C950356239AD2A205DE09FDF066B1F9FF19A7CA7145EA48A5B19B76EE47E52F7",
              evmos: "0x80b5a32e4f032b2a058b4f29ec95eefeeb87adcd",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "gridcoin-research",
            fileName: "GRC",
            symbol: "grc",
            name: "Gridcoin",
            marketCapRank: 1980,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "grin",
            fileName: "GRIN",
            symbol: "grin",
            name: "Grin",
            marketCapRank: 1487,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "grizzly-honey",
            fileName: "GHNY",
            symbol: "ghny",
            name: "Grizzly Honey",
            marketCapRank: 1998,
            addresses: {
              "binance-smart-chain":
                "0xa045e37a0d1dd3a45fefb8803d22457abc0a728a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "groestlcoin",
            fileName: "GRS",
            symbol: "grs",
            name: "Groestlcoin",
            marketCapRank: 669,
            addresses: {},
            variants: ["mono"],
          },
          {
            id: "grove",
            fileName: "GRV",
            symbol: "grv",
            name: "GroveCoin",
            marketCapRank: 1806,
            addresses: {
              "binance-smart-chain":
                "0xf33893de6eb6ae9a67442e066ae9abd228f5290c",
              ethereum: "0xf33893de6eb6ae9a67442e066ae9abd228f5290c",
            },
            variants: ["branded", "background"],
          },
          {
            id: "gsenetwork",
            fileName: "GSE",
            symbol: "gse",
            name: "GSENetwork",
            marketCapRank: 2624,
            addresses: {
              ethereum: "0xe530441f4f73bdb6dc2fa5af7c3fc5fd551ec838",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "guild-of-guardians",
            fileName: "GOG",
            symbol: "gog",
            name: "Guild of Guardians",
            marketCapRank: 566,
            addresses: {
              ethereum: "0x9ab7bb7fdc60f4357ecfef43986818a2a3569c62",
            },
            variants: ["mono"],
          },
          {
            id: "gulfcoin-2",
            fileName: "GULF",
            symbol: "gulf",
            name: "GulfCoin",
            marketCapRank: 1760,
            addresses: {
              "binance-smart-chain":
                "0x7597bdccf10e41bccc374a6a0104cf430c420884",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "gunstar-metaverse",
            fileName: "GSTS",
            symbol: "gsts",
            name: "Gunstar Metaverse",
            marketCapRank: 2486,
            addresses: {
              "binance-smart-chain":
                "0x7edc0ec89f987ecd85617b891c44fe462a325869",
            },
            variants: ["branded", "background"],
          },
          {
            id: "gxchain",
            fileName: "GXC",
            symbol: "gxc",
            name: "GXChain",
            marketCapRank: 756,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "gyen",
            fileName: "GYEN",
            symbol: "gyen",
            name: "GYEN",
            marketCapRank: 1312,
            addresses: {
              ethereum: "0xc08512927d12348f6620a698105e1baac6ecd911",
              stellar:
                "GYEN:GDF6VOEGRWLOZ64PQQGKD2IYWA22RLT37GJKS2EJXZHT2VLAGWLC5TOB",
              solana: "Crn4x1Y2HUKko7ox2EZMT6N2t2ZyH7eKtwkBGVnhEq1g",
              "arbitrum-one": "0x589d35656641d6ab57a545f08cf473ecd9b6d5f7",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "gym-network",
            fileName: "GYMNET",
            symbol: "gymnet",
            name: "Gym Network",
            marketCapRank: 2149,
            addresses: {
              "binance-smart-chain":
                "0x0012365f0a1e5f30a5046c680dcb21d07b15fcf7",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "h2o-dao",
            fileName: "H2O",
            symbol: "h2o",
            name: "H2O Dao",
            marketCapRank: 790,
            addresses: {
              "binance-smart-chain":
                "0xaf3287cae99c982586c07401c0d911bf7de6cd82",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "hackenai",
            fileName: "HAI",
            symbol: "hai",
            name: "Hacken",
            marketCapRank: 762,
            addresses: {
              "binance-smart-chain":
                "0xaa9e582e5751d703f85912903bacaddfed26484c",
              ethereum: "0x05fb86775fd5c16290f1e838f5caaa7342bd9a63",
              vechain: "0xacc280010b2ee0efc770bce34774376656d8ce14",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "hairdao",
            fileName: "HAIR",
            symbol: "hair",
            name: "HairDAO",
            marketCapRank: 1022,
            addresses: {
              ethereum: "0x9ce115f0341ae5dabc8b477b74e83db2018a6f42",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "handle-fi",
            fileName: "FOREX",
            symbol: "forex",
            name: "handle.fi",
            marketCapRank: 2875,
            addresses: {
              ethereum: "0xdb298285fe4c5410b05390ca80e8fbe9de1f259b",
              "arbitrum-one": "0xdb298285fe4c5410b05390ca80e8fbe9de1f259b",
              "polygon-pos": "0xdb298285fe4c5410b05390ca80e8fbe9de1f259b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "handy",
            fileName: "HANDY",
            symbol: "handy",
            name: "Handy",
            marketCapRank: 2150,
            addresses: {
              ethereum: "0x8bbe1a2961b41340468d0548c2cd5b7dfa9b684c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "hapi",
            fileName: "HAPI",
            symbol: "hapi",
            name: "HAPI",
            marketCapRank: 1268,
            addresses: {
              ethereum: "0xd9c2d319cd7e6177336b0a9c93c21cb48d84fb54",
              "near-protocol":
                "d9c2d319cd7e6177336b0a9c93c21cb48d84fb54.factory.bridge.near",
              "binance-smart-chain":
                "0xd9c2d319cd7e6177336b0a9c93c21cb48d84fb54",
              solana: "6VNKqgz9hk7zRShTFdg5AnkfKwZUcojzwAkzxSH3bnUm",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "harmony",
            fileName: "ONE",
            symbol: "one",
            name: "Harmony",
            marketCapRank: 229,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "harvest-finance",
            fileName: "FARM",
            symbol: "farm",
            name: "Harvest Finance",
            marketCapRank: 916,
            addresses: {
              ethereum: "0xa0246c9032bc3a600820415ae600c6388619a14d",
              energi: "0xc59a4b20ea0f8a7e6e216e7f1b070247520a4514",
              "binance-smart-chain":
                "0x4b5c23cac08a567ecf0c1ffca8372a45a5d33743",
            },
            variants: ["branded", "background"],
          },
          {
            id: "hashflow",
            fileName: "HFT",
            symbol: "hft",
            name: "Hashflow",
            marketCapRank: 377,
            addresses: {
              ethereum: "0xb3999f658c0391d94a37f7ff328f3fec942bcadc",
              "binance-smart-chain":
                "0x44ec807ce2f4a6f2737a92e985f318d035883e47",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "hathor",
            fileName: "HTR",
            symbol: "htr",
            name: "Hathor",
            marketCapRank: 918,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "hatom",
            fileName: "HTM",
            symbol: "htm",
            name: "Hatom",
            marketCapRank: 781,
            addresses: { elrond: "HTM-f51d55" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "havah",
            fileName: "HVH",
            symbol: "hvh",
            name: "HAVAH",
            marketCapRank: 1049,
            addresses: {
              ethereum: "0xd076c4ba62c57b3fa10800bcfd8da66742110e0e",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "haven",
            fileName: "XHV",
            symbol: "xhv",
            name: "Haven",
            marketCapRank: 2045,
            addresses: {},
            variants: ["mono", "branded", "background"],
          },
          {
            id: "havven",
            fileName: "SNX",
            symbol: "snx",
            name: "Synthetix Network",
            marketCapRank: 81,
            addresses: {
              ethereum: "0xc011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f",
              "harmony-shard-0": "0x7b9c523d59aefd362247bd5601a89722e3774dd2",
              avalanche: "0xbec243c995409e6520d7c41e404da5deba4b209b",
              "near-protocol":
                "c011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f.factory.bridge.near",
              "optimistic-ethereum":
                "0x8700daec35af8ff88c16bdf0418774cb3d7599b4",
              "huobi-token": "0x777850281719d5a96c29812ab72f822e0e09f3da",
              "polygon-pos": "0x50b728d8d964fd00c2d0aad81718b71311fef68a",
              fantom: "0x56ee926bd8c72b2d5fa1af4d9e4cbb515a1e3adc",
              energi: "0xa255461ff545d6ece153283f421d67d2de5d0e29",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "hawksight",
            fileName: "HAWK",
            symbol: "hawk",
            name: "Hawksight",
            marketCapRank: 2136,
            addresses: {
              solana: "BKipkearSqAUdNKa1WDstvcMjoPsSKBuNyvKDQDDu9WE",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "headstarter",
            fileName: "HST",
            symbol: "hst",
            name: "HeadStarter",
            marketCapRank: 1862,
            addresses: {
              "hedera-hashgraph": "0x00000000000000000000000000000000000ec585",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "hedera-hashgraph",
            fileName: "HBAR",
            symbol: "hbar",
            name: "Hedera",
            marketCapRank: 38,
            addresses: {},
            variants: ["mono", "branded", "background"],
          },
          {
            id: "hegic",
            fileName: "HEGIC",
            symbol: "hegic",
            name: "Hegic",
            marketCapRank: 1071,
            addresses: {
              ethereum: "0x584bc13c7d411c00c01a62e8019472de68768430",
              fantom: "0x44b26e839eb3572c5e959f994804a5de66600349",
              energi: "0x762204d444123bcc511718a24158a86e3d853266",
              "arbitrum-one": "0x431402e8b9de9aa016c743880e04e517074d8cec",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "helium",
            fileName: "HNT",
            symbol: "hnt",
            name: "Helium",
            marketCapRank: 111,
            addresses: {
              solana: "hntyVP6YFm1Hg25TN9WGLqM12b8TQmcknKrdu1oxWux",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "helium-mobile",
            fileName: "MOBILE",
            symbol: "mobile",
            name: "Helium Mobile",
            marketCapRank: 254,
            addresses: {
              solana: "mb1eu7TzEc71KxDpsmsKoucSSuuoGLv1drys1oP2jh6",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "hello-labs",
            fileName: "HELLO",
            symbol: "hello",
            name: "HELLO",
            marketCapRank: 938,
            addresses: {
              ethereum: "0x411099c0b413f4feddb10edf6a8be63bd321311c",
              "binance-smart-chain":
                "0x0f1cbed8efa0e012adbccb1638d0ab0147d5ac00",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "hera-finance",
            fileName: "HERA",
            symbol: "hera",
            name: "Hera Finance",
            marketCapRank: 1193,
            addresses: {
              "metis-andromeda": "0x6f05709bc91bad933346f9e159f0d3fdbc2c9dce",
              ethereum: "0xa2c2c937333165d4c5f2dc5f31a43e1239fecfeb",
            },
            variants: ["branded", "background"],
          },
          {
            id: "hermes-protocol",
            fileName: "HERMES",
            symbol: "hermes",
            name: "Hermes Protocol",
            marketCapRank: 2022,
            addresses: {
              "metis-andromeda": "0xb27bbeaaca2c00d6258c3118bab6b5b6975161c8",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "hermez-network-token",
            fileName: "HEZ",
            symbol: "hez",
            name: "Hermez Network",
            marketCapRank: 631,
            addresses: {
              ethereum: "0xeef9f339514298c6a857efcfc1a762af84438dee",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "hero-blaze-three-kingdoms",
            fileName: "MUDOL2",
            symbol: "mudol2",
            name: "Hero Blaze: Three Kingdoms",
            marketCapRank: 2141,
            addresses: {
              "binance-smart-chain":
                "0x5e7f472b9481c80101b22d0ba4ef4253aa61dabc",
            },
            variants: ["branded", "background"],
          },
          {
            id: "heroes-of-nft",
            fileName: "HON",
            symbol: "hon",
            name: "Heroes of NFT",
            marketCapRank: 2479,
            addresses: {
              avalanche: "0xed2b42d3c9c6e97e11755bb37df29b6375ede3eb",
            },
            variants: ["mono"],
          },
          {
            id: "hiblocks",
            fileName: "HIBS",
            symbol: "hibs",
            name: "Hiblocks",
            marketCapRank: 2469,
            addresses: {
              "klay-token": "0xe06b40df899b9717b4e6b50711e1dc72d08184cf",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "hifi-finance",
            fileName: "HIFI",
            symbol: "hifi",
            name: "Hifi Finance",
            marketCapRank: 419,
            addresses: {
              ethereum: "0x4b9278b94a1112cad404048903b8d343a810b07e",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "hilo",
            fileName: "HILO",
            symbol: "hilo",
            name: "HILO",
            marketCapRank: 1664,
            addresses: {
              ethereum: "0xbb9fd9fa4863c03c574007ff3370787b9ce65ff6",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "hive",
            fileName: "HIVE",
            symbol: "hive",
            name: "Hive",
            marketCapRank: 366,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "hive-game-token",
            fileName: "HGT",
            symbol: "hgt",
            name: "Hive Game Token",
            marketCapRank: 2855,
            addresses: {
              solana: "HGTxJQKzuMjzKkHVpRLcFHwE6ngVCJbcP35FDQtmRzhx",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "hivemapper",
            fileName: "HONEY",
            symbol: "honey",
            name: "Hivemapper",
            marketCapRank: 391,
            addresses: {
              solana: "4vMsoUT2BWatFweudnQM1xedRLfJgJ7hswhcpz4xgBTy",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "hmx",
            fileName: "HMX",
            symbol: "hmx",
            name: "HMX",
            marketCapRank: 1390,
            addresses: {
              "arbitrum-one": "0x83d6c8c06ac276465e4c92e7ac8c23740f435140",
              ethereum: "0x83d6c8c06ac276465e4c92e7ac8c23740f435140",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "hoge-finance",
            fileName: "HOGE",
            symbol: "hoge",
            name: "Hoge Finance",
            marketCapRank: 1351,
            addresses: {
              ethereum: "0xfad45e47083e4607302aa43c65fb3106f1cd7607",
            },
            variants: ["mono"],
          },
          {
            id: "hold-2",
            fileName: "EARN",
            symbol: "earn",
            name: "HOLD",
            marketCapRank: 1991,
            addresses: {
              ethereum: "0x0b61c4f33bcdef83359ab97673cb5961c6435f4e",
              "binance-smart-chain":
                "0x2ac895feba458b42884dcbcb47d57e44c3a303c8",
              solana: "8CuPzHKuZQUyYbear8fi3u6iuTY652WVZT2cHZ2yeNbE",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "holdstation",
            fileName: "HOLD",
            symbol: "hold",
            name: "Holdstation",
            marketCapRank: 930,
            addresses: { zksync: "0xed4040fd47629e7c8fbb7da76bb50b3e7695f0f2" },
            variants: ["branded", "background"],
          },
          {
            id: "holoride",
            fileName: "RIDE",
            symbol: "ride",
            name: "holoride",
            marketCapRank: 1336,
            addresses: {
              elrond: "RIDE-7d18e9",
              ethereum: "0xf97e2a78f1f3d1fd438ff7cc3bb7de01e5945b83",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "holotoken",
            fileName: "HOT",
            symbol: "hot",
            name: "Holo",
            marketCapRank: 163,
            addresses: {
              ethereum: "0x6c6ee5e31d828de241282b9606c8e98ea48526e2",
              "harmony-shard-0": "0x5dfeadcdd2d4eb29ac5ae876daa07ffd07bf6483",
              sora: "0x004baaeb9bf0d5210a51fab72d10c84a34f53bea4e0e102d794d531a45ec50f9",
              energi: "0x34b97eeab6fd9bbe95a5eaf4645307c5a6f3d4d0",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "honeyland-honey",
            fileName: "HXD",
            symbol: "hxd",
            name: "Honeyland",
            marketCapRank: 942,
            addresses: {
              solana: "3dgCCb15HMQSA4Pn3Tfii5vRk7aRqTH95LJjxzsG2Mug",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "honk",
            fileName: "HONK",
            symbol: "honk",
            name: "Honk",
            marketCapRank: 1522,
            addresses: {
              solana: "3ag1Mj9AKz9FAkCQ6gAEhpLSX8B2pUbPdkb9iBsDLZNB",
            },
            variants: ["branded", "background"],
          },
          {
            id: "hooked-protocol",
            fileName: "HOOK",
            symbol: "hook",
            name: "Hooked Protocol",
            marketCapRank: 334,
            addresses: {
              "binance-smart-chain":
                "0xa260e12d2b924cb899ae80bb58123ac3fee1e2f0",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "hop-protocol",
            fileName: "HOP",
            symbol: "hop",
            name: "Hop Protocol",
            marketCapRank: 1923,
            addresses: {
              ethereum: "0xc5102fe9359fd9a28f877a67e36b0f050d81a3cc",
              "polygon-pos": "0xc5102fe9359fd9a28f877a67e36b0f050d81a3cc",
              "optimistic-ethereum":
                "0xc5102fe9359fd9a28f877a67e36b0f050d81a3cc",
              base: "0xc5102fe9359fd9a28f877a67e36b0f050d81a3cc",
              xdai: "0xc5102fe9359fd9a28f877a67e36b0f050d81a3cc",
              "arbitrum-one": "0xc5102fe9359fd9a28f877a67e36b0f050d81a3cc",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "hopr",
            fileName: "HOPR",
            symbol: "hopr",
            name: "HOPR",
            marketCapRank: 628,
            addresses: {
              ethereum: "0xf5581dfefd8fb0e4aec526be659cfab1f8c781da",
              xdai: "0xd057604a14982fe8d88c5fc25aac3267ea142a08",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "hord",
            fileName: "HORD",
            symbol: "hord",
            name: "Hord",
            marketCapRank: 1846,
            addresses: {
              ethereum: "0x43a96962254855f16b925556f9e97be436a43448",
              "arbitrum-one": "0xb1bc21f748ae2be95674876710bc6d78235480e0",
            },
            variants: ["mono"],
          },
          {
            id: "horizon-protocol",
            fileName: "HZN",
            symbol: "hzn",
            name: "Horizon Protocol",
            marketCapRank: 1503,
            addresses: {
              "binance-smart-chain":
                "0xc0eff7749b125444953ef89682201fb8c6a917cd",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "hourglass",
            fileName: "WAIT",
            symbol: "wait",
            name: "Hourglass",
            marketCapRank: 1424,
            addresses: {
              ethereum: "0x2559813bbb508c4c79e9ccce4703bcb1f149edd7",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "hubble",
            fileName: "HBB",
            symbol: "hbb",
            name: "Hubble",
            marketCapRank: 1185,
            addresses: {
              solana: "HBB111SCo9jkCejsZfz8Ec8nH7T6THF8KEKSnvwT6XK6",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "humanode",
            fileName: "HMND",
            symbol: "hmnd",
            name: "Humanode",
            marketCapRank: 1379,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "humans-ai",
            fileName: "HEART",
            symbol: "heart",
            name: "Humans.ai",
            marketCapRank: 310,
            addresses: {
              ethereum: "0x8fac8031e079f409135766c7d5de29cf22ef897c",
              osmosis:
                "ibc/35CECC330D11DD00FACB555D07687631E0BC7D226260CC5F015F6D7980819533",
            },
            variants: ["mono"],
          },
          {
            id: "humanscape",
            fileName: "HPO",
            symbol: "hpo",
            name: "Hippocrat",
            marketCapRank: 497,
            addresses: {
              ethereum: "0xfe39c384d702914127a005523f9915addb9bd59b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "hummingbot",
            fileName: "HBOT",
            symbol: "hbot",
            name: "Hummingbot",
            marketCapRank: 2375,
            addresses: {
              ethereum: "0xe5097d9baeafb89f9bcb78c9290d545db5f9e9cb",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "hunt-token",
            fileName: "HUNT",
            symbol: "hunt",
            name: "Hunt",
            marketCapRank: 494,
            addresses: {
              ethereum: "0x9aab071b4129b083b01cb5a0cb513ce7eca26fa5",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "huobi-btc",
            fileName: "HBTC",
            symbol: "hbtc",
            name: "Huobi BTC",
            marketCapRank: 336,
            addresses: {
              ethereum: "0x0316eb71485b0ab14103307bf65a021042c6d380",
              "huobi-token": "0x66a79d23e58475d2738179ca52cd0b41d73f0bea",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "huobi-token",
            fileName: "HT",
            symbol: "ht",
            name: "Huobi",
            marketCapRank: 434,
            addresses: {
              ethereum: "0x6f259637dcd74c767781e37bc6133cd6a68aa161",
              "near-protocol":
                "6f259637dcd74c767781e37bc6133cd6a68aa161.factory.bridge.near",
              "harmony-shard-0": "0xbaa0974354680b0e8146d64bb27fb92c03c4a2f2",
              elastos: "0xeceefc50f9aacf0795586ed90a8b9e24f55ce3f3",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "husd",
            fileName: "HUSD",
            symbol: "husd",
            name: "HUSD",
            marketCapRank: 1307,
            addresses: {
              ethereum: "0xdf574c24545e5ffecb9a659c229253d4111d87e1",
              "huobi-token": "0x0298c2b32eae4da002a15f36fdf7615bea3da047",
              sora: "0x008ba21aa988b21e86d5b25ed9ea690d28a6ba6c5ba9037424c215fd5b193c32",
              elastos: "0xf9ca2ea3b1024c0db31adb224b407441becc18bb",
              cube: "0x9db853f46dd7d541d0fba1c8b6b7e7b1d8ff58d3",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "husky-avax",
            fileName: "HUSKY",
            symbol: "husky",
            name: "Husky Avax",
            marketCapRank: 1544,
            addresses: {
              avalanche: "0x65378b697853568da9ff8eab60c13e1ee9f4a654",
            },
            variants: ["branded", "background"],
          },
          {
            id: "hxro",
            fileName: "HXRO",
            symbol: "hxro",
            name: "HXRO",
            marketCapRank: 664,
            addresses: {
              ethereum: "0x4bd70556ae3f8a6ec6c4080a0c327b24325438f3",
              energi: "0xf25ef66291cc2469781fa18512d6b26431cb0747",
              solana: "HxhWkVpk5NS4Ltg5nij2G671CKXFRKPK8vy271Ub4uEK",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "hydra",
            fileName: "HYDRA",
            symbol: "hydra",
            name: "Hydra",
            marketCapRank: 1238,
            addresses: { hydra: "6d9115a21863ce31b44cd231e4c4ccc87566222f" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "hydradx",
            fileName: "HDX",
            symbol: "hdx",
            name: "HydraDX",
            marketCapRank: 769,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "hypergpt",
            fileName: "HGPT",
            symbol: "hgpt",
            name: "HyperGPT",
            marketCapRank: 965,
            addresses: {
              "binance-smart-chain":
                "0x529c79f6918665ebe250f32eeeaa1d410a0798c6",
              "the-open-network":
                "EQAuw01klxL8qKe9cBioTfjst0d6Gdagg51_c73z8X2-zJmj",
            },
            variants: ["branded", "background"],
          },
          {
            id: "hypersign-identity-token",
            fileName: "HID",
            symbol: "hid",
            name: "Hypersign Identity",
            marketCapRank: 2200,
            addresses: {
              ethereum: "0xb14ebf566511b9e6002bb286016ab2497b9b9c9d",
              "polygon-pos": "0x87847703d4bb4fcd42db887ffdcb94496e77e3ab",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "hytopia",
            fileName: "TOPIA",
            symbol: "topia",
            name: "HYCHAIN",
            marketCapRank: 697,
            addresses: {
              ethereum: "0xccccb68e1a848cbdb5b60a974e07aae143ed40c3",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "hyve",
            fileName: "HYVE",
            symbol: "hyve",
            name: "Hyve",
            marketCapRank: 2433,
            addresses: {
              ethereum: "0xd794dd1cada4cf79c9eebaab8327a1b0507ef7d4",
              fantom: "0x90b89e881961e1053aeaddba13217d56f747349a",
              "binance-smart-chain":
                "0xf6565a97dc832d93dc83b75ee9aa5c7e8ecb0f9d",
              "polygon-pos": "0x61aee582896064ecd5d85d66a32ddeb5574a699d",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ice",
            fileName: "ICE",
            symbol: "ice",
            name: "Ice Network",
            marketCapRank: 1018,
            addresses: {
              "binance-smart-chain":
                "0xc335df7c25b72eec661d5aa32a7c2b7b2a1d1874",
              ethereum: "0x79f05c263055ba20ee0e814acd117c20caa10e0c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ichi-farm",
            fileName: "ICHI",
            symbol: "ichi",
            name: "ICHI",
            marketCapRank: 1115,
            addresses: {
              ethereum: "0x111111517e4929d3dcbdfa7cce55d30d4b6bc4d6",
              "binance-smart-chain":
                "0x0ef4a107b48163ab4b57fca36e1352151a587be4",
              "arbitrum-one": "0xadf5dd3e51bf28ab4f07e684ecf5d00691818790",
              "polygon-pos": "0x111111517e4929d3dcbdfa7cce55d30d4b6bc4d6",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "icon",
            fileName: "ICX",
            symbol: "icx",
            name: "ICON",
            marketCapRank: 235,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "idavoll-network",
            fileName: "IDV",
            symbol: "idv",
            name: "Idavoll DAO",
            marketCapRank: 2159,
            addresses: {
              ethereum: "0x45448e05020576929fcdeabc228e35b420098840",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ideaology",
            fileName: "IDEA",
            symbol: "idea",
            name: "Ideaology",
            marketCapRank: 2176,
            addresses: {
              ethereum: "0x5d3a4f62124498092ce665f865e0b38ff6f5fbea",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "idena",
            fileName: "IDNA",
            symbol: "idna",
            name: "Idena",
            marketCapRank: 2203,
            addresses: {
              "binance-smart-chain":
                "0x0de08c1abe5fb86dd7fd2ac90400ace305138d5b",
            },
            variants: ["mono"],
          },
          {
            id: "idia",
            fileName: "IDIA",
            symbol: "idia",
            name: "Impossible Finance Launchpad",
            marketCapRank: 655,
            addresses: {
              "binance-smart-chain":
                "0x0b15ddf19d47e6a86a56148fb4afffc6929bcb89",
              avalanche: "0xfcaf13227dcbfa2dc2b1928acfca03b85e2d25dd",
              "arbitrum-one": "0xe6045890b20945d00e6f3c01878265c03c5435d3",
              moonriver: "0x2d28aa28fa1e5e6bf121cf688309bf3faaae3c70",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "idle",
            fileName: "IDLE",
            symbol: "idle",
            name: "IDLE",
            marketCapRank: 2222,
            addresses: {
              ethereum: "0x875773784af8135ea0ef43b5a374aad105c5d39e",
              "polygon-pos": "0xc25351811983818c9fe6d8c580531819c8ade90f",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "iexec-rlc",
            fileName: "RLC",
            symbol: "rlc",
            name: "iExec RLC",
            marketCapRank: 278,
            addresses: {
              ethereum: "0x607f4c5bb672230e8672085532f7e901544a7375",
              sora: "0x008294f7b08f568a661de2b248c34fc574e7e0012a12ef7959eb1a5c6b349e09",
              energi: "0xb4ff17b5e93c40ff09326b0d538118022f02dc2b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ignis",
            fileName: "IGNIS",
            symbol: "ignis",
            name: "Ignis",
            marketCapRank: 1880,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "iguverse-igu",
            fileName: "IGU",
            symbol: "igu",
            name: "IguVerse IGU",
            marketCapRank: 1626,
            addresses: {
              "binance-smart-chain":
                "0x201bc9f242f74c47bbd898a5dc99cdcd81a21943",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "illuvium",
            fileName: "ILV",
            symbol: "ilv",
            name: "Illuvium",
            marketCapRank: 128,
            addresses: {
              ethereum: "0x767fe9edc9e0df98e07454847909b5e959d7ca0e",
              energi: "0xa4ecf6d10b8d61d4a022821a6ff8b9536a47c70d",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ime-lab",
            fileName: "LIME",
            symbol: "lime",
            name: "iMe Lab",
            marketCapRank: 782,
            addresses: {
              "binance-smart-chain":
                "0x7bc75e291e656e8658d66be1cc8154a3769a35dd",
              "polygon-pos": "0x7f67639ffc8c93dd558d452b8920b28815638c44",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "imgnai",
            fileName: "IMGNAI",
            symbol: "imgnai",
            name: "Image Generation AI",
            marketCapRank: 1099,
            addresses: {
              ethereum: "0xa735a3af76cc30791c61c10d585833829d36cbe0",
            },
            variants: ["branded", "background"],
          },
          {
            id: "imo",
            fileName: "IMO",
            symbol: "imo",
            name: "IMO",
            marketCapRank: 2145,
            addresses: {
              "binance-smart-chain":
                "0x94d79c325268c898d2902050730f27a478c56cc1",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "impt",
            fileName: "IMPT",
            symbol: "impt",
            name: "IMPT",
            marketCapRank: 1739,
            addresses: {
              ethereum: "0x04c17b9d3b29a78f7bd062a57cf44fc633e71f85",
            },
            variants: ["branded", "background"],
          },
          {
            id: "infinity-pad-2",
            fileName: "IPAD",
            symbol: "ipad",
            name: "Infinity PAD",
            marketCapRank: 2251,
            addresses: {
              "binance-smart-chain":
                "0xa7266989b0df675cc8257d53b6bc1358faf6626a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "infinitybit-token",
            fileName: "IBIT",
            symbol: "ibit",
            name: "InfinityBit Token",
            marketCapRank: 1983,
            addresses: {
              ethereum: "0xa3cb87080e68ad54d00573983d935fa85d168fde",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "injective-protocol",
            fileName: "INJ",
            symbol: "inj",
            name: "Injective",
            marketCapRank: 46,
            addresses: {
              ethereum: "0xe28b3b32b6c345a34ff64674606124dd5aceca30",
              cosmos:
                "ibc/64BA6E31FE887D66C6F8F31C7B1A80C7CA179239677B4088BB55F5EA07DBE273",
              "binance-smart-chain":
                "0xa2b726b1145a4773f68593cf171187d8ebe4d495",
              secret: "secret14706vxakdzkz9a36872cs62vpl5qd84kpwvpew",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "inscribe",
            fileName: "INS",
            symbol: "ins",
            name: "Inscribe",
            marketCapRank: 1848,
            addresses: {
              ethereum: "0xe9572938bcbf08adcee86fd12a7c0d08dc4ab841",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "instadapp",
            fileName: "INST",
            symbol: "inst",
            name: "Instadapp",
            marketCapRank: 922,
            addresses: {
              ethereum: "0x6f40d4a6237c257fff2db00fa0510deeecd303eb",
              "polygon-pos": "0xf50d05a1402d0adafa880d36050736f9f6ee7dee",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "instadapp-eth",
            fileName: "IETH",
            symbol: "ieth",
            name: "iETH v1",
            marketCapRank: 2509,
            addresses: {
              ethereum: "0xc383a3833a87009fd9597f8184979af5edfad019",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "insurace",
            fileName: "INSUR",
            symbol: "insur",
            name: "InsurAce",
            marketCapRank: 2051,
            addresses: {
              ethereum: "0x544c42fbb96b39b21df61cf322b5edc285ee7429",
              avalanche: "0x544c42fbb96b39b21df61cf322b5edc285ee7429",
              "polygon-pos": "0x8a0e8b4b0903929f47c3ea30973940d4a9702067",
              "binance-smart-chain":
                "0x3192ccddf1cdce4ff055ebc80f3f0231b86a7e30",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "insure",
            fileName: "SURE",
            symbol: "sure",
            name: "inSure DeFi",
            marketCapRank: 398,
            addresses: {
              ethereum: "0xcb86c6a22cb56b6cf40cafedb06ba0df188a416e",
              avalanche: "0x5fc17416925789e0852fbfcd81c490ca4abc51f9",
              "polygon-pos": "0xf88332547c680f755481bf489d890426248bb275",
              "binance-smart-chain":
                "0x9b17baadf0f21f03e35249e0e59723f34994f806",
            },
            variants: ["branded", "background"],
          },
          {
            id: "integritee",
            fileName: "TEER",
            symbol: "teer",
            name: "Integritee",
            marketCapRank: 1994,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "inter-stable-token",
            fileName: "IST",
            symbol: "ist",
            name: "Inter Stable Token",
            marketCapRank: 2534,
            addresses: {
              osmosis:
                "ibc/92BE0717F4678905E53F4E45B2DED18BC0CB97BF1F8B6A25AFEDF3D5A879B4D5",
              archway:
                "ibc/C0336ECF2DF64E7D2C98B1422EC2B38DE9EF33C34AAADF18C6F2E3FFC7BE3615",
              secret: "secret1xmqsk8tnge0atzy4e079h0l2wrgz6splcq0a24",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "interlay",
            fileName: "INTR",
            symbol: "intr",
            name: "Interlay",
            marketCapRank: 1618,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "internet-computer",
            fileName: "ICP",
            symbol: "icp",
            name: "Internet Computer",
            marketCapRank: 21,
            addresses: { "internet-computer": "ryjl3-tyaaa-aaaaa-aaaba-cai" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "interport-token",
            fileName: "ITP",
            symbol: "itp",
            name: "Interport Token",
            marketCapRank: 1896,
            addresses: {
              ethereum: "0x2b1d36f5b61addaf7da7ebbd11b35fd8cfb0de31",
              "polygon-zkevm": "0x2b1d36f5b61addaf7da7ebbd11b35fd8cfb0de31",
              linea: "0x2b1d36f5b61addaf7da7ebbd11b35fd8cfb0de31",
              "arbitrum-one": "0x2b1d36f5b61addaf7da7ebbd11b35fd8cfb0de31",
              "optimistic-ethereum":
                "0x2b1d36f5b61addaf7da7ebbd11b35fd8cfb0de31",
              zksync: "0xd03465338226ea0178337f4abb16fdd6df529f57",
              avalanche: "0x2b1d36f5b61addaf7da7ebbd11b35fd8cfb0de31",
              scroll: "0x2b1d36f5b61addaf7da7ebbd11b35fd8cfb0de31",
              fantom: "0x2b1d36f5b61addaf7da7ebbd11b35fd8cfb0de31",
              opbnb: "0x2b1d36f5b61addaf7da7ebbd11b35fd8cfb0de31",
              "polygon-pos": "0x2b1d36f5b61addaf7da7ebbd11b35fd8cfb0de31",
              base: "0x2b1d36f5b61addaf7da7ebbd11b35fd8cfb0de31",
              "binance-smart-chain":
                "0x2b1d36f5b61addaf7da7ebbd11b35fd8cfb0de31",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "intrepid-token",
            fileName: "INT",
            symbol: "int",
            name: "Intrepid Token",
            marketCapRank: 2632,
            addresses: {
              ethereum: "0xa2762ba628b962f93498d8893b6e4346140fe96d",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "inverse-finance",
            fileName: "INV",
            symbol: "inv",
            name: "Inverse Finance",
            marketCapRank: 988,
            addresses: {
              ethereum: "0x41d5d79431a913c4ae7d69a668ecdfe5ff9dfb68",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ion",
            fileName: "ION",
            symbol: "ion",
            name: "Ion",
            marketCapRank: 1519,
            addresses: { osmosis: "uion" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "iostoken",
            fileName: "IOST",
            symbol: "iost",
            name: "IOST",
            marketCapRank: 315,
            addresses: {},
            variants: ["mono"],
          },
          {
            id: "iota",
            fileName: "IOTA",
            symbol: "iota",
            name: "IOTA",
            marketCapRank: 106,
            addresses: {},
            variants: ["mono", "background", "branded"],
          },
          {
            id: "ipor",
            fileName: "IPOR",
            symbol: "ipor",
            name: "IPOR",
            marketCapRank: 1460,
            addresses: {
              ethereum: "0x1e4746dc744503b53b4a082cb3607b169a289090",
              "arbitrum-one": "0x34229b3f16fbcdfa8d8d9d17c0852f9496f4c7bb",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "iris-network",
            fileName: "IRIS",
            symbol: "iris",
            name: "IRISnet",
            marketCapRank: 640,
            addresses: {
              osmosis:
                "ibc/7C4D60AA95E5A7558B0A364860979CA34B7FF8AAF255B87AF9E879374470CEC0",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "iron-fish",
            fileName: "IRON",
            symbol: "iron",
            name: "Iron Fish",
            marketCapRank: 848,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "iskra-token",
            fileName: "ISK",
            symbol: "isk",
            name: "ISKRA Token",
            marketCapRank: 960,
            addresses: {
              ethereum: "0x17d2628d30f8e9e966c9ba831c9b9b01ea8ea75c",
              "klay-token": "0x17d2628d30f8e9e966c9ba831c9b9b01ea8ea75c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ispolink",
            fileName: "ISP",
            symbol: "isp",
            name: "Ispolink",
            marketCapRank: 1419,
            addresses: {
              ethereum: "0xc8807f0f5ba3fa45ffbdc66928d71c5289249014",
              "manta-pacific": "0xbab1c57ec0bb0ae81d948503e51d90166459d154",
              "binance-smart-chain":
                "0xd2e7b964770fcf51df088a5f0bb2d33a3c60cccf",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "itheum",
            fileName: "ITHEUM",
            symbol: "itheum",
            name: "Itheum",
            marketCapRank: 1370,
            addresses: { elrond: "ITHEUM-df6f26" },
            variants: ["mono"],
          },
          {
            id: "ix-swap",
            fileName: "IXS",
            symbol: "ixs",
            name: "IX Swap",
            marketCapRank: 486,
            addresses: {
              ethereum: "0x73d7c860998ca3c01ce8c808f5577d94d545d1b4",
              "polygon-pos": "0x1ba17c639bdaecd8dc4aac37df062d17ee43a1b8",
            },
            variants: ["mono"],
          },
          {
            id: "ix-token",
            fileName: "IXT",
            symbol: "ixt",
            name: "Planet IX",
            marketCapRank: 1369,
            addresses: {
              "polygon-pos": "0xe06bd4f5aac8d0aa337d13ec88db6defc6eaeefe",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ixo",
            fileName: "IXO",
            symbol: "ixo",
            name: "IXO",
            marketCapRank: 1454,
            addresses: {
              cosmos:
                "ibc/F3FF7A84A73B62921538642F9797C423D2B4C4ACB3C7FCFFCE7F12AA69909C4B",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "jackal-protocol",
            fileName: "JKL",
            symbol: "jkl",
            name: "Jackal Protocol",
            marketCapRank: 700,
            addresses: {
              secret: "secret1sgaz455pmtgld6dequqayrdseq8vy2fc48n8y3",
              osmosis:
                "ibc/8E697BDABE97ACE8773C6DF7402B2D1D5104DD1EEABE12608E3469B7F64C15BA",
              archway:
                "ibc/926432AE1C5FA4F857B36D970BE7774C7472079506820B857B75C5DE041DD7A3",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "jasmycoin",
            fileName: "JASMY",
            symbol: "jasmy",
            name: "JasmyCoin",
            marketCapRank: 113,
            addresses: {
              ethereum: "0x7420b4b9a0110cdc71fb720908340c03f9bc03ec",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "jesus-coin",
            fileName: "JESUS",
            symbol: "jesus",
            name: "Jesus Coin",
            marketCapRank: 1060,
            addresses: {
              ethereum: "0xba386a4ca26b85fd057ab1ef86e3dc7bdeb5ce70",
            },
            variants: ["branded", "background"],
          },
          {
            id: "joe",
            fileName: "JOE",
            symbol: "joe",
            name: "JOE",
            marketCapRank: 267,
            addresses: {
              avalanche: "0x6e84a6216ea6dacc71ee8e6b0a5b7322eebc0fdd",
              "arbitrum-one": "0x371c7ec6d8039ff7933a2aa28eb827ffe1f52f07",
              mantle: "0x371c7ec6d8039ff7933a2aa28eb827ffe1f52f07",
              "binance-smart-chain":
                "0x371c7ec6d8039ff7933a2aa28eb827ffe1f52f07",
            },
            variants: ["branded", "background"],
          },
          {
            id: "jones-dao",
            fileName: "JONES",
            symbol: "jones",
            name: "Jones DAO",
            marketCapRank: 1945,
            addresses: {
              "arbitrum-one": "0x10393c20975cf177a3513071bc110f7962cd67da",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "joystream",
            fileName: "JOY",
            symbol: "joy",
            name: "Joystream",
            marketCapRank: 1212,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "julswap",
            fileName: "JULD",
            symbol: "juld",
            name: "JulSwap",
            marketCapRank: 2062,
            addresses: {
              "binance-smart-chain":
                "0xf5d8015d625be6f59b8073c8189bd51ba28792e1",
              "harmony-shard-0": "0x504d7d5bd2075fa782fbd0be9bea4cdc7e25f5a1",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "jumptoken",
            fileName: "JMPT",
            symbol: "jmpt",
            name: "JumpToken",
            marketCapRank: 1328,
            addresses: {
              "binance-smart-chain":
                "0x88d7e9b65dc24cf54f5edef929225fc3e1580c25",
              celo: "0x1d18d0386f51ab03e7e84e71bda1681eba865f1f",
              ethereum: "0x420a24c9c65bd44c48bfb1cc8d6cd1ea8b1ac840",
              "polygon-pos": "0x03cf5d93ca7c70ce0a21a09f4d70779d2c66b25a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "juno-network",
            fileName: "JUNO",
            symbol: "juno",
            name: "JUNO",
            marketCapRank: 1064,
            addresses: {
              cosmos:
                "ibc/46B44899322F3CD854D2D46DEEF881958467CDD4B3B10086DA49296BBED94BED",
              evmos: "0x3452e23f9c4cc62c70b7adad699b264af3549c19",
              secret: "secret1z6e4skg5g9w65u5sqznrmagu05xq8u6zjcdg4a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "jupiter",
            fileName: "JUP",
            symbol: "jup",
            name: "Jupiter Project",
            marketCapRank: 2628,
            addresses: {
              ethereum: "0x4b1e80cac91e2216eeb63e29b957eb91ae9c2be8",
              "binance-smart-chain":
                "0x0231f91e02debd20345ae8ab7d71a41f8e140ce7",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "just",
            fileName: "JST",
            symbol: "jst",
            name: "JUST",
            marketCapRank: 242,
            addresses: { tron: "TCFLL5dx5ZJdKnWuesXxi1VPwjLVmWZZy9" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "k21",
            fileName: "K21",
            symbol: "k21",
            name: "K21",
            marketCapRank: 2304,
            addresses: {
              ethereum: "0xb9d99c33ea2d86ec5ec6b8a4dd816ebba64404af",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "kadena",
            fileName: "KDA",
            symbol: "kda",
            name: "Kadena",
            marketCapRank: 224,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "kaizen",
            fileName: "KZEN",
            symbol: "kzen",
            name: "Kaizen.Finance",
            marketCapRank: null,
            addresses: {
              "polygon-pos": "0x4550003152f12014558e5ce025707e4dd841100f",
              ethereum: "0x4550003152f12014558e5ce025707e4dd841100f",
              "binance-smart-chain":
                "0x4550003152f12014558e5ce025707e4dd841100f",
              solana: "kZEn3aDxEzcFADPe2VQ6WcJRbS1hVGjUcgCw4HiuYSU",
            },
            variants: ["branded", "background"],
          },
          {
            id: "kalmar",
            fileName: "KALM",
            symbol: "kalm",
            name: "KALM",
            marketCapRank: 2581,
            addresses: {
              "binance-smart-chain":
                "0x4ba0057f784858a48fe351445c672ff2a3d43515",
              avalanche: "0x62aceea3e666c5706ce1c61055fac1a669d31d93",
              fantom: "0x4f851750a3e6f80f1e1f89c67b56960bfc29a934",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "kamaleont",
            fileName: "KLT",
            symbol: "klt",
            name: "Kamaleont",
            marketCapRank: 1566,
            addresses: {
              "binance-smart-chain":
                "0xf87940f78f2f4d99a0c5c22e3fcc21795cd53245",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "kan",
            fileName: "KAN",
            symbol: "kan",
            name: "BitKan",
            marketCapRank: 1720,
            addresses: {
              ethereum: "0x1410434b0346f5be678d0fb554e5c7ab620f8f4a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "kapital-dao",
            fileName: "KAP",
            symbol: "kap",
            name: "KAP Games",
            marketCapRank: 1306,
            addresses: {
              ethereum: "0x9625ce7753ace1fa1865a47aae2c5c2ce4418569",
              "arbitrum-one": "0x965d00aa7abc62ca10132e641d08593435ac811d",
              "hedera-hashgraph": "0.0.3299785",
              "polygon-pos": "0xc27158bb8e08899d38765752f91d7d778e16ab8e",
              blast: "0x15d24de366f69b835be19f7cf9447e770315dd80",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "karat",
            fileName: "KAT",
            symbol: "kat",
            name: "Karat",
            marketCapRank: 2213,
            addresses: { zksync: "0xcdb7d260c107499c80b4b748e8331c64595972a1" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "karate-combat",
            fileName: "KARATE",
            symbol: "karate",
            name: "Karate Combat",
            marketCapRank: 1002,
            addresses: {
              ethereum: "0x80008bcd713c38af90a9930288d446bc3bd2e684",
              "hedera-hashgraph": "0.0.2283230",
            },
            variants: ["mono"],
          },
          {
            id: "kardiachain",
            fileName: "KAI",
            symbol: "kai",
            name: "KardiaChain",
            marketCapRank: 1090,
            addresses: {
              kardiachain: "0xaf984e23eaa3e7967f3c5e007fbe397d8566d23d",
              "binance-smart-chain":
                "0x39ae8eefb05138f418bb27659c21632dc1ddab10",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "karura",
            fileName: "KAR",
            symbol: "kar",
            name: "Karura",
            marketCapRank: 1081,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "kaspa",
            fileName: "KAS",
            symbol: "kas",
            name: "Kaspa",
            marketCapRank: 47,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "kasta",
            fileName: "KASTA",
            symbol: "kasta",
            name: "Kasta",
            marketCapRank: 1163,
            addresses: {
              "polygon-pos": "0x235737dbb56e8517391473f7c964db31fa6ef280",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "katana-inu",
            fileName: "KATA",
            symbol: "kata",
            name: "Katana Inu",
            marketCapRank: 741,
            addresses: {
              ethereum: "0x2e85ae1c47602f7927bcabc2ff99c40aa222ae15",
              "binance-smart-chain":
                "0x6d6ba21e4c4b29ca7bfa1c344ba1e35b8dae7205",
            },
            variants: ["branded", "background"],
          },
          {
            id: "kava",
            fileName: "KAVA",
            symbol: "kava",
            name: "Kava",
            marketCapRank: 107,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "kava-lend",
            fileName: "HARD",
            symbol: "hard",
            name: "Kava Lend",
            marketCapRank: 881,
            addresses: { energi: "0xeeaccbb6ce1b5be68a2cf9d0dea27d4b807848d2" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "keep-network",
            fileName: "KEEP",
            symbol: "keep",
            name: "Keep Network",
            marketCapRank: 447,
            addresses: {
              ethereum: "0x85eee30c52b0b379b046fb0f85f4f3dc3009afec",
              "harmony-shard-0": "0x43bf77db5e784b263a459141bdcdf5cf6987936d",
              energi: "0x9caa73156981600f4d276a10f80970a171abc1d1",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "keep3rv1",
            fileName: "KP3R",
            symbol: "kp3r",
            name: "Keep3rV1",
            marketCapRank: 788,
            addresses: {
              ethereum: "0x1ceb5cb57c4d4e2b2433641b95dd330a33185a44",
              fantom: "0x2a5062d22adcfaafbd5c541d4da82e4b450d4212",
              energi: "0x09f24e5e54db6705df1a1a71d2bd5eac0d692bea",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "kek",
            fileName: "KEKE",
            symbol: "keke",
            name: "KEK",
            marketCapRank: 2249,
            addresses: {
              ethereum: "0xf7168c8abb0ff80116413a8d95396bbdc318a3ff",
            },
            variants: ["branded", "background"],
          },
          {
            id: "ki",
            fileName: "XKI",
            symbol: "xki",
            name: "KI",
            marketCapRank: 1865,
            addresses: {
              cosmos:
                "ibc/B547DC9B897E7C3AA5B824696110B8E3D2C31E3ED3F02FF363DCBAD82457E07E",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "kiba-inu",
            fileName: "KIBA",
            symbol: "kiba",
            name: "Kiba Inu",
            marketCapRank: 2060,
            addresses: {
              ethereum: "0x005d1123878fc55fbd56b54c73963b234a64af3c",
              "binance-smart-chain":
                "0xc3afde95b6eb9ba8553cdaea6645d45fb3a7faf5",
            },
            variants: ["branded", "background"],
          },
          {
            id: "kiboshib",
            fileName: "KIBSHI",
            symbol: "kibshi",
            name: "KiboShib",
            marketCapRank: 1867,
            addresses: {
              ethereum: "0x02e7f808990638e9e67e1f00313037ede2362361",
            },
            variants: ["branded", "background"],
          },
          {
            id: "kick",
            fileName: "KICK",
            symbol: "kick",
            name: "Kick",
            marketCapRank: 2161,
            addresses: {
              "binance-smart-chain":
                "0x824a50df33ac1b41afc52f4194e2e8356c17c3ac",
              "harmony-shard-0": "0xc63fd3e9c9527ccdf1d331bbadfe21e77e357b5e",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "kilt-protocol",
            fileName: "KILT",
            symbol: "kilt",
            name: "KILT Protocol",
            marketCapRank: 692,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "kin",
            fileName: "KIN",
            symbol: "kin",
            name: "Kin",
            marketCapRank: 645,
            addresses: {
              solana: "kinXdEcpDQeHPEuQnqmUgtYykqKGVFq6CeVX5iAHJq6",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "kine-protocol",
            fileName: "KINE",
            symbol: "kine",
            name: "Kine Protocol",
            marketCapRank: 1876,
            addresses: {
              ethereum: "0xcbfef8fdd706cde6f208460f2bf39aa9c785f05d",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "kinesis-gold",
            fileName: "KAU",
            symbol: "kau",
            name: "Kinesis Gold",
            marketCapRank: 531,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "kinesis-silver",
            fileName: "KAG",
            symbol: "kag",
            name: "Kinesis Silver",
            marketCapRank: 565,
            addresses: {},
            variants: ["mono"],
          },
          {
            id: "king-shiba",
            fileName: "KINGSHIB",
            symbol: "kingshib",
            name: "King Shiba",
            marketCapRank: 2334,
            addresses: {
              "binance-smart-chain":
                "0x84f4f7cdb4574c9556a494dab18ffc1d1d22316c",
            },
            variants: ["branded", "background"],
          },
          {
            id: "kintsugi",
            fileName: "KINT",
            symbol: "kint",
            name: "Kintsugi",
            marketCapRank: 2186,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "kira-network",
            fileName: "KEX",
            symbol: "kex",
            name: "KIRA Network",
            marketCapRank: 1071,
            addresses: {
              ethereum: "0x16980b3b4a3f9d89e33311b5aa8f80303e5ca4f8",
              "binance-smart-chain":
                "0x8d11ec38a3eb5e956b052f67da8bdc9bef8abf3e",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "kishu-inu",
            fileName: "KISHU",
            symbol: "kishu",
            name: "Kishu Inu",
            marketCapRank: 1035,
            addresses: {
              ethereum: "0xa2b4c0af19cc16a6cfacce81f192b024d625817d",
            },
            variants: ["branded", "background"],
          },
          {
            id: "kitty-inu",
            fileName: "KITTY",
            symbol: "kitty",
            name: "Kitty Inu",
            marketCapRank: 1944,
            addresses: {
              ethereum: "0x61a35258107563f6b6f102ae25490901c8760b12",
            },
            variants: ["branded", "background"],
          },
          {
            id: "klay-token",
            fileName: "KLAY",
            symbol: "klay",
            name: "Klaytn",
            marketCapRank: 117,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "klaycity-orb",
            fileName: "ORB",
            symbol: "orb",
            name: "Orbcity",
            marketCapRank: 1432,
            addresses: {
              "polygon-pos": "0x20c750c57c3bc5145af4b7a33d4fb66a8e79fe05",
              ethereum: "0x3c917054e03485808137eb306eafa8da0ab695cd",
            },
            variants: ["branded", "background"],
          },
          {
            id: "kleekai",
            fileName: "KLEE",
            symbol: "klee",
            name: "KleeKai",
            marketCapRank: 2751,
            addresses: {
              ethereum: "0xa67e9f021b9d208f7e3365b2a155e3c55b27de71",
            },
            variants: ["branded", "background"],
          },
          {
            id: "kleros",
            fileName: "PNK",
            symbol: "pnk",
            name: "Kleros",
            marketCapRank: 1124,
            addresses: {
              ethereum: "0x93ed3fbe21207ec2e8f2d3c3de6e058cb73bc04d",
              xdai: "0x37b60f4e9a31a64ccc0024dce7d0fd07eaa0f7b3",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "kleva",
            fileName: "KLEVA",
            symbol: "kleva",
            name: "KLEVA",
            marketCapRank: 1484,
            addresses: {
              "klay-token": "0x5fff3a6c16c2208103f318f4713d4d90601a7313",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "klever",
            fileName: "KLV",
            symbol: "klv",
            name: "Klever",
            marketCapRank: 946,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "klima-dao",
            fileName: "KLIMA",
            symbol: "klima",
            name: "KlimaDAO",
            marketCapRank: 992,
            addresses: {
              "polygon-pos": "0x4e78011ce80ee02d2c3e649fb657e45898257815",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "koinos",
            fileName: "KOIN",
            symbol: "koin",
            name: "Koinos",
            marketCapRank: 882,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "kommunitas",
            fileName: "KOM",
            symbol: "kom",
            name: "Kommunitas",
            marketCapRank: 1961,
            addresses: {
              "polygon-pos": "0xc004e2318722ea2b15499d6375905d75ee5390b8",
              "arbitrum-one": "0xa58663faef461761e44066ea26c1fcddf2927b80",
              "binance-smart-chain":
                "0x471ea49dd8e60e697f4cac262b5fafcc307506e4",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "komodo",
            fileName: "KMD",
            symbol: "kmd",
            name: "Komodo",
            marketCapRank: 576,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "kompete",
            fileName: "KOMPETE",
            symbol: "kompete",
            name: "KOMPETE",
            marketCapRank: 1026,
            addresses: {
              ethereum: "0x1e0b2992079b620aa13a7c2e7c88d2e1e18e46e9",
              base: "0x8f019931375454fe4ee353427eb94e2e0c9e0a8c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "kondux-v2",
            fileName: "KNDX",
            symbol: "kndx",
            name: "KONDUX",
            marketCapRank: 660,
            addresses: {
              ethereum: "0x7ca5af5ba3472af6049f63c1abc324475d44efc1",
            },
            variants: ["mono"],
          },
          {
            id: "kromatika",
            fileName: "KROM",
            symbol: "krom",
            name: "Kromatika",
            marketCapRank: 2096,
            addresses: {
              ethereum: "0x3af33bef05c2dcb3c7288b77fe1c8d2aeba4d789",
              "optimistic-ethereum":
                "0xf98dcd95217e15e05d8638da4c91125e59590b07",
              "arbitrum-one": "0x55ff62567f09906a85183b866df84bf599a4bf70",
              "polygon-pos": "0x14af1f2f02dccb1e43402339099a05a5e363b83c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "kryll",
            fileName: "KRL",
            symbol: "krl",
            name: "KRYLL",
            marketCapRank: 903,
            addresses: {
              ethereum: "0x464ebe77c293e473b48cfe96ddcf88fcf7bfdac0",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "kryptomon",
            fileName: "KMON",
            symbol: "kmon",
            name: "Kryptomon",
            marketCapRank: 1343,
            addresses: {
              "binance-smart-chain":
                "0xc732b6586a93b6b7cf5fed3470808bc74998224d",
              ethereum: "0xc4170fd71eced3c80badca77f4e12e8aac1e3436",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "kryptonite",
            fileName: "SEILOR",
            symbol: "seilor",
            name: "Kryptonite",
            marketCapRank: 1224,
            addresses: {
              "sei-network":
                "sei10knxlv9e54z0xcywdhtycc63uf970aefeec73ycqwd75ep9nu45sh66m6a",
              "binance-smart-chain":
                "0xe29142e14e52bdfbb8108076f66f49661f10ec10",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "ktx-finance",
            fileName: "KTC",
            symbol: "ktc",
            name: "KTX.Finance",
            marketCapRank: null,
            addresses: {
              mantle: "0x779f4e5fb773e17bc8e809f4ef1abb140861159a",
              "binance-smart-chain":
                "0x545356d4d69d8cd1213ee7e339867574738751ca",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "kucoin-shares",
            fileName: "KCS",
            symbol: "kcs",
            name: "KuCoin",
            marketCapRank: 110,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "kujira",
            fileName: "KUJI",
            symbol: "kuji",
            name: "Kujira",
            marketCapRank: 253,
            addresses: {
              osmosis:
                "ibc/BB6BCDB515050BAE97516111873CCD7BCF1FD0CCB723CC12F3C4F704D6C646CE",
              "optimistic-ethereum":
                "0x3a18dcc9745edcd1ef33ecb93b0b6eba5671e7ca",
              ethereum: "0x96543ef8d2c75c26387c1a319ae69c0bee6f3fe7",
              "arbitrum-one": "0x3a18dcc9745edcd1ef33ecb93b0b6eba5671e7ca",
              "binance-smart-chain":
                "0x073690e6ce25be816e68f32dca3e11067c9fb5cc",
              secret: "secret13hvh0rn0rcf5zr486yxlrucvwpzwqu2dsz6zu8",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "kuma-inu",
            fileName: "KUMA",
            symbol: "kuma",
            name: "Kuma Inu",
            marketCapRank: 2658,
            addresses: {
              ethereum: "0x48c276e8d03813224bb1e55f953adb6d02fd3e02",
            },
            variants: ["branded", "background"],
          },
          {
            id: "kunci-coin",
            fileName: "KUNCI",
            symbol: "kunci",
            name: "Kunci Coin",
            marketCapRank: 3927,
            addresses: {
              "binance-smart-chain":
                "0x6cf271270662be1c4fc1b7bb7d7d7fc60cc19125",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "kusama",
            fileName: "KSM",
            symbol: "ksm",
            name: "Kusama",
            marketCapRank: 208,
            addresses: {},
            variants: ["mono", "branded", "background"],
          },
          {
            id: "kwai",
            fileName: "KWAI",
            symbol: "kwai",
            name: "KWAI",
            marketCapRank: 1671,
            addresses: {
              "binance-smart-chain":
                "0x235d650fc6d9eb7d4bac77e128265295a0054304",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "kwenta",
            fileName: "KWENTA",
            symbol: "kwenta",
            name: "Kwenta",
            marketCapRank: 676,
            addresses: {
              "optimistic-ethereum":
                "0x920cf626a271321c151d027030d5d08af699456b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "kyber-network-crystal",
            fileName: "KNC",
            symbol: "knc",
            name: "Kyber Network Crystal",
            marketCapRank: 408,
            addresses: {
              ethereum: "0xdefa4e8a7bcba345f687a2f1456f5edd9ce97202",
              fantom: "0x1e1085efaa63edfe74aad7c05a28eae4ef917c3f",
              linea: "0x3b2f62d42db19b30588648bf1c184865d4c3b1d6",
              "polygon-zkevm": "0x6a80a465409ce8d36c513129c0feea61bed579ba",
              "optimistic-ethereum":
                "0xa00e3a3511aac35ca78530c85007afcd31753819",
              zksync: "0x6ee46cb7cd2f15ee1ec9534cf29a5b51c83283e6",
              "arbitrum-one": "0xe4dddfe67e7164b0fe14e218d80dc4c08edc01cb",
              avalanche: "0x39fc9e94caeacb435842fadedecb783589f50f5f",
              "polygon-pos": "0x1c954e8fe737f99f68fa1ccda3e51ebdb291948c",
              "binance-smart-chain":
                "0xfe56d5892bdffc7bf58f2e84be1b2c32d21c308b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "kyve-network",
            fileName: "KYVE",
            symbol: "kyve",
            name: "KYVE Network",
            marketCapRank: 702,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "l7dex",
            fileName: "LSD",
            symbol: "lsd",
            name: "L7DEX",
            marketCapRank: 291,
            addresses: {
              "binance-smart-chain":
                "0xcd1b51b87a8a7137d6421ba5a976225187a26777",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "lambda",
            fileName: "LAMB",
            symbol: "lamb",
            name: "Lambda",
            marketCapRank: 1238,
            addresses: {
              ethereum: "0x8971f9fd7196e5cee2c1032b50f656855af7dd26",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "land-of-conquest-slg",
            fileName: "SLG",
            symbol: "slg",
            name: "SLG.GAMES",
            marketCapRank: 897,
            addresses: {
              ethereum: "0xfc0b60e0df5dc9d4b72d957ca2d251cee308019a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "landshare",
            fileName: "LAND",
            symbol: "land",
            name: "Landshare",
            marketCapRank: 1205,
            addresses: {
              "binance-smart-chain":
                "0xa73164db271931cf952cbaeff9e8f5817b42fa5c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "latoken",
            fileName: "LA",
            symbol: "la",
            name: "LA",
            marketCapRank: 2263,
            addresses: {
              ethereum: "0xe50365f5d679cb98a1dd62d6f6e58e59321bcddf",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "lattice-token",
            fileName: "LTX",
            symbol: "ltx",
            name: "Lattice",
            marketCapRank: 1859,
            addresses: {
              ethereum: "0xa393473d64d2f9f026b60b6df7859a689715d092",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "launchpool",
            fileName: "LPOOL",
            symbol: "lpool",
            name: "Launchpool",
            marketCapRank: 2213,
            addresses: {
              ethereum: "0x6149c26cd2f7b5ccdb32029af817123f6e37df5b",
              "binance-smart-chain":
                "0xcfb24d3c3767364391340a2e6d99c64f1cbd7a3d",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "law-blocks",
            fileName: "LBT",
            symbol: "lbt",
            name: "Law Blocks",
            marketCapRank: 1679,
            addresses: {
              "xdc-network": "xdc05940b2df33d6371201e7ae099ced4c363855dfe",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "lazio-fan-token",
            fileName: "LAZIO",
            symbol: "lazio",
            name: "Lazio Fan Token",
            marketCapRank: 1007,
            addresses: {
              "binance-smart-chain":
                "0x77d547256a2cd95f32f67ae0313e450ac200648d",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "lcx",
            fileName: "LCX",
            symbol: "lcx",
            name: "LCX",
            marketCapRank: 293,
            addresses: {
              ethereum: "0x037a54aab062628c9bbae1fdb1583c195585fe41",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "league-of-kingdoms",
            fileName: "LOKA",
            symbol: "loka",
            name: "League of Kingdoms",
            marketCapRank: 782,
            addresses: {
              ethereum: "0x61e90a50137e1f645c9ef4a0d3a4f01477738406",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "leash",
            fileName: "LEASH",
            symbol: "leash",
            name: "Doge Killer",
            marketCapRank: 691,
            addresses: {
              ethereum: "0x27c70cd1946795b66be9d954418546998b546634",
            },
            variants: ["branded", "background"],
          },
          {
            id: "leeds-united-fan-token",
            fileName: "LUFC",
            symbol: "lufc",
            name: "Leeds United Fan Token",
            marketCapRank: 2237,
            addresses: { chiliz: "0xf67a8a4299f7ebf0c58dbfb38941d0867f300c30" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "leisuremeta",
            fileName: "LM",
            symbol: "lm",
            name: "LeisureMeta",
            marketCapRank: 1100,
            addresses: {
              ethereum: "0xc064f4f215b6a1e4e7f39bd8530c4de0fc43ee9d",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "leo-token",
            fileName: "LEO",
            symbol: "leo",
            name: "LEO Token",
            marketCapRank: 25,
            addresses: {
              ethereum: "0x2af5d2ad76741191d15dfe7bf6ac92d4bd912ca3",
              sora: "0x009e199267a6a2c8ae075bb8d4c40ee8d05c1b769085ee59ce98e50c2b2d8756",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "leox",
            fileName: "LEOX",
            symbol: "leox",
            name: "LEOX",
            marketCapRank: 927,
            addresses: {
              ethereum: "0xa444ec96ee01bb219a44b285de47bf33c3447ad5",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "level",
            fileName: "LVL",
            symbol: "lvl",
            name: "Level",
            marketCapRank: 1886,
            addresses: {
              "binance-smart-chain":
                "0xb64e280e9d1b5dbec4accedb2257a87b400db149",
              "arbitrum-one": "0xb64e280e9d1b5dbec4accedb2257a87b400db149",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "lever",
            fileName: "LEVER",
            symbol: "lever",
            name: "LeverFi",
            marketCapRank: 599,
            addresses: {
              ethereum: "0x4b5f49487ea7b3609b1ad05459be420548789f1f",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "leverj-gluon",
            fileName: "L2",
            symbol: "l2",
            name: "Leverj Gluon",
            marketCapRank: 2833,
            addresses: {
              ethereum: "0xbbff34e47e559ef680067a6b1c980639eeb64d24",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "lgcy-network",
            fileName: "LGCY",
            symbol: "lgcy",
            name: "LGCY Network",
            marketCapRank: 2132,
            addresses: {
              ethereum: "0xae697f994fc5ebc000f8e22ebffee04612f98a0d",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "libra-incentix",
            fileName: "LIXX",
            symbol: "lixx",
            name: "Libra Incentix",
            marketCapRank: 1050,
            addresses: {
              "binance-smart-chain":
                "0x16530b5c105fcb7c50bc84a039a0a4ed806a5124",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "libre",
            fileName: "LIBRE",
            symbol: "libre",
            name: "Libre",
            marketCapRank: 2207,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "lido-dao",
            fileName: "LDO",
            symbol: "ldo",
            name: "Lido DAO",
            marketCapRank: 55,
            addresses: {
              ethereum: "0x5a98fcbea516cf06857215779fd812ca3bef1b32",
              "optimistic-ethereum":
                "0xfdb794692724153d1488ccdbe0c56c252596735f",
              "polygon-pos": "0xc3c7d422809852031b44ab29eec9f1eff2a58756",
              "arbitrum-one": "0x13ad51ed4f1b7e9dc168d8a00cb3f4ddd85efa60",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "lido-staked-sol",
            fileName: "STSOL",
            symbol: "stsol",
            name: "Lido Staked SOL",
            marketCapRank: 122,
            addresses: {
              solana: "7dHbWXmci3dT8UFYWYZweBLXgycu7Y3iL6trKn1Y7ARj",
            },
            variants: ["branded", "background"],
          },
          {
            id: "lif3",
            fileName: "LIF3",
            symbol: "lif3",
            name: "LIF3 (OLD)",
            marketCapRank: 857,
            addresses: {
              fantom: "0xbf60e7414ef09026733c1e7de72e7393888c64da",
              tombchain: "0x4200000000000000000000000000000000000108",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "limewire-token",
            fileName: "LMWR",
            symbol: "lmwr",
            name: "LimeWire",
            marketCapRank: 602,
            addresses: {
              ethereum: "0x628a3b2e302c7e896acc432d2d0dd22b6cb9bc88",
              "binance-smart-chain":
                "0x307bc76e3d59ed73886a9cf9360a9286f6281ba7",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "linda-2",
            fileName: "LINDA",
            symbol: "linda",
            name: "Linda",
            marketCapRank: 2085,
            addresses: {
              linea: "0x82cc61354d78b846016b559e3ccd766fa7e793d5",
              ethereum: "0x039d2e8f097331278bd6c1415d839310e0d5ece4",
              "binance-smart-chain":
                "0x039d2e8f097331278bd6c1415d839310e0d5ece4",
              avalanche: "0x039d2e8f097331278bd6c1415d839310e0d5ece4",
              "polygon-pos": "0x039d2e8f097331278bd6c1415d839310e0d5ece4",
              "arbitrum-one": "0x039d2e8f097331278bd6c1415d839310e0d5ece4",
            },
            variants: ["branded", "background"],
          },
          {
            id: "linear",
            fileName: "LINA",
            symbol: "lina",
            name: "Linear",
            marketCapRank: 579,
            addresses: {
              ethereum: "0x3e9bc21c9b189c09df3ef1b824798658d5011937",
              "harmony-shard-0": "0x946c8286bd9b52b81f681903210e1a57872fdd85",
              "binance-smart-chain":
                "0x762539b45a1dcce3d36d080f74d1aed37844b878",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "lingose",
            fileName: "LING",
            symbol: "ling",
            name: "Lingose",
            marketCapRank: 1072,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "link",
            fileName: "FNSA",
            symbol: "fnsa",
            name: "FINSCHIA",
            marketCapRank: 286,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "linkeye",
            fileName: "LET",
            symbol: "let",
            name: "Linkeye",
            marketCapRank: 2586,
            addresses: {
              ethereum: "0xfa3118b34522580c35ae27f6cf52da1dbb756288",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "liquiddriver",
            fileName: "LQDR",
            symbol: "lqdr",
            name: "LiquidDriver",
            marketCapRank: 2033,
            addresses: {
              "arbitrum-one": "0x816e21c33fa5f8440ebcdf6e01d39314541bea72",
              fantom: "0x4b6b3d425f82248996d77ecc3f3df1e500aac1db",
              kava: "0x332c72dd7e77070740f01d2d35851c461585d5d0",
              "polygon-pos": "0x0294d8eb7857d43feb1210db72456d41481f9ede",
              "binance-smart-chain":
                "0x4b6b3d425f82248996d77ecc3f3df1e500aac1db",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "liquity",
            fileName: "LQTY",
            symbol: "lqty",
            name: "Liquity",
            marketCapRank: 411,
            addresses: {
              ethereum: "0x6dea81c8171d0ba574754ef6f8b412f2ed88c54d",
              "arbitrum-one": "0xfb9e5d956d889d91a82737b9bfcdac1dce3e1449",
            },
            variants: ["branded", "background"],
          },
          {
            id: "liquity-usd",
            fileName: "LUSD",
            symbol: "lusd",
            name: "Liquity USD",
            marketCapRank: 467,
            addresses: {
              ethereum: "0x5f98805a4e8be255a32880fdec7f6728c6568ba0",
              zksync: "0x503234f203fc7eb888eec8513210612a43cf6115",
              "optimistic-ethereum":
                "0xc40f949f8a4e094d1b49a23ea9241d289b7b2819",
              "arbitrum-one": "0x93b346b6bc2548da6a1e7d98e9a421b42541425b",
              "polygon-pos": "0x23001f892c0c82b79303edc9b9033cd190bb21c7",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "lisk",
            fileName: "LSK",
            symbol: "lsk",
            name: "Lisk",
            marketCapRank: 277,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "litecoin",
            fileName: "LTC",
            symbol: "ltc",
            name: "Litecoin",
            marketCapRank: 22,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "litecoin-cash",
            fileName: "LCC",
            symbol: "lcc",
            name: "Litecoin Cash",
            marketCapRank: 1871,
            addresses: {},
            variants: ["branded", "background"],
          },
          {
            id: "litentry",
            fileName: "LIT",
            symbol: "lit",
            name: "Litentry",
            marketCapRank: 581,
            addresses: {
              ethereum: "0xb59490ab09a0f526cc7305822ac65f2ab12f9723",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "lithium-finance",
            fileName: "LITH",
            symbol: "lith",
            name: "Lithium Finance",
            marketCapRank: 1355,
            addresses: {
              ethereum: "0x188e817b02e635d482ae4d81e25dda98a97c4a42",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "litlab-games",
            fileName: "LITT",
            symbol: "litt",
            name: "LitLab Games",
            marketCapRank: 1316,
            addresses: {
              "binance-smart-chain":
                "0xcebef3df1f3c5bfd90fde603e71f31a53b11944d",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "livepeer",
            fileName: "LPT",
            symbol: "lpt",
            name: "Livepeer",
            marketCapRank: 170,
            addresses: {
              ethereum: "0x58b6a8a3302369daec383334672404ee733ab239",
              "arbitrum-one": "0x289ba1701c2f088cf0faf8b3705246331cb8a839",
              "harmony-shard-0": "0xbd3e698b51d340cc53b0cc549b598c13e0172b7c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "liza-2",
            fileName: "LIZA",
            symbol: "liza",
            name: "LIZA",
            marketCapRank: 1495,
            addresses: {
              ethereum: "0x8b227d72570d3ead66014bca8305cbef7f90d1ee",
            },
            variants: ["branded", "background"],
          },
          {
            id: "localcoinswap",
            fileName: "LCS",
            symbol: "lcs",
            name: "LocalCoinSwap",
            marketCapRank: 2050,
            addresses: {
              ethereum: "0xaa19961b6b858d9f18a115f25aa1d98abc1fdba8",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "lockchain",
            fileName: "LOC",
            symbol: "loc",
            name: "LockTrip",
            marketCapRank: 2036,
            addresses: {
              ethereum: "0x5e3346444010135322268a4630d2ed5f8d09446c",
              hydra: "4ab26aaa1803daa638910d71075c06386e391147",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "lodestar",
            fileName: "LODE",
            symbol: "lode",
            name: "Lodestar",
            marketCapRank: 2176,
            addresses: {
              "arbitrum-one": "0xf19547f9ed24aa66b03c3a552d181ae334fbb8db",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "loki-network",
            fileName: "OXEN",
            symbol: "oxen",
            name: "Oxen",
            marketCapRank: 1437,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "looksrare",
            fileName: "LOOKS",
            symbol: "looks",
            name: "LooksRare",
            marketCapRank: 440,
            addresses: {
              ethereum: "0xf4d2888d29d722226fafa5d9b24f9164c092421e",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "loom-network-new",
            fileName: "LOOM",
            symbol: "loom",
            name: "Loom Network (NEW)",
            marketCapRank: 427,
            addresses: {
              ethereum: "0x42476f744292107e34519f9c357927074ea3f75d",
              energi: "0xb506a79b296b78965f0a5c15e1474b026c23d9fa",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "loopring",
            fileName: "LRC",
            symbol: "lrc",
            name: "Loopring",
            marketCapRank: 197,
            addresses: {
              ethereum: "0xbbbbca6a901c926f240b89eacb641d8aec7aeafd",
              energi: "0x193da10f8a969d4c081b9097b15337b1488cbbec",
              "arbitrum-one": "0x46d0ce7de6247b0a95f67b43b589b4041bae7fbe",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "lords",
            fileName: "LORDS",
            symbol: "lords",
            name: "LORDS",
            marketCapRank: 1032,
            addresses: {
              ethereum: "0x686f2404e77ab0d9070a46cdfb0b7fecdd2318b0",
              starknet:
                "0x0124aeb495b947201f5fac96fd1138e326ad86195b98df6dec9009158a533b49",
            },
            variants: ["mono"],
          },
          {
            id: "lossless",
            fileName: "LSS",
            symbol: "lss",
            name: "Lossless",
            marketCapRank: 1227,
            addresses: {
              ethereum: "0x3b9be07d622accaed78f479bc0edabfd6397e320",
              "binance-smart-chain":
                "0xf7686f43591302cd9b4b9c4fe1291473fae7d9c9",
            },
            variants: ["mono"],
          },
          {
            id: "loungem",
            fileName: "LZM",
            symbol: "lzm",
            name: "LoungeM",
            marketCapRank: 1920,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "lovely-inu-finance",
            fileName: "LOVELY",
            symbol: "lovely",
            name: "Lovely Inu finance",
            marketCapRank: 1533,
            addresses: {
              "binance-smart-chain":
                "0x9e24415d1e549ebc626a13a482bb117a2b43e9cf",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "lto-network",
            fileName: "LTO",
            symbol: "lto",
            name: "LTO Network",
            marketCapRank: 487,
            addresses: {
              ethereum: "0xd01409314acb3b245cea9500ece3f6fd4d70ea30",
              "binance-smart-chain":
                "0x857b222fc79e1cbbf8ca5f78cb133d1b7cf34bbd",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "lua-token",
            fileName: "LUA",
            symbol: "lua",
            name: "LuaSwap",
            marketCapRank: 1528,
            addresses: {
              ethereum: "0xb1f66997a5760428d3a87d68b90bfe0ae64121cc",
              tomochain: "0x7262fa193e9590b2e075c3c16170f3f2f32f5c74",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "luca",
            fileName: "LUCA",
            symbol: "luca",
            name: "LUCA",
            marketCapRank: 1702,
            addresses: {
              "binance-smart-chain":
                "0x51e6ac1533032e72e92094867fd5921e3ea1bfa0",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "lucidao",
            fileName: "LCD",
            symbol: "lcd",
            name: "Lucidao",
            marketCapRank: 1660,
            addresses: {
              "polygon-pos": "0xc2a45fe7d40bcac8369371b08419ddafd3131b4a",
            },
            variants: ["branded", "background"],
          },
          {
            id: "lucro",
            fileName: "LCR",
            symbol: "lcr",
            name: "Lucro",
            marketCapRank: 1784,
            addresses: {
              "binance-smart-chain":
                "0x988f7c894e4001eeb7b570cde80dffe21cf7b6b9",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "lukso-token",
            fileName: "LYXE",
            symbol: "lyxe",
            name: "LUKSO [OLD]",
            marketCapRank: 628,
            addresses: {
              ethereum: "0xa8b919680258d369114910511cc87595aec0be6d",
              "harmony-shard-0": "0x8a8ca151562a68ed3732fd963ec4e0e713b39bb3",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "lukso-token-2",
            fileName: "LYX",
            symbol: "lyx",
            name: "LUKSO",
            marketCapRank: 439,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "luna-inu",
            fileName: "LINU",
            symbol: "linu",
            name: "Luna Inu",
            marketCapRank: 1441,
            addresses: {
              ethereum: "0x78132543d8e20d2417d8a07d9ae199d458a0d581",
            },
            variants: ["branded", "background"],
          },
          {
            id: "lunr-token",
            fileName: "LUNR",
            symbol: "lunr",
            name: "LunarCrush",
            marketCapRank: 1110,
            addresses: {
              zilliqa: "zil1xxl6yp2twxvljdnn87g9fk7wykdrcv66xdy4rc",
              stacks: "SP3K8BC0PPEVCV7NZ6QSRWPQ2JE9E5B6N3PA0KBR9.token-slunr",
              ethereum: "0xa87135285ae208e22068acdbff64b11ec73eaa5a",
              "polygon-pos": "0xbbfe0b60de96a189bf09079de86a2db7bf0c7883",
              "binance-smart-chain":
                "0x37807d4fbeb84124347b8899dd99616090d3e304",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "luxurious-pro-network-token",
            fileName: "LPNT",
            symbol: "lpnt",
            name: "Luxurious Pro Network",
            marketCapRank: 1657,
            addresses: {
              ethereum: "0x6a4c76874e686a7d080d173987a35a9c48905583",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "lybra-finance",
            fileName: "LBR",
            symbol: "lbr",
            name: "Lybra",
            marketCapRank: 1319,
            addresses: {
              ethereum: "0xed1167b6dc64e8a366db86f2e952a482d0981ebd",
              "arbitrum-one": "0xa23e44aea714fbbc08ef28340d78067b9a8cad73",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "lympo",
            fileName: "LYM",
            symbol: "lym",
            name: "Lympo",
            marketCapRank: 1942,
            addresses: {
              ethereum: "0xc690f7c7fcffa6a82b79fab7508c466fefdfc8c5",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "lyra-finance",
            fileName: "LYRA",
            symbol: "lyra",
            name: "Lyra Finance",
            marketCapRank: 544,
            addresses: {
              ethereum: "0x01ba67aac7f75f647d94220cc98fb30fcc5105bf",
              "optimistic-ethereum":
                "0x50c5725949a6f0c72e6c4a641f24049a917db0cb",
              "arbitrum-one": "0x079504b86d38119f859c4194765029f692b7b7aa",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "mad-meerkat-etf",
            fileName: "METF",
            symbol: "metf",
            name: "Mad Meerkat ETF",
            marketCapRank: 2282,
            addresses: { cronos: "0xb8df27c687c6af9afe845a2afad2d01e199f4878" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "mad-meerkat-optimizer",
            fileName: "MMO",
            symbol: "mmo",
            name: "Mad Meerkat Optimizer",
            marketCapRank: 2716,
            addresses: { cronos: "0x50c0c5bda591bc7e89a342a3ed672fb59b3c46a7" },
            variants: ["branded", "background"],
          },
          {
            id: "magic-internet-money",
            fileName: "MIM",
            symbol: "mim",
            name: "Magic Internet Money",
            marketCapRank: 723,
            addresses: {
              ethereum: "0x99d8a9c45b2eca8864373a26d1459e3dff1e17f3",
              blast: "0x76da31d7c9cbeae102aff34d3398bc450c8374c1",
              fantom: "0x82f0b8b456c1a451378467398982d4834b6829c1",
              kava: "0x471EE749bAl270eb4c1165B5AD95E614947f6fCeb",
              avalanche: "0x130966628846bfd36ff31a822705796e8cb8c18d",
              "optimistic-ethereum":
                "0xb153fb3d196a8eb25522705560ac152eeec57901",
              linea: "0xdd3b8084af79b9bae3d1b668c0de08ccc2c9429a",
              "polygon-pos": "0x49a0400587a7f65072c87c4910449fdcc5c47242",
              base: "0x4a3a6dd60a34bb2aba60d73b4c88315e9ceb6a3d",
              moonriver: "0x0cae51e1032e8461f4806e26332c030e34de3adb",
              "arbitrum-one": "0xfea7a6a0b346362bf88a9e4a88416b77a57d6c2a",
              "binance-smart-chain":
                "0xfe19f0b51438fd612f6fd59c1dbb3ea319f433ba",
            },
            variants: ["branded", "background"],
          },
          {
            id: "magiccraft",
            fileName: "MCRT",
            symbol: "mcrt",
            name: "MagicCraft",
            marketCapRank: 1574,
            addresses: {
              "binance-smart-chain":
                "0x4b8285ab433d8f69cb48d5ad62b415ed1a221e4f",
              fantom: "0xe705af5f63fcabdcdf5016aa838eaaac35d12890",
              ethereum: "0xde16ce60804a881e9f8c4ebb3824646edecd478d",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "magpie",
            fileName: "MGP",
            symbol: "mgp",
            name: "Magpie",
            marketCapRank: 925,
            addresses: {
              "binance-smart-chain":
                "0xd06716e1ff2e492cc5034c2e81805562dd3b45fa",
              "arbitrum-one": "0xa61f74247455a40b01b0559ff6274441fafa22a3",
            },
            variants: ["branded", "background"],
          },
          {
            id: "mahadao",
            fileName: "MAHA",
            symbol: "maha",
            name: "MahaDAO",
            marketCapRank: 1627,
            addresses: {
              ethereum: "0x745407c86df8db893011912d3ab28e68b62e49b0",
              "polygon-pos": "0xeb99748e91afca94a6289db3b02e7ef4a8f0a22d",
              "arbitrum-one": "0xedd6ca8a4202d4a36611e2fff109648c4863ae19",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "maiar-dex",
            fileName: "MEX",
            symbol: "mex",
            name: "xExchange",
            marketCapRank: 1008,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "maidsafecoin",
            fileName: "EMAID",
            symbol: "emaid",
            name: "MaidSafeCoin",
            marketCapRank: 1273,
            addresses: {
              ethereum: "0x329c6e459ffa7475718838145e5e85802db2a303",
            },
            variants: ["branded", "background"],
          },
          {
            id: "mainframe",
            fileName: "MFT",
            symbol: "mft",
            name: "Mainframe",
            marketCapRank: 526,
            addresses: {
              ethereum: "0xdf2c7238198ad8b389666574f2d8bc411a4b7428",
              energi: "0x9594e7431144e80178b1bc6849edcba7d2d5bb27",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "maker",
            fileName: "MKR",
            symbol: "mkr",
            name: "Maker",
            marketCapRank: 42,
            addresses: {
              ethereum: "0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2",
              avalanche: "0x88128fd4b259552a9a1d457f435a6527aab72d42",
              "polygon-pos": "0x6f7c932e7684666c9fd1d44527765433e01ff61d",
              energi: "0x050317d93f29d1ba5ff3eac3b8157fd4e345588d",
              sora: "0x00ec184ef0b4bd955db05eea5a8489ae72888ab6e63682a15beca1cd39344c8f",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "mancium",
            fileName: "MANC",
            symbol: "manc",
            name: "Mancium",
            marketCapRank: 1520,
            addresses: {
              ethereum: "0xe0c05ec44775e4ad62cdc2eecdf337aa7a143363",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "mango-markets",
            fileName: "MNGO",
            symbol: "mngo",
            name: "Mango",
            marketCapRank: 1066,
            addresses: {
              solana: "MangoCzJ36AjZyKwVj3VnYU4GTonjfVEnJmvvWaxLac",
              "neon-evm": "0x6d12eaa69f8e4902d3f83d546b31f7318717014c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "mangoman-intelligent",
            fileName: "MMIT",
            symbol: "mmit",
            name: "MangoMan Intelligent",
            marketCapRank: 1443,
            addresses: {
              "binance-smart-chain":
                "0x9767c8e438aa18f550208e6d1fdf5f43541cc2c8",
            },
            variants: ["branded", "background"],
          },
          {
            id: "manifold-finance",
            fileName: "FOLD",
            symbol: "fold",
            name: "Manifold Finance",
            marketCapRank: 836,
            addresses: {
              ethereum: "0xd084944d3c05cd115c09d072b9f44ba3e0e45921",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "mantle",
            fileName: "MNT",
            symbol: "mnt",
            name: "Mantle",
            marketCapRank: 35,
            addresses: {
              ethereum: "0x3c3a81e81dc49a522a592e7622a7e711c06bf354",
              mantle: "0xdeaddeaddeaddeaddeaddeaddeaddeaddead0000",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "mantra-dao",
            fileName: "OM",
            symbol: "om",
            name: "MANTRA",
            marketCapRank: 175,
            addresses: {
              ethereum: "0x3593d125a4f7849a1b059e64f4517a86dd60c95d",
              "polygon-pos": "0xc3ec80343d2bae2f8e680fdadde7c17e71e114ea",
              "binance-smart-chain":
                "0xf78d2e7936f5fe18308a3b2951a93b6c4a41f5e2",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "maple",
            fileName: "MPL",
            symbol: "mpl",
            name: "Maple",
            marketCapRank: 386,
            addresses: {
              ethereum: "0x33349b282065b0284d756f0577fb39c158f935e6",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "maps",
            fileName: "MAPS",
            symbol: "maps",
            name: "MAPS",
            marketCapRank: 2216,
            addresses: {
              solana: "MAPS41MDahZ9QdKXhVa4dWB9RuyfV4XqhyAZ8XcYepb",
              energi: "0x0702bf2abbb53f8feb101a71199965b891dbae97",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "marblex",
            fileName: "MBX",
            symbol: "mbx",
            name: "Marblex",
            marketCapRank: 393,
            addresses: {
              "binance-smart-chain":
                "0xf95a5532d67c944dfa7eddd2f8c358fe0dc7fac2",
              "klay-token": "0xd068c52d81f4409b9502da926ace3301cc41f623",
              aptos:
                "0x665d06fcd9c94430099f82973f2a5e5f13142e42fa172e72ce14f51a64bd8ad9::coin_mbx::MBX",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "marcopolo",
            fileName: "MAP",
            symbol: "map",
            name: "MAP Protocol",
            marketCapRank: 593,
            addresses: {
              ethereum: "0x9e976f211daea0d652912ab99b0dc21a7fd728e4",
            },
            variants: ["branded", "background"],
          },
          {
            id: "marinade",
            fileName: "MNDE",
            symbol: "mnde",
            name: "Marinade",
            marketCapRank: 597,
            addresses: {
              solana: "MNDEFzGvMt87ueuHvVU9VcTqsAP5b3fTGPsHuuPA5ey",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "market-making-pro",
            fileName: "MMPRO",
            symbol: "mmpro",
            name: "Market Making Pro",
            marketCapRank: 1568,
            addresses: {
              "binance-smart-chain":
                "0x6067490d05f3cf2fdffc0e353b1f5fd6e5ccdf70",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "marlin",
            fileName: "POND",
            symbol: "pond",
            name: "Marlin",
            marketCapRank: 284,
            addresses: {
              ethereum: "0x57b946008913b82e4df85f501cbaed910e58d26c",
              "arbitrum-one": "0xda0a57b710768ae17941a9fa33f8b720c8bd9ddd",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "mars4",
            fileName: "MARS4",
            symbol: "mars4",
            name: "MARS4",
            marketCapRank: 1672,
            addresses: {
              ethereum: "0x16cda4028e9e872a38acb903176719299beaed87",
              "binance-smart-chain":
                "0x9cd9c5a44cb8fab39b2ee3556f5c439e65e4fddd",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "marsdao",
            fileName: "MDAO",
            symbol: "mdao",
            name: "MarsDAO",
            marketCapRank: 1302,
            addresses: {
              "binance-smart-chain":
                "0x60322971a672b81bcce5947706d22c19daecf6fb",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "mask-network",
            fileName: "MASK",
            symbol: "mask",
            name: "Mask Network",
            marketCapRank: 180,
            addresses: {
              ethereum: "0x69af81e73a73b40adf4f3d4223cd9b1ece623074",
              energi: "0x746514e2c7d91e1e84c20c54d1f6f537b28a7d8e",
              "polygon-pos": "0x2b9e7ccdf0f4e5b24757c1e1a80e311e34cb10c7",
              "binance-smart-chain":
                "0x2ed9a5c8c13b93955103b9a7c167b67ef4d568a3",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "masq",
            fileName: "MASQ",
            symbol: "masq",
            name: "MASQ",
            marketCapRank: 1514,
            addresses: {
              ethereum: "0x06f3c323f0238c72bf35011071f2b5b7f43a054c",
              "polygon-pos": "0xee9a352f6aac4af1a5b9f467f6a93e0ffbe9dd35",
              tomochain: "0xea478716a70dc086707e23de17965acb5c7b7840",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "mass-vehicle-ledger",
            fileName: "MVL",
            symbol: "mvl",
            name: "MVL",
            marketCapRank: 367,
            addresses: {
              ethereum: "0xa849eaae994fb86afa73382e9bd88c2b6b18dc71",
              "binance-smart-chain":
                "0x5f588efaf8eb57e3837486e834fc5a4e07768d98",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "materium",
            fileName: "MTRM",
            symbol: "mtrm",
            name: "Materium",
            marketCapRank: 2088,
            addresses: {
              ethereum: "0xcd17fa52528f37facb3028688e62ec82d9417581",
            },
            variants: ["branded", "background"],
          },
          {
            id: "math",
            fileName: "MATH",
            symbol: "math",
            name: "MATH",
            marketCapRank: 915,
            addresses: {
              ethereum: "0x08d967bb0134f2d07f7cfb6e246680c53927dd30",
              "arbitrum-one": "0x99f40b01ba9c469193b360f72740e416b17ac332",
              "binance-smart-chain":
                "0xf218184af829cf2b0019f8e6f0b2423498a36983",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "matic-network",
            fileName: "MATIC",
            symbol: "matic",
            name: "Polygon",
            marketCapRank: 20,
            addresses: {
              ethereum: "0x7d1afa7b718fb893db30a3abc0cfc608aacfebb0",
              sora: "0x009134d5c7b7fda8863985531f456f89bef5fbd76684a8acdb737b3e451d0877",
              energi: "0x98997e1651919faeacee7b96afbb3dfd96cb6036",
              "polygon-pos": "0x0000000000000000000000000000000000001010",
              "harmony-shard-0": "0x301259f392b551ca8c592c9f676fcd2f9a0a84c5",
              moonriver: "0x682f81e57eaa716504090c3ecba8595fb54561d8",
              moonbeam: "0x3405a1bd46b85c5c029483fbecf2f3e611026e45",
              "binance-smart-chain":
                "0xcc42724c6683b7e57334c4e856f4c9965ed682bd",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "matrix-ai-network",
            fileName: "MAN",
            symbol: "man",
            name: "Matrix AI Network",
            marketCapRank: 1126,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "maverick-protocol",
            fileName: "MAV",
            symbol: "mav",
            name: "Maverick Protocol",
            marketCapRank: 390,
            addresses: {
              ethereum: "0x7448c7456a97769f6cd04f1e83a4a23ccdc46abd",
              zksync: "0x787c09494ec8bcb24dcaf8659e7d5d69979ee508",
              "binance-smart-chain":
                "0xd691d9a68c887bdf34da8c36f63487333acfd103",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "maxity",
            fileName: "MAX",
            symbol: "max",
            name: "Maxity",
            marketCapRank: 1764,
            addresses: {
              ethereum: "0x63f7b1b538a78cb699e5399621b3d2e047c40de4",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "mbd-financials",
            fileName: "MBD",
            symbol: "mbd",
            name: "MBD Financials",
            marketCapRank: 1727,
            addresses: {
              "binance-smart-chain":
                "0xf899e83e6c6df1a0d4887cf0209193aa97236322",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "mcdex",
            fileName: "MCB",
            symbol: "mcb",
            name: "MUX Protocol",
            marketCapRank: 809,
            addresses: {
              ethereum: "0x4e352cf164e64adcbad318c3a1e222e9eba4ce42",
              "arbitrum-one": "0x4e352cf164e64adcbad318c3a1e222e9eba4ce42",
              "binance-smart-chain":
                "0x5fe80d2cd054645b9419657d3d10d26391780a7b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "mch-coin",
            fileName: "MCHC",
            symbol: "mchc",
            name: "MCH Coin",
            marketCapRank: 2065,
            addresses: {
              ethereum: "0xd69f306549e9d96f183b1aeca30b8f4353c2ecc3",
              "polygon-pos": "0xee7666aacaefaa6efeef62ea40176d3eb21953b9",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "mcontent",
            fileName: "MCONTENT",
            symbol: "mcontent",
            name: "MContent",
            marketCapRank: 1662,
            addresses: {
              "binance-smart-chain":
                "0x799e1cf88a236e42b4a87c544a22a94ae95a6910",
              ethereum: "0xd3c51de3e6dd9b53d7f37699afb3ee3bf9b9b3f4",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "mcpepe-s",
            fileName: "PEPES",
            symbol: "pepes",
            name: "McPepe's",
            marketCapRank: 2582,
            addresses: {
              ethereum: "0x6bf765c43030387a983f429c1438e9d2025b7e12",
            },
            variants: ["branded", "background"],
          },
          {
            id: "mdex",
            fileName: "MDX",
            symbol: "mdx",
            name: "Mdex (HECO)",
            marketCapRank: 753,
            addresses: {
              "huobi-token": "0x25d2e80cb6b86881fd7e07dd263fb79f4abe033c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "meanfi",
            fileName: "MEAN",
            symbol: "mean",
            name: "Mean DAO",
            marketCapRank: 1685,
            addresses: {
              solana: "MEANeD3XDdUmNMsRGjASkSWdC8prLYsoRJ61pPeHctD",
              ethereum: "0x9b25889c493ae6df34ceef1ecb10d77c1ba73318",
              "polygon-pos": "0x4867b60ad7c6adc98653f661f1aea31740986ba5",
              "binance-smart-chain":
                "0x6c9297be2e3ce9c10c480a25b7157a43fd992942",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "measurable-data-token",
            fileName: "MDT",
            symbol: "mdt",
            name: "Measurable Data",
            marketCapRank: 656,
            addresses: {
              ethereum: "0x814e0908b12a99fecf5bc101bb5d0b8b5cdf7d26",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "media-network",
            fileName: "MEDIA",
            symbol: "media",
            name: "Media Network",
            marketCapRank: 1771,
            addresses: {
              solana: "ETAtLmCmsoiEEKfNrHKJ2kYy3MoABhU6NQvpSfij5tDs",
              ethereum: "0xdb726152680ece3c9291f1016f1d36f3995f6941",
              base: "0x6e51b3a19f114013e5dc09d0477a536c7e4e0207",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "medibloc",
            fileName: "MED",
            symbol: "med",
            name: "Medibloc",
            marketCapRank: 427,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "medicinal-pork",
            fileName: "MORK",
            symbol: "mork",
            name: "Medicinal Pork",
            marketCapRank: null,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "meeds-dao",
            fileName: "MEED",
            symbol: "meed",
            name: "Meeds DAO",
            marketCapRank: 1934,
            addresses: {
              ethereum: "0x8503a7b00b4b52692cc6c14e5b96f142e30547b7",
              "polygon-pos": "0x6aca77cf3bab0c4e8210a09b57b07854a995289a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "meld-2",
            fileName: "MELD",
            symbol: "meld",
            name: "MELD",
            marketCapRank: 590,
            addresses: {
              cardano:
                "a2944573e99d2ed3055b808eaa264f0bf119e01fc6b18863067c63e44d454c44",
              avalanche: "0x333000333b26ee30214b4af6419d9ab07a450400",
              ethereum: "0x333000333b26ee30214b4af6419d9ab07a450400",
            },
            variants: ["branded", "background"],
          },
          {
            id: "melon",
            fileName: "MLN",
            symbol: "mln",
            name: "Enzyme",
            marketCapRank: 914,
            addresses: {
              ethereum: "0xec67005c4e498ec7f55e092bd1d35cbc47c91892",
              "polygon-pos": "0xa9f37d84c856fda3812ad0519dad44fa0a3fe207",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "meme-ai-coin",
            fileName: "MEMEAI",
            symbol: "memeai",
            name: "Meme AI Coin",
            marketCapRank: 1774,
            addresses: {
              ethereum: "0x695d38eb4e57e0f137e36df7c1f0f2635981246b",
            },
            variants: ["branded", "background"],
          },
          {
            id: "memecoin",
            fileName: "MEME",
            symbol: "meme",
            name: "Memecoin",
            marketCapRank: 169,
            addresses: {
              ethereum: "0xb131f4a55907b10d1f0a50d8ab8fa09ec342cd74",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "meridian-mst",
            fileName: "MST",
            symbol: "mst",
            name: "Meridian MST",
            marketCapRank: 2663,
            addresses: { base: "0x2f3b1a07e3efb1fcc64bd09b86bd0fa885d93552" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "merit-circle",
            fileName: "MC",
            symbol: "mc",
            name: "Merit Circle",
            marketCapRank: 550,
            addresses: {
              ethereum: "0x949d48eca67b17269629c7194f4b727d4ef9e5d6",
              "binance-smart-chain":
                "0x949d48eca67b17269629c7194f4b727d4ef9e5d6",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "messier",
            fileName: "M87",
            symbol: "m87",
            name: "MESSIER",
            marketCapRank: 1724,
            addresses: {
              ethereum: "0x80122c6a83c8202ea365233363d3f4837d13e888",
            },
            variants: ["mono"],
          },
          {
            id: "meta",
            fileName: "MTA",
            symbol: "mta",
            name: "mStable Governance: Meta",
            marketCapRank: 2478,
            addresses: {
              ethereum: "0xa3bed4e1c75d00fa6f4e5e6922db7261b5e9acd2",
              "optimistic-ethereum":
                "0x929b939f8524c3be977af57a4a0ad3fb1e374b50",
              "polygon-pos": "0xf501dd45a1198c2e1b5aef5314a68b9006d842e0",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "meta-apes-peel",
            fileName: "PEEL",
            symbol: "peel",
            name: "Meta Apes PEEL",
            marketCapRank: 1868,
            addresses: {
              "binance-smart-chain":
                "0x734548a9e43d2d564600b1b2ed5be9c2b911c6ab",
            },
            variants: ["branded", "background"],
          },
          {
            id: "metacade",
            fileName: "MCADE",
            symbol: "mcade",
            name: "Metacade",
            marketCapRank: 873,
            addresses: {
              ethereum: "0xed328e9c1179a30ddc1e7595e036aed8760c22af",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "metadium",
            fileName: "META",
            symbol: "meta",
            name: "Metadium",
            marketCapRank: 562,
            addresses: {
              ethereum: "0xde2f7766c8bf14ca67193128535e5c7454f8387c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "metafighter",
            fileName: "MF",
            symbol: "mf",
            name: "MetaFighter",
            marketCapRank: 2479,
            addresses: {
              "binance-smart-chain":
                "0xbb6cdedac5cab4a420211a4a8e8b5dca879b31de",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "metahero",
            fileName: "HERO",
            symbol: "hero",
            name: "Metahero",
            marketCapRank: 831,
            addresses: {
              "binance-smart-chain":
                "0xd40bedb44c081d2935eeba6ef5a3c8a31a1bbe13",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "metal",
            fileName: "MTL",
            symbol: "mtl",
            name: "Metal DAO",
            marketCapRank: 425,
            addresses: {
              ethereum: "0xf433089366899d83a9f26a773d59ec7ecf30355e",
              energi: "0xd2d28530a79634423154c1fd5bdb7c1b0216cd1a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "metaplex",
            fileName: "MPLX",
            symbol: "mplx",
            name: "Metaplex",
            marketCapRank: 473,
            addresses: {
              solana: "METAewgxyPbgwsseH8T16a39CQ5VyVxZi9zXiDPY18m",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "metars-genesis",
            fileName: "MRS",
            symbol: "mrs",
            name: "Metars Genesis",
            marketCapRank: 417,
            addresses: {
              "binance-smart-chain":
                "0x238d02ee3f80fbf5e381f049616025c186889b68",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "metastrike",
            fileName: "MTS",
            symbol: "mts",
            name: "Metastrike",
            marketCapRank: 2036,
            addresses: {
              "binance-smart-chain":
                "0x496cc0b4ee12aa2ac4c42e93067484e7ff50294b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "metavault-dao",
            fileName: "MVD",
            symbol: "mvd",
            name: "Metavault DAO",
            marketCapRank: 2603,
            addresses: {
              ethereum: "0x788b6d2b37aa51d916f2837ae25b05f0e61339d1",
              "arbitrum-one": "0x15a808ed3846d25e88ae868de79f1bcb1ac382b5",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "metavault-trade",
            fileName: "MVX",
            symbol: "mvx",
            name: "Metavault Trade",
            marketCapRank: 1898,
            addresses: {
              "polygon-pos": "0x2760e46d9bb43dafcbecaad1f64b93207f9f0ed7",
              linea: "0x0018d96c579121a94307249d47f053e2d687b5e7",
              scroll: "0x0018d96c579121a94307249d47f053e2d687b5e7",
              zksync: "0xc8ac6191cdc9c7bf846ad6b52aaaa7a0757ee305",
            },
            variants: ["branded", "background"],
          },
          {
            id: "metaverse-etp",
            fileName: "ETP",
            symbol: "etp",
            name: "Metaverse ETP",
            marketCapRank: 2358,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "metaverse-index",
            fileName: "MVI",
            symbol: "mvi",
            name: "Metaverse Index",
            marketCapRank: 1587,
            addresses: {
              ethereum: "0x72e364f2abdc788b7e918bc238b21f109cd634d7",
              "polygon-pos": "0xfe712251173a2cd5f5be2b46bb528328ea3565e1",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "metaverse-network-pioneer",
            fileName: "NEER",
            symbol: "neer",
            name: "MNet Pioneer",
            marketCapRank: 1872,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "metaverser",
            fileName: "MTVT",
            symbol: "mtvt",
            name: "Metaverser",
            marketCapRank: 2435,
            addresses: {
              "binance-smart-chain":
                "0xb92c5e0135a510a4a3a8803f143d2cb085bbaf73",
            },
            variants: ["branded", "background"],
          },
          {
            id: "metavpad",
            fileName: "METAV",
            symbol: "metav",
            name: "MetaVPad",
            marketCapRank: 2381,
            addresses: {
              "binance-smart-chain":
                "0x62858686119135cc00c4a3102b436a0eb314d402",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "meter",
            fileName: "MTRG",
            symbol: "mtrg",
            name: "Meter Governance",
            marketCapRank: 626,
            addresses: {
              meter: "0x228ebbee999c6a7ad74a6130e81b12f9fe237ba3",
              "binance-smart-chain":
                "0xbd2949f67dcdc549c6ebe98696449fa79d988a9f",
              theta: "0xbd2949f67dcdc549c6ebe98696449fa79d988a9f",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "metfi-2",
            fileName: "METFI",
            symbol: "metfi",
            name: "MetFi",
            marketCapRank: 1875,
            addresses: {
              "binance-smart-chain":
                "0x3e7f1039896454b9cb27c53cc7383e1ab9d9512a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "metis-token",
            fileName: "METIS",
            symbol: "metis",
            name: "Metis",
            marketCapRank: 186,
            addresses: {
              ethereum: "0x9e32b13ce7f2e80a01932b42553652e053d6ed8e",
              "metis-andromeda": "0xdeaddeaddeaddeaddeaddeaddeaddeaddead0000",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "metronome",
            fileName: "MET",
            symbol: "met",
            name: "Metronome",
            marketCapRank: 1553,
            addresses: {
              ethereum: "0x2ebd53d035150f328bd754d6dc66b99b0edb89aa",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "mettalex",
            fileName: "MTLX",
            symbol: "mtlx",
            name: "Mettalex",
            marketCapRank: 1191,
            addresses: {
              ethereum: "0x2e1e15c44ffe4df6a0cb7371cd00d5028e571d14",
              "binance-smart-chain":
                "0x5921dee8556c4593eefcfad3ca5e2f618606483b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "microvisionchain",
            fileName: "SPACE",
            symbol: "space",
            name: "MicrovisionChain",
            marketCapRank: 736,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "milady-meme-coin",
            fileName: "LADYS",
            symbol: "ladys",
            name: "Milady Meme Coin",
            marketCapRank: 315,
            addresses: {
              ethereum: "0x12970e6868f88f6557b76120662c1b3e50a646bf",
              "arbitrum-one": "0x3b60ff35d3f7f62d636b067dd0dc0dfdad670e4e",
            },
            variants: ["branded", "background"],
          },
          {
            id: "milk-alliance",
            fileName: "MLK",
            symbol: "mlk",
            name: "MiL.k Alliance",
            marketCapRank: 430,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "million",
            fileName: "MM",
            symbol: "mm",
            name: "Million",
            marketCapRank: 2347,
            addresses: {
              ethereum: "0x6b4c7a5e3f0b99fcd83e9c089bddd6c7fce5c611",
              "binance-smart-chain":
                "0xbf05279f9bf1ce69bbfed670813b7e431142afa4",
              tomochain: "0x0f320856fa4bc7e4030a6ab989d494c5e4d58308",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "mimatic",
            fileName: "MIMATIC",
            symbol: "mimatic",
            name: "MAI",
            marketCapRank: 1122,
            addresses: {
              "polygon-pos": "0xa3fa99a148fa48d14ed51d610c367c61876997f1",
              moonriver: "0x7f5a79576620c046a293f54ffcdbd8f2468174f1",
              xdai: "0x3f56e0c36d275367b8c502090edf38289b3dea0d",
              iotex: "0x3f56e0c36d275367b8c502090edf38289b3dea0d",
              cronos: "0x2ae35c8e3d4bd57e8898ff7cd2bbff87166ef8cb",
              "metis-andromeda": "0xdfa46478f9e5ea86d57387849598dbfb2e964b02",
              aurora: "0xdfa46478f9e5ea86d57387849598dbfb2e964b02",
              "harmony-shard-0": "0x3f56e0c36d275367b8c502090edf38289b3dea0d",
              boba: "0x3f56e0c36d275367b8c502090edf38289b3dea0d",
              moonbeam: "0xdfa46478f9e5ea86d57387849598dbfb2e964b02",
              "milkomeda-cardano": "0xb9c8f0d3254007ee4b98970b94544e473cd610ec",
              syscoin: "0x2611fa1cae2a3e20ed47fb1b293437c14f41b00f",
              "klay-token": "0x3f56e0c36d275367b8c502090edf38289b3dea0d",
              celo: "0xb9c8f0d3254007ee4b98970b94544e473cd610ec",
              solana: "9mWRABuz2x6koTPCWiCPM49WUbcrNqGTHBV9T9k7y1o7",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "mimblewimblecoin",
            fileName: "MWC",
            symbol: "mwc",
            name: "MimbleWimbleCoin",
            marketCapRank: 462,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "mimo-parallel-governance-token",
            fileName: "MIMO",
            symbol: "mimo",
            name: "Mimo Governance",
            marketCapRank: 1672,
            addresses: {
              ethereum: "0x90b831fa3bebf58e9744a14d638e25b4ee06f9bc",
              fantom: "0x1d1764f04de29da6b90ffbef372d1a45596c4855",
              "polygon-pos": "0xadac33f543267c4d59a8c299cf804c303bc3e4ac",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "mina-protocol",
            fileName: "MINA",
            symbol: "mina",
            name: "Mina Protocol",
            marketCapRank: 90,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "minativerse",
            fileName: "MNTC",
            symbol: "mntc",
            name: "MINATIVERSE",
            marketCapRank: 1601,
            addresses: {
              "binance-smart-chain":
                "0xe4e11e02aa14c7f24db749421986eaec1369e8c9",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "mind-language",
            fileName: "MND",
            symbol: "mnd",
            name: "Mind",
            marketCapRank: 1472,
            addresses: {
              ethereum: "0xa0dd6dd7775e93eb842db0aa142c9c581031ed3b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "mineable",
            fileName: "MNB",
            symbol: "mnb",
            name: "Mineable",
            marketCapRank: 3384,
            addresses: {
              ethereum: "0x42b91f1d05afea671a2da3c780eda2abf0a2a366",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "mineral",
            fileName: "MNR",
            symbol: "mnr",
            name: "Mineral",
            marketCapRank: 2078,
            addresses: {
              "klay-token": "0x27dcd181459bcddc63c37bab1e404a313c0dfd79",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "minswap",
            fileName: "MIN",
            symbol: "min",
            name: "Minswap",
            marketCapRank: 828,
            addresses: {
              cardano:
                "29d222ce763455e3d7a09a665ce554f00ac89d2e99a1a83d267170c6",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "minted",
            fileName: "MTD",
            symbol: "mtd",
            name: "Minted",
            marketCapRank: 1475,
            addresses: {
              cronos: "0x0224010ba2d567ffa014222ed960d1fa43b8c8e1",
              ethereum: "0x809e130e10e787139c54e1d12d3d1971b7a675bf",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "mintlayer",
            fileName: "ML",
            symbol: "ml",
            name: "Mintlayer",
            marketCapRank: 839,
            addresses: {
              ethereum: "0x059956483753947536204e89bfad909e1a434cc6",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "minto",
            fileName: "BTCMT",
            symbol: "btcmt",
            name: "Minto",
            marketCapRank: 1888,
            addresses: {
              "huobi-token": "0x410a56541bd912f9b60943fcb344f1e3d6f09567",
              "binance-smart-chain":
                "0x410a56541bd912f9b60943fcb344f1e3d6f09567",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "minu",
            fileName: "MINU",
            symbol: "minu",
            name: "Minu",
            marketCapRank: 2024,
            addresses: {
              "binance-smart-chain":
                "0xf48f91df403976060cc05dbbf8a0901b09fdefd4",
            },
            variants: ["branded", "background"],
          },
          {
            id: "mirror-protocol",
            fileName: "MIR",
            symbol: "mir",
            name: "Mirror Protocol",
            marketCapRank: 1424,
            addresses: {
              ethereum: "0x09a3ecafa817268f77be1283176b946c4ff2e608",
              energi: "0x7e58cef7c589e0e1771b9c049cba313fdec31976",
              "binance-smart-chain":
                "0x5b6dcf557e2abe2323c48445e8cc948910d8c2c9",
              terra: "terra15gwkyepfc6xgca5t5zefzwy42uts8l2m4g40k6",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "mixmarvel",
            fileName: "MIX",
            symbol: "mix",
            name: "MixMarvel",
            marketCapRank: 1052,
            addresses: {
              ethereum: "0x5d285f735998f36631f678ff41fb56a10a4d0429",
              "binance-smart-chain":
                "0xcf1b55d79e824da0ae0652f96c66fe33263d743f",
            },
            variants: ["branded", "background"],
          },
          {
            id: "mixmob",
            fileName: "MXM",
            symbol: "mxm",
            name: "MixMob",
            marketCapRank: 1458,
            addresses: {
              solana: "H53UGEyBrB9easo9ego8yYk7o4Zq1G5cCtkxD3E3hZav",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "mizar",
            fileName: "MZR",
            symbol: "mzr",
            name: "Mizar",
            marketCapRank: 1998,
            addresses: {
              "arbitrum-one": "0xbbea044f9e7c0520195e49ad1e561572e7e1b948",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "mmfinance",
            fileName: "MMF",
            symbol: "mmf",
            name: "MMFinance (Cronos)",
            marketCapRank: 1749,
            addresses: { cronos: "0x97749c9b61f878a880dfe312d2594ae07aed7656" },
            variants: ["branded", "background"],
          },
          {
            id: "mobius",
            fileName: "MOBI",
            symbol: "mobi",
            name: "Mobius",
            marketCapRank: 1774,
            addresses: {
              stellar:
                "OBI-GA6HCMBLTZS5VYYBCATRBRZ3BZJMAFUDKYYF6AH6MVCMGWMRDNSWJPIH",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "mobox",
            fileName: "MBOX",
            symbol: "mbox",
            name: "Mobox",
            marketCapRank: 457,
            addresses: {
              "binance-smart-chain":
                "0x3203c9e46ca618c8c1ce5dc67e7e9d75f5da2377",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "moby",
            fileName: "MOBY",
            symbol: "moby",
            name: "Moby",
            marketCapRank: 1215,
            addresses: {
              ethereum: "0x40a7df3df8b56147b781353d379cb960120211d7",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "mochi-thecatcoin",
            fileName: "MOCHI",
            symbol: "mochi",
            name: "Mochi",
            marketCapRank: 734,
            addresses: { base: "0xf6e932ca12afa26665dc4dde7e27be02a7c02e50" },
            variants: ["branded", "background"],
          },
          {
            id: "modefi",
            fileName: "MOD",
            symbol: "mod",
            name: "Modefi",
            marketCapRank: 2482,
            addresses: {
              ethereum: "0xea1ea0972fa092dd463f2968f9bb51cc4c981d71",
              fantom: "0xe64b9fd040d1f9d4715c645e0d567ef69958d3d9",
              "binance-smart-chain":
                "0xd4fbc57b6233f268e7fba3b66e62719d74deecbc",
              "polygon-pos": "0x8346ab8d5ea7a9db0209aed2d1806afa0e2c4c21",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "moe-3",
            fileName: "MOE",
            symbol: "moe",
            name: "MOE",
            marketCapRank: 1591,
            addresses: { mantle: "0x4515a45337f461a11ff0fe8abf3c606ae5dc00c9" },
            variants: ["branded", "background"],
          },
          {
            id: "mog-coin",
            fileName: "MOG",
            symbol: "mog",
            name: "Mog Coin",
            marketCapRank: 270,
            addresses: {
              ethereum: "0xaaee1a9723aadb7afa2810263653a34ba2c21c7a",
            },
            variants: ["branded", "background"],
          },
          {
            id: "monavale",
            fileName: "MONA",
            symbol: "mona",
            name: "Monavale",
            marketCapRank: 2327,
            addresses: {
              ethereum: "0x275f5ad03be0fa221b4c6649b8aee09a42d9412a",
              "polygon-pos": "0x6968105460f67c3bf751be7c15f92f5286fd0ce5",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "monero",
            fileName: "XMR",
            symbol: "xmr",
            name: "Monero",
            marketCapRank: 57,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "monetha",
            fileName: "MTH",
            symbol: "mth",
            name: "Monetha",
            marketCapRank: 2675,
            addresses: {
              ethereum: "0xaf4dce16da2877f8c9e00544c93b62ac40631f16",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "moon",
            fileName: "MOON",
            symbol: "moon",
            name: "r/CryptoCurrency Moons",
            marketCapRank: 1104,
            addresses: {
              "arbitrum-nova": "0x0057ac2d777797d31cd3f8f13bf5e927571d6ad0",
              "arbitrum-one": "0x24404dc041d74cd03cfe28855f555559390c931b",
            },
            variants: ["branded", "background"],
          },
          {
            id: "moon-tropica",
            fileName: "CAH",
            symbol: "cah",
            name: "Moon Tropica",
            marketCapRank: 544,
            addresses: {
              ethereum: "0x8e0e57dcb1ce8d9091df38ec1bfc3b224529754a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "moonbeam",
            fileName: "GLMR",
            symbol: "glmr",
            name: "Moonbeam",
            marketCapRank: 215,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "moonedge",
            fileName: "MOONED",
            symbol: "mooned",
            name: "MoonEdge",
            marketCapRank: 2107,
            addresses: {
              "polygon-pos": "0x7e4c577ca35913af564ee2a24d882a4946ec492b",
            },
            variants: ["branded", "background"],
          },
          {
            id: "moonriver",
            fileName: "MOVR",
            symbol: "movr",
            name: "Moonriver",
            marketCapRank: 352,
            addresses: {
              moonriver: "0x98878b06940ae243284ca214f92bb71a2b032b8a",
              meter: "0xb158870beb809ad955bf56065c5c10d7fd957cc0",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "moonstarter",
            fileName: "MNST",
            symbol: "mnst",
            name: "MoonStarter",
            marketCapRank: 2455,
            addresses: {
              "binance-smart-chain":
                "0x6a6ccf15b38da4b5b0ef4c8fe9fefcb472a893f9",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "moonwell-artemis",
            fileName: "WELL",
            symbol: "well",
            name: "Moonwell",
            marketCapRank: 549,
            addresses: {
              moonbeam: "0x511ab53f793683763e5a8829738301368a2411e3",
              base: "0xff8adec2221f9f4d8dfbafa6b9a297d17603493d",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "morpheus-labs",
            fileName: "MIND",
            symbol: "mind",
            name: "Morpheus Labs",
            marketCapRank: 2245,
            addresses: {
              ethereum: "0xc9eb61ffb66d5815d643bbb8195e17c49687ae1e",
              "polygon-pos": "0x280053c54006a624c26989cb8354fa4cb86f14d1",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "morpheus-network",
            fileName: "MNW",
            symbol: "mnw",
            name: "Morpheus Network",
            marketCapRank: 821,
            addresses: {
              ethereum: "0xd3e4ba569045546d09cf021ecc5dfe42b1d7f6e4",
              "polygon-pos": "0x3c59798620e5fec0ae6df1a19c6454094572ab92",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "mossland",
            fileName: "MOC",
            symbol: "moc",
            name: "Mossland",
            marketCapRank: 737,
            addresses: {
              ethereum: "0x865ec58b06bf6305b886793aa20a2da31d034e68",
            },
            variants: ["branded", "background"],
          },
          {
            id: "moviebloc",
            fileName: "MBL",
            symbol: "mbl",
            name: "MovieBloc",
            marketCapRank: 500,
            addresses: { ontology: "e5a49d7fd57e7178e189d3965d1ee64368a1036d" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "msol",
            fileName: "MSOL",
            symbol: "msol",
            name: "Marinade staked SOL",
            marketCapRank: 100,
            addresses: {
              solana: "mSoLzYCxHdYgdzU16g5QSh3i5K3z3KZK7ytfqcJm7So",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "mt-pelerin-shares",
            fileName: "MPS",
            symbol: "mps",
            name: "Mt Pelerin Shares",
            marketCapRank: 2254,
            addresses: {
              ethereum: "0x96c645d3d3706f793ef52c19bbace441900ed47d",
              xdai: "0xfa57aa7beed63d03aaf85ffd1753f5f6242588fb",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "multivac",
            fileName: "MTV",
            symbol: "mtv",
            name: "MultiVAC",
            marketCapRank: 1708,
            addresses: {
              ethereum: "0x6226e00bcac68b0fe55583b90a1d727c14fab77f",
              "binance-smart-chain":
                "0x8aa688ab789d1848d131c65d98ceaa8875d97ef1",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "mummy-finance",
            fileName: "MMY",
            symbol: "mmy",
            name: "Mummy Finance",
            marketCapRank: 2126,
            addresses: {
              fantom: "0x01e77288b38b416f972428d562454fb329350bac",
              "optimistic-ethereum":
                "0x47536f17f4ff30e64a96a7555826b8f9e66ec468",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "musd",
            fileName: "MUSD",
            symbol: "musd",
            name: "mStable USD",
            marketCapRank: 2075,
            addresses: {
              ethereum: "0xe2f2a5c287993345a840db3b0845fbc70f5935a5",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "muse-2",
            fileName: "MUSE",
            symbol: "muse",
            name: "Muse DAO",
            marketCapRank: 1176,
            addresses: {
              ethereum: "0xb6ca7399b4f9ca56fc27cbff44f4d2e4eef1fc81",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "mute",
            fileName: "MUTE",
            symbol: "mute",
            name: "Mute",
            marketCapRank: 1109,
            addresses: {
              ethereum: "0xa49d7499271ae71cd8ab9ac515e6694c755d400c",
              zksync: "0x0e97c7a0f8b2c9885c8ac9fc6136e829cbc21d42",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "mx-token",
            fileName: "MX",
            symbol: "mx",
            name: "MX",
            marketCapRank: 214,
            addresses: {
              ethereum: "0x11eef04c884e24d9b7b4760e7476d06ddf797f36",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "mxc",
            fileName: "MXC",
            symbol: "mxc",
            name: "MXC",
            marketCapRank: 736,
            addresses: {
              ethereum: "0x5ca381bbfb58f0092df149bd3d243b08b9a8386e",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "my-defi-pet",
            fileName: "DPET",
            symbol: "dpet",
            name: "My DeFi Pet",
            marketCapRank: 1848,
            addresses: {
              "binance-smart-chain":
                "0xfb62ae373aca027177d1c18ee0862817f9080d08",
              kardiachain: "0xfb62ae373aca027177d1c18ee0862817f9080d08",
              ethereum: "0xfb62ae373aca027177d1c18ee0862817f9080d08",
            },
            variants: ["branded", "background"],
          },
          {
            id: "my-neighbor-alice",
            fileName: "ALICE",
            symbol: "alice",
            name: "My Neighbor Alice",
            marketCapRank: 386,
            addresses: {
              ethereum: "0xac51066d7bec65dc4589368da368b212745d63e8",
              "binance-smart-chain":
                "0xac51066d7bec65dc4589368da368b212745d63e8",
            },
            variants: ["branded", "background"],
          },
          {
            id: "myria",
            fileName: "MYRIA",
            symbol: "myria",
            name: "Myria",
            marketCapRank: 378,
            addresses: {
              ethereum: "0xa0ef786bf476fe0810408caba05e536ac800ff86",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "mysterium",
            fileName: "MYST",
            symbol: "myst",
            name: "Mysterium",
            marketCapRank: 1808,
            addresses: {
              ethereum: "0x4cf89ca06ad997bc732dc876ed2a7f26a9e7f361",
              "polygon-pos": "0x1379e8886a944d2d9d440b3d88df536aea08d9f3",
              "binance-smart-chain":
                "0x2ff0b946a6782190c4fe5d4971cfe79f0b6e4df2",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "nabox",
            fileName: "NABOX",
            symbol: "nabox",
            name: "Nabox",
            marketCapRank: 2245,
            addresses: {
              ethereum: "0x03d1e72765545729a035e909edd9371a405f77fb",
              "binance-smart-chain":
                "0x755f34709e369d37c6fa52808ae84a32007d1155",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "nada-protocol-token",
            fileName: "NADA",
            symbol: "nada",
            name: "NADA Protocol Token",
            marketCapRank: 1453,
            addresses: { "hedera-hashgraph": "0.0.4622883" },
            variants: ["branded", "background"],
          },
          {
            id: "naga",
            fileName: "NGC",
            symbol: "ngc",
            name: "NAGA",
            marketCapRank: 2005,
            addresses: {
              ethereum: "0x72dd4b6bd852a3aa172be4d6c5a6dbec588cf131",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "nakamoto-games",
            fileName: "NAKA",
            symbol: "naka",
            name: "Nakamoto Games",
            marketCapRank: 422,
            addresses: {
              "polygon-pos": "0x311434160d7537be358930def317afb606c0d737",
            },
            variants: ["branded", "background"],
          },
          {
            id: "nals",
            fileName: "NALS",
            symbol: "nals",
            name: "NALS",
            marketCapRank: 2073,
            addresses: {
              ordinals:
                "fd8a5b4d53d9afb37ee2845bb5bb70a490373293bf281728bbe712ee9b0872dbi0",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "nano",
            fileName: "XNO",
            symbol: "xno",
            name: "Nano",
            marketCapRank: 326,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "nanobyte",
            fileName: "NBT",
            symbol: "nbt",
            name: "NanoByte",
            marketCapRank: 2081,
            addresses: {
              "binance-smart-chain":
                "0x1d3437e570e93581bd94b2fd8fbf202d4a65654a",
              ethereum: "0x446f2a8a39cc730ef378be759a3c57f1a3fe824c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "naos-finance",
            fileName: "NAOS",
            symbol: "naos",
            name: "NAOS Finance",
            marketCapRank: 1836,
            addresses: {
              ethereum: "0x4a615bb7166210cce20e6642a6f8fb5d4d044496",
              "binance-smart-chain":
                "0x758d08864fb6cce3062667225ca10b8f00496cc2",
            },
            variants: ["branded", "background"],
          },
          {
            id: "napoli-fan-token",
            fileName: "NAP",
            symbol: "nap",
            name: "Napoli Fan Token",
            marketCapRank: 1823,
            addresses: { chiliz: "0xbe7f1ebb1fd6246844e093b04991ae0e66d12c77" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "nav-coin",
            fileName: "NAV",
            symbol: "nav",
            name: "Navcoin",
            marketCapRank: 1997,
            addresses: {
              "binance-smart-chain":
                "0xbfef6ccfc830d3baca4f6766a0d4aaa242ca9f3d",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "near",
            fileName: "NEAR",
            symbol: "near",
            name: "NEAR Protocol",
            marketCapRank: 23,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "neighbourhoods",
            fileName: "NHT",
            symbol: "nht",
            name: "Neighbourhoods",
            marketCapRank: 1888,
            addresses: {
              ethereum: "0x84342e932797fc62814189f01f0fb05f52519708",
              "polygon-pos": "0x84342e932797fc62814189f01f0fb05f52519708",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "nem",
            fileName: "XEM",
            symbol: "xem",
            name: "NEM",
            marketCapRank: 201,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "neo",
            fileName: "NEO",
            symbol: "neo",
            name: "NEO",
            marketCapRank: 105,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "neon",
            fileName: "NEON",
            symbol: "neon",
            name: "Neon",
            marketCapRank: 537,
            addresses: {
              solana: "NeonTjSjsuo3rexg9o6vHuMXw62f9V7zvmu8M8Zut44",
            },
            variants: ["branded", "background"],
          },
          {
            id: "neon-exchange",
            fileName: "NEX",
            symbol: "nex",
            name: "Nash",
            marketCapRank: 1664,
            addresses: {
              neo: "3a4acd3647086e7c44398aac0349802e6a171129",
              ethereum: "0xe2dc070524a6e305ddb64d8513dc444b6a1ec845",
              "polygon-pos": "0xa486c6bc102f409180ccb8a94ba045d39f8fc7cb",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "neos-credits",
            fileName: "NCR",
            symbol: "ncr",
            name: "Neos Credits",
            marketCapRank: 2047,
            addresses: {
              ethereum: "0xdb5c3c46e28b53a39c255aa39a411dd64e5fed9c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "neptune-mutual",
            fileName: "NPM",
            symbol: "npm",
            name: "Neptune Mutual",
            marketCapRank: 2110,
            addresses: {
              ethereum: "0x57f12fe6a4e5fe819eec699fadf9db2d06606bb4",
              "arbitrum-one": "0x57f12fe6a4e5fe819eec699fadf9db2d06606bb4",
              "polygon-pos": "0x57f12fe6a4e5fe819eec699fadf9db2d06606bb4",
              "binance-smart-chain":
                "0x57f12fe6a4e5fe819eec699fadf9db2d06606bb4",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "nervenetwork",
            fileName: "NVT",
            symbol: "nvt",
            name: "NerveNetwork",
            marketCapRank: 1684,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "nervos-network",
            fileName: "CKB",
            symbol: "ckb",
            name: "Nervos Network",
            marketCapRank: 129,
            addresses: {},
            variants: ["branded", "background"],
          },
          {
            id: "nest",
            fileName: "NEST",
            symbol: "nest",
            name: "Nest Protocol",
            marketCapRank: 1083,
            addresses: {
              ethereum: "0xcd6926193308d3b371fdd6a6219067e550000000",
              "binance-smart-chain":
                "0xcd6926193308d3b371fdd6a6219067e550000000",
            },
            variants: ["mono", "background", "branded"],
          },
          {
            id: "netswap",
            fileName: "NETT",
            symbol: "nett",
            name: "Netswap",
            marketCapRank: 1761,
            addresses: {
              "metis-andromeda": "0x90fe084f877c65e1b577c7b2ea64b8d8dd1ab278",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "neurai",
            fileName: "XNA",
            symbol: "xna",
            name: "Neurai",
            marketCapRank: 981,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "neuroni-ai",
            fileName: "NEURONI",
            symbol: "neuroni",
            name: "Neuroni AI",
            marketCapRank: 1901,
            addresses: {
              ethereum: "0x922e2708462c7a3d014d8344f7c4d92b27ecf332",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "neutrino-system-base-token",
            fileName: "NSBT",
            symbol: "nsbt",
            name: "Neutrino System Base",
            marketCapRank: 2335,
            addresses: {
              waves: "6nSpVyNH7yM69eg446wrQR94ipbbcmZMU1ENPwanC97g",
              ethereum: "0x9d79d5b61de59d882ce90125b18f74af650acb93",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "new-order",
            fileName: "NEWO",
            symbol: "newo",
            name: "New Order",
            marketCapRank: 2453,
            addresses: {
              ethereum: "0x98585dfc8d9e7d48f0b1ae47ce33332cf4237d96",
              avalanche: "0x4bfc90322dd638f81f034517359bd447f8e0235a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "newscrypto-coin",
            fileName: "NWC",
            symbol: "nwc",
            name: "Newscrypto Coin",
            marketCapRank: 1045,
            addresses: {
              stellar:
                "NWC-GDZJD363YP7P3TNYDK3ZD6GLXFMAI3GLVIH7CGFLNZWIZBQUCVE6PTU7",
              ethereum: "0x968f6f898a6df937fc1859b323ac2f14643e3fed",
              "binance-smart-chain":
                "0x968f6f898a6df937fc1859b323ac2f14643e3fed",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "nexacoin",
            fileName: "NEXA",
            symbol: "nexa",
            name: "Nexa",
            marketCapRank: 1011,
            addresses: {},
            variants: ["branded", "background"],
          },
          {
            id: "nexo",
            fileName: "NEXO",
            symbol: "nexo",
            name: "NEXO",
            marketCapRank: 143,
            addresses: {
              ethereum: "0xb62132e35a6c13ee1ee0f84dc5d40bad8d815206",
              energi: "0x04640dc771edd73cbeb934fb5461674830baea11",
              "polygon-pos": "0x41b3966b4ff7b427969ddf5da3627d6aeae9a48e",
              fantom: "0x7c598c96d02398d89fbcb9d41eab3df0c16f227d",
              sora: "0x003005b2417b5046455e73f7fc39779a013f1a33b4518bcd83a790900dca49ff",
            },
            variants: ["branded", "background"],
          },
          {
            id: "nft-art-finance",
            fileName: "NFTART",
            symbol: "nftart",
            name: "NFT Art Finance",
            marketCapRank: 2397,
            addresses: {
              "binance-smart-chain":
                "0xf7844cb890f4c339c497aeab599abdc3c874b67a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "nft-worlds",
            fileName: "WRLD",
            symbol: "wrld",
            name: "NFT Worlds",
            marketCapRank: 909,
            addresses: {
              ethereum: "0xd5d86fc8d5c0ea1ac1ac5dfab6e529c9967a45e9",
              "polygon-pos": "0xd5d86fc8d5c0ea1ac1ac5dfab6e529c9967a45e9",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "nftb",
            fileName: "NFTB",
            symbol: "nftb",
            name: "NFTb",
            marketCapRank: 1841,
            addresses: {
              "binance-smart-chain":
                "0xde3dbbe30cfa9f437b293294d1fd64b26045c71a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "nftbooks",
            fileName: "NFTBS",
            symbol: "nftbs",
            name: "NFTBooks",
            marketCapRank: 2296,
            addresses: {
              "polygon-pos": "0x6396252377f54ad33cff9131708da075b21d9b88",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "nftx",
            fileName: "NFTX",
            symbol: "nftx",
            name: "NFTX",
            marketCapRank: 1625,
            addresses: {
              ethereum: "0x87d73e916d7057945c9bcd8cdd94e42a6f47f776",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "nimiq-2",
            fileName: "NIM",
            symbol: "nim",
            name: "Nimiq",
            marketCapRank: 1202,
            addresses: {},
            variants: ["branded", "background"],
          },
          {
            id: "nitro-cartel",
            fileName: "TROVE",
            symbol: "trove",
            name: "Arbitrove Governance Token",
            marketCapRank: 2377,
            addresses: {
              "arbitrum-one": "0x982239d38af50b0168da33346d85fb12929c4c07",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "nix-bridge-token",
            fileName: "VOICE",
            symbol: "voice",
            name: "Voice",
            marketCapRank: 1946,
            addresses: {
              ethereum: "0x2e2364966267b5d7d2ce6cd9a9b5bd19d9c7c6a9",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "nkn",
            fileName: "NKN",
            symbol: "nkn",
            name: "NKN",
            marketCapRank: 454,
            addresses: {
              ethereum: "0x5cf04716ba20127f1e2297addcf4b5035000c9eb",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "nodle-network",
            fileName: "NODL",
            symbol: "nodl",
            name: "Nodle Network",
            marketCapRank: 973,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "noia-network",
            fileName: "NOIA",
            symbol: "noia",
            name: "Syntropy",
            marketCapRank: 349,
            addresses: {
              ethereum: "0xa8c8cfb141a3bb59fea1e2ea6b79b5ecbcd7b6ca",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "nolus",
            fileName: "NLS",
            symbol: "nls",
            name: "Nolus",
            marketCapRank: 1322,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "nominex",
            fileName: "NMX",
            symbol: "nmx",
            name: "Nominex",
            marketCapRank: 2532,
            addresses: {
              "binance-smart-chain":
                "0xd32d01a43c869edcd1117c640fbdcfcfd97d9d65",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "non-playable-coin",
            fileName: "NPC",
            symbol: "npc",
            name: "Non-Playable Coin",
            marketCapRank: 1173,
            addresses: {
              ethereum: "0x8ed97a637a790be1feff5e888d43629dc05408f6",
              base: "0xb166e8b140d35d9d8226e40c09f757bac5a4d87d",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "nord-finance",
            fileName: "NORD",
            symbol: "nord",
            name: "Nord Finance",
            marketCapRank: 2574,
            addresses: {
              ethereum: "0x6e9730ecffbed43fd876a264c982e254ef05a0de",
              fantom: "0xeaf26191ac1d35ae30baa19a5ad5558dd8156aef",
              "binance-smart-chain":
                "0x6e9730ecffbed43fd876a264c982e254ef05a0de",
              "polygon-pos": "0xf6f85b3f9fd581c2ee717c404f7684486f057f95",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "nosana",
            fileName: "NOS",
            symbol: "nos",
            name: "Nosana",
            marketCapRank: 223,
            addresses: {
              solana: "nosXBVoaCTtYdLvKY6Csb4AC8JCdQKKAaWYtx2ZMoo7",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "not-financial-advice",
            fileName: "NFAI",
            symbol: "nfai",
            name: "Not Financial Advice",
            marketCapRank: 2394,
            addresses: {
              ethereum: "0x17c50d62e6e8d20d2dc18e9ad79c43263d0720d9",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "nucleon-xcfx",
            fileName: "XCFX",
            symbol: "xcfx",
            name: "Nucleon xCFX",
            marketCapRank: 1490,
            addresses: {
              conflux: "0x889138644274a7dc602f25a7e7d53ff40e6d0091",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "nuco-cloud",
            fileName: "NCDT",
            symbol: "ncdt",
            name: "nuco.cloud",
            marketCapRank: 990,
            addresses: {
              ethereum: "0xe0c8b298db4cffe05d1bea0bb1ba414522b33c1b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "nuls",
            fileName: "NULS",
            symbol: "nuls",
            name: "NULS",
            marketCapRank: 554,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "numbers-protocol",
            fileName: "NUM",
            symbol: "num",
            name: "Numbers Protocol",
            marketCapRank: 610,
            addresses: {
              ethereum: "0x3496b523e5c00a4b4150d6721320cddb234c3079",
              "binance-smart-chain":
                "0xeceb87cf00dcbf2d4e2880223743ff087a995ad9",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "numeraire",
            fileName: "NMR",
            symbol: "nmr",
            name: "Numeraire",
            marketCapRank: 319,
            addresses: {
              ethereum: "0x1776e1f26f98b1a5df9cd347953a26dd3cb46671",
              energi: "0xd72922e849477a042a7e6dc84309f4bc1c1227a2",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "nunet",
            fileName: "NTX",
            symbol: "ntx",
            name: "NuNet",
            marketCapRank: 778,
            addresses: {
              ethereum: "0xf0d33beda4d734c72684b5f9abbebf715d0a7935",
              cardano:
                "edfd7a1d77bcb8b884c474bdc92a16002d1fb720e454fa6e993444794e5458",
              "binance-smart-chain":
                "0x5c4bcc4dbaeabc7659f6435bce4e659314ebad87",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "nuritopia",
            fileName: "NBLU",
            symbol: "nblu",
            name: "Nuritopia",
            marketCapRank: 2275,
            addresses: {
              "binance-smart-chain":
                "0x6ba5657bbff83cb579503847c6baa47295ef79a8",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "nusd",
            fileName: "SUSD",
            symbol: "susd",
            name: "sUSD",
            marketCapRank: 772,
            addresses: {
              ethereum: "0x57ab1ec28d129707052df4df418d58a2d46d5f51",
              fantom: "0x0e1694483ebb3b74d3054e383840c6cf011e518e",
              "optimistic-ethereum":
                "0x8c6f28f2f1a3c87f0f938b96d27520d9751ec8d9",
              "arbitrum-one": "0xa970af1a584579b618be4d69ad6f73459d112f95",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "nvirworld",
            fileName: "NVIR",
            symbol: "nvir",
            name: "NvirWorld",
            marketCapRank: 1128,
            addresses: {
              ethereum: "0x9d71ce49ab8a0e6d2a1e7bfb89374c9392fd6804",
              "binance-smart-chain":
                "0x9d71ce49ab8a0e6d2a1e7bfb89374c9392fd6804",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "nxm",
            fileName: "NXM",
            symbol: "nxm",
            name: "Nexus Mutual",
            marketCapRank: 271,
            addresses: {
              ethereum: "0xd7c49cee7e9188cca6ad8ff264c1da2e69d4cf3b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "nxt",
            fileName: "NXT",
            symbol: "nxt",
            name: "NXT",
            marketCapRank: 2496,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "nym",
            fileName: "NYM",
            symbol: "nym",
            name: "Nym",
            marketCapRank: 358,
            addresses: {
              ethereum: "0x525a8f6f3ba4752868cde25164382bfbae3990e1",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "o3-swap",
            fileName: "O3",
            symbol: "o3",
            name: "O3 Swap",
            marketCapRank: 2442,
            addresses: {
              "binance-smart-chain":
                "0xee9801669c6138e84bd50deb500827b776777d28",
              fantom: "0xee9801669c6138e84bd50deb500827b776777d28",
              avalanche: "0xee9801669c6138e84bd50deb500827b776777d28",
              "optimistic-ethereum":
                "0xee9801669c6138e84bd50deb500827b776777d28",
              ethereum: "0xee9801669c6138e84bd50deb500827b776777d28",
              "huobi-token": "0xee9801669c6138e84bd50deb500827b776777d28",
              "arbitrum-one": "0xee9801669c6138e84bd50deb500827b776777d28",
              "polygon-pos": "0xee9801669c6138e84bd50deb500827b776777d28",
              "okex-chain": "0xee9801669c6138e84bd50deb500827b776777d28",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "oasis-network",
            fileName: "ROSE",
            symbol: "rose",
            name: "Oasis Network",
            marketCapRank: 120,
            addresses: {
              "binance-smart-chain":
                "0xf00600ebc7633462bc4f9c61ea2ce99f5aaebd4a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "oasys",
            fileName: "OAS",
            symbol: "oas",
            name: "Oasys",
            marketCapRank: 376,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "oath",
            fileName: "OATH",
            symbol: "oath",
            name: "OATH",
            marketCapRank: 1923,
            addresses: {
              fantom: "0x21ada0d2ac28c3a5fa3cd2ee30882da8812279b6",
              ethereum: "0xd20523b39faf1d6e9023a4d6085f87b7b0de7926",
              "polygon-pos": "0x7c603c3c0c97a565cf202c94ab5298bf8510f7dc",
              "arbitrum-one": "0x00e1724885473b63bce08a9f0a52f35b0979e35a",
              "optimistic-ethereum":
                "0x00e1724885473b63bce08a9f0a52f35b0979e35a",
              avalanche: "0xad090976ce846935dcff1ded852668beed912916",
              "binance-smart-chain":
                "0x73f4c95af5c2892253c068850b8c9a753636f58d",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "obortech",
            fileName: "OBOT",
            symbol: "obot",
            name: "Obortech",
            marketCapRank: 1287,
            addresses: {
              ethereum: "0xedadeb5faa413e6c8623461849dfd0b7c3790c32",
              "binance-smart-chain":
                "0xb5be8d87fce6ce87a24b90abdb019458a8ec31f9",
              "polygon-pos": "0x221743dc9e954be4f86844649bf19b43d6f8366d",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "observer-coin",
            fileName: "OBSR",
            symbol: "obsr",
            name: "Observer",
            marketCapRank: 1204,
            addresses: {
              "klay-token": "0x3cb6be2fc6677a63cb52b07aed523f93f5a06cb4",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ocean-protocol",
            fileName: "OCEAN",
            symbol: "ocean",
            name: "Ocean Protocol",
            marketCapRank: 131,
            addresses: {
              ethereum: "0x967da4048cd07ab37855c090aaf366e4ce1b9f48",
              sora: "0x002ca40397c794e25dba18cf807910eeb69eb8e81b3f07bb54f7c5d1d8ab76b9",
              energi: "0x99a17fb61fbdc4e42f6b0f496fe92ba820ce5d2b",
              "optimistic-ethereum":
                "0x2561aa2bb1d2eb6629edd7b0938d7679b8b49f9e",
              "polygon-pos": "0x282d8efce846a88b159800bd4130ad77443fa1a1",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "oceanex",
            fileName: "OCE",
            symbol: "oce",
            name: "OceanEX",
            marketCapRank: 2198,
            addresses: {
              vechain: "0x0ce6661b4ba86a0ea7ca2bd86a0de87b0b860f14",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "octaspace",
            fileName: "OCTA",
            symbol: "octa",
            name: "OctaSpace",
            marketCapRank: 898,
            addresses: {},
            variants: ["branded", "background"],
          },
          {
            id: "octavia",
            fileName: "VIA",
            symbol: "via",
            name: "Octavia",
            marketCapRank: 1342,
            addresses: {
              "binance-smart-chain":
                "0x21ac3bb914f90a2bb1a16088e673a9fdda641434",
            },
            variants: ["mono"],
          },
          {
            id: "octo-gaming",
            fileName: "OTK",
            symbol: "otk",
            name: "Octokn",
            marketCapRank: 1082,
            addresses: {
              solana: "octo82drBEdm8CSDaEKBymVn86TBtgmPnDdmE64PTqJ",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "octus-bridge",
            fileName: "BRIDGE",
            symbol: "bridge",
            name: "Octus Bridge",
            marketCapRank: 1560,
            addresses: {
              everscale:
                "0:f2679d80b682974e065e03bf42bbee285ce7c587eb153b41d761ebfd954c45e1",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "oddz",
            fileName: "ODDZ",
            symbol: "oddz",
            name: "Oddz",
            marketCapRank: 2444,
            addresses: {
              ethereum: "0xcd2828fc4d8e8a0ede91bb38cf64b1a81de65bf6",
              avalanche: "0xb0a6e056b587d0a85640b39b1cb44086f7a26a1e",
              "binance-smart-chain":
                "0xcd40f2670cf58720b694968698a5514e924f742d",
              "polygon-pos": "0x4e830f67ec499e69930867f9017aeb5b3f629c73",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "odin-protocol",
            fileName: "ODIN",
            symbol: "odin",
            name: "Odin Protocol",
            marketCapRank: 2318,
            addresses: {
              cosmos:
                "ibc/c360ef34a86d334f625e4cbb7da3223aea97174b61f35bb3758081a8160f7d9b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "oec-token",
            fileName: "OKT",
            symbol: "okt",
            name: "OKT Chain",
            marketCapRank: 234,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "offshift",
            fileName: "XFT",
            symbol: "xft",
            name: "Offshift",
            marketCapRank: 1713,
            addresses: {
              ethereum: "0x76bc677d444f1e9d57daf5187ee2b7dc852745ae",
              "binance-smart-chain":
                "0xe138c66982fd5c890c60b94fdba1747faf092c20",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "oggy-inu",
            fileName: "OGGY",
            symbol: "oggy",
            name: "Oggy Inu",
            marketCapRank: 1823,
            addresses: {
              "binance-smart-chain":
                "0x92ed61fb8955cc4e392781cb8b7cd04aadc43d0c",
            },
            variants: ["branded", "background"],
          },
          {
            id: "okb",
            fileName: "OKB",
            symbol: "okb",
            name: "OKB",
            marketCapRank: 39,
            addresses: {
              ethereum: "0x75231f58b43240c9718dd58b4967c5114342a86c",
              "okex-chain": "0xdf54b6c6195ea4d948d03bfd818d365cf175cfc2",
              sora: "0x0080edc40a944d29562b2dea2de42ed27b9047d16eeea27c5bc1b2e02786abe9",
            },
            variants: ["mono"],
          },
          {
            id: "okratech-token",
            fileName: "ORT",
            symbol: "ort",
            name: "Okratech",
            marketCapRank: 1820,
            addresses: {
              "binance-smart-chain":
                "0x9e711221b34a2d4b8f552bd5f4a6c4e7934920f7",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "omax-token",
            fileName: "OMAX",
            symbol: "omax",
            name: "Omax",
            marketCapRank: 1412,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "omisego",
            fileName: "OMG",
            symbol: "omg",
            name: "OMG Network",
            marketCapRank: 400,
            addresses: {
              ethereum: "0xd26114cd6ee289accf82350c8d8487fedb8a0c07",
              boba: "0xe1e2ec9a85c607092668789581251115bcbd20de",
            },
            variants: ["mono"],
          },
          {
            id: "ommniverse",
            fileName: "OMMI",
            symbol: "ommi",
            name: "Ommniverse",
            marketCapRank: 1603,
            addresses: {
              "polygon-pos": "0xbc2659ead8d2d13a157a75bfc5acc156e1ea06df",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "omnicat",
            fileName: "OMNI",
            symbol: "omni",
            name: "OmniCat",
            marketCapRank: 843,
            addresses: {
              ethereum: "0x9e20461bc2c4c980f62f1b279d71734207a6a356",
              blast: "0x9e20461bc2c4c980f62f1b279d71734207a6a356",
              canto: "0x9e20461bc2c4c980f62f1b279d71734207a6a356",
              "polygon-pos": "0x9e20461bc2c4c980f62f1b279d71734207a6a356",
              "arbitrum-one": "0x9e20461bc2c4c980f62f1b279d71734207a6a356",
              base: "0xc48e605c7b722a57277e087a6170b9e227e5ac0a",
              "binance-smart-chain":
                "0x9e20461bc2c4c980f62f1b279d71734207a6a356",
              solana: "7mmXL6Et4SbpDs2iXoZQ3oPEeXeAiyETxh1QjDNi5qnV",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "onbuff",
            fileName: "ONIT",
            symbol: "onit",
            name: "ONBUFF",
            marketCapRank: 953,
            addresses: {
              ethereum: "0x410e731c2970dce3add351064acf5ce9e33fdbf0",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "one-ledger",
            fileName: "OLT",
            symbol: "olt",
            name: "OneLedger",
            marketCapRank: 2452,
            addresses: {
              ethereum: "0x64a60493d888728cf42616e034a0dfeae38efcf0",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "onerare",
            fileName: "ORARE",
            symbol: "orare",
            name: "OneRare",
            marketCapRank: 2400,
            addresses: {
              "polygon-pos": "0xff2382bd52efacef02cc895bcbfc4618608aa56f",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ong",
            fileName: "ONG",
            symbol: "ong",
            name: "Ontology Gas",
            marketCapRank: 398,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "oni-token",
            fileName: "ONI",
            symbol: "oni",
            name: "ONINO",
            marketCapRank: 1389,
            addresses: {
              "binance-smart-chain":
                "0xea89199344a492853502a7a699cc4230854451b8",
              fantom: "0x667c856f1a624baefe89fc4909c8701296c86c98",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "onomy-protocol",
            fileName: "NOM",
            symbol: "nom",
            name: "Onomy Protocol",
            marketCapRank: 869,
            addresses: {
              osmosis:
                "ibc/B9606D347599F0F2FDF82BA3EE339000673B7D274EA50F59494DC51EFCD42163",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "onooks",
            fileName: "OOKS",
            symbol: "ooks",
            name: "Onooks",
            marketCapRank: 1811,
            addresses: {
              ethereum: "0x69d9905b2e5f6f5433212b7f3c954433f23c1572",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ontology",
            fileName: "ONT",
            symbol: "ont",
            name: "Ontology",
            marketCapRank: 254,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ooki",
            fileName: "OOKI",
            symbol: "ooki",
            name: "Ooki",
            marketCapRank: 1245,
            addresses: {
              ethereum: "0x0de05f6447ab4d22c8827449ee4ba2d5c288379b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "openanx",
            fileName: "OAX",
            symbol: "oax",
            name: "OAX",
            marketCapRank: 1420,
            addresses: {
              ethereum: "0x701c244b988a513c945973defa05de933b23fe1d",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "openocean",
            fileName: "OOE",
            symbol: "ooe",
            name: "OpenOcean",
            marketCapRank: 1422,
            addresses: {
              "binance-smart-chain":
                "0x8ea5219a16c2dbf1d6335a6aa0c6bd45c50347c5",
              "arbitrum-one": "0xdcbf4cb83d27c408b30dd7f39bfcabd7176b1ba3",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "opium",
            fileName: "OPIUM",
            symbol: "opium",
            name: "Opium",
            marketCapRank: 2179,
            addresses: {
              ethereum: "0x888888888889c00c67689029d7856aac1065ec11",
              "binance-smart-chain":
                "0x566cedd201f67e542a6851a2959c1a449a041945",
              "polygon-pos": "0xe8f157e041df3b28151b667364e9c90789da7923",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "optimism",
            fileName: "OP",
            symbol: "op",
            name: "Optimism",
            marketCapRank: 40,
            addresses: {
              "optimistic-ethereum":
                "0x4200000000000000000000000000000000000042",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "optimus-ai",
            fileName: "OPTI",
            symbol: "opti",
            name: "Optimus AI",
            marketCapRank: 927,
            addresses: {
              ethereum: "0x562e362876c8aee4744fc2c6aac8394c312d215d",
            },
            variants: ["branded", "background"],
          },
          {
            id: "opulous",
            fileName: "OPUL",
            symbol: "opul",
            name: "Opulous",
            marketCapRank: 451,
            addresses: {
              ethereum: "0x80d55c03180349fff4a229102f62328220a96444",
              "arbitrum-one": "0x0c5fa0e07949f941a6c2c29a008252db1527d6ee",
              algorand: "287867876",
              "binance-smart-chain":
                "0x686318000d982bc8dcc1cdcf8ffd22322f0960ed",
            },
            variants: ["mono"],
          },
          {
            id: "oraichain-token",
            fileName: "ORAI",
            symbol: "orai",
            name: "Oraichain",
            marketCapRank: 313,
            addresses: {
              ethereum: "0x4c11249814f11b9346808179cf06e71ac328c1b5",
              "binance-smart-chain":
                "0xa325ad6d9c92b55a3fc5ad7e412b1518f96441c0",
            },
            variants: ["branded", "background"],
          },
          {
            id: "orbofi-ai",
            fileName: "OBI",
            symbol: "obi",
            name: "Orbofi AI",
            marketCapRank: 1296,
            addresses: {
              ethereum: "0xbb3a8fd6ec4bf0fdc6cd2739b1e41192d12b1873",
              "binance-smart-chain":
                "0x69a87c8788d4a48c1362b3b357d0e6b59c11d93f",
            },
            variants: ["branded", "background"],
          },
          {
            id: "orbs",
            fileName: "ORBS",
            symbol: "orbs",
            name: "Orbs",
            marketCapRank: 343,
            addresses: {
              ethereum: "0xff56cc6b1e6ded347aa0b7676c85ab0b3d08b0fa",
              fantom: "0x43a8cab15d06d3a5fe5854d714c37e7e9246f170",
              avalanche: "0x3ab1c9adb065f3fca0059652cd7a52b05c98f9a9",
              "arbitrum-one": "0xf3c091ed43de9c270593445163a41a876a0bb3dd",
              "binance-smart-chain":
                "0x43a8cab15d06d3a5fe5854d714c37e7e9246f170",
              "polygon-pos": "0x614389eaae0a6821dc49062d56bda3d9d45fa2ff",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "orchid-protocol",
            fileName: "OXT",
            symbol: "oxt",
            name: "Orchid Protocol",
            marketCapRank: 555,
            addresses: {
              ethereum: "0x4575f41308ec1483f3d399aa9a2826d74da13deb",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ordinals",
            fileName: "ORDI",
            symbol: "ordi",
            name: "ORDI",
            marketCapRank: 87,
            addresses: {
              ordinals:
                "b61b0172d95e266c18aea0c624db987e971a5d6d4ebc2aaed85da4642d635735i0",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "origin-dollar",
            fileName: "OUSD",
            symbol: "ousd",
            name: "Origin Dollar",
            marketCapRank: 1466,
            addresses: {
              ethereum: "0x2a8e1e676ec238d8a992307b495b45b3feaa5e86",
              astar: "0x29f6e49c6e3397c3a84f715885f9f233a441165c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "origin-ether",
            fileName: "OETH",
            symbol: "oeth",
            name: "Origin Ether",
            marketCapRank: 403,
            addresses: {
              ethereum: "0x856c4efb76c1d1ae02e20ceb03a2a6a08b0b8dc3",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "origin-protocol",
            fileName: "OGN",
            symbol: "ogn",
            name: "Origin Protocol",
            marketCapRank: 490,
            addresses: {
              ethereum: "0x8207c1ffc5b6804f6024322ccf34f29c3541ae26",
              sora: "0x0064c02f602195e298780323c79a0eb5b4fd0ffcad68d440a7ca7725bc79d912",
              energi: "0x1e3eed9c1eba5e5114d4c185dc71d13c3c66dd84",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "origintrail",
            fileName: "TRAC",
            symbol: "trac",
            name: "OriginTrail",
            marketCapRank: 195,
            addresses: {
              ethereum: "0xaa7a9ca87d3694b5755f213b5d04094b8d0f0a6f",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "orion-protocol",
            fileName: "ORN",
            symbol: "orn",
            name: "Orion",
            marketCapRank: 605,
            addresses: {
              ethereum: "0x0258f474786ddfd37abce6df6bbb1dd5dfc4434a",
              energi: "0x5e2d55bc07b63b18af6c9ed8da06cd33258ebb35",
              "binance-smart-chain":
                "0xe4ca1f75eca6214393fce1c1b316c237664eaa8e",
            },
            variants: ["branded", "background"],
          },
          {
            id: "osaka-protocol",
            fileName: "OSAK",
            symbol: "osak",
            name: "Osaka Protocol",
            marketCapRank: 317,
            addresses: {
              ethereum: "0xa21af1050f7b26e0cff45ee51548254c41ed6b5c",
              "optimistic-ethereum":
                "0xbfd5206962267c7b4b4a8b3d76ac2e1b2a5c4d5e",
              "arbitrum-one": "0xbfd5206962267c7b4b4a8b3d76ac2e1b2a5c4d5e",
              avalanche: "0x96e1056a8814de39c8c3cd0176042d6cecd807d7",
              "polygon-pos": "0x11cd72f7a4b699c67f225ca8abb20bc9f8db90c7",
              base: "0xbfd5206962267c7b4b4a8b3d76ac2e1b2a5c4d5e",
              "binance-smart-chain":
                "0x11cd72f7a4b699c67f225ca8abb20bc9f8db90c7",
            },
            variants: ["branded", "background"],
          },
          {
            id: "osmosis",
            fileName: "OSMO",
            symbol: "osmo",
            name: "Osmosis",
            marketCapRank: 121,
            addresses: {
              evmos: "0xfa3c22c069b9556a4b2f7ece1ee3b467909f4864",
              secret: "secret150jec8mc2hzyyqak4umv6cfevelr0x9p0mjxgg",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "outer-ring",
            fileName: "GQ",
            symbol: "gq",
            name: "Blink Galaxy",
            marketCapRank: 1500,
            addresses: {
              "binance-smart-chain":
                "0xf700d4c708c2be1463e355f337603183d20e0808",
            },
            variants: ["branded", "background"],
          },
          {
            id: "ovr",
            fileName: "OVR",
            symbol: "ovr",
            name: "Ovr",
            marketCapRank: 1075,
            addresses: {
              ethereum: "0x21bfbda47a0b4b5b1248c767ee49f7caa9b23697",
              "binance-smart-chain":
                "0x7e35d0e9180bf3a1fc47b0d110be7a21a10b41fe",
              "polygon-pos": "0x1631244689ec1fecbdd22fb5916e920dfc9b8d30",
            },
            variants: ["branded", "background"],
          },
          {
            id: "ox-fun",
            fileName: "OX",
            symbol: "ox",
            name: "OX Coin",
            marketCapRank: 822,
            addresses: {
              ethereum: "0xba0dda8762c24da9487f5fa026a9b64b695a07ea",
              "arbitrum-one": "0xba0dda8762c24da9487f5fa026a9b64b695a07ea",
              "binance-smart-chain":
                "0xba0dda8762c24da9487f5fa026a9b64b695a07ea",
              avalanche: "0xba0dda8762c24da9487f5fa026a9b64b695a07ea",
              "polygon-pos": "0xba0dda8762c24da9487f5fa026a9b64b695a07ea",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "oxbull-tech-2",
            fileName: "OXB",
            symbol: "oxb",
            name: "Oxbull Tech",
            marketCapRank: 1387,
            addresses: {
              "binance-smart-chain":
                "0x7536c00711e41df6aebcca650791107645b6bc52",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "oxygen",
            fileName: "OXY",
            symbol: "oxy",
            name: "Oxygen",
            marketCapRank: 1309,
            addresses: {
              solana: "z3dn17yLaGMKffVogeFHQ9zWVcXgqgf3PQnDsNs2g6M",
              ethereum: "0x965697b4ef02f0de01384d0d4f9f782b1670c163",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ozone-chain",
            fileName: "OZO",
            symbol: "ozo",
            name: "Ozone Chain",
            marketCapRank: 537,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "paal-ai",
            fileName: "PAAL",
            symbol: "paal",
            name: "PAAL AI",
            marketCapRank: 222,
            addresses: {
              ethereum: "0x14fee680690900ba0cccfc76ad70fd1b95d10e16",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "paccoin",
            fileName: "PAC",
            symbol: "pac",
            name: "PAC Protocol",
            marketCapRank: 2533,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "paid-network",
            fileName: "PAID",
            symbol: "paid",
            name: "PAID Network",
            marketCapRank: 665,
            addresses: {
              ethereum: "0x1614f18fc94f47967a3fbe5ffcd46d4e7da3d787",
              "binance-smart-chain":
                "0xad86d0e9764ba90ddd68747d64bffbd79879a238",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "paint-swap",
            fileName: "BRUSH",
            symbol: "brush",
            name: "Paint Swap",
            marketCapRank: 1414,
            addresses: { fantom: "0x85dec8c4b2680793661bca91a8f129607571863d" },
            variants: ["branded", "background"],
          },
          {
            id: "paladin",
            fileName: "PAL",
            symbol: "pal",
            name: "Paladin",
            marketCapRank: 2293,
            addresses: {
              ethereum: "0xab846fb6c81370327e784ae7cbb6d6a6af6ff4bf",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "palm-ai",
            fileName: "PALM",
            symbol: "palm",
            name: "PaLM AI",
            marketCapRank: 613,
            addresses: {
              ethereum: "0xf1df7305e4bab3885cab5b1e4dfc338452a67891",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "pancakeswap-token",
            fileName: "CAKE",
            symbol: "cake",
            name: "PancakeSwap",
            marketCapRank: 104,
            addresses: {
              "binance-smart-chain":
                "0x0e09fabb73bd3ade0a17ecc321fd13a19e81ce82",
              ethereum: "0x152649ea73beab28c5b49b26eb48f7ead6d4c898",
              aptos:
                "0x159df6b7689437016108a019fd5bef736bac692b6d4a1f10c941f6fbb9a74ca6::oft::CakeOFT",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "pangolin",
            fileName: "PNG",
            symbol: "png",
            name: "Pangolin",
            marketCapRank: 508,
            addresses: {
              avalanche: "0x60781c2586d68229fde47564546784ab3faca982",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "panther",
            fileName: "ZKP",
            symbol: "zkp",
            name: "Panther Protocol",
            marketCapRank: 1412,
            addresses: {
              ethereum: "0x909e34d3f6124c324ac83dcca84b74398a6fa173",
              "polygon-pos": "0x9a06db14d639796b25a6cec6a1bf614fd98815ec",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "paragen",
            fileName: "RGEN",
            symbol: "rgen",
            name: "Paragen",
            marketCapRank: 2592,
            addresses: {
              "binance-smart-chain":
                "0x25382fb31e4b22e0ea09cb0761863df5ad97ed72",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "paragonsdao",
            fileName: "PDT",
            symbol: "pdt",
            name: "ParagonsDAO",
            marketCapRank: 1127,
            addresses: {
              ethereum: "0x375abb85c329753b1ba849a601438ae77eec9893",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "paraswap",
            fileName: "PSP",
            symbol: "psp",
            name: "ParaSwap",
            marketCapRank: 732,
            addresses: {
              ethereum: "0xcafe001067cdef266afb7eb5a286dcfd277f3de5",
              "optimistic-ethereum":
                "0xd3594e879b358f430e20f82bea61e83562d49d48",
              "binance-smart-chain":
                "0xcafe001067cdef266afb7eb5a286dcfd277f3de5",
              "polygon-pos": "0x42d61d766b85431666b39b89c43011f24451bff6",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "paratoken-2",
            fileName: "PARA",
            symbol: "para",
            name: "Para",
            marketCapRank: 2123,
            addresses: {
              ethereum: "0xd16fd95d949f996e3808eeea0e3881c59e76ef1e",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "parex",
            fileName: "PRX",
            symbol: "prx",
            name: "Parex",
            marketCapRank: 1721,
            addresses: {
              "binance-smart-chain":
                "0x90e3414e00e231b962666bd94adb811d5bcd0c2a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "paribus",
            fileName: "PBX",
            symbol: "pbx",
            name: "Paribus",
            marketCapRank: 1208,
            addresses: {
              ethereum: "0xd528cf2e081f72908e086f8800977df826b5a483",
              cardano:
                "cc8d1b026353022abbfcc2e1e71159f9e308d9c6e905ac1db24c7fb650617269627573",
              "arbitrum-one": "0xbad58ed9b5f26a002ea250d7a60dc6729a4a2403",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "parrot-usd",
            fileName: "PAI",
            symbol: "pai",
            name: "Parrot USD",
            marketCapRank: 1915,
            addresses: {
              solana: "Ea5SjE2Y6yvCeW5dYTn7PYMuW5ikXkvbGdcmSnXeaLjS",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "parsiq",
            fileName: "PRQ",
            symbol: "prq",
            name: "PARSIQ",
            marketCapRank: 840,
            addresses: {
              ethereum: "0x362bc847a3a9637d3af6624eec853618a43ed7d2",
              "binance-smart-chain":
                "0xd21d29b38374528675c34936bf7d5dd693d2a577",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "particl",
            fileName: "PART",
            symbol: "part",
            name: "Particl",
            marketCapRank: 1795,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "passage",
            fileName: "PASG",
            symbol: "pasg",
            name: "Passage",
            marketCapRank: 940,
            addresses: {
              osmosis:
                "ibc/208B2F137CDE510B44C41947C045CFDC27F996A9D990EA64460BDD5B3DBEB2ED",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "pastel",
            fileName: "PSL",
            symbol: "psl",
            name: "Pastel",
            marketCapRank: 2017,
            addresses: {
              ethereum: "0xc775c0c30840cb9f51e21061b054ebf1a00acc29",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "pawswap",
            fileName: "PAW",
            symbol: "paw",
            name: "PAWSWAP",
            marketCapRank: 1658,
            addresses: {
              ethereum: "0xdc63269ea166b70d4780b3a11f5c825c2b761b01",
            },
            variants: ["branded", "background"],
          },
          {
            id: "pawthereum",
            fileName: "PAWTH",
            symbol: "pawth",
            name: "Pawthereum",
            marketCapRank: 2183,
            addresses: {
              ethereum: "0xaecc217a749c2405b5ebc9857a16d58bdc1c367f",
              "binance-smart-chain":
                "0x409e215738e31d8ab252016369c2dd9c2008fee0",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "pax-gold",
            fileName: "PAXG",
            symbol: "paxg",
            name: "PAX Gold",
            marketCapRank: 216,
            addresses: {
              ethereum: "0x45804880de22913dafe09f4980848ece6ecbaf78",
              "harmony-shard-0": "0x7afb0e2eba6dc938945fe0f42484d3b8f442d0ac",
              energi: "0xbf8afa4663b30c621a5f7497a972fc63c1a06c66",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "paypal-usd",
            fileName: "PYUSD",
            symbol: "pyusd",
            name: "PayPal USD",
            marketCapRank: 361,
            addresses: {
              ethereum: "0x6c3ea9036406852006290770bedfcaba0e23a0e8",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "paysenger-ego",
            fileName: "EGO",
            symbol: "ego",
            name: "Paysenger EGO",
            marketCapRank: 1676,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "pchain",
            fileName: "PI",
            symbol: "pi",
            name: "Plian",
            marketCapRank: 1959,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "peardao",
            fileName: "PEX",
            symbol: "pex",
            name: "PearDAO",
            marketCapRank: 2488,
            addresses: {
              "binance-smart-chain":
                "0x6a0b66710567b6beb81a71f7e9466450a91a384b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "peercoin",
            fileName: "PPC",
            symbol: "ppc",
            name: "Peercoin",
            marketCapRank: 1354,
            addresses: {
              ethereum: "0x044d078f1c86508e13328842cc75ac021b272958",
              "polygon-pos": "0x91e7e32c710661c44ae44d10aa86135d91c3ed65",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "pegaxy-stone",
            fileName: "PGX",
            symbol: "pgx",
            name: "Pegaxy",
            marketCapRank: 1954,
            addresses: {
              "polygon-pos": "0xc1c93d475dc82fe72dbc7074d55f5a734f8ceeae",
              avalanche: "0x0ef27ddc8f89d4886e89d630de089962ffc12e43",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "pendle",
            fileName: "PENDLE",
            symbol: "pendle",
            name: "Pendle",
            marketCapRank: 191,
            addresses: {
              ethereum: "0x808507121b80c02388fad14726482e061b8da827",
              avalanche: "0xfb98b335551a418cd0737375a2ea0ded62ea213b",
              "optimistic-ethereum":
                "0xbc7b1ff1c6989f006a1185318ed4e7b5796e66e1",
              "arbitrum-one": "0x0c880f6761f1af8d9aa9c466984b80dab9a8c9e8",
              "binance-smart-chain":
                "0xb3ed0a426155b79b898849803e3b36552f7ed507",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "penpie",
            fileName: "PNP",
            symbol: "pnp",
            name: "Penpie",
            marketCapRank: 1289,
            addresses: {
              ethereum: "0x7dedbce5a2e31e4c75f87fea60bf796c17718715",
              "arbitrum-one": "0x2ac2b254bc18cd4999f64773a966e4f4869c34ee",
              "binance-smart-chain":
                "0x5012c90f14d190607662ca8344120812aaa2639d",
            },
            variants: ["branded", "background"],
          },
          {
            id: "pepe",
            fileName: "PEPE",
            symbol: "pepe",
            name: "Pepe",
            marketCapRank: 42,
            addresses: {
              ethereum: "0x6982508145454ce325ddbe47a25d4ec3d2311933",
              "arbitrum-one": "0x25d887ce7a35172c62febfd67a1856f20faebb00",
              "binance-smart-chain":
                "0x25d887ce7a35172c62febfd67a1856f20faebb00",
            },
            variants: ["branded", "background"],
          },
          {
            id: "pepefork",
            fileName: "PORK",
            symbol: "pork",
            name: "PepeFork",
            marketCapRank: 549,
            addresses: {
              ethereum: "0xb9f599ce614feb2e1bbe58f180f370d05b39344e",
            },
            variants: ["branded", "background"],
          },
          {
            id: "per-project",
            fileName: "PER",
            symbol: "per",
            name: "PER Project",
            marketCapRank: 1838,
            addresses: {
              "klay-token": "0x7eee60a000986e9efe7f5c90340738558c24317b",
            },
            variants: ["branded", "background"],
          },
          {
            id: "peri-finance",
            fileName: "PERI",
            symbol: "peri",
            name: "PERI Finance",
            marketCapRank: 2383,
            addresses: {
              ethereum: "0x5d30ad9c6374bf925d0a75454fa327aacf778492",
              "binance-smart-chain":
                "0xb49b7e0742ecb4240ffe91661d2a580677460b6a",
              "polygon-pos": "0xdc0e17eae3b9651875030244b971fa0223a1764f",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "perion",
            fileName: "PERC",
            symbol: "perc",
            name: "Perion",
            marketCapRank: 1301,
            addresses: {
              ethereum: "0x60be1e1fe41c1370adaf5d8e66f07cf1c2df2268",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "perpetual-protocol",
            fileName: "PERP",
            symbol: "perp",
            name: "Perpetual Protocol",
            marketCapRank: 507,
            addresses: {
              ethereum: "0xbc396689893d065f41bc2c6ecbee5e0085233447",
              "optimistic-ethereum":
                "0x9e1028f5f1d5ede59748ffcee5532509976840e0",
              xdai: "0x7ecf26cd9a36990b8ea477853663092333f59979",
              "arbitrum-one": "0x753d224bcf9aafacd81558c32341416df61d3dac",
              "binance-smart-chain":
                "0x4e7f408be2d4e9d60f49a64b89bb619c84c7c6f5",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "perpy-finance",
            fileName: "PRY",
            symbol: "pry",
            name: "Perpy Finance",
            marketCapRank: 2265,
            addresses: {
              "arbitrum-one": "0x1824a51c106efc27d35a74efb56d9bf54ddb22d4",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "persistence",
            fileName: "XPRT",
            symbol: "xprt",
            name: "Persistence One",
            marketCapRank: 624,
            addresses: {
              osmosis:
                "ibc/A0CC0CF735BFB30E730C70019D4218A1244FF383503FF7579C9201AB93CA9293",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "petals",
            fileName: "PTS",
            symbol: "pts",
            name: "Petals",
            marketCapRank: 1056,
            addresses: {
              "binance-smart-chain":
                "0xfa53a4778431712af31a11621edee4d0926df1ac",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "pha",
            fileName: "PHA",
            symbol: "pha",
            name: "Phala",
            marketCapRank: 388,
            addresses: {
              ethereum: "0x6c5ba91642f10282b576d91922ae6448c9d52f4e",
              sora: "0x0033271716eec64234a5324506c4558de27b7c23c42f3e3b74801f98bdfeebf7",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "phantasma",
            fileName: "SOUL",
            symbol: "soul",
            name: "Phantasma",
            marketCapRank: 1131,
            addresses: {
              ethereum: "0x75858677e27c930fb622759feaffee2b754af07f",
              "binance-smart-chain":
                "0x298eff8af1ecebbb2c034eaa3b9a5d0cc56c59cd",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "phoenix-global",
            fileName: "PHB",
            symbol: "phb",
            name: "Phoenix",
            marketCapRank: 459,
            addresses: {
              "binance-smart-chain":
                "0x0409633a72d846fc5bbe2f98d88564d35987904d",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "phonon-dao",
            fileName: "PHONON",
            symbol: "phonon",
            name: "Phonon DAO",
            marketCapRank: 1935,
            addresses: {
              ethereum: "0x758b4684be769e92eefea93f60dda0181ea303ec",
              "arbitrum-one": "0x39a49bc5017fc668299cd32e734c9269acc35295",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "pibble",
            fileName: "PIB",
            symbol: "pib",
            name: "Pibble",
            marketCapRank: 1307,
            addresses: {
              ethereum: "0x1864ce27e9f7517047933caae530674e8c70b8a7",
              "klay-token": "0xafde910130c335fa5bd5fe991053e3e0a49dce7b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "picasso",
            fileName: "PICA",
            symbol: "pica",
            name: "Picasso",
            marketCapRank: 879,
            addresses: {
              ethereum: "0xbb63a9b64a80e9338b8ea298c51765e57c4f159c",
              secret: "secret1e0y9vf4xr9wffyxsvlz35jzl5st2srkdl8frac",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "piccolo-inu",
            fileName: "PINU",
            symbol: "pinu",
            name: "Piccolo Inu",
            marketCapRank: 2540,
            addresses: {
              ethereum: "0x3a1311b8c404629e38f61d566cefefed083b9670",
            },
            variants: ["branded", "background"],
          },
          {
            id: "pickle-finance",
            fileName: "PICKLE",
            symbol: "pickle",
            name: "Pickle Finance",
            marketCapRank: 2149,
            addresses: {
              ethereum: "0x429881672b9ae42b8eba0e26cd9c73711b891ca5",
              "arbitrum-one": "0x965772e0e9c84b6f359c8597c891108dcf1c5b1a",
              "polygon-pos": "0x2b88ad57897a8b496595925f43048301c37615da",
              aurora: "0x291c8fceaca3342b29cc36171deb98106f712c66",
            },
            variants: ["branded", "background"],
          },
          {
            id: "pika-protocol",
            fileName: "PIKA",
            symbol: "pika",
            name: "Pika Protocol",
            marketCapRank: 1451,
            addresses: {
              "optimistic-ethereum":
                "0x9a601c5bb360811d96a23689066af316a30c3027",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "pillar",
            fileName: "PLR",
            symbol: "plr",
            name: "Pillar",
            marketCapRank: 2619,
            addresses: {
              ethereum: "0xe3818504c1b32bf1557b16c238b2e01fd3149c17",
              "polygon-pos": "0xa6b37fc85d870711c56fbcb8afe2f8db049ae774",
              "binance-smart-chain":
                "0x790cfdc6ab2e0ee45a433aac5434f183be1f6a20",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "pinksale",
            fileName: "PINKSALE",
            symbol: "pinksale",
            name: "PinkSale",
            marketCapRank: 999,
            addresses: {
              "binance-smart-chain":
                "0x602ba546a7b06e0fc7f58fd27eb6996ecc824689",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "pintu-token",
            fileName: "PTU",
            symbol: "ptu",
            name: "Pintu",
            marketCapRank: 1046,
            addresses: {
              ethereum: "0xc229c69eb3bb51828d0caa3509a05a51083898dd",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "pip",
            fileName: "PIP",
            symbol: "pip",
            name: "PIP",
            marketCapRank: 1146,
            addresses: {
              solana: "HHjoYwUp5aU6pnrvN4s2pwEErwXNZKhxKGYjRJMoBjLw",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "pirate-chain",
            fileName: "ARRR",
            symbol: "arrr",
            name: "Pirate Chain",
            marketCapRank: 946,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "pivx",
            fileName: "PIVX",
            symbol: "pivx",
            name: "PIVX",
            marketCapRank: 896,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "pixels",
            fileName: "PIXEL",
            symbol: "pixel",
            name: "Pixels",
            marketCapRank: 176,
            addresses: {
              ethereum: "0x3429d03c6f7521aec737a0bbf2e5ddcef2c3ae31",
              ronin: "0x7eae20d11ef8c779433eb24503def900b9d28ad7",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "pizabrc",
            fileName: "PIZA",
            symbol: "piza",
            name: "PIZA (Ordinals)",
            marketCapRank: 1915,
            addresses: {
              ordinals:
                "c0dd0bc7d0620a02cfedc57a280cfd79823bc754623f9318d9755bcd3b131d14i0",
            },
            variants: ["branded", "background"],
          },
          {
            id: "pkt",
            fileName: "PKT",
            symbol: "pkt",
            name: "PKT",
            marketCapRank: 1373,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "planetwatch",
            fileName: "PLANETS",
            symbol: "planets",
            name: "PlanetWatch",
            marketCapRank: 1990,
            addresses: { algorand: "27165954" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "plasma-finance",
            fileName: "PPAY",
            symbol: "ppay",
            name: "Plasma Finance",
            marketCapRank: 2421,
            addresses: {
              ethereum: "0x054d64b73d3d8a21af3d764efd76bcaa774f3bb2",
              "polygon-pos": "0x08158a6b5d4018340387d1a302f882e98a8bc5b4",
              "binance-smart-chain":
                "0xfb288d60d3b66f9c3e231a9a39ed3f158a4269aa",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "plastiks",
            fileName: "PLASTIK",
            symbol: "plastik",
            name: "Plastiks",
            marketCapRank: 2602,
            addresses: { celo: "0x27cd006548df7c8c8e9fdc4a67fa05c2e3ca5cf9" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "platon-network",
            fileName: "LAT",
            symbol: "lat",
            name: "PlatON Network",
            marketCapRank: 518,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "playa3ull-games-2",
            fileName: "3ULL",
            symbol: "3ull",
            name: "PLAYA3ULL GAMES",
            marketCapRank: 933,
            addresses: {
              avalanche: "0xa77e70d0af1ac7ff86726740db1bd065c3566937",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "playchip",
            fileName: "PLA",
            symbol: "pla",
            name: "PlayChip",
            marketCapRank: null,
            addresses: {
              ethereum: "0x0198f46f520f33cd4329bd4be380a25a90536cd5",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "playzap",
            fileName: "PZP",
            symbol: "pzp",
            name: "PlayZap",
            marketCapRank: 1383,
            addresses: {
              "binance-smart-chain":
                "0x6ad9e9c098a45b2b41b519119c31c3dcb02accb2",
              eos: "0xf6f46bd1f85ebf00c6d7490678ad020bc73969a7",
              solana: "2CnfY3wZu715Mdbj1CeWfMNcsKNqkREPjTmW4o1Psj9J",
              "kucoin-community-chain":
                "0x22648c12acd87912ea1710357b1302c6a4154ebc",
              "eos-evm": "0xbb8e513b2897ac9c1c47eecfcb42dbd4b77f9275",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "plearn",
            fileName: "PLN",
            symbol: "pln",
            name: "PLEARN",
            marketCapRank: 1359,
            addresses: {
              "binance-smart-chain":
                "0xbe0d3526fc797583dada3f30bc390013062a048b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "pleasure-coin",
            fileName: "NSFW",
            symbol: "nsfw",
            name: "Pleasure Coin",
            marketCapRank: 2003,
            addresses: {
              "polygon-pos": "0x8f006d1e1d9dc6c98996f50a4c810f17a47fbf19",
              ethereum: "0x8f006d1e1d9dc6c98996f50a4c810f17a47fbf19",
              "binance-smart-chain":
                "0xaa076b62efc6f357882e07665157a271ab46a063",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "plebbit",
            fileName: "PLEB",
            symbol: "pleb",
            name: "Plebbit",
            marketCapRank: 1366,
            addresses: {
              ethereum: "0xea81dab2e0ecbc6b5c4172de4c22b6ef6e55bd8f",
            },
            variants: ["branded", "background"],
          },
          {
            id: "plex",
            fileName: "PLEX",
            symbol: "plex",
            name: "PLEX",
            marketCapRank: 1698,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "plugin",
            fileName: "PLI",
            symbol: "pli",
            name: "Plugin",
            marketCapRank: 1836,
            addresses: {
              "xdc-network": "xdcff7412ea7c8445c46a8254dfb557ac1e48094391",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "pluton",
            fileName: "PLU",
            symbol: "plu",
            name: "Pluton",
            marketCapRank: 994,
            addresses: {
              ethereum: "0xd8912c10681d8b21fd3742244f44658dba12264e",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "pnetwork",
            fileName: "PNT",
            symbol: "pnt",
            name: "pNetwork",
            marketCapRank: 1805,
            addresses: {
              ethereum: "0x89ab32156e46f46d02ade3fecbe5fc4243b9aaed",
              "binance-smart-chain":
                "0xdaacb0ab6fb34d24e8a67bfa14bf4d95d4c7af92",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "pocket-network",
            fileName: "POKT",
            symbol: "pokt",
            name: "Pocket Network",
            marketCapRank: 244,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "pointpay",
            fileName: "PXP",
            symbol: "pxp",
            name: "PointPay",
            marketCapRank: 1976,
            addresses: {
              ethereum: "0x95aa5d2dbd3c16ee3fdea82d5c6ec3e38ce3314f",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "polaris-share",
            fileName: "POLA",
            symbol: "pola",
            name: "Polaris Share",
            marketCapRank: 1114,
            addresses: {
              ethereum: "0xc691bc298a304d591ad9b352c7a8d216de9f2ced",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "polka-city",
            fileName: "POLC",
            symbol: "polc",
            name: "Polkacity",
            marketCapRank: 1539,
            addresses: {
              ethereum: "0xaa8330fb2b4d5d07abfe7a72262752a8505c6b37",
              "binance-smart-chain":
                "0x6ae9701b9c423f40d54556c9a443409d79ce170a",
            },
            variants: ["branded", "background"],
          },
          {
            id: "polkabridge",
            fileName: "PBR",
            symbol: "pbr",
            name: "PolkaBridge",
            marketCapRank: 1851,
            addresses: {
              ethereum: "0x298d492e8c1d909d3f63bc4a36c66c64acb3d695",
              "polygon-pos": "0x0d6ae2a429df13e44a07cd2969e085e4833f64a0",
              "binance-smart-chain":
                "0x1d1cb8997570e73949930c01fe5796c88d7336c6",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "polkadex",
            fileName: "PDEX",
            symbol: "pdex",
            name: "Polkadex",
            marketCapRank: 1729,
            addresses: {
              ethereum: "0xf59ae934f6fe444afc309586cc60a84a0f89aaea",
              sora: "0x008a99c642c508f4f718598f32fa9ecbeea854e335312fecdbd298b92de26e21",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "polkadot",
            fileName: "DOT",
            symbol: "dot",
            name: "Polkadot",
            marketCapRank: 14,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "polkafoundry",
            fileName: "PKF",
            symbol: "pkf",
            name: "Red Kite",
            marketCapRank: 1283,
            addresses: {
              ethereum: "0x8b39b70e39aa811b69365398e0aace9bee238aeb",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "polkamarkets",
            fileName: "POLK",
            symbol: "polk",
            name: "Polkamarkets",
            marketCapRank: 1912,
            addresses: {
              ethereum: "0xd478161c952357f05f0292b56012cd8457f1cfbf",
            },
            variants: ["branded", "background"],
          },
          {
            id: "polkastarter",
            fileName: "POLS",
            symbol: "pols",
            name: "Polkastarter",
            marketCapRank: 481,
            addresses: {
              ethereum: "0x83e6f1e41cdd28eaceb20cb649155049fac3d5aa",
              "binance-smart-chain":
                "0x7e624fa0e1c4abfd309cc15719b7e2580887f570",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "polkaswap",
            fileName: "PSWAP",
            symbol: "pswap",
            name: "Polkaswap",
            marketCapRank: 1542,
            addresses: {
              ethereum: "0x519c1001d550c0a1dae7d1fc220f7d14c2a521bb",
              sora: "0x0200050000000000000000000000000000000000000000000000000000000000",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "polker",
            fileName: "PKR",
            symbol: "pkr",
            name: "Polker",
            marketCapRank: 2324,
            addresses: {
              "polygon-pos": "0x140a4e80dd8184536acc45f1c452d7540472e6e1",
            },
            variants: ["branded", "background"],
          },
          {
            id: "polychain-monsters",
            fileName: "PMON",
            symbol: "pmon",
            name: "Polychain Monsters",
            marketCapRank: 2080,
            addresses: {
              ethereum: "0x1796ae0b0fa4862485106a0de9b654efe301d0b2",
              "binance-smart-chain":
                "0x1796ae0b0fa4862485106a0de9b654efe301d0b2",
              "polygon-pos": "0x1796ae0b0fa4862485106a0de9b654efe301d0b2",
            },
            variants: ["branded", "background"],
          },
          {
            id: "polydoge",
            fileName: "POLYDOGE",
            symbol: "polydoge",
            name: "PolyDoge",
            marketCapRank: 1465,
            addresses: {
              "polygon-pos": "0x8a953cfe442c5e8855cc6c61b1293fa648bae472",
            },
            variants: ["branded", "background"],
          },
          {
            id: "polygon-ecosystem-token",
            fileName: "POL",
            symbol: "pol",
            name: "Polygon Ecosystem Token",
            marketCapRank: 487,
            addresses: {
              ethereum: "0x455e53cbb86018ac2b8092fdcd39d8444affc3f6",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "polylastic",
            fileName: "POLX",
            symbol: "polx",
            name: "Polylastic",
            marketCapRank: 2054,
            addresses: {
              "polygon-pos": "0x187ae45f2d361cbce37c6a8622119c91148f261b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "polymath",
            fileName: "POLY",
            symbol: "poly",
            name: "Polymath",
            marketCapRank: 540,
            addresses: {
              ethereum: "0x9992ec3cf6a55b00978cddf2b27bc6882d88d1ec",
              energi: "0xe99bbd3b25a014aac93127cf868d3de07386c4dd",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "polymesh",
            fileName: "POLYX",
            symbol: "polyx",
            name: "Polymesh",
            marketCapRank: 157,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "polypad",
            fileName: "POLYPAD",
            symbol: "polypad",
            name: "PolyPad",
            marketCapRank: 2305,
            addresses: {
              "polygon-pos": "0x30ea765d4dda26e0f89e1b23a7c7b2526b7d29ec",
              "binance-smart-chain":
                "0x8ae619d633cce175a2fbcfa1cea119ddc80f1342",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "polyswarm",
            fileName: "NCT",
            symbol: "nct",
            name: "PolySwarm",
            marketCapRank: 755,
            addresses: {
              ethereum: "0x9e46a38f5daabe8683e10793b06749eef7d733d1",
              "polygon-pos": "0x4985e0b13554fb521840e893574d3848c10fcc6f",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "polytrade",
            fileName: "TRADE",
            symbol: "trade",
            name: "Polytrade",
            marketCapRank: 601,
            addresses: {
              ethereum: "0x6e5970dbd6fc7eb1f29c6d2edf2bc4c36124c0c1",
              "arbitrum-one": "0xe22c452bd2ade15dfc8ad98286bc6bdf0c9219b7",
              "polygon-pos": "0x692ac1e363ae34b6b489148152b12e2785a3d8d6",
              "binance-smart-chain":
                "0x6ba7a8f9063c712c1c8cabc776b1da7126805f3b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "pooh",
            fileName: "POOH",
            symbol: "pooh",
            name: "POOH",
            marketCapRank: 1121,
            addresses: {
              ethereum: "0xb69753c06bb5c366be51e73bfc0cc2e3dc07e371",
              solana: "J8XFfJgS1cs5WVGxGwZb9Rt5rJZizdyzaLhidtvDnYjC",
            },
            variants: ["branded", "background"],
          },
          {
            id: "poollotto-finance",
            fileName: "PLT",
            symbol: "plt",
            name: "Poollotto.finance",
            marketCapRank: 1133,
            addresses: {
              "binance-smart-chain":
                "0x631c2f0edabac799f07550aee4ff0bf7fd35212b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "poolz-finance-2",
            fileName: "POOLX",
            symbol: "poolx",
            name: "Poolz Finance",
            marketCapRank: 1082,
            addresses: {
              "binance-smart-chain":
                "0xbaea9aba1454df334943951d51116ae342eab255",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "popcat",
            fileName: "POPCAT",
            symbol: "popcat",
            name: "Popcat",
            marketCapRank: 259,
            addresses: {
              solana: "7GCihgDB8fe6KNjn2MYtkzZcRjQy3t9GHdC8uHYmW2hr",
            },
            variants: ["branded", "background"],
          },
          {
            id: "popcorn",
            fileName: "POP",
            symbol: "pop",
            name: "Popcorn",
            marketCapRank: 2835,
            addresses: {
              ethereum: "0xd0cd466b34a24fcb2f87676278af2005ca8a78c4",
              "optimistic-ethereum":
                "0x6f0fecbc276de8fc69257065fe47c5a03d986394",
              "arbitrum-one": "0x68ead55c258d6fa5e46d67fc90f53211eab885be",
              "binance-smart-chain":
                "0xe8647ea19496e87c061bbad79f457928b2f52b5a",
              "polygon-pos": "0xc5b57e9a1e7914fda753a88f24e5703e617ee50c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "populous",
            fileName: "PPT",
            symbol: "ppt",
            name: "Populous",
            marketCapRank: 2529,
            addresses: {
              ethereum: "0xd4fa1460f537bb9085d22c7bccb5dd450ef28e3a",
              energi: "0x2483a716a4a5476da5e657be13a37cf62b608ab6",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "portal-2",
            fileName: "PORTAL",
            symbol: "portal",
            name: "Portal",
            marketCapRank: 251,
            addresses: {
              ethereum: "0x1bbe973bef3a977fc51cbed703e8ffdefe001fed",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "power",
            fileName: "PWR",
            symbol: "pwr",
            name: "MaxxChain",
            marketCapRank: 2824,
            addresses: {
              ethereum: "0xd9dcd611bed2be9a4700c725a3810870b9bff094",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "power-ledger",
            fileName: "POWR",
            symbol: "powr",
            name: "Powerledger",
            marketCapRank: 331,
            addresses: {
              ethereum: "0x595832f8fc6bf59c85c527fec3740a1b7a361269",
              energi: "0xd1bbc2a68b97a8ae4b423bbf534e767ef6275a30",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "premia",
            fileName: "PREMIA",
            symbol: "premia",
            name: "Premia",
            marketCapRank: 1352,
            addresses: {
              ethereum: "0x6399c842dd2be3de30bf99bc7d1bbf6fa3650e70",
              fantom: "0x3028b4395f98777123c7da327010c40f3c7cc4ef",
              "optimistic-ethereum":
                "0x374ad0f47f4ca39c78e5cc54f1c9e426ff8f231a",
              "arbitrum-one": "0x51fc0f6660482ea73330e414efd7808811a57fa2",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "presearch",
            fileName: "PRE",
            symbol: "pre",
            name: "Presearch",
            marketCapRank: 1421,
            addresses: {
              ethereum: "0xec213f83defb583af3a000b1c0ada660b1902a0f",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "primal-b3099cd0-995a-4311-80d5-9c133153b38e",
            fileName: "PRIMAL",
            symbol: "primal",
            name: "PRIMAL",
            marketCapRank: 2560,
            addresses: {
              "binance-smart-chain":
                "0xcb5327ed4649548e0d73e70b633cdfd99af6da87",
              ethereum: "0xdd13dedecebda566322195bc4451d672a148752c",
              "step-network": "0x0bbe45a033aab7a90006c05aa648efd3d2993f9e",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "prism",
            fileName: "PRISM",
            symbol: "prism",
            name: "Prism",
            marketCapRank: 1694,
            addresses: {
              solana: "PRSMNsEPqhGVCH1TtWiJqPjJyh2cKrLostPZTNy1o5x",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "probit-exchange",
            fileName: "PROB",
            symbol: "prob",
            name: "Probit",
            marketCapRank: 2096,
            addresses: {
              ethereum: "0xfb559ce67ff522ec0b9ba7f5dc9dc7ef6c139803",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "project-galaxy",
            fileName: "GAL",
            symbol: "gal",
            name: "Galxe",
            marketCapRank: 187,
            addresses: {
              ethereum: "0x5faa989af96af85384b8a938c2ede4a7378d9875",
              "binance-smart-chain":
                "0xe4cc45bb5dbda06db6183e8bf016569f40497aa5",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "project-with",
            fileName: "WIKEN",
            symbol: "wiken",
            name: "Project WITH",
            marketCapRank: 1279,
            addresses: {
              "klay-token": "0x275f942985503d8ce9558f8377cc526a3aba3566",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "prometeus",
            fileName: "PROM",
            symbol: "prom",
            name: "Prom",
            marketCapRank: 298,
            addresses: {
              ethereum: "0xfc82bb4ba86045af6f327323a46e80412b91b27d",
              "binance-smart-chain":
                "0xaf53d56ff99f1322515e54fdde93ff8b3b7dafd5",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "propbase",
            fileName: "PROPS",
            symbol: "props",
            name: "Propbase",
            marketCapRank: 628,
            addresses: {
              aptos:
                "0xe50684a338db732d8fb8a3ac71c4b8633878bd0193bca5de2ebc852a83b35099",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "propchain",
            fileName: "PROPC",
            symbol: "propc",
            name: "Propchain",
            marketCapRank: 595,
            addresses: {
              ethereum: "0x9ff58067bd8d239000010c154c6983a325df138e",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "propy",
            fileName: "PRO",
            symbol: "pro",
            name: "Propy",
            marketCapRank: 495,
            addresses: {
              ethereum: "0x226bb599a12c826476e3a771454697ea52e9e220",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "prosper",
            fileName: "PROS",
            symbol: "pros",
            name: "Prosper",
            marketCapRank: 1242,
            addresses: {
              ethereum: "0x8642a849d0dcb7a15a974794668adcfbe4794b56",
              "polygon-pos": "0x6109cb051c5c64093830121ed76272ab04bbdd7c",
              "binance-smart-chain":
                "0xed8c8aa8299c10f067496bb66f8cc7fb338a3405",
            },
            variants: ["branded", "background"],
          },
          {
            id: "protectorate-protocol",
            fileName: "PRTC",
            symbol: "prtc",
            name: "Protectorate Protocol",
            marketCapRank: 2276,
            addresses: {
              ethereum: "0xb9098d3669a78e9afe8b94a97290407400d9da31",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "proteo-defi",
            fileName: "PROTEO",
            symbol: "proteo",
            name: "Proteo DeFi",
            marketCapRank: 2371,
            addresses: { elrond: "PROTEO-0c7311" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "proton",
            fileName: "XPR",
            symbol: "xpr",
            name: "XPR Network",
            marketCapRank: 778,
            addresses: {
              ethereum: "0xd7efb00d12c2c13131fd319336fdf952525da2af",
              "binance-smart-chain":
                "0x5de3939b2f811a61d830e6f52d13b066881412ab",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "proximax",
            fileName: "XPX",
            symbol: "xpx",
            name: "ProximaX",
            marketCapRank: 1737,
            addresses: {
              "binance-smart-chain":
                "0x6f3aaf802f57d045efdd2ac9c06d8879305542af",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "pstake-finance",
            fileName: "PSTAKE",
            symbol: "pstake",
            name: "pSTAKE Finance",
            marketCapRank: 705,
            addresses: {
              ethereum: "0xfb5c6815ca3ac72ce9f5006869ae67f18bf77006",
              "binance-smart-chain":
                "0x4c882ec256823ee773b25b414d36f92ef58a7c0c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "pumlx",
            fileName: "PUMLX",
            symbol: "pumlx",
            name: "PUMLx",
            marketCapRank: 2378,
            addresses: {
              ethereum: "0x8c088775e4139af116ac1fa6f281bbf71e8c1c73",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "pundi-x",
            fileName: "NPXS",
            symbol: "npxs",
            name: "Pundi X [OLD]",
            marketCapRank: 593,
            addresses: {
              ethereum: "0xa15c7ebe1f07caf6bff097d8a589fb8ac49ae5b3",
              energi: "0x1bf6ea422574e0f5d336083a771768cb4e11390d",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "pundi-x-2",
            fileName: "PUNDIX",
            symbol: "pundix",
            name: "Pundi X",
            marketCapRank: 382,
            addresses: {
              ethereum: "0x0fd10b9899882a6f2fcb5c371e17e70fdee00c38",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "pundi-x-purse",
            fileName: "PURSE",
            symbol: "purse",
            name: "Pundi X PURSE",
            marketCapRank: 1570,
            addresses: {
              "binance-smart-chain":
                "0x29a63f4b209c29b4dc47f06ffa896f32667dad2c",
              "function-x": "0x5fd55a1b9fc24967c4db09c513c3ba0dfa7ff687",
              ethereum: "0x95987b0cdc7f65d989a30b3b7132a38388c548eb",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "purefi",
            fileName: "UFI",
            symbol: "ufi",
            name: "PureFi",
            marketCapRank: 1217,
            addresses: {
              ethereum: "0xcda4e840411c00a614ad9205caec807c7458a0e3",
              "binance-smart-chain":
                "0xe2a59d5e33c6540e18aaa46bf98917ac3158db0d",
              "polygon-pos": "0x3c205c8b3e02421da82064646788c82f7bd753b9",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "pussy-financial",
            fileName: "PUSSY",
            symbol: "pussy",
            name: "Pussy Financial",
            marketCapRank: 2133,
            addresses: {
              ethereum: "0x9196e18bc349b1f64bc08784eae259525329a1ad",
              "binance-smart-chain":
                "0xd9e8d20bde081600fac0d94b88eafaddce55aa43",
            },
            variants: ["branded", "background"],
          },
          {
            id: "pyth-network",
            fileName: "PYTH",
            symbol: "pyth",
            name: "Pyth Network",
            marketCapRank: 86,
            addresses: {
              solana: "HZ1JovNiVvGrGNiiYvEozEVgZ58xaU3RKwX8eACQBCt3",
              "manta-pacific": "0x90e95735378a31bfad2dcd87128fbb80ffeb6917",
              "neon-evm": "0x0575dd4afd93b7522fee4e0179f243eca3856137",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "qanplatform",
            fileName: "QANX",
            symbol: "qanx",
            name: "QANplatform",
            marketCapRank: 423,
            addresses: {
              ethereum: "0xaaa9214f675316182eaa21c85f0ca99160cc3aaa",
              "binance-smart-chain":
                "0xaaa9214f675316182eaa21c85f0ca99160cc3aaa",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "qash",
            fileName: "QASH",
            symbol: "qash",
            name: "QASH",
            marketCapRank: 1149,
            addresses: {
              ethereum: "0x618e75ac90b12c6049ba3b27f5d5f8651b0037f6",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "qlink",
            fileName: "QLC",
            symbol: "qlc",
            name: "Kepple [OLD]",
            marketCapRank: 1427,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "qmall",
            fileName: "QMALL",
            symbol: "qmall",
            name: "Qmall",
            marketCapRank: 1742,
            addresses: {
              "binance-smart-chain":
                "0x07e551e31a793e20dc18494ff6b03095a8f8ee36",
              ethereum: "0x2217e5921b7edfb4bb193a6228459974010d2198",
              velas: "0x2217e5921b7edfb4bb193a6228459974010d2198",
            },
            variants: ["mono"],
          },
          {
            id: "qredo",
            fileName: "QRDO",
            symbol: "qrdo",
            name: "Qredo",
            marketCapRank: 689,
            addresses: {
              ethereum: "0x4123a133ae3c521fd134d7b13a2dec35b56c2463",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "qrolli",
            fileName: "QR",
            symbol: "qr",
            name: "Qrolli",
            marketCapRank: 2261,
            addresses: {
              ethereum: "0xccdb064a41afcd432bcea6f6d0d1e7c371d0b002",
            },
            variants: ["mono"],
          },
          {
            id: "qtum",
            fileName: "QTUM",
            symbol: "qtum",
            name: "Qtum",
            marketCapRank: 190,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "quadency",
            fileName: "QUAD",
            symbol: "quad",
            name: "Quadency",
            marketCapRank: 2291,
            addresses: {
              ethereum: "0xab2a7b5876d707e0126b3a75ef7781c77c8877ee",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "quadrant-protocol",
            fileName: "EQUAD",
            symbol: "equad",
            name: "Quadrant Protocol",
            marketCapRank: 1982,
            addresses: {
              ethereum: "0xc28e931814725bbeb9e670676fabbcb694fe7df2",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "quant-network",
            fileName: "QNT",
            symbol: "qnt",
            name: "Quant",
            marketCapRank: 65,
            addresses: {
              ethereum: "0x4a220e6096b25eadb88358cb44068a3248254675",
              energi: "0x462b35452e552a66b519ecf70aedb1835d434965",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "quantum-resistant-ledger",
            fileName: "QRL",
            symbol: "qrl",
            name: "Quantum Resistant Ledger",
            marketCapRank: 1095,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "quark-chain",
            fileName: "QKC",
            symbol: "qkc",
            name: "QuarkChain",
            marketCapRank: 505,
            addresses: {
              ethereum: "0xea26c4ac16d4a5a106820bc8aee85fd0b7b2b664",
              energi: "0x02c6c53930b20bced86ddf64007bebcd923e1093",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "quasar-2",
            fileName: "QSR",
            symbol: "qsr",
            name: "Quasar",
            marketCapRank: 494,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "quick",
            fileName: "QUICK",
            symbol: "quick",
            name: "Quickswap [OLD]",
            marketCapRank: 739,
            addresses: {
              ethereum: "0x6c28aef8977c9b773996d0e8376d2ee379446f2f",
              "polygon-pos": "0x831753dd7087cac61ab5644b308642cc1c33dc13",
            },
            variants: ["branded", "background"],
          },
          {
            id: "quidd",
            fileName: "QUIDD",
            symbol: "quidd",
            name: "Quidd",
            marketCapRank: 3058,
            addresses: {
              ethereum: "0xda9fdab21bc4a5811134a6e0ba6ca06624e67c07",
              "polygon-pos": "0x123706cdd8e60324e610e9a2cc7012d0f45a5b8e",
              "binance-smart-chain":
                "0x7961ade0a767c0e5b67dd1a1f78ba44f727642ed",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "quint",
            fileName: "QUINT",
            symbol: "quint",
            name: "Quint",
            marketCapRank: 1746,
            addresses: {
              "binance-smart-chain":
                "0x64619f611248256f7f4b72fe83872f89d5d60d64",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "quiztok",
            fileName: "QTCON",
            symbol: "qtcon",
            name: "Quiztok",
            marketCapRank: 1215,
            addresses: {
              ethereum: "0x1bf7fd22709733ccd7c45ab27dd02c7ec8e50078",
              solana: "DkNihsQs1hqEwf9TgKP8FmGv7dmMQ7hnKjS2ZSmMZZBE",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "r",
            fileName: "R",
            symbol: "r",
            name: "R",
            marketCapRank: 2381,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "rabbitx",
            fileName: "RBX",
            symbol: "rbx",
            name: "RabbitX",
            marketCapRank: 1006,
            addresses: {
              ethereum: "0x3ba925fdeae6b46d0bb4d424d829982cb2f7309e",
            },
            variants: ["branded", "background"],
          },
          {
            id: "radiant",
            fileName: "RXD",
            symbol: "rxd",
            name: "Radiant",
            marketCapRank: 1091,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "radiant-capital",
            fileName: "RDNT",
            symbol: "rdnt",
            name: "Radiant Capital",
            marketCapRank: 393,
            addresses: {
              "arbitrum-one": "0x3082cc23568ea640225c2467653db90e9250aaa0",
              ethereum: "0x137ddb47ee24eaa998a535ab00378d6bfa84f893",
              "binance-smart-chain":
                "0xf7de7e8a6bd59ed41a4b5fe50278b3b7f31384df",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "radicle",
            fileName: "RAD",
            symbol: "rad",
            name: "Radworks",
            marketCapRank: 408,
            addresses: {
              ethereum: "0x31c8eacbffdd875c74b94b077895bd78cf1e64a3",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "radioshack",
            fileName: "RADIO",
            symbol: "radio",
            name: "RadioShack",
            marketCapRank: 2241,
            addresses: {
              "polygon-pos": "0x613a489785c95afeb3b404cc41565ccff107b6e0",
              avalanche: "0x02bfd11499847003de5f0f5aa081c43854d48815",
              "optimistic-ethereum":
                "0xf899e3909b4492859d44260e1de41a9e663e70f5",
              "binance-smart-chain":
                "0x30807d3b851a31d62415b8bb7af7dca59390434a",
              ethereum: "0x7a5d3a9dcd33cb8d527f7b5f96eb4fef43d55636",
              cronos: "0xf899e3909b4492859d44260e1de41a9e663e70f5",
              fantom: "0xf899e3909b4492859d44260e1de41a9e663e70f5",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "radix",
            fileName: "XRD",
            symbol: "xrd",
            name: "Radix",
            marketCapRank: 134,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "rae-token",
            fileName: "RAE",
            symbol: "rae",
            name: "Receive Access Ecosystem",
            marketCapRank: 1671,
            addresses: {
              ethereum: "0xe5a3229ccb22b6484594973a03a3851dcd948756",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "rai",
            fileName: "RAI",
            symbol: "rai",
            name: "Rai Reflex Index",
            marketCapRank: 1787,
            addresses: {
              ethereum: "0x03ab458634910aad20ef5f1c8ee96f1d6ac54919",
              avalanche: "0x97cd1cfe2ed5712660bb6c14053c0ecb031bff7d",
              "optimistic-ethereum":
                "0x7fb688ccf682d58f86d7e38e03f9d22e7705448b",
              "polygon-pos": "0x00e5646f60ac6fb446f621d146b6e1886f002905",
            },
            variants: ["branded", "background"],
          },
          {
            id: "rai-finance",
            fileName: "SOFI",
            symbol: "sofi",
            name: "RAI Finance",
            marketCapRank: 1206,
            addresses: {
              ethereum: "0xb49fa25978abf9a248b8212ab4b87277682301c0",
              base: "0x703d57164ca270b0b330a87fd159cfef1490c0a5",
              "binance-smart-chain":
                "0x1a28ed8472f644e8898a169a644503b779748d6e",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "raiden-network",
            fileName: "RDN",
            symbol: "rdn",
            name: "Raiden Network",
            marketCapRank: 2458,
            addresses: {
              ethereum: "0x255aa6df07540cb5d3d297f0d0d4d84cb52bc8e6",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "railgun",
            fileName: "RAIL",
            symbol: "rail",
            name: "Railgun",
            marketCapRank: 979,
            addresses: {
              ethereum: "0xe76c6c83af64e4c60245d8c7de953df673a7a33d",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "rainbow-token-2",
            fileName: "RBW",
            symbol: "rbw",
            name: "Rainbow Token",
            marketCapRank: 1379,
            addresses: {
              "polygon-pos": "0x431cd3c9ac9fc73644bf68bf5691f4b83f9e104f",
            },
            variants: ["branded", "background"],
          },
          {
            id: "rake-com",
            fileName: "RAKE",
            symbol: "rake",
            name: "Rake.com",
            marketCapRank: 1699,
            addresses: {
              ethereum: "0x6553565eac5daa9bfc5e2892b36291634c9b2ad6",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "rally-2",
            fileName: "RLY",
            symbol: "rly",
            name: "Rally",
            marketCapRank: 492,
            addresses: {
              ethereum: "0xf1f955016ecbcd7321c7266bccfb96c68ea5e49b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ramp",
            fileName: "RAMP",
            symbol: "ramp",
            name: "RAMP [OLD]",
            marketCapRank: 875,
            addresses: {
              ethereum: "0x33d0568941c0c64ff7e0fb4fba0b11bd37deed9f",
              "binance-smart-chain":
                "0x8519ea49c997f50ceffa444d240fb655e89248aa",
              "polygon-pos": "0xaecebfcf604ad245eaf0d5bd68459c3a7a6399c2",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ramses-exchange",
            fileName: "RAM",
            symbol: "ram",
            name: "Ramses Exchange",
            marketCapRank: 1742,
            addresses: {
              "arbitrum-one": "0xaaa6c1e32c55a7bfa8066a6fae9b42650f262418",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "rangers-protocol-gas",
            fileName: "RPG",
            symbol: "rpg",
            name: "Rangers Protocol Gas",
            marketCapRank: 1193,
            addresses: {
              ethereum: "0x1f16d41f9b3db03b462bdd6c92245ee708d1c103",
              "binance-smart-chain":
                "0x61dc650c10ec3c758d251cd2d1ab45af1a43e941",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "raptoreum",
            fileName: "RTM",
            symbol: "rtm",
            name: "Raptoreum",
            marketCapRank: 1706,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "rari-governance-token",
            fileName: "RGT",
            symbol: "rgt",
            name: "Rari Governance",
            marketCapRank: 1863,
            addresses: {
              ethereum: "0xd291e7a03283640fdc51b121ac401383a46cc623",
              "arbitrum-one": "0xef888bca6ab6b1d26dbec977c455388ecd794794",
              fantom: "0xcf726a06f3dcec8ef2b033336d138caa0eae5af2",
              "polygon-pos": "0xf4bb0ed25ac7bcc9c327b88bac5ca288a08ec41e",
              energi: "0xf4bb0ed25ac7bcc9c327b88bac5ca288a08ec41e",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "rarible",
            fileName: "RARI",
            symbol: "rari",
            name: "RARI",
            marketCapRank: 703,
            addresses: {
              ethereum: "0xfca59cd816ab1ead66534d82bc21e7515ce441cf",
              energi: "0x87ce5dde0595d9306db44dc0baa9703ace18c415",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "raven-protocol",
            fileName: "RAVEN",
            symbol: "raven",
            name: "Raven Protocol",
            marketCapRank: 1597,
            addresses: {
              binancecoin: "RAVEN-F66",
              "binance-smart-chain":
                "0xcd7c5025753a49f1881b31c48caa7c517bb46308",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ravencoin",
            fileName: "RVN",
            symbol: "rvn",
            name: "Ravencoin",
            marketCapRank: 160,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "raydium",
            fileName: "RAY",
            symbol: "ray",
            name: "Raydium",
            marketCapRank: 171,
            addresses: {
              solana: "4k3Dyjzvzp8eMZWUXbBCjEvwSkkk59S5iCNLY3QrkX6R",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "razor-network",
            fileName: "RAZOR",
            symbol: "razor",
            name: "Razor Network",
            marketCapRank: 1803,
            addresses: {
              ethereum: "0x50de6856358cc35f3a9a57eaaa34bd4cb707d2cd",
              "binance-smart-chain":
                "0x50de6856358cc35f3a9a57eaaa34bd4cb707d2cd",
              "polygon-pos": "0xc91c06db0f7bffba61e2a5645cc15686f0a8c828",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "realfevr",
            fileName: "FEVR",
            symbol: "fevr",
            name: "RealFevr",
            marketCapRank: 1877,
            addresses: {
              "binance-smart-chain":
                "0x82030cdbd9e4b7c5bb0b811a61da6360d69449cc",
              avalanche: "0x73178fceb736a9d6c1a9ef1fe413f09cba2d4a68",
              ethereum: "0x9fb83c0635de2e815fd1c21b3a292277540c2e8d",
              "polygon-pos": "0xe6b9d092223f39013656702a40dbe6b7decc5746",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "realm",
            fileName: "REALM",
            symbol: "realm",
            name: "Realm",
            marketCapRank: 2075,
            addresses: {
              ethereum: "0x464fdb8affc9bac185a7393fd4298137866dcfb8",
              "binance-smart-chain":
                "0x464fdb8affc9bac185a7393fd4298137866dcfb8",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "rebel-bots",
            fileName: "RBLS",
            symbol: "rbls",
            name: "Rebel Bots",
            marketCapRank: 1520,
            addresses: {
              "polygon-pos": "0xe26cda27c13f4f87cffc2f437c5900b27ebb5bbb",
            },
            variants: ["branded", "background"],
          },
          {
            id: "reboot",
            fileName: "GG",
            symbol: "gg",
            name: "Reboot",
            marketCapRank: 1643,
            addresses: {
              "arbitrum-one": "0x000000000026839b3f4181f2cf69336af6153b99",
              "arbitrum-nova": "0x000000000026839b3f4181f2cf69336af6153b99",
            },
            variants: ["branded", "background"],
          },
          {
            id: "redacted",
            fileName: "BTRFLY",
            symbol: "btrfly",
            name: "Redacted",
            marketCapRank: 583,
            addresses: {
              ethereum: "0xc55126051b22ebb829d00368f4b12bde432de5da",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "reddcoin",
            fileName: "RDD",
            symbol: "rdd",
            name: "Reddcoin",
            marketCapRank: 2029,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "redfox-labs-2",
            fileName: "RFOX",
            symbol: "rfox",
            name: "RFOX",
            marketCapRank: 1470,
            addresses: {
              ethereum: "0xa1d6df714f91debf4e0802a542e13067f31b8262",
              energi: "0xaad4add9b6ed577f3fe9e6bccbbe3bdce596b062",
              "binance-smart-chain":
                "0x0a3a21356793b49154fd3bbe91cbc2a16c0457f5",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "reef",
            fileName: "REEF",
            symbol: "reef",
            name: "Reef",
            marketCapRank: 619,
            addresses: {
              ethereum: "0xfe3e6a25e6b192a42a44ecddcd13796471735acf",
              sora: "0x0004d3168f737e96b66b72fbb1949a2a23d4ef87182d1e8bf64096f1bb348e0b",
              energi: "0x2c969b248144dc371b428705da84b413203d9e76",
              "binance-smart-chain":
                "0xf21768ccbc73ea5b6fd3c687208a7c2def2d966e",
              "harmony-shard-0": "0x9ab0db833557d95aff98c09b560145ad34e681b8",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ref-finance",
            fileName: "REF",
            symbol: "ref",
            name: "Ref Finance",
            marketCapRank: 1304,
            addresses: { "near-protocol": "token.v2.ref-finance.near" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "refund",
            fileName: "RFD",
            symbol: "rfd",
            name: "Refund",
            marketCapRank: 1663,
            addresses: {
              ethereum: "0x955d5c14c8d4944da1ea7836bd44d54a8ec35ba1",
            },
            variants: ["branded", "background"],
          },
          {
            id: "regen",
            fileName: "REGEN",
            symbol: "regen",
            name: "Regen",
            marketCapRank: 1401,
            addresses: {
              osmosis:
                "ibc/1DCC8A6CB5689018431323953344A9F6CC4D0BFB261E88C9F7777372C10CD076",
              evmos: "0x0ce35b0d42608ca54eb7bcc8044f7087c18e7717",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "rejuve-ai",
            fileName: "RJV",
            symbol: "rjv",
            name: "Rejuve.AI",
            marketCapRank: 1077,
            addresses: {
              ethereum: "0xa1f410f13b6007fca76833ee7eb58478d47bc5ef",
              cardano:
                "8cfd6893f5f6c1cc954cec1a0a1460841b74da6e7803820dde62bb78",
              "binance-smart-chain":
                "0x602b6c6cce5f95c00603bd07d8fa7ebaf3747d44",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "renbtc",
            fileName: "RENBTC",
            symbol: "renbtc",
            name: "renBTC",
            marketCapRank: 1156,
            addresses: {
              ethereum: "0xeb4c2781e4eba804ce9a9803c67d0893436bb27d",
              sora: "0x00438aac3a91cc6cee0c8d2f14e4bf7ec4512ca708b180cc0fda47b0eb1ad538",
              "binance-smart-chain":
                "0xfce146bf3146100cfe5db4129cf6c82b0ef4ad8c",
              "polygon-pos": "0xdbf31df14b66535af65aac99c32e9ea844e14501",
              "harmony-shard-0": "0x41ca97b94d5dee79195856034d196ddfa0d43edd",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "render-token",
            fileName: "RNDR",
            symbol: "rndr",
            name: "Render",
            marketCapRank: 35,
            addresses: {
              ethereum: "0x6de037ef9ad2725eb40118bb1702ebb27e4aeb24",
              "polygon-pos": "0x61299774020da444af134c82fa83e3810b309991",
              solana: "rndrizKT3MK1iimdxRdWabcF7Zg7AR5T4nud4EkHBof",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "renewable-energy",
            fileName: "RET",
            symbol: "ret",
            name: "Renewable Energy",
            marketCapRank: 1980,
            addresses: {
              "binance-smart-chain":
                "0x10b9dd394467f2cfbc769e07e88dc7e2c41b0965",
            },
            variants: ["branded", "background"],
          },
          {
            id: "republic-protocol",
            fileName: "REN",
            symbol: "ren",
            name: "Ren",
            marketCapRank: 528,
            addresses: {
              ethereum: "0x408e41876cccdc0f92210600ef50372656052a38",
              "harmony-shard-0": "0x451e129b6045b6e4f48e7247388f21163f7743b7",
              sora: "0x00e8a7823b8207e4cab2e46cd10b54d1be6b82c284037b6ee76afd52c0dceba6",
              energi: "0x83ab721c8b3dd30ad711460f666371366550c5a7",
              "near-protocol":
                "408e41876cccdc0f92210600ef50372656052a38.factory.bridge.near",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "request-network",
            fileName: "REQ",
            symbol: "req",
            name: "Request",
            marketCapRank: 460,
            addresses: {
              ethereum: "0x8f8221afbb33998d8584a2b05749ba73c37a938a",
              "polygon-pos": "0xb25e20de2f2ebb4cffd4d16a55c7b395e8a94762",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "researchcoin",
            fileName: "RSC",
            symbol: "rsc",
            name: "ResearchCoin",
            marketCapRank: 656,
            addresses: {
              ethereum: "0xd101dcc414f310268c37eeb4cd376ccfa507f571",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "reserve-rights-token",
            fileName: "RSR",
            symbol: "rsr",
            name: "Reserve Rights",
            marketCapRank: 180,
            addresses: {
              ethereum: "0x320623b8e4ff03373931769a31fc52a4e78b5d70",
              base: "0xab36452dbac151be02b16ca17d8919826072f64a",
              energi: "0xfce13bb63b60f6e20ed846ae73ed242d29129800",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "reunit-wallet",
            fileName: "REUNI",
            symbol: "reuni",
            name: "Reunit Wallet",
            marketCapRank: 2209,
            addresses: {
              "arbitrum-one": "0x9ed7e4b1bff939ad473da5e7a218c771d1569456",
              avalanche: "0x9ed7e4b1bff939ad473da5e7a218c771d1569456",
              "optimistic-ethereum":
                "0x9ed7e4b1bff939ad473da5e7a218c771d1569456",
              ethereum: "0x9ed7e4b1bff939ad473da5e7a218c771d1569456",
              "binance-smart-chain":
                "0x9ed7e4b1bff939ad473da5e7a218c771d1569456",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "rev3al",
            fileName: "REV3L",
            symbol: "rev3l",
            name: "REV3AL",
            marketCapRank: 1515,
            addresses: {
              "binance-smart-chain":
                "0x30b5e345c79255101b8af22a19805a6fb96ddebb",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "revain",
            fileName: "REV",
            symbol: "rev",
            name: "Revain",
            marketCapRank: 1807,
            addresses: {
              ethereum: "0x2ef52ed7de8c5ce03a4ef0efbe9b7450f2d7edc9",
              tron: "TD4bVgcwj3FRbmAo283HxNvqZvY7T3uD8k",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "revenant",
            fileName: "GAMEFI",
            symbol: "gamefi",
            name: "Revenant",
            marketCapRank: 2347,
            addresses: {
              "metis-andromeda": "0x966b25d174be6ba703e0ff80c68bb6e167236ba2",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "revenue-coin",
            fileName: "RVC",
            symbol: "rvc",
            name: "Revenue Coin",
            marketCapRank: 2069,
            addresses: {
              "binance-smart-chain":
                "0xbcbdecf8e76a5c32dba69de16985882ace1678c6",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "revest-finance",
            fileName: "RVST",
            symbol: "rvst",
            name: "Revest Finance",
            marketCapRank: 967,
            addresses: {
              ethereum: "0x120a3879da835a5af037bb2d1456bebd6b54d4ba",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "revomon-2",
            fileName: "REVO",
            symbol: "revo",
            name: "Revomon",
            marketCapRank: 1820,
            addresses: {
              "binance-smart-chain":
                "0xaab09b5cd1694d12c8c980306f5e2f5d65b00e1c",
            },
            variants: ["branded", "background"],
          },
          {
            id: "revv",
            fileName: "REVV",
            symbol: "revv",
            name: "REVV",
            marketCapRank: 1347,
            addresses: {
              ethereum: "0x557b933a7c2c45672b610f8954a3deb39a51a8ca",
              "polygon-pos": "0x70c006878a5a50ed185ac4c87d837633923de296",
              "binance-smart-chain":
                "0x833f307ac507d47309fd8cdd1f835bef8d702a93",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "rhinofi",
            fileName: "DVF",
            symbol: "dvf",
            name: "Rhino.fi",
            marketCapRank: 1533,
            addresses: {
              ethereum: "0xdddddd4301a082e62e84e43f474f044423921918",
              "arbitrum-one": "0xa7aa2921618e3d63da433829d448b58c9445a4c3",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ribbit-meme",
            fileName: "RIBBIT",
            symbol: "ribbit",
            name: "Ribbit Meme",
            marketCapRank: 2597,
            addresses: {
              ethereum: "0xb794ad95317f75c44090f64955954c3849315ffe",
            },
            variants: ["branded", "background"],
          },
          {
            id: "ribbon-finance",
            fileName: "RBN",
            symbol: "rbn",
            name: "Ribbon Finance",
            marketCapRank: 74,
            addresses: {
              ethereum: "0x6123b0049f904d730db3c36a31167d9d4121fa6b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ridotto",
            fileName: "RDT",
            symbol: "rdt",
            name: "Ridotto",
            marketCapRank: 1508,
            addresses: {
              ethereum: "0x4740735aa98dc8aa232bd049f8f0210458e7fca3",
              "binance-smart-chain":
                "0xe9c64384deb0c2bf06d991a8d708c77eb545e3d5",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "rif-token",
            fileName: "RIF",
            symbol: "rif",
            name: "RSK Infrastructure Framework",
            marketCapRank: 291,
            addresses: {
              rootstock: "0x2acc95758f8b5f583470ba265eb685a8f45fc9d5",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "rigoblock",
            fileName: "GRG",
            symbol: "grg",
            name: "RigoBlock",
            marketCapRank: 1207,
            addresses: {
              ethereum: "0x4fbb350052bca5417566f188eb2ebce5b19bc964",
              "optimistic-ethereum":
                "0xecf46257ed31c329f204eb43e254c609dee143b3",
              "polygon-pos": "0xbc0bea8e634ec838a2a45f8a43e7e16cd2a8ba99",
              "arbitrum-one": "0x7f4638a58c0615037decc86f1dae60e55fe92874",
              base: "0x09188484e1ab980daef53a9755241d759c5b7d60",
              "binance-smart-chain":
                "0x3d473c3ef4cd4c909b020f48477a2ee2617a8e3c",
            },
            variants: ["branded", "background"],
          },
          {
            id: "ripio-credit-network",
            fileName: "RCN",
            symbol: "rcn",
            name: "Ripio Credit Network",
            marketCapRank: 2477,
            addresses: {
              ethereum: "0xf970b8e36e23f7fc3fd752eea86f8be8d83375a6",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ripple",
            fileName: "XRP",
            symbol: "xrp",
            name: "XRP",
            marketCapRank: 6,
            addresses: {},
            variants: ["mono", "branded", "background"],
          },
          {
            id: "risitas",
            fileName: "RISITA",
            symbol: "risita",
            name: "Risitas",
            marketCapRank: 3745,
            addresses: {
              ethereum: "0xe6f47303032a09c8c0f8ebb713c00e6ed345e8c3",
              "arbitrum-one": "0x7d86f1eaff29f076576b2ff09ce3bcc7533fd2c5",
            },
            variants: ["branded", "background"],
          },
          {
            id: "ritestream",
            fileName: "RITE",
            symbol: "rite",
            name: "ritestream",
            marketCapRank: 1745,
            addresses: {
              "binance-smart-chain":
                "0x0808bf94d57c905f1236212654268ef82e1e594e",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "rmrk",
            fileName: "RMRK",
            symbol: "rmrk",
            name: "RMRK",
            marketCapRank: 1140,
            addresses: {
              ethereum: "0x524d524b4c9366be706d3a90dcf70076ca037ae3",
              moonbeam: "0x524d524b4c9366be706d3a90dcf70076ca037ae3",
              "binance-smart-chain":
                "0x524d524b4c9366be706d3a90dcf70076ca037ae3",
              "polygon-pos": "0x524d524b4c9366be706d3a90dcf70076ca037ae3",
              base: "0x524d524b4c9366be706d3a90dcf70076ca037ae3",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "roasthimjim",
            fileName: "JIM",
            symbol: "jim",
            name: "Jim",
            marketCapRank: 2307,
            addresses: {
              ethereum: "0xd807f7e2818db8eda0d28b5be74866338eaedb86",
            },
            variants: ["branded", "background"],
          },
          {
            id: "robo-inu-finance",
            fileName: "RBIF",
            symbol: "rbif",
            name: "Robo Inu Finance",
            marketCapRank: 1560,
            addresses: {
              ethereum: "0x0e6fa9c050c8a707e7f56a2b3695665e4f9eac9b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "robonomics-network",
            fileName: "XRT",
            symbol: "xrt",
            name: "Robonomics Network",
            marketCapRank: 1534,
            addresses: {
              ethereum: "0x7de91b204c1c737bcee6f000aaa6569cf7061cb7",
              sora: "0x0083d5cbb4b90163b6a003e8f771eb7c0e2b706892cd0cbadb03f55cb9e06919",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "rocket-pool",
            fileName: "RPL",
            symbol: "rpl",
            name: "Rocket Pool",
            marketCapRank: 166,
            addresses: {
              ethereum: "0xd33526068d116ce69f19a9ee46f0bd304f21a51f",
              "polygon-pos": "0x7205705771547cf79201111b4bd8aaf29467b9ec",
              "arbitrum-one": "0xb766039cc6db368759c1e56b79affe831d0cc507",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "rocket-pool-eth",
            fileName: "RETH",
            symbol: "reth",
            name: "Rocket Pool ETH",
            marketCapRank: 62,
            addresses: {
              ethereum: "0xae78736cd615f374d3085123a210448e74fc6393",
              "optimistic-ethereum":
                "0x9bcef72be871e61ed4fbbc7630889bee758eb81d",
              "arbitrum-one": "0xec70dcb4a1efa46b8f2d97c310c9c4790ba5ffa8",
              "polygon-pos": "0x0266f4f08d82372cf0fcbccc0ff74309089c74d1",
              base: "0xb6fe221fe9eef5aba221c348ba20a1bf5e73624c",
            },
            variants: ["branded", "background"],
          },
          {
            id: "rocketx",
            fileName: "RVF",
            symbol: "rvf",
            name: "RocketX Exchange",
            marketCapRank: 806,
            addresses: {
              ethereum: "0xdc8af07a7861bedd104b8093ae3e9376fc8596d2",
              "binance-smart-chain":
                "0x872a34ebb2d54af86827810eebc7b9dc6b2144aa",
              "polygon-pos": "0x2ce13e4199443fdfff531abb30c9b6594446bbc7",
            },
            variants: ["branded", "background"],
          },
          {
            id: "roko-network",
            fileName: "ROKO",
            symbol: "roko",
            name: "Roko Network",
            marketCapRank: 1334,
            addresses: {
              ethereum: "0x6f222e04f6c53cc688ffb0abe7206aac66a8ff98",
            },
            variants: ["branded", "background"],
          },
          {
            id: "rollbit-coin",
            fileName: "RLB",
            symbol: "rlb",
            name: "Rollbit Coin",
            marketCapRank: 262,
            addresses: {
              ethereum: "0x046eee2cc3188071c02bfc1745a6b17c656e3f3d",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "rome",
            fileName: "ROME",
            symbol: "rome",
            name: "Rome",
            marketCapRank: 2179,
            addresses: {
              moonriver: "0x4a436073552044d5f2f49b176853ad3ad473d9d6",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "roobee",
            fileName: "ROOBEE",
            symbol: "roobee",
            name: "Roobee",
            marketCapRank: 2505,
            addresses: {
              ethereum: "0xa31b1767e09f842ecfd4bc471fe44f830e3891aa",
              avalanche: "0x4036f3d9c45a20f44f0b8b85dd6ca33005ff9654",
              "optimistic-ethereum":
                "0xb12c13e66ade1f72f71834f2fc5082db8c091358",
              "arbitrum-one": "0x3bd2dfd03bc7c3011ed7fb8c4d0949b382726cee",
              "polygon-pos": "0xfafa220145dfa5c3ec85b6fa8a75aee2451cde5e",
              "binance-smart-chain":
                "0xf77351d8f4ee853135961a936bb8d2e4ffa75f9d",
            },
            variants: ["mono"],
          },
          {
            id: "rook",
            fileName: "ROOK",
            symbol: "rook",
            name: "Rook",
            marketCapRank: 2391,
            addresses: {
              ethereum: "0xfa5047c9c78b8877af97bdcb85db743fd7313d4a",
              "harmony-shard-0": "0x08310baf9deb5f13b885edf5eea6fd19dc21af3a",
              sora: "0x00f58df67a15fe6c45d122767251c8660f33a2c544b5e2b70084c465b7cf84e7",
              energi: "0xf653d401a6af0ec568183d9d0714e3c5e61691d2",
            },
            variants: ["mono"],
          },
          {
            id: "route",
            fileName: "ROUTE",
            symbol: "route",
            name: "Router Protocol",
            marketCapRank: 689,
            addresses: {
              ethereum: "0x16eccfdbb4ee1a85a33f3a9b21175cd7ae753db4",
              avalanche: "0xf44ff799ea2bbfec96f9a50498209aac3c2b3b8b",
              fantom: "0x11bbf12363dc8375b78d2719395d505f52a02f68",
              aurora: "0xa1fc14bc890a98142443b7abc0eeccae6186cd9a",
              "optimistic-ethereum":
                "0x8413041a7702603d9d991f2c4add29e4e8a241f8",
              "arbitrum-one": "0x11bbf12363dc8375b78d2719395d505f52a02f68",
              "binance-smart-chain":
                "0xfd2700c51812753215754de9ec51cdd42bf725b9",
              "polygon-pos": "0x16eccfdbb4ee1a85a33f3a9b21175cd7ae753db4",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "rowan-coin",
            fileName: "RWN",
            symbol: "rwn",
            name: "Rowan Coin",
            marketCapRank: 784,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "rss3",
            fileName: "RSS3",
            symbol: "rss3",
            name: "RSS3",
            marketCapRank: 232,
            addresses: {
              ethereum: "0xc98d64da73a6616c42117b582e832812e7b8d57f",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "rubidium",
            fileName: "RBD",
            symbol: "rbd",
            name: "Rubidium",
            marketCapRank: 2418,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "rug-rugged-art",
            fileName: "RUG",
            symbol: "rug",
            name: "Rug",
            marketCapRank: 3052,
            addresses: {
              ethereum: "0xbe33f57f41a20b2f00dec91dcc1169597f36221f",
              "binance-smart-chain":
                "0xea4821632b139b7f08e37533d8152d50976618c6",
              solana: "BJRfDU8abGXmPiAj72kuc8AtXfxV8KFZAvdG3GTuB5Qc",
            },
            variants: ["branded", "background"],
          },
          {
            id: "rupiah-token",
            fileName: "IDRT",
            symbol: "idrt",
            name: "Rupiah Token",
            marketCapRank: 1415,
            addresses: {
              ethereum: "0x998ffe1e43facffb941dc337dd0468d52ba5b48a",
              "harmony-shard-0": "0xcefbea899cfccdc653b171d063481b622086be3f",
              "polygon-pos": "0x554cd6bdd03214b10aafa3e0d4d42de0c5d2937b",
              "binance-smart-chain":
                "0x66207e39bb77e6b99aab56795c7c340c08520d83",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "sacabam",
            fileName: "SCB",
            symbol: "scb",
            name: "Sacabam",
            marketCapRank: 2079,
            addresses: {
              sui: "0x9a5502414b5d51d01c8b5641db7436d789fa15a245694b24aa37c25c2a6ce001::scb::SCB",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "safe-coin-2",
            fileName: "SAFE",
            symbol: "safe",
            name: "SafeCoin",
            marketCapRank: 2003,
            addresses: {},
            variants: ["branded", "background"],
          },
          {
            id: "safe-deal",
            fileName: "SFD",
            symbol: "sfd",
            name: "SafeDeal",
            marketCapRank: 1181,
            addresses: {},
            variants: ["branded", "background"],
          },
          {
            id: "safe-haven",
            fileName: "SHA",
            symbol: "sha",
            name: "Safe Haven",
            marketCapRank: 1962,
            addresses: {
              vechain: "0x5db3c8a942333f6468176a870db36eef120a34dc",
              "binance-smart-chain":
                "0x40fed5691e547885cabd7a2990de719dcc8497fc",
              "polygon-pos": "0x534f39c5f4df9cb13e16b24ca07c7c8c0e2eadb7",
              ethereum: "0x40fed5691e547885cabd7a2990de719dcc8497fc",
            },
            variants: ["branded", "background"],
          },
          {
            id: "safemars",
            fileName: "SAFEMARS",
            symbol: "safemars",
            name: "Safemars",
            marketCapRank: 1839,
            addresses: {
              "binance-smart-chain":
                "0x3ad9594151886ce8538c1ff615efa2385a8c3a88",
            },
            variants: ["branded", "background"],
          },
          {
            id: "safemoon-2",
            fileName: "SFM",
            symbol: "sfm",
            name: "SafeMoon",
            marketCapRank: 615,
            addresses: {
              "binance-smart-chain":
                "0x42981d0bfbaf196529376ee702f2a9eb9092fcb5",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "safemoon-inu",
            fileName: "SMI",
            symbol: "smi",
            name: "SafeMoon Inu",
            marketCapRank: 2560,
            addresses: {
              ethereum: "0xcd7492db29e2ab436e819b249452ee1bbdf52214",
            },
            variants: ["branded", "background"],
          },
          {
            id: "safepal",
            fileName: "SFP",
            symbol: "sfp",
            name: "SafePal",
            marketCapRank: 240,
            addresses: {
              ethereum: "0x12e2b8033420270db2f3b328e32370cb5b2ca134",
              "binance-smart-chain":
                "0xd41fdb03ba84762dd66a0af1a6c8540ff1ba5dfb",
              energi: "0x12490d720747e312be64029dfd475837ed285cfe",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "saffron-finance",
            fileName: "SFI",
            symbol: "sfi",
            name: "saffron.finance",
            marketCapRank: 2112,
            addresses: {
              ethereum: "0xb753428af26e81097e7fd17f40c88aaa3e04902c",
              energi: "0x09319044a98e6bb4d95a6c112789afcebe5b58ac",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "sai",
            fileName: "SAI",
            symbol: "sai",
            name: "Sai",
            marketCapRank: 769,
            addresses: {
              ethereum: "0x89d24a6b4ccb1b6faa2625fe562bdd9a23260359",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "sail-2",
            fileName: "SAIL",
            symbol: "sail",
            name: "Clipper SAIL",
            marketCapRank: 1792,
            addresses: {
              ethereum: "0xd8f1460044925d2d5c723c7054cd9247027415b7",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "saitama-inu",
            fileName: "SAITAMA",
            symbol: "saitama",
            name: "Saitama",
            marketCapRank: 531,
            addresses: {
              ethereum: "0xce3f08e664693ca792cace4af1364d5e220827b2",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "saitarealty",
            fileName: "SRLTY",
            symbol: "srlty",
            name: "SaitaRealty",
            marketCapRank: 1966,
            addresses: {
              ethereum: "0x142a774e8b52550e88e196cedd7a5835acb646d0",
              "binance-smart-chain":
                "0xee8ed80bb013325ea63df19233aae584e94f3826",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "saito",
            fileName: "SAITO",
            symbol: "saito",
            name: "Saito",
            marketCapRank: 1227,
            addresses: {
              ethereum: "0xfa14fa6958401314851a17d6c5360ca29f74b57b",
              "binance-smart-chain":
                "0x3c6dad0475d3a1696b359dc04c99fd401be134da",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "sakai-vault",
            fileName: "SAKAI",
            symbol: "sakai",
            name: "Sakai Vault",
            marketCapRank: 1941,
            addresses: {
              "binance-smart-chain":
                "0x43b35e89d15b91162dea1c51133c4c93bdd1c4af",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "salt",
            fileName: "SALT",
            symbol: "salt",
            name: "SALT",
            marketCapRank: 2382,
            addresses: {
              ethereum: "0x4156d3342d5c385a87d264f90653733592000581",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "samoyedcoin",
            fileName: "SAMO",
            symbol: "samo",
            name: "Samoyedcoin",
            marketCapRank: 696,
            addresses: {
              solana: "7xKXtg2CW87d97TXJSDpbD5jBkheTqA83TZRuJosgAsU",
            },
            variants: ["branded", "background"],
          },
          {
            id: "samsunspor-fan-token",
            fileName: "SAM",
            symbol: "sam",
            name: "Samsunspor Fan Token",
            marketCapRank: 2050,
            addresses: { chiliz: "0xfc21c38f4802ab29aed8cc7367542a0955cfa9d7" },
            variants: ["branded", "background"],
          },
          {
            id: "sandclock",
            fileName: "QUARTZ",
            symbol: "quartz",
            name: "Sandclock",
            marketCapRank: 2518,
            addresses: {
              ethereum: "0xba8a621b4a54e61c442f5ec623687e2a942225ef",
              "polygon-pos": "0xa91fe5a535967f52d3abebdffb3b306d964ace13",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "sanin-inu",
            fileName: "SANI",
            symbol: "sani",
            name: "Sanin Inu",
            marketCapRank: 1942,
            addresses: {
              ethereum: "0x4521c9ad6a3d4230803ab752ed238be11f8b342f",
            },
            variants: ["branded", "background"],
          },
          {
            id: "santiment-network-token",
            fileName: "SAN",
            symbol: "san",
            name: "Santiment Network",
            marketCapRank: 1646,
            addresses: {
              ethereum: "0x7c5a0ce9267ed19b22f8cae653f198e3e8daf098",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "sats-ordinals",
            fileName: "SATS",
            symbol: "sats",
            name: "SATS (Ordinals)",
            marketCapRank: 109,
            addresses: {
              ordinals:
                "9b664bdd6f5ed80d8d88957b63364c41f3ad4efb8eee11366aa16435974d9333i0",
            },
            variants: ["branded", "background"],
          },
          {
            id: "satt",
            fileName: "SATT",
            symbol: "satt",
            name: "SaTT",
            marketCapRank: 3102,
            addresses: {
              ethereum: "0xdf49c9f599a0a9049d97cff34d0c30e468987389",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "saucerswap",
            fileName: "SAUCE",
            symbol: "sauce",
            name: "SaucerSwap",
            marketCapRank: 560,
            addresses: {
              "hedera-hashgraph": "0x00000000000000000000000000000000000b2ad5",
            },
            variants: ["branded", "background"],
          },
          {
            id: "savage",
            fileName: "SAVG",
            symbol: "savg",
            name: "SAVAGE",
            marketCapRank: 1880,
            addresses: {
              "polygon-pos": "0x981aecc6eb4d382b96a02b75e931900705e95a31",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "saveplanetearth",
            fileName: "SPE",
            symbol: "spe",
            name: "SavePlanetEarth",
            marketCapRank: 1809,
            addresses: {
              "binance-smart-chain":
                "0x4ac81e3631dcda62109e3117c4cae7bf70bbbbd2",
            },
            variants: ["branded", "background"],
          },
          {
            id: "sbtc",
            fileName: "SBTC",
            symbol: "sbtc",
            name: "sBTC",
            marketCapRank: 1220,
            addresses: {
              ethereum: "0xfe18be6b3bd88a2d2a7f928d00292e7a9963cfc6",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "scallop",
            fileName: "SCLP",
            symbol: "sclp",
            name: "Scallop",
            marketCapRank: 821,
            addresses: {
              "binance-smart-chain":
                "0xf2c96e402c9199682d5ded26d3771c6b192c01af",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "secret",
            fileName: "SCRT",
            symbol: "scrt",
            name: "Secret",
            marketCapRank: 365,
            addresses: {
              secret: "secret1k0jntykt7e4g3y88ltc60czgjuqdy4c9e8fzek",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "seedify-fund",
            fileName: "SFUND",
            symbol: "sfund",
            name: "Seedify.fund",
            marketCapRank: 285,
            addresses: {
              "binance-smart-chain":
                "0x477bc8d23c634c154061869478bce96be6045d12",
              ethereum: "0x560363bda52bc6a44ca6c8c9b4a5fadbda32fa60",
              "arbitrum-one": "0x560363bda52bc6a44ca6c8c9b4a5fadbda32fa60",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "sei-network",
            fileName: "SEI",
            symbol: "sei",
            name: "Sei",
            marketCapRank: 60,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "selfkey",
            fileName: "KEY",
            symbol: "key",
            name: "SelfKey",
            marketCapRank: 660,
            addresses: {
              ethereum: "0x4cc19356f2d37338b9802aa8e8fc58b0373296e7",
              "polygon-pos": "0x32dc2dd3c2be453a369625e6fe0e438aed814919",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "senate",
            fileName: "SENATE",
            symbol: "senate",
            name: "SENATE",
            marketCapRank: 1322,
            addresses: {
              ethereum: "0x34be5b8c30ee4fde069dc878989686abe9884470",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "send-token",
            fileName: "SEND",
            symbol: "send",
            name: "/send",
            marketCapRank: 1425,
            addresses: {
              ethereum: "0x3f14920c99beb920afa163031c4e47a3e03b3e4a",
              base: "0x3f14920c99beb920afa163031c4e47a3e03b3e4a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "sensegenesis",
            fileName: "SENSE",
            symbol: "sense",
            name: "Sense",
            marketCapRank: null,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "sentinel",
            fileName: "DVPN",
            symbol: "dvpn",
            name: "Sentinel",
            marketCapRank: 846,
            addresses: {
              osmosis:
                "ibc/9712DBB13B9631EDFA9BF61B55F1B2D290B2ADB67E3A4EB3A875F3B6081B3B84",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "sentinel-protocol",
            fileName: "UPP",
            symbol: "upp",
            name: "Sentinel Protocol",
            marketCapRank: 723,
            addresses: {
              ethereum: "0xc86d054809623432210c107af2e3f619dcfbf652",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "serum",
            fileName: "SRM",
            symbol: "srm",
            name: "Serum",
            marketCapRank: 1070,
            addresses: {
              ethereum: "0x476c5e26a75bd202a9683ffd34359c0cc15be0ff",
              energi: "0x83af4137ed450f4765a72831dd938b5203f5d2fb",
              tomochain: "0xc01643ac912b6a8ffc50cf8c1390934a6142bc91",
              solana: "SRMuApVNdxXokk5GT7XD5cUUgXMBCoAz2LHeuAoKWRt",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "seth",
            fileName: "SETH",
            symbol: "seth",
            name: "sETH",
            marketCapRank: 829,
            addresses: {
              ethereum: "0x5e74c9036fb86bd7ecdcb084a0673efc32ea31cb",
              "optimistic-ethereum":
                "0xe405de8f52ba7559f9df3c368500b6e6ae6cee49",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "seth2",
            fileName: "SETH2",
            symbol: "seth2",
            name: "sETH2",
            marketCapRank: 588,
            addresses: {
              ethereum: "0xfe2e637202056d30016725477c5da089ab0a043a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "shiba-inu",
            fileName: "SHIB",
            symbol: "shib",
            name: "Shiba Inu",
            marketCapRank: 13,
            addresses: {
              ethereum: "0x95ad61b0a150d79219dcf64e1e6cc01f0b64c4ce",
            },
            variants: ["branded", "background"],
          },
          {
            id: "shiba-predator",
            fileName: "QOM",
            symbol: "qom",
            name: "Shiba Predator",
            marketCapRank: 1017,
            addresses: {
              ethereum: "0xa71d0588eaf47f12b13cf8ec750430d21df04974",
            },
            variants: ["branded", "background"],
          },
          {
            id: "shiba-saga",
            fileName: "SHIA",
            symbol: "shia",
            name: "Shiba Saga",
            marketCapRank: 1627,
            addresses: {
              ethereum: "0x43d7e65b8ff49698d9550a7f315c87e67344fb59",
            },
            variants: ["branded", "background"],
          },
          {
            id: "shibadoge",
            fileName: "SHIBDOGE",
            symbol: "shibdoge",
            name: "ShibaDoge",
            marketCapRank: 1936,
            addresses: {
              ethereum: "0x6adb2e268de2aa1abf6578e4a8119b960e02928f",
            },
            variants: ["branded", "background"],
          },
          {
            id: "shiden",
            fileName: "SDN",
            symbol: "sdn",
            name: "Shiden Network",
            marketCapRank: 1184,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "shido-2",
            fileName: "SHIDO",
            symbol: "shido",
            name: "Shido",
            marketCapRank: 896,
            addresses: {
              ethereum: "0xe2512a2f19f0388ad3d7a5263eaa82acd564827b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "shikoku",
            fileName: "SHIK",
            symbol: "shik",
            name: "Shikoku",
            marketCapRank: 2432,
            addresses: {
              ethereum: "0x24da31e7bb182cb2cabfef1d88db19c2ae1f5572",
            },
            variants: ["branded", "background"],
          },
          {
            id: "shina-inu",
            fileName: "SHI",
            symbol: "shi",
            name: "Shina Inu",
            marketCapRank: 1252,
            addresses: {
              ethereum: "0x243cacb4d5ff6814ad668c3e225246efa886ad5a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "shockwaves",
            fileName: "NEUROS",
            symbol: "neuros",
            name: "Shockwaves",
            marketCapRank: 2081,
            addresses: {
              "binance-smart-chain":
                "0x95b0fffabd2817959ce410070600d77bce93d454",
            },
            variants: ["branded", "background"],
          },
          {
            id: "shrapnel-2",
            fileName: "SHRAP",
            symbol: "shrap",
            name: "Shrapnel",
            marketCapRank: 477,
            addresses: {
              avalanche: "0xd402298a793948698b9a63311404fbbee944eafd",
              ethereum: "0x31e4efe290973ebe91b3a875a7994f650942d28f",
              "binance-smart-chain":
                "0x31e4efe290973ebe91b3a875a7994f650942d28f",
            },
            variants: ["mono"],
          },
          {
            id: "shroom-finance",
            fileName: "SHROOM",
            symbol: "shroom",
            name: "Niftyx Protocol",
            marketCapRank: 2044,
            addresses: {
              ethereum: "0xed0439eacf4c4965ae4613d77a5c2efe10e5f183",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "shyft-network-2",
            fileName: "SHFT",
            symbol: "shft",
            name: "Shyft Network",
            marketCapRank: 1539,
            addresses: {
              ethereum: "0xb17c88bda07d28b3838e0c1de6a30eafbcf52d85",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "siacoin",
            fileName: "SC",
            symbol: "sc",
            name: "Siacoin",
            marketCapRank: 175,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "siaprime-coin",
            fileName: "SCP",
            symbol: "scp",
            name: "ScPrime",
            marketCapRank: 1506,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "sidus",
            fileName: "SIDUS",
            symbol: "sidus",
            name: "Sidus",
            marketCapRank: 486,
            addresses: {
              ethereum: "0x549020a9cb845220d66d3e9c6d9f9ef61c981102",
            },
            variants: ["mono"],
          },
          {
            id: "signum",
            fileName: "SIGNA",
            symbol: "signa",
            name: "Signum",
            marketCapRank: 2116,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "silent-notary",
            fileName: "UBSN",
            symbol: "ubsn",
            name: "Silent Notary",
            marketCapRank: 2359,
            addresses: {
              ethereum: "0x86efc496dca70bcfd92d19194290e8457a375773",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "silk-bcec1136-561c-4706-a42c-8b67d0d7f7d2",
            fileName: "SILK",
            symbol: "silk",
            name: "Silk",
            marketCapRank: 1912,
            addresses: {
              secret: "secret1fl449muk5yq8dlad7a22nje4p5d2pnsgymhjfd",
              osmosis:
                "ibc/8A025A1E70101E39DE0C0F153E582A30806D3DA16795F6D868A3AA247D2DEDF7",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "silo-finance",
            fileName: "SILO",
            symbol: "silo",
            name: "Silo Finance",
            marketCapRank: 972,
            addresses: {
              ethereum: "0x6f80310ca7f2c654691d1383149fa1a57d8ab1f8",
              "arbitrum-one": "0x0341c0c0ec423328621788d4854119b97f44e391",
            },
            variants: ["mono"],
          },
          {
            id: "singularitydao",
            fileName: "SDAO",
            symbol: "sdao",
            name: "SingularityDAO",
            marketCapRank: 546,
            addresses: {
              ethereum: "0x993864e43caa7f7f12953ad6feb1d1ca635b875f",
              "binance-smart-chain":
                "0x90ed8f1dc86388f14b64ba8fb4bbd23099f18240",
            },
            variants: ["branded", "background"],
          },
          {
            id: "singularitynet",
            fileName: "AGIX",
            symbol: "agix",
            name: "SingularityNET",
            marketCapRank: 73,
            addresses: {
              ethereum: "0x5b7533812759b45c2b44c19e320ba2cd2681b542",
              sora: "0x005e152271f8816d76221c7a0b5c6cafcb54fdfb6954dd8812f0158bfeac900d",
              cardano:
                "f43a62fdc3965df486de8a0d32fe800963589c41b38946602a0dc535",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "sipher",
            fileName: "SIPHER",
            symbol: "sipher",
            name: "SIPHER",
            marketCapRank: 850,
            addresses: {
              ethereum: "0x9f52c8ecbee10e00d9faaac5ee9ba0ff6550f511",
            },
            variants: ["branded", "background"],
          },
          {
            id: "siren",
            fileName: "SI",
            symbol: "si",
            name: "Siren",
            marketCapRank: 2417,
            addresses: {
              ethereum: "0xd23ac27148af6a2f339bd82d0e3cff380b5093de",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "six-network",
            fileName: "SIX",
            symbol: "six",
            name: "SIX Network",
            marketCapRank: 1446,
            addresses: {
              stellar:
                "SIX-GDMS6EECOH6MBMCP3FYRYEVRBIV3TQGLOFQIPVAITBRJUMTI6V7A2X6Z",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "skale",
            fileName: "SKL",
            symbol: "skl",
            name: "SKALE",
            marketCapRank: 161,
            addresses: {
              ethereum: "0x00c83aecc790e8a4453e5dd3b0b4b3680501a7a7",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "skeb",
            fileName: "SKEB",
            symbol: "skeb",
            name: "Skeb",
            marketCapRank: 1588,
            addresses: {
              ethereum: "0x6d614686550b9e1c1df4b2cd8f91c9d4df66c810",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "skey-network",
            fileName: "SKEY",
            symbol: "skey",
            name: "Skey Network",
            marketCapRank: 1140,
            addresses: {
              ethereum: "0x06a01a4d579479dd5d884ebf61a31727a3d8d442",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "slam-token",
            fileName: "SLAM",
            symbol: "slam",
            name: "Slam",
            marketCapRank: 2421,
            addresses: {
              "binance-smart-chain":
                "0x000851476180bfc499ea68450a5327d21c9b050e",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "sleepless-ai",
            fileName: "AI",
            symbol: "ai",
            name: "Sleepless AI",
            marketCapRank: 321,
            addresses: {
              "binance-smart-chain":
                "0xbda011d7f8ec00f66c1923b049b94c67d148d8b2",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "smardex",
            fileName: "SDEX",
            symbol: "sdex",
            name: "SmarDex",
            marketCapRank: 377,
            addresses: {
              ethereum: "0x5de8ab7e27f6e7a1fff3e5b337584aa43961beef",
              "arbitrum-one": "0xabd587f2607542723b17f14d00d99b987c29b074",
              "polygon-pos": "0x6899face15c14348e1759371049ab64a3a06bfa6",
              base: "0xfd4330b0312fdeec6d4225075b82e00493ff2e3f",
              "binance-smart-chain":
                "0xfdc66a08b0d0dc44c17bbd471b88f49f50cdd20f",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "smart-valor",
            fileName: "VALOR",
            symbol: "valor",
            name: "Smart Valor",
            marketCapRank: 1358,
            addresses: {
              ethereum: "0x297e4e5e59ad72b1b0a2fd446929e76117be0e0a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "smartcredit-token",
            fileName: "SMARTCREDIT",
            symbol: "smartcredit",
            name: "SmartCredit",
            marketCapRank: 2413,
            addresses: {
              ethereum: "0x72e9d9038ce484ee986fea183f8d8df93f9ada13",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "smooth-love-potion",
            fileName: "SLP",
            symbol: "slp",
            name: "Smooth Love Potion",
            marketCapRank: 305,
            addresses: {
              ronin: "0xa8754b9fa15fc18bb59458815510e40a12cd2014",
              ethereum: "0xcc8fa225d80b9c7d42f96e9570156c65d6caaa25",
              energi: "0xa598b856fa2d5e016d2e84a6a86ff99d69dd841e",
            },
            variants: ["branded", "background"],
          },
          {
            id: "snailbrook",
            fileName: "SNAIL",
            symbol: "snail",
            name: "SnailBrook",
            marketCapRank: 1271,
            addresses: {
              ethereum: "0x6bc40d4099f9057b23af309c08d935b890d7adc0",
            },
            variants: ["branded", "background"],
          },
          {
            id: "snek",
            fileName: "SNEK",
            symbol: "snek",
            name: "Snek",
            marketCapRank: 506,
            addresses: {
              cardano:
                "279c909f348e533da5808898f87f9a14bb2c3dfbbacccd631d927a3f",
            },
            variants: ["branded", "background"],
          },
          {
            id: "solana",
            fileName: "SOL",
            symbol: "sol",
            name: "Solana",
            marketCapRank: 5,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "solanium",
            fileName: "SLIM",
            symbol: "slim",
            name: "Solanium",
            marketCapRank: 955,
            addresses: {
              solana: "xxxxa1sKNGwFtw2kFn8XauW9xq8hBZ5kVtcSesTT9fW",
            },
            variants: ["branded", "background"],
          },
          {
            id: "solarcoin",
            fileName: "SLR",
            symbol: "slr",
            name: "Solarcoin",
            marketCapRank: 2484,
            addresses: {
              zksync: "0xe027d939f7de6f521675907cf086f59e4d75b876",
              ethereum: "0x4e9e4ab99cfc14b852f552f5fb3aa68617825b6c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "solcasino-token",
            fileName: "SCS",
            symbol: "scs",
            name: "Solcasino Token",
            marketCapRank: 573,
            addresses: {
              solana: "SCSuPPNUSypLBsV4darsrYNg4ANPgaGhKhsA3GmMyjz",
            },
            variants: ["branded", "background"],
          },
          {
            id: "solchat",
            fileName: "CHAT",
            symbol: "chat",
            name: "Solchat",
            marketCapRank: 619,
            addresses: {
              solana: "947tEoG318GUmyjVYhraNRvWpMX7fpBTDQFBoJvSkSG3",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "solcial",
            fileName: "SLCL",
            symbol: "slcl",
            name: "Solcial",
            marketCapRank: 2158,
            addresses: {
              solana: "SLCLww7nc1PD2gQPQdGayHviVVcpMthnqUz2iWKhNQV",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "soldex",
            fileName: "SOLX",
            symbol: "solx",
            name: "Soldex",
            marketCapRank: 3821,
            addresses: {
              solana: "CH74tuRLTYcxG7qNJCsV9rghfLXJCQJbsu7i52a8F1Gn",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "solend",
            fileName: "SLND",
            symbol: "slnd",
            name: "Solend",
            marketCapRank: 648,
            addresses: {
              solana: "SLNDpmoWTVADgEdndyvWzroNL7zSi1dF9PC3xHGtPwp",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "solfarm",
            fileName: "TULIP",
            symbol: "tulip",
            name: "Tulip Protocol",
            marketCapRank: 2321,
            addresses: {
              solana: "TuLipcqtGVXP9XR62wM8WWCm6a9vhLs7T1uoWBk6FDs",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "solidlydex",
            fileName: "SOLID",
            symbol: "solid",
            name: "Solidly",
            marketCapRank: 1753,
            addresses: {
              ethereum: "0x777172d858dc1599914a1c4c6c9fc48c99a60990",
              fantom: "0x777cf5ba9c291a1a8f57ff14836f6f9dc5c0f9dd",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "solidus-aitech",
            fileName: "AITECH",
            symbol: "aitech",
            name: "Solidus Ai Tech",
            marketCapRank: 419,
            addresses: {
              "binance-smart-chain":
                "0x2d060ef4d6bf7f9e5edde373ab735513c0e4f944",
            },
            variants: ["branded", "background"],
          },
          {
            id: "solo-coin",
            fileName: "SOLO",
            symbol: "solo",
            name: "Sologenic",
            marketCapRank: 680,
            addresses: {},
            variants: ["mono", "branded", "background"],
          },
          {
            id: "solve-care",
            fileName: "SOLVE",
            symbol: "solve",
            name: "SOLVE",
            marketCapRank: 1199,
            addresses: {
              ethereum: "0x446c9033e7516d820cc9a2ce2d0b7328b579406f",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "sombra-network",
            fileName: "SMBR",
            symbol: "smbr",
            name: "Sombra",
            marketCapRank: 2438,
            addresses: {
              "binance-smart-chain":
                "0x16b3e050e9e2f0ac4f1bea1b3e4fdc43d7f062dd",
              ethereum: "0x16b3e050e9e2f0ac4f1bea1b3e4fdc43d7f062dd",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "somesing",
            fileName: "SSX",
            symbol: "ssx",
            name: "SOMESING Exchange",
            marketCapRank: 1847,
            addresses: {
              "klay-token": "0xdcd62c57182e780e23d2313c4782709da85b9d6c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "sommelier",
            fileName: "SOMM",
            symbol: "somm",
            name: "Sommelier",
            marketCapRank: 805,
            addresses: {
              cosmos:
                "ibc/9BBA9A1C257E971E38C1422780CE6F0B0686F0A3085E2D61118D904BFE0F5F5E",
              ethereum: "0xa670d7237398238de01267472c6f13e5b8010fd1",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "somnium-space-cubes",
            fileName: "CUBE",
            symbol: "cube",
            name: "Somnium Space CUBEs",
            marketCapRank: 1246,
            addresses: {
              ethereum: "0xdf801468a808a32656d2ed2d2d80b72a129739f4",
            },
            variants: ["branded", "background"],
          },
          {
            id: "sonne-finance",
            fileName: "SONNE",
            symbol: "sonne",
            name: "Sonne Finance",
            marketCapRank: 1406,
            addresses: {
              "optimistic-ethereum":
                "0x1db2466d9f5e10d7090e7152b68d62703a2245f0",
              base: "0x22a2488fe295047ba13bd8cccdbc8361dbd8cf7c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "soonswap",
            fileName: "SOON",
            symbol: "soon",
            name: "SoonVerse",
            marketCapRank: 1750,
            addresses: {
              ethereum: "0x574d22e2555cac0ce71e44778f6de2e7487ae229",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "sophiaverse",
            fileName: "SOPH",
            symbol: "soph",
            name: "SophiaVerse",
            marketCapRank: 1136,
            addresses: {
              "binance-smart-chain":
                "0x73fbd93bfda83b111ddc092aa3a4ca77fd30d380",
              ethereum: "0x73fbd93bfda83b111ddc092aa3a4ca77fd30d380",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "sora",
            fileName: "XOR",
            symbol: "xor",
            name: "Sora",
            marketCapRank: 2092,
            addresses: {
              ethereum: "0x40fd72257597aa14c7231a7b1aaa29fce868f677",
              sora: "0x0200000000000000000000000000000000000000000000000000000000000000",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "source",
            fileName: "SOURCE",
            symbol: "source",
            name: "Source",
            marketCapRank: 1139,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "source-protocol",
            fileName: "SRCX",
            symbol: "srcx",
            name: "Source Protocol",
            marketCapRank: 2250,
            addresses: {
              "binance-smart-chain":
                "0x454b90716a9435e7161a9aea5cf00e0acbe565ae",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "sovryn",
            fileName: "SOV",
            symbol: "sov",
            name: "Sovryn",
            marketCapRank: 605,
            addresses: {
              ethereum: "0xbdab72602e9ad40fc6a6852caf43258113b8f7a5",
              rootstock: "0xefc78fc7d48b64958315949279ba181c2114abbd",
            },
            variants: ["mono"],
          },
          {
            id: "space-id",
            fileName: "ID",
            symbol: "id",
            name: "SPACE ID",
            marketCapRank: 202,
            addresses: {
              "binance-smart-chain":
                "0x2dff88a56767223a5529ea5960da7a3f5f766406",
              ethereum: "0x2dff88a56767223a5529ea5960da7a3f5f766406",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "spacechain-erc-20",
            fileName: "SPC",
            symbol: "spc",
            name: "SpaceChain (ERC-20)",
            marketCapRank: 1965,
            addresses: {
              ethereum: "0x86ed939b500e121c0c5f493f399084db596dad20",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "spacefalcon",
            fileName: "FCON",
            symbol: "fcon",
            name: "SpaceFalcon",
            marketCapRank: 1661,
            addresses: {
              solana: "HovGjrBGTfna4dvg6exkMxXuexB3tUfEZKcut8AWowXj",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "spacen",
            fileName: "SN",
            symbol: "sn",
            name: "SpaceN",
            marketCapRank: 1281,
            addresses: {
              "binance-smart-chain":
                "0x939dd9e433552e325d78c33a16ef4cd8004d2f9c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "spain-national-fan-token",
            fileName: "SNFT",
            symbol: "snft",
            name: "Spain National Football Team Fan Token",
            marketCapRank: 2206,
            addresses: {
              Bitcichain: "0x3e6f1be54feb9cc37dbfc31a894a8810357c3f9c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "spankchain",
            fileName: "SPANK",
            symbol: "spank",
            name: "SpankChain",
            marketCapRank: 1757,
            addresses: {
              ethereum: "0x42d6622dece394b54999fbd73d108123806f6a18",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "sparkpoint",
            fileName: "SRK",
            symbol: "srk",
            name: "SparkPoint",
            marketCapRank: 2320,
            addresses: {
              ethereum: "0x0488401c3f535193fa8df029d9ffe615a06e74e6",
              "harmony-shard-0": "0x9500a1fbef7014dbd384633fd20bb1e6916d6fca",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "spartadex",
            fileName: "SPARTA",
            symbol: "sparta",
            name: "SpartaDEX",
            marketCapRank: 1170,
            addresses: {
              "arbitrum-one": "0x11f98c7e42a367dab4f200d2fdc460fb445ce9a8",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "spell-token",
            fileName: "SPELL",
            symbol: "spell",
            name: "Spell",
            marketCapRank: 372,
            addresses: {
              ethereum: "0x090185f2135308bad17527004364ebcc2d37e5f6",
              avalanche: "0xce1bffbd5374dac86a2893119683f4911a2f7814",
              fantom: "0x468003b688943977e6130f4f68f23aad939a1040",
              "arbitrum-one": "0x3e6648c5a70a150a88bce65f4ad4d506fe15d2af",
            },
            variants: ["branded", "background"],
          },
          {
            id: "sperax",
            fileName: "SPA",
            symbol: "spa",
            name: "Sperax",
            marketCapRank: 987,
            addresses: {
              "arbitrum-one": "0x5575552988a3a80504bbaeb1311674fcfd40ad4b",
              ethereum: "0xb4a3b0faf0ab53df58001804dda5bfc6a3d59008",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "sphere-finance",
            fileName: "SPHERE",
            symbol: "sphere",
            name: "Sphere Finance",
            marketCapRank: 1866,
            addresses: {
              "polygon-pos": "0x62f594339830b90ae4c084ae7d223ffafd9658a7",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "spheroid-universe",
            fileName: "SPH",
            symbol: "sph",
            name: "Spheroid Universe",
            marketCapRank: 1707,
            addresses: {
              ethereum: "0xa0cf46eb152656c7090e769916eb44a138aaa406",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "spiritswap",
            fileName: "SPIRIT",
            symbol: "spirit",
            name: "SpiritSwap",
            marketCapRank: 1918,
            addresses: { fantom: "0x5cc61a78f164885776aa610fb0fe1257df78e59b" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "splyt",
            fileName: "SHOPX",
            symbol: "shopx",
            name: "SHOPX",
            marketCapRank: 1447,
            addresses: {
              ethereum: "0x7bef710a5759d197ec0bf621c3df802c2d60d848",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "spool-dao-token",
            fileName: "SPOOL",
            symbol: "spool",
            name: "Spool",
            marketCapRank: 1350,
            addresses: {
              ethereum: "0x40803cea2b2a32bda1be61d3604af6a814e70976",
              "arbitrum-one": "0xeca14f81085e5b8d1c9d32dcb596681574723561",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "spore",
            fileName: "SPORE",
            symbol: "spore",
            name: "Spore",
            marketCapRank: 2501,
            addresses: {
              avalanche: "0x6e7f5c0b9f4432716bdd0a77a3601291b9d9e985",
              "binance-smart-chain":
                "0x33a3d962955a3862c8093d1273344719f03ca17c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "spx6900",
            fileName: "SPX",
            symbol: "spx",
            name: "SPX6900",
            marketCapRank: 2171,
            addresses: {
              ethereum: "0xe0f63a424a4439cbe457d80e4f4b51ad25b2c56c",
              base: "0x50da645f148798f68ef2d7db7c1cb22a6819bb2c",
              solana: "J3NKxxXZcnNiMjKw9hYb2K4LUxgwB6t1FtPtQVsv3KFr",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "squad",
            fileName: "SQUAD",
            symbol: "squad",
            name: "Superpower Squad",
            marketCapRank: 2551,
            addresses: {
              "binance-smart-chain":
                "0x724a32dfff9769a0a0e1f0515c0012d1fb14c3bd",
              "arbitrum-nova": "0x223fb0ceb2c6e5310264efe38151d7d083db91f1",
              "arbitrum-one": "0xd45e486a90ebb84e9336d371a35dcb021424b96c",
            },
            variants: ["branded", "background"],
          },
          {
            id: "squidgrow",
            fileName: "SQUIDGROW",
            symbol: "squidgrow",
            name: "SquidGrow",
            marketCapRank: 1294,
            addresses: {
              "binance-smart-chain":
                "0xd8fa690304d2b2824d918c0c7376e2823704557a",
              ethereum: "0xd8fa690304d2b2824d918c0c7376e2823704557a",
            },
            variants: ["branded", "background"],
          },
          {
            id: "ssv-network",
            fileName: "SSV",
            symbol: "ssv",
            name: "SSV Network",
            marketCapRank: 219,
            addresses: {
              ethereum: "0x9d65ff81a3c488d585bbfb0bfe3c7707c7917f54",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "stacktical",
            fileName: "DSLA",
            symbol: "dsla",
            name: "DSLA Protocol",
            marketCapRank: 1836,
            addresses: {
              ethereum: "0x3affcca64c2a6f4e3b6bd9c64cd2c969efd1ecbe",
              "harmony-shard-0": "0x34704c70e9ec9fb9a921da6daad7d3e19f43c734",
              "arbitrum-one": "0x7ce746b45eabd0c4321538dec1b849c79a9a8476",
              avalanche: "0xd7c295e399ca928a3a14b01d760e794f1adf8990",
              "polygon-pos": "0xa0e390e9cea0d0e8cd40048ced9fa9ea10d71639",
              "binance-smart-chain":
                "0x1861c9058577c3b48e73d91d6f25c18b17fbffe0",
              fantom: "0x25a528af62e56512a19ce8c3cab427807c28cc19",
            },
            variants: ["branded", "background"],
          },
          {
            id: "stader-ethx",
            fileName: "ETHX",
            symbol: "ethx",
            name: "Stader ETHx",
            marketCapRank: 211,
            addresses: {
              ethereum: "0xa35b1b31ce002fbf2058d22f30f95d405200a15b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "stader-maticx",
            fileName: "MATICX",
            symbol: "maticx",
            name: "Stader MaticX",
            marketCapRank: 415,
            addresses: {
              ethereum: "0xf03a7eb46d01d9ecaa104558c732cf82f6b6b645",
              "manta-pacific": "0x01d27580c464d5b3b26f78bee12e684901dbc02a",
              "polygon-pos": "0xfa68fb4628dff1028cfec22b4162fccd0d45efb6",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "stader-sftmx",
            fileName: "SFTMX",
            symbol: "sftmx",
            name: "BeethovenX sFTMX",
            marketCapRank: 1104,
            addresses: { fantom: "0xd7028092c830b5c8fce061af2e593413ebbc1fc1" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "stafi",
            fileName: "FIS",
            symbol: "fis",
            name: "Stafi",
            marketCapRank: 452,
            addresses: {
              polkadot: "0xef3a930e1ffffacd2fc13434ac81bd278b0ecc8d",
              sora: "0x00e6df883c9844e34b354b840e3a527f5fc6bfc937138c67908b1c8f2931f3e9",
              ethereum: "0xef3a930e1ffffacd2fc13434ac81bd278b0ecc8d",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "stake-dao",
            fileName: "SDT",
            symbol: "sdt",
            name: "Stake DAO",
            marketCapRank: 1278,
            addresses: {
              ethereum: "0x73968b9a57c6e53d41345fd57a6e6ae27d6cdb2f",
              "arbitrum-one": "0x7ba4a00d54a07461d9db2aef539e91409943adc9",
              "polygon-pos": "0x361a5a4993493ce00f61c32d4ecca5512b82ce90",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "stake-link",
            fileName: "SDL",
            symbol: "sdl",
            name: "stake.link",
            marketCapRank: 1493,
            addresses: {
              ethereum: "0xa95c5ebb86e0de73b4fb8c47a45b792cfea28c23",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "staked-frax-ether",
            fileName: "SFRXETH",
            symbol: "sfrxeth",
            name: "Staked Frax Ether",
            marketCapRank: 159,
            addresses: {
              ethereum: "0xac3e018457b222d93114458476f3e3416abbe38f",
              moonbeam: "0xecf91116348af1cffe335e9807f0051332be128d",
              fantom: "0xb90ccd563918ff900928dc529aa01046795ccb4a",
              "optimistic-ethereum":
                "0x484c2d6e3cdd945a8b2df735e079178c1036578c",
              "arbitrum-one": "0x95ab45875cffdba1e5f451b950bc2e42c0053f39",
              "polygon-pos": "0x6d1fdbb266fcc09a16a22016369210a15bb95761",
              "binance-smart-chain":
                "0x3cd55356433c89e50dc51ab07ee0fa0a95623d53",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "stakewise",
            fileName: "SWISE",
            symbol: "swise",
            name: "StakeWise",
            marketCapRank: 1286,
            addresses: {
              ethereum: "0x48c3399719b582dd63eb5aadf12a40b4c3f52fa2",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "star-atlas",
            fileName: "ATLAS",
            symbol: "atlas",
            name: "Star Atlas",
            marketCapRank: 470,
            addresses: {
              solana: "ATLASXmbPQxBUYbxPsV97usA3fPQYEqzQBUHgiFCUsXx",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "stargate-finance",
            fileName: "STG",
            symbol: "stg",
            name: "Stargate Finance",
            marketCapRank: 406,
            addresses: {
              ethereum: "0xaf5191b0de278c7286d6c7cc6ab6bb8a73ba2cd6",
              avalanche: "0x2f6f07cdcf3588944bf4c42ac74ff24bf56e7590",
              "optimistic-ethereum":
                "0x296f55f8fb28e498b858d0bcda06d955b2cb3f97",
              "arbitrum-one": "0x6694340fc020c5e6b96567843da2df01b2ce1eb6",
              fantom: "0x2f6f07cdcf3588944bf4c42ac74ff24bf56e7590",
              "polygon-pos": "0x2f6f07cdcf3588944bf4c42ac74ff24bf56e7590",
              "binance-smart-chain":
                "0xb0d502e938ed5f4df2e681fe6e419ff29631d62b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "stargaze",
            fileName: "STARS",
            symbol: "stars",
            name: "Stargaze",
            marketCapRank: 653,
            addresses: {
              cosmos:
                "ibc/987C17B11ABC2B20019178ACE62929FE9840202CE79498E29FE8E5CB02B7C0A4",
              evmos: "0x5ad523d94efb56c400941eb6f34393b84c75ba39",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "starknet",
            fileName: "STRK",
            symbol: "strk",
            name: "Starknet",
            marketCapRank: 78,
            addresses: {
              ethereum: "0xca14007eff0db1f8135f4c25b34de49ab0d42766",
              starknet:
                "0x4718f5a0fc34cc1af16a1cdee98ffb20c31f5cd61d6ab07201858f4287c938d",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "starlink",
            fileName: "STARL",
            symbol: "starl",
            name: "StarLink",
            marketCapRank: 883,
            addresses: {
              ethereum: "0x8e6cd950ad6ba651f6dd608dc70e5886b1aa6b24",
            },
            variants: ["branded", "background"],
          },
          {
            id: "stasis-eurs",
            fileName: "EURS",
            symbol: "eurs",
            name: "STASIS EURO",
            marketCapRank: 444,
            addresses: {
              ethereum: "0xdb25f211ab05b1c97d595516f45794528a807ad8",
              "polygon-pos": "0xe111178a87a3bff0c8d18decba5798827539ae99",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "stat",
            fileName: "STAT",
            symbol: "stat",
            name: "STAT",
            marketCapRank: 1567,
            addresses: {
              ethereum: "0x4fc15c91a9c4a9efb404174464687e8e128730c2",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "status",
            fileName: "SNT",
            symbol: "snt",
            name: "Status",
            marketCapRank: 345,
            addresses: {
              ethereum: "0x744d70fdbe2ba4cf95131626614a1763df805b9e",
              energi: "0x6bb14afedc740dce4904b7a65807fe3b967f4c94",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "steem",
            fileName: "STEEM",
            symbol: "steem",
            name: "Steem",
            marketCapRank: 399,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "steem-dollars",
            fileName: "SBD",
            symbol: "sbd",
            name: "Steem Dollars",
            marketCapRank: 672,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "stellar",
            fileName: "XLM",
            symbol: "xlm",
            name: "Stellar",
            marketCapRank: 37,
            addresses: {},
            variants: ["mono"],
          },
          {
            id: "stellaswap",
            fileName: "STELLA",
            symbol: "stella",
            name: "StellaSwap",
            marketCapRank: 2056,
            addresses: {
              moonbeam: "0x0e358838ce72d5e61e0018a2ffac4bec5f4c88d2",
            },
            variants: ["branded", "background"],
          },
          {
            id: "step-app-fitfi",
            fileName: "FITFI",
            symbol: "fitfi",
            name: "Step App",
            marketCapRank: 984,
            addresses: {
              avalanche: "0x714f020c54cc9d104b6f4f6998c63ce2a31d1888",
              "binance-smart-chain":
                "0x7588df009c3d82378be6ab81f2108fa963c10fc8",
              "step-network": "0xb58a9d5920af6ac1a9522b0b10f55df16686d1b6",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "step-finance",
            fileName: "STEP",
            symbol: "step",
            name: "Step Finance",
            marketCapRank: 1032,
            addresses: {
              solana: "StepAscQoEioFxxWGnh2sLBDFp9d8rvKz2Yp39iDpyT",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "stfx",
            fileName: "STFX",
            symbol: "stfx",
            name: "STFX",
            marketCapRank: 1037,
            addresses: {
              ethereum: "0x9343e24716659a3551eb10aff9472a2dcad5db2d",
              "arbitrum-one": "0x7dd747d63b094971e6638313a6a2685e80c7fb2e",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "stima",
            fileName: "STIMA",
            symbol: "stima",
            name: "STIMA",
            marketCapRank: 2071,
            addresses: {
              ethereum: "0xd2e5decc08a80be6538f89f9ab8ff296e2f724df",
            },
            variants: ["branded", "background"],
          },
          {
            id: "stobox-token",
            fileName: "STBU",
            symbol: "stbu",
            name: "Stobox",
            marketCapRank: 1128,
            addresses: {
              ethereum: "0xa6422e3e219ee6d4c1b18895275fe43556fd50ed",
              "binance-smart-chain":
                "0xb0c4080a8fa7afa11a09473f3be14d44af3f8743",
              "polygon-pos": "0xcf403036bc139d30080d2cf0f5b48066f98191bb",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "storj",
            fileName: "STORJ",
            symbol: "storj",
            name: "Storj",
            marketCapRank: 485,
            addresses: {
              ethereum: "0xb64ef51c888972c908cfacf59b47c1afbc0ab8ac",
              "harmony-shard-0": "0x266f341e33aa61c30c6a9af89314811a5b097cb4",
              energi: "0xcde71daaffb6a12d584f55777d4c9e9d3c353c1e",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "storm",
            fileName: "STMX",
            symbol: "stmx",
            name: "StormX",
            marketCapRank: 449,
            addresses: {
              ethereum: "0xa62cc35625b0c8dc1faea39d33625bb4c15bd71c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "storx",
            fileName: "SRX",
            symbol: "srx",
            name: "StorX",
            marketCapRank: 1229,
            addresses: {
              "xdc-network": "xdc5d5f074837f5d4618b3916ba74de1bf9662a3fed",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "stp-network",
            fileName: "STPT",
            symbol: "stpt",
            name: "STP",
            marketCapRank: 405,
            addresses: {
              ethereum: "0xde7d85157d9714eadf595045cc12ca4a5f3e2adb",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "stratis",
            fileName: "STRAX",
            symbol: "strax",
            name: "Stratis",
            marketCapRank: 2109,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "stratos",
            fileName: "STOS",
            symbol: "stos",
            name: "Stratos",
            marketCapRank: 559,
            addresses: {
              ethereum: "0x08c32b0726c5684024ea6e141c50ade9690bbdcc",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "streamr",
            fileName: "DATA",
            symbol: "data",
            name: "Streamr",
            marketCapRank: 674,
            addresses: {
              ethereum: "0x8f693ca8d21b157107184d29d398a8d082b38b76",
              "binance-smart-chain":
                "0x0864c156b3c5f69824564dec60c629ae6401bf2a",
              "polygon-pos": "0x3a9a81d576d83ff21f26f325066054540720fc34",
              xdai: "0x256eb8a51f382650b2a1e946b8811953640ee47d",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "streamr-xdata",
            fileName: "XDATA",
            symbol: "xdata",
            name: "Streamr XDATA",
            marketCapRank: 716,
            addresses: {
              ethereum: "0x0cf0ee63788a0849fe5297f3407f701e122cc023",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "stride",
            fileName: "STRD",
            symbol: "strd",
            name: "Stride",
            marketCapRank: 280,
            addresses: {
              osmosis:
                "ibc/A8CA5EE328FA10C9519DF6057DA1F69682D28F7D0F5CCC7ECB72E3DCA2D157A4",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "stride-staked-atom",
            fileName: "STATOM",
            symbol: "statom",
            name: "Stride Staked Atom",
            marketCapRank: 751,
            addresses: {
              evmos: "0xc8b4d3e67238e38b20d38908646ff6f4f48de5ec",
              secret: "secret155w9uxruypsltvqfygh5urghd5v0zc6f9g69sq",
              osmosis:
                "ibc/C140AFD542AE77BD7DCC83F13FDD8C5E5BB8C4929785E6EC2F4C636F98F17901",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "stride-staked-juno",
            fileName: "STJUNO",
            symbol: "stjuno",
            name: "Stride Staked Juno",
            marketCapRank: 2505,
            addresses: {
              osmosis:
                "ibc/84502A75BCA4A5F68D464C00B3F610CE2585847D59B52E5FFB7C3C9D2DDCD3FE",
              secret: "secret1097nagcaavlkchl87xkqptww2qkwuvhdnsqs2v",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "stride-staked-osmo",
            fileName: "STOSMO",
            symbol: "stosmo",
            name: "Stride Staked Osmo",
            marketCapRank: 969,
            addresses: {
              osmosis:
                "ibc/D176154B0C63D1F9C6DCFB4F70349EBF2E2B5A87A05902F57A6AE92B863E9AEC",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "stride-staked-stars",
            fileName: "STSTARS",
            symbol: "ststars",
            name: "Stride Staked Stars",
            marketCapRank: 2547,
            addresses: {
              cosmos:
                "ibc/5DD1F95ED336014D00CE2520977EC71566D282F9749170ADC83A392E0EA7426A",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "strikecoin",
            fileName: "STRX",
            symbol: "strx",
            name: "StrikeX",
            marketCapRank: 663,
            addresses: {
              "binance-smart-chain":
                "0xd6fdde76b8c1c45b33790cc8751d5b88984c44ec",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "strips-finance",
            fileName: "STRP",
            symbol: "strp",
            name: "Strips Finance",
            marketCapRank: 1896,
            addresses: {
              ethereum: "0x97872eafd79940c7b24f7bcc1eadb1457347adc9",
              "arbitrum-one": "0x326c33fd1113c1f29b35b4407f3d6312a8518431",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "strong",
            fileName: "STRONG",
            symbol: "strong",
            name: "Strong",
            marketCapRank: 2322,
            addresses: {
              ethereum: "0x990f341946a3fdb507ae7e52d17851b87168017c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "stronghold-token",
            fileName: "SHX",
            symbol: "shx",
            name: "Stronghold",
            marketCapRank: 789,
            addresses: {
              stellar:
                "SHX-GDSTRSHXHGJ7ZIVRBXEYE5Q74XUVCUSEKEBR7UCHEUUEK72N7I7KJ6JH",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "subsocial",
            fileName: "SUB",
            symbol: "sub",
            name: "Subsocial",
            marketCapRank: 1709,
            addresses: {
              moonbeam: "0xffffffff43b4560bc0c451a3386e082bff50ac90",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "sudoswap",
            fileName: "SUDO",
            symbol: "sudo",
            name: "sudoswap",
            marketCapRank: 1819,
            addresses: {
              ethereum: "0x3446dd70b2d52a6bf4a5a192d9b0a161295ab7f9",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "sui",
            fileName: "SUI",
            symbol: "sui",
            name: "Sui",
            marketCapRank: 58,
            addresses: { sui: "0x2::sui::SUI" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "suipad",
            fileName: "SUIP",
            symbol: "suip",
            name: "SuiPad",
            marketCapRank: 1626,
            addresses: {
              sui: "0xe4239cd951f6c53d9c41e25270d80d31f925ad1655e5ba5b543843d4a66975ee::SUIP::SUIP",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "suiswap",
            fileName: "SSWP",
            symbol: "sswp",
            name: "Suiswap",
            marketCapRank: 1323,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "suku",
            fileName: "SUKU",
            symbol: "suku",
            name: "SUKU",
            marketCapRank: 1021,
            addresses: {
              ethereum: "0x0763fdccf1ae541a5961815c0872a8c5bc6de4d7",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "sun-token",
            fileName: "SUN",
            symbol: "sun",
            name: "Sun Token",
            marketCapRank: 403,
            addresses: { tron: "TSSMHYeV2uE9qYH95DqyoCuNCzEL1NvU3S" },
            variants: ["branded", "background"],
          },
          {
            id: "suncontract",
            fileName: "SNC",
            symbol: "snc",
            name: "SunContract",
            marketCapRank: 1621,
            addresses: {
              ethereum: "0xf4134146af2d511dd5ea8cdb1c4ac88c57d60404",
            },
            variants: ["mono"],
          },
          {
            id: "super-zero",
            fileName: "SERO",
            symbol: "sero",
            name: "SERO",
            marketCapRank: 2316,
            addresses: {},
            variants: ["mono"],
          },
          {
            id: "superlauncher-dao",
            fileName: "LAUNCH",
            symbol: "launch",
            name: "Superlauncher",
            marketCapRank: 2420,
            addresses: { zksync: "0xf6d9a093a1c69a152d87e269a7d909e9d76b1815" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "superrare",
            fileName: "RARE",
            symbol: "rare",
            name: "SuperRare",
            marketCapRank: 451,
            addresses: {
              ethereum: "0xba5bde662c17e2adff1075610382b9b691296350",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "superwalk",
            fileName: "GRND",
            symbol: "grnd",
            name: "SuperWalk",
            marketCapRank: 1473,
            addresses: {
              "klay-token": "0x84f8c3c8d6ee30a559d73ec570d574f671e82647",
            },
            variants: ["branded", "background"],
          },
          {
            id: "sushi",
            fileName: "SUSHI",
            symbol: "sushi",
            name: "Sushi",
            marketCapRank: 238,
            addresses: {
              ethereum: "0x6b3595068778dd592e39a122f4f5a5cf09c90fe2",
              fantom: "0xae75a438b2e0cb8bb01ec1e1e376de11d44477cc",
              "harmony-shard-0": "0xbec775cb42abfa4288de81f387a9b1a3c4bc552a",
              avalanche: "0x37b608519f91f70f2eeb0e5ed9af4061722e4f76",
              energi: "0x32aff6adc46331dac93e608a9cd4b0332d93a23a",
              "near-protocol":
                "6b3595068778dd592e39a122f4f5a5cf09c90fe2.factory.bridge.near",
              "arbitrum-one": "0xd4d42f0b6def4ce0383636770ef773390d85c61a",
              "polygon-pos": "0x0b3f868e0be5597d5db7feb59e1cadbb0fdda50a",
              "binance-smart-chain":
                "0x947950bcc74888a40ffa2593c5798f11fc9124c4",
              sora: "0x0078f4e6c5113b3d8c954dff62ece8fc36a8411f86f1cbb48a52527e22e73be2",
              celo: "0xd15ec721c2a896512ad29c671997dd68f9593226",
              solana: "ChVzxWRmrTeSgwd3Ui3UumcN8KX7VK3WaD4KGeSKpypj",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "suterusu",
            fileName: "SUTER",
            symbol: "suter",
            name: "Suterusu",
            marketCapRank: 2349,
            addresses: {
              ethereum: "0xaa2ce7ae64066175e0b90497ce7d9c190c315db4",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "swarm-bzz",
            fileName: "BZZ",
            symbol: "bzz",
            name: "Swarm",
            marketCapRank: 864,
            addresses: {
              ethereum: "0x19062190b1925b5b6689d7073fdfc8c2976ef8cb",
              xdai: "0xdbf3ea6f5bee45c02255b2c26a16f300502f68da",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "swarm-markets",
            fileName: "SMT",
            symbol: "smt",
            name: "Swarm Markets",
            marketCapRank: 744,
            addresses: {
              ethereum: "0xb17548c7b510427baac4e267bea62e800b247173",
              base: "0x2974dc646e375e83bd1c0342625b49f288987fa4",
              "polygon-pos": "0xe631dabef60c37a37d70d3b4f812871df663226f",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "swash",
            fileName: "SWASH",
            symbol: "swash",
            name: "Swash",
            marketCapRank: 1149,
            addresses: {
              ethereum: "0xa130e3a33a4d84b04c3918c4e5762223ae252f80",
              xdai: "0x84e2c67cbefae6b5148fca7d02b341b12ff4b5bb",
              "polygon-pos": "0xba3cb8329d442e6f9eb70fafe1e214251df3d275",
              "binance-smart-chain":
                "0x41065e3428188ba6eb27fbdde8526ae3af8e3830",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "sweatcoin",
            fileName: "SWEAT",
            symbol: "sweat",
            name: "Sweat Economy",
            marketCapRank: 517,
            addresses: {
              ethereum: "0xb4b9dc1c77bdbb135ea907fd5a08094d98883a35",
              "near-protocol": "token.sweat",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "sweth",
            fileName: "SWETH",
            symbol: "sweth",
            name: "Swell Ethereum",
            marketCapRank: 137,
            addresses: {
              ethereum: "0xf951e335afb289353dc249e82926178eac7ded78",
              "arbitrum-one": "0xbc011a12da28e8f0f528d9ee5e7039e22f91cf18",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "swftcoin",
            fileName: "SWFTC",
            symbol: "swftc",
            name: "SWFTCOIN",
            marketCapRank: 728,
            addresses: {
              ethereum: "0x0bb217e40f8a5cb79adf04e1aab60e5abd0dfc1e",
              "binance-smart-chain":
                "0xe64e30276c2f826febd3784958d6da7b55dfbad3",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "swipe",
            fileName: "SXP",
            symbol: "sxp",
            name: "SXP",
            marketCapRank: 274,
            addresses: {
              ethereum: "0x8ce9137d39326ad0cd6491fb5cc0cba0e089b6a9",
              "harmony-shard-0": "0x77d046614710fddf5ca3e3ce85f4f09f7abc283c",
              "binance-smart-chain":
                "0x47bead2563dcbf3bf2c9407fea4dc236faba485a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "switcheo",
            fileName: "SWTH",
            symbol: "swth",
            name: "Carbon Protocol",
            marketCapRank: 1298,
            addresses: {
              osmosis:
                "ibc/8FEFAE6AECF6E2A255585617F781F35A8D5709A545A804482A261C0C9548A9D3",
              neo: "ab38352559b8b203bde5fddfa0b07d8b2525e132",
              zilliqa: "zil1yk93f957fanapf0yszgm84p62xrxxfytj4d2tl",
              "arbitrum-one": "0xf763fa322dc58dee588252fafee5f448e863b633",
              "binance-smart-chain":
                "0xc0ecb8499d8da2771abcbf4091db7f65158f1468",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "sylo",
            fileName: "SYLO",
            symbol: "sylo",
            name: "Sylo",
            marketCapRank: 1337,
            addresses: {
              ethereum: "0xf293d23bf2cdc05411ca0eddd588eb1977e8dcd4",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "symbiosis-finance",
            fileName: "SIS",
            symbol: "sis",
            name: "Symbiosis",
            marketCapRank: 1014,
            addresses: {
              ethereum: "0xd38bb40815d2b0c2d2c866e0c72c5728ffc76dd9",
              linea: "0x6ef95b6f3b0f39508e3e04054be96d5ee39ede0d",
              zksync: "0xdd9f72afed3631a6c85b5369d84875e6c42f1827",
              "arbitrum-one": "0x9e758b8a98a42d612b3d38b66a22074dc03d7370",
              scroll: "0x1467b62a6ae5cdcb10a6a8173cfe187dd2c5a136",
              "binance-smart-chain":
                "0xf98b660adf2ed7d9d9d9daacc2fb0cace4f21835",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "syncus",
            fileName: "SYNC",
            symbol: "sync",
            name: "Syncus",
            marketCapRank: 627,
            addresses: {
              ethereum: "0xa41d2f8ee4f47d3b860a149765a7df8c3287b7f0",
              zksync: "0x2d20b8891f2f9ed0ebf1b179b2279f936dec9282",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "synesis-one",
            fileName: "SNS",
            symbol: "sns",
            name: "Synesis One",
            marketCapRank: 651,
            addresses: {
              solana: "SNSNkV9zfG5ZKWQs6x4hxvBRV6s8SqMfSGCtECDvdMd",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "syscoin",
            fileName: "SYS",
            symbol: "sys",
            name: "Syscoin",
            marketCapRank: 312,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "taboo-token",
            fileName: "TABOO",
            symbol: "taboo",
            name: "Taboo",
            marketCapRank: 1097,
            addresses: {
              "binance-smart-chain":
                "0x9abdba20edfba06b782126b4d8d72a5853918fd0",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "taki",
            fileName: "TAKI",
            symbol: "taki",
            name: "Taki Games",
            marketCapRank: 908,
            addresses: {
              solana: "Taki7fi3Zicv7Du1xNAWLaf6mRK7ikdn77HeGzgwvo4",
              "polygon-pos": "0xe78aee6ccb05471a69677fb74da80f5d251c042b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "tamadoge",
            fileName: "TAMA",
            symbol: "tama",
            name: "Tamadoge",
            marketCapRank: 1553,
            addresses: {
              ethereum: "0x12b6893ce26ea6341919fe289212ef77e51688c8",
            },
            variants: ["branded", "background"],
          },
          {
            id: "tap",
            fileName: "XTP",
            symbol: "xtp",
            name: "Tap",
            marketCapRank: 1689,
            addresses: {
              ethereum: "0x6368e1e18c4c419ddfc608a0bed1ccb87b9250fc",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "taraxa",
            fileName: "TARA",
            symbol: "tara",
            name: "Taraxa",
            marketCapRank: 901,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "tarot",
            fileName: "TAROT",
            symbol: "tarot",
            name: "Tarot V1",
            marketCapRank: 2382,
            addresses: {
              fantom: "0xc5e2b037d30a390e62180970b3aa4e91868764cd",
              "optimistic-ethereum":
                "0x375488f097176507e39b9653b88fdc52cde736bf",
              ethereum: "0x837d904a3799c0769079be9ecbaddf1abd4ccd6e",
              "arbitrum-one": "0x6688b00f0c23a4a546beaae51a7c90c439895d48",
              "binance-smart-chain":
                "0xa8cd6e4bf45724d3ac27f9e31e47ba4e399a7b52",
            },
            variants: ["mono"],
          },
          {
            id: "tbtc",
            fileName: "TBTC",
            symbol: "tbtc",
            name: "tBTC",
            marketCapRank: 488,
            addresses: {
              ethereum: "0x18084fba666a33d37592fa2633fd49a74dd93a88",
              "polygon-pos": "0x236aa50979d5f3de3bd1eeb40e81137f22ab794b",
              "optimistic-ethereum":
                "0x6c84a8f1c29108f47a79964b5fe888d4f4d0de40",
              "arbitrum-one": "0x6c84a8f1c29108f47a79964b5fe888d4f4d0de40",
              base: "0x236aa50979d5f3de3bd1eeb40e81137f22ab794b",
              solana: "6DNSN2BJsaPFdFFc1zP37kkeNe4Usc1Sqkzr9C9vPWcU",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "tectonic",
            fileName: "TONIC",
            symbol: "tonic",
            name: "Tectonic",
            marketCapRank: 931,
            addresses: { cronos: "0xdd73dea10abc2bff99c60882ec5b2b81bb1dc5b2" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "tectum",
            fileName: "TET",
            symbol: "tet",
            name: "Tectum",
            marketCapRank: 332,
            addresses: {
              ethereum: "0x68a47fe1cf42eba4a030a10cd4d6a1031ca3ca0a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "teh-fund",
            fileName: "FUND",
            symbol: "fund",
            name: "Teh Fund",
            marketCapRank: 2557,
            addresses: {
              ethereum: "0x7d8d7c26179b7a6aebbf66a91c38ed92d5b4996b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "telcoin",
            fileName: "TEL",
            symbol: "tel",
            name: "Telcoin",
            marketCapRank: 259,
            addresses: {
              ethereum: "0x467bccd9d29f223bce8043b84e8c8b282827790f",
              sora: "0x008f925e3e422218604fac1cc2f06f3ef9c1e244e0d2a9a823e5bd8ce9778434",
              "polygon-pos": "0xdf7837de1f2fa4631d716cf2502f8b230f1dcc32",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "tellor",
            fileName: "TRB",
            symbol: "trb",
            name: "Tellor Tributes",
            marketCapRank: 308,
            addresses: {
              ethereum: "0x88df592f8eb5d7bd38bfef7deb0fbc02cf3778a0",
              "manta-pacific": "0x8d7090ddda057f48fdbbb2abcea22d1113ab566a",
              "optimistic-ethereum":
                "0xaf8ca653fa2772d58f4368b0a71980e9e3ceb888",
              "arbitrum-one": "0xd58d345fd9c82262e087d2d0607624b410d88242",
              xdai: "0xaad66432d27737ecf6ed183160adc5ef36ab99f2",
              "polygon-pos": "0xe3322702bedaaed36cddab233360b939775ae5f1",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "telos",
            fileName: "TLOS",
            symbol: "tlos",
            name: "Telos",
            marketCapRank: 390,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "tenet-1b000f7b-59cb-4e06-89ce-d62b32d362b9",
            fileName: "TENET",
            symbol: "tenet",
            name: "TENET",
            marketCapRank: 958,
            addresses: {
              ethereum: "0x788d86e00ab31db859c3d6b80d5a9375801d7f2a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "tenset",
            fileName: "10SET",
            symbol: "10set",
            name: "Tenset",
            marketCapRank: 374,
            addresses: {
              "binance-smart-chain":
                "0x1ae369a6ab222aff166325b7b87eb9af06c86e57",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "tenx",
            fileName: "PAY",
            symbol: "pay",
            name: "TenX",
            marketCapRank: 2614,
            addresses: {
              ethereum: "0xb97048628db6b661d4c2aa833e95dbe1a905b280",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "terra-luna",
            fileName: "LUNC",
            symbol: "lunc",
            name: "Terra Luna Classic",
            marketCapRank: 125,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "terra-luna-2",
            fileName: "LUNA",
            symbol: "luna",
            name: "Terra",
            marketCapRank: 140,
            addresses: {
              osmosis:
                "ibc/785AFEC6B3741100D15E7AF01374E3C4C36F24888E96479B1C33F5C71F364EF9",
            },
            variants: ["branded", "background"],
          },
          {
            id: "terracoin",
            fileName: "TRC",
            symbol: "trc",
            name: "Terracoin",
            marketCapRank: 1395,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "terrausd",
            fileName: "USTC",
            symbol: "ustc",
            name: "TerraClassicUSD",
            marketCapRank: 302,
            addresses: { terra: "uusd" },
            variants: ["branded", "background"],
          },
          {
            id: "tether",
            fileName: "USDT",
            symbol: "usdt",
            name: "Tether",
            marketCapRank: 3,
            addresses: {
              ethereum: "0xdac17f958d2ee523a2206206994597c13d831ec7",
              avalanche: "0x9702230a8ea53601f5cd2dc00fdbc13d4df4a8c7",
              kava: "0x919c1c267bc06a7039e03fcc2ef738525769109c",
              tron: "TR7NHqjeKQxGTCi8q8ZY4pL8otSzgjLj6t",
              "near-protocol": "usdt.tether-token.near",
              solana: "Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "tether-eurt",
            fileName: "EURT",
            symbol: "eurt",
            name: "Euro Tether",
            marketCapRank: 887,
            addresses: {
              ethereum: "0xc581b735a1688071a1746c968e0798d642ede491",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "tether-gold",
            fileName: "XAUT",
            symbol: "xaut",
            name: "Tether Gold",
            marketCapRank: 180,
            addresses: {
              ethereum: "0x68749665ff8d2d112fa859aa293f07a622782f38",
            },
            variants: ["branded", "background"],
          },
          {
            id: "tetu",
            fileName: "TETU",
            symbol: "tetu",
            name: "TETU",
            marketCapRank: 2443,
            addresses: {
              "polygon-pos": "0x255707b70bf90aa112006e1b07b9aea6de021424",
              fantom: "0x65c9d9d080714cda7b5d58989dc27f897f165179",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "tezos",
            fileName: "XTZ",
            symbol: "xtz",
            name: "Tezos",
            marketCapRank: 88,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "tgold",
            fileName: "TXAU",
            symbol: "txau",
            name: "tGOLD",
            marketCapRank: 1776,
            addresses: {
              "polygon-pos": "0xa6da8c8999c094432c77e7d318951d34019af24b",
              ethereum: "0xe4a6f23fb9e00fca037aa0ea0a6954de0a6c53bf",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "thales",
            fileName: "THALES",
            symbol: "thales",
            name: "Thales",
            marketCapRank: 1206,
            addresses: {
              ethereum: "0x8947da500eb47f82df21143d0c01a29862a8c3c5",
              "optimistic-ethereum":
                "0x217d47011b23bb961eb6d93ca9945b7501a5bb11",
              "arbitrum-one": "0xe85b662fe97e8562f4099d8a1d5a92d4b453bf30",
              base: "0xf34e0cff046e154cafcae502c7541b9e5fd8c249",
              "polygon-pos": "0x692c44990e4f408ba0917f5c78a83160c1557237",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "the-4th-pillar",
            fileName: "FOUR",
            symbol: "four",
            name: "FOUR",
            marketCapRank: 2489,
            addresses: {
              ethereum: "0x4730fb1463a6f1f44aeb45f6c5c422427f37f4d0",
              "binance-smart-chain":
                "0xd882739fca9cbae00f3821c4c65189e2d7e26147",
              "polygon-pos": "0x48cbc913de09317df2365e6827df50da083701d5",
              solana: "DAtU322C23YpoZyWBm8szk12QyqHa9rUQe1EYXzbm1JE",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "the-abyss",
            fileName: "ABYSS",
            symbol: "abyss",
            name: "Abyss",
            marketCapRank: 2203,
            addresses: {
              ethereum: "0x0e8d6b471e332f140e7d9dbb99e5e3822f728da6",
              "harmony-shard-0": "0xa52d0c7943cc1020a926b23dd1c64fc60b4fadde",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "the-doge-nft",
            fileName: "DOG",
            symbol: "dog",
            name: "The Doge NFT",
            marketCapRank: 281,
            addresses: {
              ethereum: "0xbaac2b4491727d78d2b78815144570b9f2fe8899",
              base: "0xafb89a09d82fbde58f18ac6437b3fc81724e4df6",
              "optimistic-ethereum":
                "0x8f69ee043d52161fd29137aedf63f5e70cd504d5",
              "polygon-pos": "0xeee3371b89fc43ea970e908536fcddd975135d8a",
              "arbitrum-one": "0x4425742f1ec8d98779690b5a3a6276db85ddc01a",
              "binance-smart-chain":
                "0xaa88c603d142c371ea0eac8756123c5805edee03",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "the-graph",
            fileName: "GRT",
            symbol: "grt",
            name: "The Graph",
            marketCapRank: 41,
            addresses: {
              ethereum: "0xc944e90c64b2c07662a292be6244bdf05cda44a7",
              "harmony-shard-0": "0x002fa662f2e09de7c306d2bab0085ee9509488ff",
              energi: "0x771513ba693d457df3678c951c448701f2eaaad5",
              "near-protocol":
                "c944e90c64b2c07662a292be6244bdf05cda44a7.factory.bridge.near",
              avalanche: "0x8a0cac13c7da965a312f08ea4229c37869e85cb9",
              "polygon-pos": "0x5fe2b58c013d7601147dcdd68c143a77499f5531",
              "arbitrum-one": "0x9623063377ad1b27544c965ccd7342f7ea7e88c7",
              sora: "0x00d1fb79bbd1005a678fbf2de9256b3afe260e8eead49bb07bd3a566f9fe8355",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "the-open-network",
            fileName: "TON",
            symbol: "ton",
            name: "Toncoin",
            marketCapRank: 12,
            addresses: {
              ethereum: "0x582d872a1b094fc48f5de31d3b73f2d9be47def1",
              "binance-smart-chain":
                "0x76a797a59ba2c17726896976b7b3747bfd1d220f",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "the-sandbox",
            fileName: "SAND",
            symbol: "sand",
            name: "The Sandbox",
            marketCapRank: 77,
            addresses: {
              ethereum: "0x3845badade8e6dff049820680d1f14bd3903a5d0",
              "harmony-shard-0": "0x35de8649e1e4fd1a7bd3b14f7e24e5e7887174ed",
              "polygon-pos": "0xbbba073c31bf03b8acf7c28ef0738decf3695683",
              energi: "0x73a4ac88c12d66ad08c1cfc891bf47883919ba74",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "the-three-kingdoms",
            fileName: "TTK",
            symbol: "ttk",
            name: "The Three Kingdoms",
            marketCapRank: 2310,
            addresses: {
              "binance-smart-chain":
                "0x39703a67bac0e39f9244d97f4c842d15fbad9c1f",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "the-unfettered-souls",
            fileName: "SOULS",
            symbol: "souls",
            name: "The Unfettered Ecosystem",
            marketCapRank: 1840,
            addresses: {
              "polygon-pos": "0xaa4fbc6809a8e1924520fc85282ac4c76a7671d7",
            },
            variants: ["branded", "background"],
          },
          {
            id: "the-virtua-kolect",
            fileName: "TVK",
            symbol: "tvk",
            name: "Virtua",
            marketCapRank: 761,
            addresses: {
              ethereum: "0xd084b83c305dafd76ae3e1b4e1f1fe2ecccb3988",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "the-winkyverse",
            fileName: "WNK",
            symbol: "wnk",
            name: "Winkies",
            marketCapRank: 1990,
            addresses: {
              ethereum: "0xe1bda0c3bfa2be7f740f0119b6a34f057bd58eba",
              "binance-smart-chain":
                "0xb160a5f19ebccd8e0549549327e43ddd1d023526",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "thena",
            fileName: "THE",
            symbol: "the",
            name: "Thena",
            marketCapRank: 1254,
            addresses: {
              "binance-smart-chain":
                "0xf4c8e32eadec4bfe97e0f595add0f4450a863a11",
              opbnb: "0x9d94a7ff461e83f161c8c040e78557e31d8cba72",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "theopetra",
            fileName: "THEO",
            symbol: "theo",
            name: "Theopetra",
            marketCapRank: 1335,
            addresses: {
              ethereum: "0xfac0403a24229d7e2edd994d50f5940624cbeac2",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "theta-fuel",
            fileName: "TFUEL",
            symbol: "tfuel",
            name: "Theta Fuel",
            marketCapRank: 182,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "theta-token",
            fileName: "THETA",
            symbol: "theta",
            name: "Theta Network",
            marketCapRank: 50,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "thetadrop",
            fileName: "TDROP",
            symbol: "tdrop",
            name: "ThetaDrop",
            marketCapRank: 707,
            addresses: { theta: "0x1336739b05c7ab8a526d40dcc0d04a826b5f8b03" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "thol-token",
            fileName: "THOL",
            symbol: "thol",
            name: "AngelBlock",
            marketCapRank: 1646,
            addresses: {
              ethereum: "0x207e14389183a94343942de7afbc607f57460618",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "thorchain",
            fileName: "RUNE",
            symbol: "rune",
            name: "THORChain",
            marketCapRank: 49,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "thorstarter",
            fileName: "XRUNE",
            symbol: "xrune",
            name: "Thorstarter",
            marketCapRank: 2091,
            addresses: {
              ethereum: "0x69fa0fee221ad11012bab0fdb45d444d3d2ce71c",
              fantom: "0xe1e6b01ae86ad82b1f1b4eb413b219ac32e17bf6",
              terra: "terra1td743l5k5cmfy7tqq202g7vkmdvq35q48u2jfm",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "thorswap",
            fileName: "THOR",
            symbol: "thor",
            name: "THORSwap",
            marketCapRank: 690,
            addresses: {
              ethereum: "0xa5f2211b9b8170f694421f2046281775e8468044",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "thorwallet",
            fileName: "TGT",
            symbol: "tgt",
            name: "THORWallet DEX",
            marketCapRank: 1394,
            addresses: {
              ethereum: "0x108a850856db3f85d0269a2693d896b394c80325",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "thought",
            fileName: "THT",
            symbol: "tht",
            name: "Thought",
            marketCapRank: 874,
            addresses: {},
            variants: ["branded", "background"],
          },
          {
            id: "threshold-network-token",
            fileName: "T",
            symbol: "t",
            name: "Threshold Network",
            marketCapRank: 195,
            addresses: {
              ethereum: "0xcdf7028ceab81fa0c6971208e83fa7872994bee5",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "thunder-token",
            fileName: "TT",
            symbol: "tt",
            name: "ThunderCore",
            marketCapRank: 674,
            addresses: {
              ethereum: "0x1e053d89e08c24aa2ce5c5b4206744dc2d7bd8f5",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "tidal-finance",
            fileName: "TIDAL",
            symbol: "tidal",
            name: "Tidal Finance",
            marketCapRank: 2252,
            addresses: {
              ethereum: "0x29cbd0510eec0327992cd6006e63f9fa8e7f33b7",
              "polygon-pos": "0xb41ec2c036f8a42da384dde6ada79884f8b84b26",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "tierion",
            fileName: "TNT",
            symbol: "tnt",
            name: "Tierion",
            marketCapRank: 2122,
            addresses: {
              ethereum: "0x08f5a9235b08173b7569f83645d2c7fb55e8ccd8",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "tifi-token",
            fileName: "TIFI",
            symbol: "tifi",
            name: "TiFi",
            marketCapRank: 2308,
            addresses: {
              "binance-smart-chain":
                "0x17e65e6b9b166fb8e7c59432f0db126711246bc0",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "tigris",
            fileName: "TIG",
            symbol: "tig",
            name: "Tigris",
            marketCapRank: 2363,
            addresses: {
              "arbitrum-one": "0x3a33473d7990a605a88ac72a78ad4efc40a54adb",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "titanswap",
            fileName: "TITAN",
            symbol: "titan",
            name: "TitanSwap",
            marketCapRank: 2199,
            addresses: {
              ethereum: "0x3a8cccb969a61532d1e6005e2ce12c200caece87",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "token-in",
            fileName: "TIN",
            symbol: "tin",
            name: "Token IN",
            marketCapRank: 2577,
            addresses: {
              aptos:
                "0xc32ba5d293577cbb1df390f35b2bc6369a593b736d0865fedec1a2b08565de8e::in_coin::InCoin",
            },
            variants: ["branded", "background"],
          },
          {
            id: "tokencard",
            fileName: "TKN",
            symbol: "tkn",
            name: "Monolith",
            marketCapRank: 2006,
            addresses: {
              ethereum: "0xaaaf91d9b90df800df4f55c205fd6989c977e73a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "tokenfi",
            fileName: "TOKEN",
            symbol: "token",
            name: "TokenFi",
            marketCapRank: 314,
            addresses: {
              ethereum: "0x4507cef57c46789ef8d1a19ea45f4216bae2b528",
              "binance-smart-chain":
                "0x4507cef57c46789ef8d1a19ea45f4216bae2b528",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "tokenize-xchange",
            fileName: "TKX",
            symbol: "tkx",
            name: "Tokenize Xchange",
            marketCapRank: 102,
            addresses: {
              ethereum: "0x667102bd3413bfeaa3dffb48fa8288819e480a88",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "tokenlon",
            fileName: "LON",
            symbol: "lon",
            name: "Tokenlon",
            marketCapRank: 540,
            addresses: {
              ethereum: "0x0000000000095413afc295d19edeb1ad7b71c952",
              "arbitrum-one": "0x55678cd083fcdc2947a0df635c93c838c89454a3",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "tokocrypto",
            fileName: "TKO",
            symbol: "tko",
            name: "Tokocrypto",
            marketCapRank: 763,
            addresses: {
              "binance-smart-chain":
                "0x9f589e3eabe42ebc94a44727b3f3531c0c877809",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "tokpie",
            fileName: "TKP",
            symbol: "tkp",
            name: "TOKPIE",
            marketCapRank: 680,
            addresses: {
              ethereum: "0xd31695a1d35e489252ce57b129fd4b1b05e6acac",
              "binance-smart-chain":
                "0x7849ed1447250d0b896f89b58f3075b127ca29b3",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "tomb",
            fileName: "TOMB",
            symbol: "tomb",
            name: "Tomb",
            marketCapRank: 2053,
            addresses: {
              fantom: "0x6c021ae822bea943b2e66552bde1d2696a53fbb7",
              tombchain: "0xdeaddeaddeaddeaddeaddeaddeaddeaddead0000",
              avalanche: "0xb84527d59b6ecb96f433029ecc890d4492c5dce1",
              "binance-smart-chain":
                "0x8f01d597d2022656494e30fb76eccf1eea2e092e",
              "polygon-pos": "0x0e98c977b943f06075b2d795794238fbfb9b9a34",
            },
            variants: ["branded", "background"],
          },
          {
            id: "tominet",
            fileName: "TOMI",
            symbol: "tomi",
            name: "tomiNet",
            marketCapRank: 556,
            addresses: {
              ethereum: "0x4385328cc4d643ca98dfea734360c0f596c83449",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "top-network",
            fileName: "TOP",
            symbol: "top",
            name: "TOP Network",
            marketCapRank: 2558,
            addresses: {
              ethereum: "0xdcd85914b8ae28c1e62f1c488e1d968d5aaffe2b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "tor",
            fileName: "TOR",
            symbol: "tor",
            name: "TOR",
            marketCapRank: 360,
            addresses: {
              fantom: "0x74e23df9110aa9ea0b6ff2faee01e740ca1c642e",
              "binance-smart-chain":
                "0x1d6cbdc6b29c6afbae65444a1f65ba9252b8ca83",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "tornado-cash",
            fileName: "TORN",
            symbol: "torn",
            name: "Tornado Cash",
            marketCapRank: 1464,
            addresses: {
              ethereum: "0x77777feddddffc19ff86db637967013e6c6a116c",
              "binance-smart-chain":
                "0x1ba8d3c4c219b124d351f603060663bd1bcd9bbf",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "torum",
            fileName: "XTM",
            symbol: "xtm",
            name: "Torum",
            marketCapRank: 1341,
            addresses: {
              "binance-smart-chain":
                "0x443cab9583b83eaa7a712c9d64525e57e2a7eb3f",
            },
            variants: ["branded", "background"],
          },
          {
            id: "toshi",
            fileName: "TOSHI",
            symbol: "toshi",
            name: "Toshi",
            marketCapRank: 332,
            addresses: { base: "0xac1bd2486aaf3b5c0fc3fd868558b082a531b2b4" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "toucan-protocol-base-carbon-tonne",
            fileName: "BCT",
            symbol: "bct",
            name: "Toucan Protocol: Base Carbon Tonne",
            marketCapRank: 1164,
            addresses: {
              "polygon-pos": "0x2f800db0fdb5223b3c3f354886d907a671414a7f",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "tower",
            fileName: "TOWER",
            symbol: "tower",
            name: "Tower",
            marketCapRank: 1559,
            addresses: {
              ethereum: "0x1c9922314ed1415c95b9fd453c3818fd41867d0b",
              base: "0xf7c1cefcf7e1dd8161e00099facd3e1db9e528ee",
              "polygon-pos": "0x2bc07124d8dac638e290f401046ad584546bc47b",
              "binance-smart-chain":
                "0xe7c9c6bc87b86f9e5b57072f907ee6460b593924",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "trava-finance",
            fileName: "TRAVA",
            symbol: "trava",
            name: "Trava Finance",
            marketCapRank: 2512,
            addresses: {
              "binance-smart-chain":
                "0x0391be54e72f7e001f6bbc331777710b4f2999ef",
              ethereum: "0x186d0ba3dfc3386c464eecd96a61fbb1e2da00bf",
              fantom: "0x477a9d5df9beda06f6b021136a2efe7be242fcc9",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "traxx",
            fileName: "TRAXX",
            symbol: "traxx",
            name: "Traxx",
            marketCapRank: 2626,
            addresses: {
              ethereum: "0xd43be54c1aedf7ee4099104f2dae4ea88b18a249",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "tree-capital",
            fileName: "TREE",
            symbol: "tree",
            name: "Tree",
            marketCapRank: 1256,
            addresses: {
              ethereum: "0xba25b2281214300e4e649fead9a6d6acd25f1c0a",
            },
            variants: ["branded", "background"],
          },
          {
            id: "treeb",
            fileName: "TREEB",
            symbol: "treeb",
            name: "Retreeb",
            marketCapRank: 1552,
            addresses: { fantom: "0xc60d7067dfbc6f2caf30523a064f416a5af52963" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "treecle",
            fileName: "TRCL",
            symbol: "trcl",
            name: "Treecle",
            marketCapRank: 2557,
            addresses: {
              "klay-token": "0x4b91c67a89d4c4b2a4ed9fcde6130d7495330972",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "trias-token",
            fileName: "TRIAS",
            symbol: "trias",
            name: "TriasLab",
            marketCapRank: 471,
            addresses: {
              "binance-smart-chain":
                "0xa4838122c683f732289805fc3c207febd55babdd",
              ethereum: "0x3a856d4effa670c54585a5d523e96513e148e95d",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "tribe-2",
            fileName: "TRIBE",
            symbol: "tribe",
            name: "Tribe",
            marketCapRank: 331,
            addresses: {
              ethereum: "0xc7283b66eb1eb5fb86327f08e1b5816b0720212b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "tribeone",
            fileName: "HAKA",
            symbol: "haka",
            name: "TribeOne",
            marketCapRank: 2273,
            addresses: {
              ethereum: "0xd85ad783cc94bd04196a13dc042a3054a9b52210",
              "binance-smart-chain":
                "0xd85ad783cc94bd04196a13dc042a3054a9b52210",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "tron",
            fileName: "TRX",
            symbol: "trx",
            name: "TRON",
            marketCapRank: 18,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "tronpad",
            fileName: "TRONPAD",
            symbol: "tronpad",
            name: "TRONPAD",
            marketCapRank: 2386,
            addresses: {
              "binance-smart-chain":
                "0x1bf7aedec439d6bfe38f8f9b20cf3dc99e3571c4",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "troy",
            fileName: "TROY",
            symbol: "troy",
            name: "TROY",
            marketCapRank: 944,
            addresses: { binancecoin: "TROY-9B8" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "true-usd",
            fileName: "TUSD",
            symbol: "tusd",
            name: "TrueUSD",
            marketCapRank: 192,
            addresses: {
              ethereum: "0x0000000000085d4780b73119b644ae5ecd22b376",
              avalanche: "0x1c20e891bab6b1727d14da358fae2984ed9b59eb",
              "binance-smart-chain":
                "0x40af3827f39d0eacbf4a168f8d4ee67c121d11c9",
              tron: "TUpMhErZL2fhh4sVNULAbNKLokS4GjC1F4",
              binancecoin: "TUSDB-888",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "truefi",
            fileName: "TRU",
            symbol: "tru",
            name: "TrueFi",
            marketCapRank: 386,
            addresses: {
              ethereum: "0x4c19596f5aaff459fa38b0f7ed92f11ae6543784",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "trust-wallet-token",
            fileName: "TWT",
            symbol: "twt",
            name: "Trust Wallet",
            marketCapRank: 175,
            addresses: {
              "binance-smart-chain":
                "0x4b0f1812e5df2a09796481ff14017e6005508003",
              energi: "0xfaa02b262130431b44c929fdd960e202ffeabfe3",
              binancecoin: "TWT-8C2",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "trustpad-2-0",
            fileName: "TPAD",
            symbol: "tpad",
            name: "TrustPad",
            marketCapRank: 2001,
            addresses: {
              "binance-smart-chain":
                "0x7029f86dc4634c5d59ee3f1578c193783505e2c1",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "trustswap",
            fileName: "SWAP",
            symbol: "swap",
            name: "TrustSwap",
            marketCapRank: 1110,
            addresses: {
              ethereum: "0xcc4304a31d09258b0029ea7fe63d032f52e44efe",
              energi: "0x324a1e5707f356218356c95cfe20d5d9b1440f30",
              "polygon-pos": "0x3809dcdd5dde24b37abe64a5a339784c3323c44f",
              avalanche: "0xc7b5d72c836e718cda8888eaf03707faef675079",
              "binance-smart-chain":
                "0x82443a77684a7da92fdcb639c8d2bd068a596245",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "tutellus",
            fileName: "TUT",
            symbol: "tut",
            name: "Tutellus",
            marketCapRank: 2531,
            addresses: {
              "polygon-pos": "0x12a34a6759c871c4c1e8a0a42cfc97e4d7aaf68d",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ubxs-token",
            fileName: "UBXS",
            symbol: "ubxs",
            name: "UBXS",
            marketCapRank: 1064,
            addresses: {
              "binance-smart-chain":
                "0x4f1960e29b2ca581a38c5c474e123f420f8092db",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ultra",
            fileName: "UOS",
            symbol: "uos",
            name: "Ultra",
            marketCapRank: 523,
            addresses: {
              ethereum: "0xd13c7342e1ef687c5ad21b27c2b65d772cab5c8c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "uma",
            fileName: "UMA",
            symbol: "uma",
            name: "UMA",
            marketCapRank: 251,
            addresses: {
              ethereum: "0x04fa0d235c4abf4bcf4787af4cf447de572ef828",
              avalanche: "0x3bd2b1c7ed8d396dbb98ded3aebb41350a5b2339",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "umami-finance",
            fileName: "UMAMI",
            symbol: "umami",
            name: "Umami",
            marketCapRank: 2132,
            addresses: {
              "arbitrum-one": "0x1622bf67e6e5747b81866fe0b85178a93c7f86e3",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "umbrella-network",
            fileName: "UMB",
            symbol: "umb",
            name: "Umbrella Network",
            marketCapRank: 1334,
            addresses: {
              ethereum: "0x6fc13eace26590b80cccab1ba5d51890577d83b2",
              "binance-smart-chain":
                "0x846f52020749715f02aef25b5d1d65e48945649d",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "undead-blocks",
            fileName: "UNDEAD",
            symbol: "undead",
            name: "Undead Blocks",
            marketCapRank: 2303,
            addresses: {
              ethereum: "0x310c8f00b9de3c31ab95ea68feb6c877538f7947",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "unibot",
            fileName: "UNIBOT",
            symbol: "unibot",
            name: "Unibot",
            marketCapRank: 1128,
            addresses: {
              ethereum: "0xf819d9cb1c2a819fd991781a822de3ca8607c3c9",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "unibright",
            fileName: "UBT",
            symbol: "ubt",
            name: "Unibright",
            marketCapRank: 1234,
            addresses: {
              ethereum: "0x8400d94a5cb0fa0d041a3788e395285d61c9ee5e",
              energi: "0xe3d7a5c28d5a4143831242e8ab218d7e9b5c2c87",
              "polygon-pos": "0x7fbc10850cae055b27039af31bd258430e714c62",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "unicrypt-2",
            fileName: "UNCX",
            symbol: "uncx",
            name: "UNCX Network",
            marketCapRank: 1403,
            addresses: {
              ethereum: "0xadb2437e6f65682b85f814fbc12fec0508a7b1d0",
              xdai: "0x0116e28b43a358162b96f70b4de14c98a4465f25",
              "binance-smart-chain":
                "0x09a6c44c3947b69e2b45f4d51b67e6a39acfb506",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "unidef",
            fileName: "U",
            symbol: "u",
            name: "Unidef",
            marketCapRank: 1770,
            addresses: {
              "binance-smart-chain":
                "0x89db9b433fec1307d3dc8908f2813e9f7a1d38f0",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "unifi-protocol-dao",
            fileName: "UNFI",
            symbol: "unfi",
            name: "Unifi Protocol DAO",
            marketCapRank: 702,
            addresses: {
              ethereum: "0x441761326490cacf7af299725b6292597ee822c2",
              "binance-smart-chain":
                "0x728c5bac3c3e370e372fc4671f9ef6916b814d8b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "unilayer",
            fileName: "LAYER",
            symbol: "layer",
            name: "UniLayer",
            marketCapRank: 2337,
            addresses: {
              ethereum: "0x0ff6ffcfda92c53f615a4a75d982f399c989366b",
              "binance-smart-chain":
                "0xc2c23a86def9e9f5972a633b3d25f7ecbfa5e575",
              "harmony-shard-0": "0xe88699ad32d5a610987a3ba8519c06289549cca7",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "unisocks",
            fileName: "SOCKS",
            symbol: "socks",
            name: "Unisocks",
            marketCapRank: 1490,
            addresses: {
              ethereum: "0x23b608675a2b2fb1890d3abbd85c5775c51691d5",
              pulsechain: "0x23b608675a2b2fb1890d3abbd85c5775c51691d5",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "uniswap",
            fileName: "UNI",
            symbol: "uni",
            name: "Uniswap",
            marketCapRank: 19,
            addresses: {
              ethereum: "0x1f9840a85d5af5bf1d1762f925bdaddc4201f984",
              xdai: "0x4537e328bf7e4efa29d05caea260d7fe26af9d74",
              avalanche: "0x8ebaf22b6f053dffeaf46f4dd9efa95d89ba8580",
              "near-protocol":
                "1f9840a85d5af5bf1d1762f925bdaddc4201f984.factory.bridge.near",
              energi: "0x665b3a802979ec24e076c80025bff33c18eb6007",
              "optimistic-ethereum":
                "0x6fd9d7ad17242c41f7131d257212c54a0e816691",
              "arbitrum-one": "0xfa7f8980b0f1e64a2062791cc3b0871572f1f7f0",
              "huobi-token": "0x22c54ce8321a4015740ee1109d9cbc25815c46e6",
              "polygon-pos": "0xb33eaad8d922b1083446dc23f610c2567fb5180f",
              "harmony-shard-0": "0x90d81749da8867962c760414c1c25ec926e889b6",
              sora: "0x009be848df92a400da2f217256c88d1a9b1a0304f9b3e90991a67418e1d3b08c",
              "binance-smart-chain":
                "0xbf5140a22578168fd562dccf235e5d43a02ce9b1",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "unix",
            fileName: "UNIX",
            symbol: "unix",
            name: "UniX",
            marketCapRank: 1946,
            addresses: {
              ethereum: "0xddd6a0ecc3c6f6c102e5ea3d8af7b801d1a77ac8",
              avalanche: "0x6f97d3f120fbbdaacf1c9da61a8ad126b7426861",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "unizen",
            fileName: "ZCX",
            symbol: "zcx",
            name: "Unizen",
            marketCapRank: 324,
            addresses: {
              ethereum: "0xc52c326331e9ce41f04484d3b5e5648158028804",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "unlend-finance",
            fileName: "UFT",
            symbol: "uft",
            name: "UniLend Finance",
            marketCapRank: 759,
            addresses: {
              ethereum: "0x0202be363b8a4820f3f4de7faf5224ff05943ab1",
              "polygon-pos": "0x5b4cf2c120a9702225814e18543ee658c5f8631e",
              "binance-smart-chain":
                "0x2645d5f59d952ef2317c8e0aaa5a61c392ccd44d",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "unmarshal",
            fileName: "MARSH",
            symbol: "marsh",
            name: "Unmarshal",
            marketCapRank: 1303,
            addresses: {
              ethereum: "0x5a666c7d92e5fa7edcb6390e4efd6d0cdd69cf37",
              "binance-smart-chain":
                "0x2fa5daf6fe0708fbd63b1a7d1592577284f52256",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "uno-re",
            fileName: "UNO",
            symbol: "uno",
            name: "Uno Re",
            marketCapRank: 1766,
            addresses: {
              ethereum: "0x474021845c4643113458ea4414bdb7fb74a01a77",
              "binance-smart-chain":
                "0x474021845c4643113458ea4414bdb7fb74a01a77",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "unsheth",
            fileName: "USH",
            symbol: "ush",
            name: "unshETHing_Token",
            marketCapRank: 2595,
            addresses: {
              ethereum: "0xe60779cc1b2c1d0580611c526a8df0e3f870ec48",
              "arbitrum-one": "0x51a80238b5738725128d3a3e06ab41c1d4c05c74",
              "binance-smart-chain":
                "0x91d6d6af7635b7b23a8ced9508117965180e2362",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "unstoppable-defi",
            fileName: "UND",
            symbol: "und",
            name: "Unstoppable DeFi",
            marketCapRank: 2389,
            addresses: {
              "arbitrum-one": "0xb5a628803ee72d82098d4bcaf29a42e63531b441",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "uquid-coin",
            fileName: "UQC",
            symbol: "uqc",
            name: "Uquid Coin",
            marketCapRank: 549,
            addresses: {
              ethereum: "0x8806926ab68eb5a7b909dcaf6fdbe5d93271d6e2",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "urus-token",
            fileName: "URUS",
            symbol: "urus",
            name: "Aurox",
            marketCapRank: 2111,
            addresses: {
              ethereum: "0xc6dddb5bc6e61e0841c54f3e723ae1f3a807260b",
              "binance-smart-chain":
                "0xc6dddb5bc6e61e0841c54f3e723ae1f3a807260b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "usd-coin",
            fileName: "USDC",
            symbol: "usdc",
            name: "USDC",
            marketCapRank: 8,
            addresses: {
              ethereum: "0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48",
              polkadot: "1337",
              flow: "A.b19436aae4d94622.FiatToken",
              avalanche: "0xb97ef9ef8734c71904d8002f8b6bc66dd9c48a6e",
              "optimistic-ethereum":
                "0x0b2c639c533813f4aa9d7837caf62653d097ff85",
              stellar:
                "USDC-GA5ZSEJYB37JRC5AVCIA5MOP4RHTM335X2KGX3IHOJAPP5RE34K4KZVN",
              "near-protocol":
                "17208628f84f5d6ad33f0da3bbbeb27ffcb398eac501a31bd6ad2011e36133a1",
              "hedera-hashgraph": "0.0.456858",
              tron: "TEkxiTehnzSmSe2XqrBj4w32RUN966rdz8",
              celo: "0xceba9300f2b948710d2653dd7b07f33a8b32118c",
              "arbitrum-one": "0xaf88d065e77c8cc2239327c5edb3a432268e5831",
              base: "0x833589fcd6edb6e08f4c7c32d4f71b54bda02913",
              "polygon-pos": "0x3c499c542cef5e3811e1192ce70d8cc03d5c3359",
              solana: "EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "usdd",
            fileName: "USDD",
            symbol: "usdd",
            name: "USDD",
            marketCapRank: 145,
            addresses: {
              tron: "TPYmHEhy5n8TCEfYGqW2rPxsghSfzghPDn",
              "near-protocol":
                "0c10bf8fcb7bf5412187a595ab97a3609160b5c6.factory.bridge.near",
              avalanche: "0xb514cabd09ef5b169ed3fe0fa8dbd590741e81c2",
              bittorrent: "0x17f235fd5974318e4e2a5e37919a209f7c37a6d1",
              ethereum: "0x0c10bf8fcb7bf5412187a595ab97a3609160b5c6",
              "arbitrum-one": "0x680447595e8b7b3aa1b43beb9f6098c79ac2ab3f",
              "binance-smart-chain":
                "0xd17479997f34dd9156deef8f95a52d81d265be9c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "usdx",
            fileName: "USDX",
            symbol: "usdx",
            name: "USDX",
            marketCapRank: 530,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "utility-web3shot",
            fileName: "UW3S",
            symbol: "uw3s",
            name: "Utility Web3Shot",
            marketCapRank: 1904,
            addresses: {
              "binance-smart-chain":
                "0x961e149db8bfbdb318c182152725ac806d7be3f4",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "utrust",
            fileName: "UTK",
            symbol: "utk",
            name: "xMoney",
            marketCapRank: null,
            addresses: {
              ethereum: "0xdc9ac3c20d1ed0b540df9b1fedc10039df13f99c",
              elrond: "UTK-2f80e9",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "uwu-lend",
            fileName: "UWU",
            symbol: "uwu",
            name: "UwU Lend",
            marketCapRank: 835,
            addresses: {
              ethereum: "0x55c08ca52497e2f1534b59e2917bf524d4765257",
            },
            variants: ["branded", "background"],
          },
          {
            id: "v-systems",
            fileName: "VSYS",
            symbol: "vsys",
            name: "V.SYSTEMS",
            marketCapRank: 1756,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "vabble",
            fileName: "VAB",
            symbol: "vab",
            name: "Vabble",
            marketCapRank: 2131,
            addresses: {
              ethereum: "0xe7ae6d0c56cacaf007b7e4d312f9af686a9e9a04",
              "polygon-pos": "0xea73dcf6f49f8d6ad5a129aaede776d78d418cfd",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "vaiot",
            fileName: "VAI",
            symbol: "vai",
            name: "Vaiot",
            marketCapRank: 559,
            addresses: {
              ethereum: "0xd13cfd3133239a3c73a9e535a5c4dadee36b395c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "valencia-cf-fan-token",
            fileName: "VCF",
            symbol: "vcf",
            name: "Valencia CF Fan Token",
            marketCapRank: 2315,
            addresses: { chiliz: "0xba0c26485b1909f80476067272d74a99cc0e1d57" },
            variants: ["branded", "background"],
          },
          {
            id: "vcore",
            fileName: "VCORE",
            symbol: "vcore",
            name: "IMVU",
            marketCapRank: 2247,
            addresses: {
              ethereum: "0x733b5056a0697e7a4357305fe452999a0c409feb",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "vechain",
            fileName: "VET",
            symbol: "vet",
            name: "VeChain",
            marketCapRank: 44,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "vector-finance",
            fileName: "VTX",
            symbol: "vtx",
            name: "Vector Finance",
            marketCapRank: 2132,
            addresses: {
              avalanche: "0x5817d4f0b62a59b17f75207da1848c2ce75e7af4",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "vectorspace",
            fileName: "VXV",
            symbol: "vxv",
            name: "Vectorspace AI",
            marketCapRank: 858,
            addresses: {
              ethereum: "0x7d29a64504629172a429e64183d6673b9dacbfce",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "vega-protocol",
            fileName: "VEGA",
            symbol: "vega",
            name: "Vega Protocol",
            marketCapRank: 714,
            addresses: {
              ethereum: "0xcb84d72e61e383767c4dfeb2d8ff7f4fb89abc6e",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "vela-token",
            fileName: "VELA",
            symbol: "vela",
            name: "Vela Token",
            marketCapRank: 1348,
            addresses: {
              "arbitrum-one": "0x088cd8f5ef3652623c22d48b1605dcfe860cd704",
              base: "0x5a76a56ad937335168b30df3aa1327277421c6ae",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "velas",
            fileName: "VLX",
            symbol: "vlx",
            name: "Velas",
            marketCapRank: 780,
            addresses: {
              ethereum: "0x8c543aed163909142695f2d2acd0d55791a9edb9",
              "binance-smart-chain":
                "0xe9c803f48dffe50180bd5b01dc04da939e3445fc",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "velaspad",
            fileName: "VLXPAD",
            symbol: "vlxpad",
            name: "VelasPad",
            marketCapRank: 1997,
            addresses: {
              "binance-smart-chain":
                "0xb8e3bb633f7276cc17735d86154e0ad5ec9928c0",
              ethereum: "0xb8e3bb633f7276cc17735d86154e0ad5ec9928c0",
              velas: "0xa065e0858417dfc7abc6f2bd4d0185332475c180",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "velhalla",
            fileName: "SCAR",
            symbol: "scar",
            name: "ScarQuest",
            marketCapRank: 1548,
            addresses: {
              "binance-smart-chain":
                "0x8d9fb713587174ee97e91866050c383b5cee6209",
            },
            variants: ["branded", "background"],
          },
          {
            id: "veloce-vext",
            fileName: "VEXT",
            symbol: "vext",
            name: "Veloce",
            marketCapRank: 1401,
            addresses: {
              "polygon-pos": "0x27842334c55c01ddfe81bf687425f906816c5141",
              ethereum: "0xb2492e97a68a6e4b9e9a11b99f6c42e5accd38c7",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "velodrome-finance",
            fileName: "VELO",
            symbol: "velo",
            name: "Velodrome Finance",
            marketCapRank: 372,
            addresses: {
              "optimistic-ethereum":
                "0x9560e827af36c94d2ac33a39bce1fe78631088db",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "vempire-ddao",
            fileName: "VEMP",
            symbol: "vemp",
            name: "VEMP",
            marketCapRank: 2160,
            addresses: {
              ethereum: "0xcfeb09c3c5f0f78ad72166d55f9e6e9a60e96eec",
              fantom: "0x526f1dc408cfe7fc5330ab9f1e78474ceff2a5dd",
              pulsechain: "0xa712329708af665991c3fcff43bc5734924f7b9a",
              "binance-smart-chain":
                "0xedf3ce4dd6725650a8e9398e5c6398d061fa7955",
              "okex-chain": "0x2c9a1d0e1226939edb7bbb68c43a080c28743c5c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "veno-finance",
            fileName: "VNO",
            symbol: "vno",
            name: "Veno Finance",
            marketCapRank: 627,
            addresses: {
              cronos: "0xdb7d0a1ec37de1de924f8e8adac6ed338d4404e9",
              zksync: "0xe75a17b4f5c4f844688d5670b684515d7c785e63",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "vent-finance",
            fileName: "VENT",
            symbol: "vent",
            name: "Vent Finance",
            marketCapRank: 1990,
            addresses: {
              ethereum: "0x5f0bc16d50f72d10b719dbf6845de2e599eb5624",
              "polygon-pos": "0xf21441f9ec4c1fe69cb7cf186eceab31af2b658d",
              "binance-smart-chain":
                "0x872d068c25511be88c1f5990c53eeffcdf46c9b4",
            },
            variants: ["mono"],
          },
          {
            id: "venus",
            fileName: "XVS",
            symbol: "xvs",
            name: "Venus",
            marketCapRank: 305,
            addresses: {
              "binance-smart-chain":
                "0xcf6bb5389c92bdda8a3747ddb454cb7a64626c63",
              ethereum: "0xd3cc9d8f3689b83c91b7b59cab4946b063eb894a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "verasity",
            fileName: "VRA",
            symbol: "vra",
            name: "Verasity",
            marketCapRank: 547,
            addresses: {
              ethereum: "0xf411903cbc70a74d22900a5de66a2dda66507255",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "verge",
            fileName: "XVG",
            symbol: "xvg",
            name: "Verge",
            marketCapRank: 499,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "verified-usd-foundation-usdv",
            fileName: "USDV",
            symbol: "usdv",
            name: "Verified USD",
            marketCapRank: 1086,
            addresses: {
              ethereum: "0x0e573ce2736dd9637a0b21058352e1667925c7a8",
              tomochain: "0x323665443cef804a3b5206103304bd4872ea4253",
              avalanche: "0x323665443cef804a3b5206103304bd4872ea4253",
              "optimistic-ethereum":
                "0x323665443cef804a3b5206103304bd4872ea4253",
              "arbitrum-one": "0x323665443cef804a3b5206103304bd4872ea4253",
              "polygon-pos": "0x323665443cef804a3b5206103304bd4872ea4253",
              "binance-smart-chain":
                "0x323665443cef804a3b5206103304bd4872ea4253",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "versagames",
            fileName: "VERSA",
            symbol: "versa",
            name: "VersaGames",
            marketCapRank: 2400,
            addresses: {
              cronos: "0x00d7699b71290094ccb1a5884cd835bd65a78c17",
              "polygon-pos": "0x8497842420cfdbc97896c2353d75d89fc8d5be5d",
            },
            variants: ["branded", "background"],
          },
          {
            id: "verse-bitcoin",
            fileName: "VERSE",
            symbol: "verse",
            name: "Verse",
            marketCapRank: 1962,
            addresses: {
              ethereum: "0x249ca82617ec3dfb2589c4c17ab7ec9765350a18",
              "polygon-pos": "0xc708d6f2153933daa50b2d0758955be0a93a8fec",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "vertcoin",
            fileName: "VTC",
            symbol: "vtc",
            name: "Vertcoin",
            marketCapRank: 1910,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "vesper-finance",
            fileName: "VSP",
            symbol: "vsp",
            name: "Vesper Finance",
            marketCapRank: 1943,
            addresses: {
              ethereum: "0x1b40183efb4dd766f11bda7a7c3ad8982e998421",
              fantom: "0x461d52769884ca6235b685ef2040f47d30c94eb5",
              "polygon-pos": "0x09c5a4bca808bd1ba2b8e6b3aaf7442046b4ca5b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "vesta-finance",
            fileName: "VSTA",
            symbol: "vsta",
            name: "Vesta Finance",
            marketCapRank: 1380,
            addresses: {
              "arbitrum-one": "0xa684cd057951541187f288294a1e1c2646aa2d24",
            },
            variants: ["mono"],
          },
          {
            id: "vethor-token",
            fileName: "VTHO",
            symbol: "vtho",
            name: "VeThor",
            marketCapRank: 265,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "vexanium",
            fileName: "VEX",
            symbol: "vex",
            name: "Vexanium",
            marketCapRank: 2523,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "viberate",
            fileName: "VIB",
            symbol: "vib",
            name: "Viberate",
            marketCapRank: 1160,
            addresses: {
              ethereum: "0x2c974b2d0ba1716e644c1fc59982a89ddd2ff724",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "victoria-vr",
            fileName: "VR",
            symbol: "vr",
            name: "Victoria VR",
            marketCapRank: 374,
            addresses: {
              ethereum: "0x7d5121505149065b562c789a0145ed750e6e8cdd",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "vidt-dao",
            fileName: "VIDT",
            symbol: "vidt",
            name: "VIDT DAO",
            marketCapRank: 814,
            addresses: {
              ethereum: "0x3be7bf1a5f23bd8336787d0289b70602f1940875",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "vidya",
            fileName: "VIDYA",
            symbol: "vidya",
            name: "Vidya",
            marketCapRank: 2063,
            addresses: {
              ethereum: "0x3d3d35bb9bec23b06ca00fe472b50e7a4c692c30",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "vigorus",
            fileName: "VIS",
            symbol: "vis",
            name: "Vigorus",
            marketCapRank: 2498,
            addresses: {
              "polygon-pos": "0xcc1b9517460d8ae86fe576f614d091fca65a28fc",
            },
            variants: ["branded", "background"],
          },
          {
            id: "vinuchain",
            fileName: "VC",
            symbol: "vc",
            name: "VinuChain",
            marketCapRank: 1537,
            addresses: {
              "binance-smart-chain":
                "0x2bf83d080d8bc4715984e75e5b3d149805d11751",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "virtual-versions",
            fileName: "VV",
            symbol: "vv",
            name: "Virtual Versions",
            marketCapRank: 2556,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "virtuswap",
            fileName: "VRSW",
            symbol: "vrsw",
            name: "VirtuSwap",
            marketCapRank: 1892,
            addresses: {
              ethereum: "0x99a01a4d6a4d621094983050d9a2f10b2912e53d",
              "arbitrum-one": "0xd1e094cabc5acb9d3b0599c3f76f2d01ff8d3563",
              "polygon-pos": "0x57999936fc9a9ec0751a8d146cce11901be8bed0",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "vita-inu",
            fileName: "VINU",
            symbol: "vinu",
            name: "Vita Inu",
            marketCapRank: 1161,
            addresses: {
              "binance-smart-chain":
                "0xfebe8c1ed424dbf688551d4e2267e7a53698f0aa",
              vite: "tti_541b25bd5e5db35166864096",
              "polygon-pos": "0xafcdd4f666c84fed1d8bd825aa762e3714f652c9",
              ethereum: "0xafcdd4f666c84fed1d8bd825aa762e3714f652c9",
            },
            variants: ["branded", "background"],
          },
          {
            id: "vitadao",
            fileName: "VITA",
            symbol: "vita",
            name: "VitaDAO",
            marketCapRank: 632,
            addresses: {
              ethereum: "0x81f8f0bb1cb2a06649e51913a151f0e7ef6fa321",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "vite",
            fileName: "VITE",
            symbol: "vite",
            name: "Vite",
            marketCapRank: 898,
            addresses: {
              ethereum: "0xadd5e881984783dd432f80381fb52f45b53f3e70",
              "binance-smart-chain":
                "0x2794dad4077602ed25a88d03781528d1637898b4",
              vite: "tti_5649544520544f4b454e6e40",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "vixco",
            fileName: "VIX",
            symbol: "vix",
            name: "Vixco",
            marketCapRank: 1440,
            addresses: {
              ethereum: "0xc0b68eb52c89e3fffa62d78012ac8b661bfaa323",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "vlaunch-2",
            fileName: "VPAD",
            symbol: "vpad",
            name: "VLaunch",
            marketCapRank: 1167,
            addresses: {
              "binance-smart-chain":
                "0xf574ba6bde97cc09784e616ebaed432b4e896b49",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "vnx-euro",
            fileName: "VEUR",
            symbol: "veur",
            name: "VNX EURO",
            marketCapRank: 2220,
            addresses: {
              ethereum: "0x6ba75d640bebfe5da1197bb5a2aff3327789b5d3",
              avalanche: "0x7678e162f38ec9ef2bfd1d0aaf9fd93355e5fa0b",
              tezos: "KT1FenS7BCUjn1otfFyfrfxguiGnL4UTF3aG",
              "polygon-pos": "0xe4095d9372e68d108225c306a4491cacfb33b097",
              solana: "C4Kkr9NZU3VbyedcgutU6LKmi6MKz81sx6gRmk5pX519",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "volt-inu-2",
            fileName: "VOLT",
            symbol: "volt",
            name: "Volt Inu",
            marketCapRank: 902,
            addresses: {
              ethereum: "0x7f792db54b0e580cdc755178443f0430cf799aca",
              "polygon-pos": "0x7f792db54b0e580cdc755178443f0430cf799aca",
              "binance-smart-chain":
                "0x7f792db54b0e580cdc755178443f0430cf799aca",
            },
            variants: ["branded", "background"],
          },
          {
            id: "voxies",
            fileName: "VOXEL",
            symbol: "voxel",
            name: "Voxies",
            marketCapRank: 798,
            addresses: {
              "polygon-pos": "0xd0258a3fd00f38aa8090dfee343f10a9d4d30d3f",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "vulcan-forged",
            fileName: "PYR",
            symbol: "pyr",
            name: "Vulcan Forged",
            marketCapRank: 374,
            addresses: {
              ethereum: "0x430ef9263e76dae63c84292c3409d61c598e9682",
              "polygon-pos": "0x430ef9263e76dae63c84292c3409d61c598e9682",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "vvs-finance",
            fileName: "VVS",
            symbol: "vvs",
            name: "VVS Finance",
            marketCapRank: 320,
            addresses: {
              cronos: "0x2d03bece6747adc00e1a131bba1469c15fd11e03",
              ethereum: "0x839e71613f9aa06e5701cf6de63e303616b0dde3",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "wagmi-2",
            fileName: "WAGMI",
            symbol: "wagmi",
            name: "Wagmi",
            marketCapRank: 1087,
            addresses: {
              "metis-andromeda": "0xaf20f5f19698f1d19351028cd7103b63d30de7d7",
              fantom: "0xb1f795776cb9ddac6e7e162f31c7419dd3d48297",
              kava: "0xaf20f5f19698f1d19351028cd7103b63d30de7d7",
              avalanche: "0xaf20f5f19698f1d19351028cd7103b63d30de7d7",
              "optimistic-ethereum":
                "0xaf20f5f19698f1d19351028cd7103b63d30de7d7",
              ethereum: "0x92cc36d66e9d739d50673d1f27929a371fb83a67",
              zksync: "0x3613ad277df1d5935d41400a181aa9ec1dc2dc9e",
              "polygon-pos": "0x07ed33a242bd9c08ca3c198e01189e35265024da",
              "arbitrum-one": "0xaf20f5f19698f1d19351028cd7103b63d30de7d7",
              "binance-smart-chain":
                "0xaf20f5f19698f1d19351028cd7103b63d30de7d7",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "wagmi-game-2",
            fileName: "WAGMIGAMES",
            symbol: "wagmigames",
            name: "WAGMI Games",
            marketCapRank: 832,
            addresses: {
              ethereum: "0x3b604747ad1720c01ded0455728b62c0d2f100f0",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "walken",
            fileName: "WLKN",
            symbol: "wlkn",
            name: "Walken",
            marketCapRank: 1897,
            addresses: {
              solana: "EcQCUYv57C4V6RoPxkVUiDwtX1SP8y8FP5AEToYL8Az",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "wam",
            fileName: "WAM",
            symbol: "wam",
            name: "Wam",
            marketCapRank: 1744,
            addresses: {
              "binance-smart-chain":
                "0xebbaeff6217d22e7744394061d874015709b8141",
            },
            variants: ["branded", "background"],
          },
          {
            id: "wanchain",
            fileName: "WAN",
            symbol: "wan",
            name: "Wanchain",
            marketCapRank: 594,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "wasder",
            fileName: "WAS",
            symbol: "was",
            name: "Wasder",
            marketCapRank: 1355,
            addresses: {
              ethereum: "0x0c572544a4ee47904d54aaa6a970af96b6f00e1b",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "waves",
            fileName: "WAVES",
            symbol: "waves",
            name: "Waves",
            marketCapRank: 227,
            addresses: {
              ethereum: "0x1cf4592ebffd730c7dc92c1bdffdfc3b9efcf29a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "wax",
            fileName: "WAXP",
            symbol: "waxp",
            name: "WAX",
            marketCapRank: 250,
            addresses: {
              ethereum: "0x2a79324c19ef2b89ea98b23bc669b7e7c9f8a517",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "wazirx",
            fileName: "WRX",
            symbol: "wrx",
            name: "WazirX",
            marketCapRank: 418,
            addresses: {
              binancecoin: "WRX-ED1",
              energi: "0x0894840ba7d57c7adf2caf8fd3c41eb79af5b8e7",
              "polygon-pos": "0x72d6066f486bd0052eefb9114b66ae40e0a6031a",
              "binance-smart-chain":
                "0x8e17ed70334c87ece574c9d537bc153d8609e2a3",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "web3war",
            fileName: "FPS",
            symbol: "fps",
            name: "web3war",
            marketCapRank: 1580,
            addresses: {
              "binance-smart-chain":
                "0x351da1e7500aba1d168b9435dce73415718d212f",
              zilliqa: "zil1j2wrzjljwyjelspmtr63vfl34c467ype2w3mjl",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "webchain",
            fileName: "MINTME",
            symbol: "mintme",
            name: "MintMe.com Coin",
            marketCapRank: 2425,
            addresses: {
              "binance-smart-chain":
                "0x138218c8e064ed2a011c9ff203759a8a1e23e6c8",
              ethereum: "0x772722b55cdc2a086abd064267a17855eb15e8b3",
              cronos: "0xd652776de7ad802be5ec7bebfafda37600222b48",
              "arbitrum-one": "0x7d05d38e6109a3aeeebf0a570eb8f6856cb4b55e",
            },
            variants: ["branded", "background"],
          },
          {
            id: "wefi-finance",
            fileName: "WEFI",
            symbol: "wefi",
            name: "Wefi Finance",
            marketCapRank: 1901,
            addresses: {
              "polygon-pos": "0xffa188493c15dfaf2c206c97d8633377847b6a52",
              ethereum: "0xffa188493c15dfaf2c206c97d8633377847b6a52",
              zksync: "0x81e7186947fb59aaaaeb476a47daac60680cbbaf",
              "arbitrum-one": "0xffa188493c15dfaf2c206c97d8633377847b6a52",
              "binance-smart-chain":
                "0xffa188493c15dfaf2c206c97d8633377847b6a52",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "wemix-token",
            fileName: "WEMIX",
            symbol: "wemix",
            name: "WEMIX",
            marketCapRank: 131,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "wesendit",
            fileName: "WSI",
            symbol: "wsi",
            name: "WeSendit",
            marketCapRank: 1831,
            addresses: {
              "binance-smart-chain":
                "0x837a130aed114300bab4f9f1f4f500682f7efd48",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "weway",
            fileName: "WWY",
            symbol: "wwy",
            name: "WeWay",
            marketCapRank: 976,
            addresses: {
              "binance-smart-chain":
                "0x9ab70e92319f0b9127df78868fd3655fb9f1e322",
              ethereum: "0x9ab70e92319f0b9127df78868fd3655fb9f1e322",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "whales-market",
            fileName: "WHALES",
            symbol: "whales",
            name: "Whales Market",
            marketCapRank: 914,
            addresses: {
              solana: "GTH3wG3NErjwcf7VGCoXEXkgXSHvYhx5gtATeeM5JAS1",
            },
            variants: ["mono"],
          },
          {
            id: "white-whale",
            fileName: "WHALE",
            symbol: "whale",
            name: "White Whale",
            marketCapRank: 1350,
            addresses: {
              migaloo:
                "migaloo1ull9s4el2pmkdevdgrjt6pwa4e5xhkda40w84kghftnlxg4h3knqpm5u3n",
              injective:
                "ibc/D6E6A20ABDD600742D22464340A7701558027759CE14D12590F8EA869CCCF445",
              juno: "ibc/3A6ADE78FB8169C034C29C4F2E1A61CE596EC8235366F22381D981A98F1F5A5C",
              "terra-2":
                "ibc/36A02FFC4E74DF4F64305130C3DFA1B06BEAC775648927AA44467C76A77AB8DB",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "whitebit",
            fileName: "WBT",
            symbol: "wbt",
            name: "WhiteBIT Coin",
            marketCapRank: 101,
            addresses: {
              ethereum: "0x925206b8a707096ed26ae47c84747fe0bb734f59",
              tron: "TFptbWaARrWTX5Yvy3gNG5Lm8BmhPx82Bt",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "whiteheart",
            fileName: "WHITE",
            symbol: "white",
            name: "Whiteheart",
            marketCapRank: 745,
            addresses: {
              ethereum: "0x5f0e628b693018f639d10e4a4f59bd4d8b2b6b44",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "wicrypt",
            fileName: "WNT",
            symbol: "wnt",
            name: "Wicrypt",
            marketCapRank: 1238,
            addresses: {
              "polygon-pos": "0x82a0e6c02b91ec9f6ff943c0a933c03dbaa19689",
              "arbitrum-one": "0xad4b9c1fbf4923061814dd9d5732eb703faa53d4",
            },
            variants: ["branded", "background"],
          },
          {
            id: "wifi",
            fileName: "WIFI",
            symbol: "wifi",
            name: "WiFi Map",
            marketCapRank: 810,
            addresses: {
              "polygon-pos": "0xe238ecb42c424e877652ad82d8a939183a04c35f",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "wigoswap",
            fileName: "WIGO",
            symbol: "wigo",
            name: "WigoSwap",
            marketCapRank: 1118,
            addresses: { fantom: "0xe992beab6659bff447893641a378fbbf031c5bd6" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "wild-goat-coin",
            fileName: "WGC",
            symbol: "wgc",
            name: "Wild Goat Coin",
            marketCapRank: 2240,
            addresses: {
              solana: "AfPeB1BDUotBeNoLv82XRDCNQcdAA1mqis3YC5SMTe7a",
              "polygon-pos": "0x382586651f043cbdec7bb586e367d77b26d7d149",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "wing-finance",
            fileName: "WING",
            symbol: "wing",
            name: "Wing Finance",
            marketCapRank: 869,
            addresses: {},
            variants: ["mono", "branded", "background"],
          },
          {
            id: "wink",
            fileName: "WIN",
            symbol: "win",
            name: "WINkLink",
            marketCapRank: 395,
            addresses: { tron: "TLa2f6VPqDgRE67v1736s7bJ8Ray5wYjU7" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "winr-protocol",
            fileName: "WINR",
            symbol: "winr",
            name: "WINR Protocol",
            marketCapRank: 1068,
            addresses: {
              "arbitrum-one": "0xd77b108d4f6cefaa0cae9506a934e825becca46e",
              solana: "CsxCtA8usvWKdRhe7KhLU5GgwzYaLkoHsz1MKBVZ4W3M",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "wirex",
            fileName: "WXT",
            symbol: "wxt",
            name: "WXT Token",
            marketCapRank: 1263,
            addresses: {
              ethereum: "0xa02120696c7b8fe16c09c749e4598819b2b0e915",
              avalanche: "0xfcde4a87b8b6fa58326bb462882f1778158b02f1",
              stellar:
                "WXT-GASBLVHS5FOABSDNW5SPPH3QRJYXY5JHA2AOA2QHH2FJLZBRXSG4SWXT",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "wise-token11",
            fileName: "WISE",
            symbol: "wise",
            name: "Wise",
            marketCapRank: 1286,
            addresses: {
              ethereum: "0x66a0f676479cee1d7373f3dc2e2952778bff5bd6",
              "harmony-shard-0": "0xe7e3c4d1cfc722b45a428736845b6aff862842a1",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "witch-token",
            fileName: "WITCH",
            symbol: "witch",
            name: "Witch Token",
            marketCapRank: 1477,
            addresses: {
              ethereum: "0xdc524e3c6910257744c1f93cf15e9f472b5bd236",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "wliti",
            fileName: "WLITI",
            symbol: "wliti",
            name: "wLITI",
            marketCapRank: 2669,
            addresses: {
              ethereum: "0x0b63128c40737b13647552e0c926bcfeccc35f93",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "wojak",
            fileName: "WOJAK",
            symbol: "wojak",
            name: "Wojak",
            marketCapRank: 1005,
            addresses: {
              ethereum: "0x5026f006b85729a8b14553fae6af249ad16c9aab",
            },
            variants: ["branded", "background"],
          },
          {
            id: "wom-token",
            fileName: "WOM",
            symbol: "wom",
            name: "WOM Protocol",
            marketCapRank: 1432,
            addresses: {
              ethereum: "0xbd356a39bff2cada8e9248532dd879147221cf76",
            },
            variants: ["mono"],
          },
          {
            id: "wombat",
            fileName: "WOMBAT",
            symbol: "wombat",
            name: "Wombat",
            marketCapRank: 1511,
            addresses: {
              ethereum: "0x0c9c7712c83b3c70e7c5e11100d33d9401bdf9dd",
              "polygon-pos": "0x0c9c7712c83b3c70e7c5e11100d33d9401bdf9dd",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "wonderman-nation",
            fileName: "WNDR",
            symbol: "wndr",
            name: "Wonderman Nation",
            marketCapRank: 2534,
            addresses: {
              "binance-smart-chain":
                "0xdfd7b0dd7bf1012dfdf3307a964c36b972300ac8",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "woo-network",
            fileName: "WOO",
            symbol: "woo",
            name: "WOO",
            marketCapRank: 130,
            addresses: {
              ethereum: "0x4691937a7508860f876c9c0a2a617e7d9e945d4b",
              fantom: "0x6626c47c00f1d87902fc13eecfac3ed06d5e8d8a",
              avalanche: "0xabc9547b534519ff73921b1fba6e672b5f58d083",
              zksync: "0x9e22d758629761fc5708c171d06c2fabb60b5159",
              "arbitrum-one": "0xcafcd85d8ca7ad1e1c6f82f651fa15e33aefd07b",
              "binance-smart-chain":
                "0x4691937a7508860f876c9c0a2a617e7d9e945d4b",
              "huobi-token": "0x3befb2308bce92da97264077faf37dcd6c8a75e6",
              "okex-chain": "0x5427a224e50a9af4d030aeecd2a686d41f348dfe",
              "polygon-pos": "0x1b815d120b3ef02039ee11dc2d33de7aa4a8c603",
              "near-protocol":
                "4691937a7508860f876c9c0a2a617e7d9e945d4b.factory.bridge.near",
              solana: "E5rk3nmgLUuKUiS94gg4bpWwWwyjCMtddsAXkTFLtHEy",
            },
            variants: ["mono"],
          },
          {
            id: "woof-token",
            fileName: "WOOF",
            symbol: "woof",
            name: "WOOF",
            marketCapRank: 2172,
            addresses: {
              solana: "9nEqaUcb16sQ3Tn1psbkWqyhPdLmfHWjKGymREjsAgTE",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "wownero",
            fileName: "WOW",
            symbol: "wow",
            name: "Wownero",
            marketCapRank: 1381,
            addresses: {},
            variants: ["branded", "background"],
          },
          {
            id: "wozx",
            fileName: "WOZX",
            symbol: "wozx",
            name: "Efforce",
            marketCapRank: 1810,
            addresses: {
              ethereum: "0x34950ff2b487d9e5282c5ab342d08a2f712eb79f",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "wrapped-accumulate",
            fileName: "WACME",
            symbol: "wacme",
            name: "Wrapped Accumulate",
            marketCapRank: 1877,
            addresses: {
              ethereum: "0xdf4ef6ee483953fe3b84abd08c6a060445c01170",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "wrapped-ampleforth",
            fileName: "WAMPL",
            symbol: "wampl",
            name: "Wrapped Ampleforth",
            marketCapRank: 1220,
            addresses: {
              ethereum: "0xedb171c18ce90b633db442f2a6f72874093b49ef",
              base: "0x489fe42c267fe0366b16b0c39e7aeef977e841ef",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "wrapped-beacon-eth",
            fileName: "WBETH",
            symbol: "wbeth",
            name: "Wrapped Beacon ETH",
            marketCapRank: 295,
            addresses: {
              ethereum: "0xa2e3356610840701bdf5611a53974510ae27e2e1",
              "binance-smart-chain":
                "0xa2e3356610840701bdf5611a53974510ae27e2e1",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "wrapped-bitcoin",
            fileName: "WBTC",
            symbol: "wbtc",
            name: "Wrapped Bitcoin",
            marketCapRank: 17,
            addresses: {
              ethereum: "0x2260fac5e5542a773aa44fbcfedf7c193bc2c599",
              thundercore: "0x18fb0a62f207a2a082ca60aa78f47a1af4985190",
              fantom: "0x321162cd933e2be498cd2267a90534a804051b11",
              "polygon-zkevm": "0xea034fb02eb1808c2cc3adbc15f447b93cbe08e1",
              sora: "0x002c48630dcb8c75cc36162cbdbc8ff27b843973b951ba9b6e260f869d45bcdc",
              avalanche: "0x50b7545627a5162f82a992c33b87adc75187b218",
              "optimistic-ethereum":
                "0x68f180fcce6836688e9084f035309e29bf0a2095",
              cronos: "0x062e66477faf219f25d27dced647bf57c3107d52",
              zksync: "0xbbeb516fb02a01611cbbe0453fe3c580d7281011",
              energi: "0x29a791703e5a5a8d1578f8611b4d3691377cebc0",
              "polygon-pos": "0x1bfd67037b42cf73acf2047067bd4f2c47d9bfd6",
              tomochain: "0x503b2ddc059b81788fd1239561596614b27faade",
              "harmony-shard-0": "0x3095c7557bcb296ccc6e363de01b760ba031f2d9",
              moonriver: "0x6ab6d61428fde76768d7b45d8bfeec19c6ef91a8",
              boba: "0xdc0486f8bf31df57a952bcd3c1d3e166e3d9ec8b",
              "metis-andromeda": "0xa5b55ab1daf0f8e1efc0eb1931a957fd89b918f4",
              xdai: "0x8e5bbbb09ed1ebde8674cda39a0c169401db4252",
              aurora: "0xf4eb217ba2454613b15dbdea6e5f22276410e89e",
              fuse: "0x33284f95ccb7b948d9d352e1439561cf83d8d00d",
              meter: "0xc1f6c86abee8e2e0b6fd5bd80f0b51fef783635c",
              moonbeam: "0x922d641a426dcffaef11680e5358f34d97d112e1",
              telos: "0xf390830df829cf22c53c8840554b98eafc5dcbc2",
              syscoin: "0xc9baa8cfdde8e328787e29b4b078abf2dadc2055",
              "milkomeda-cardano": "0x6ab6d61428fde76768d7b45d8bfeec19c6ef91a8",
              conflux: "0x1f545487c62e5acfea45dcadd9c627361d1616d8",
              kava: "0x818ec0a7fe18ff94269904fced6ae3dae6d6dc0b",
              astar: "0xad543f18cff85c77e140e3e5e3c3392f6ba9d5ca",
              cube: "0x040ea5c10e6ba4badb6c433a365ccc4968697230",
              velas: "0x639a647fbe20b6c8ac19e48e2de44ea792c62c5c",
              "klay-token": "0xdcbacf3f7a069922e677912998c8d57423c37dfa",
              hydra: "27a459ac47204f1e7fc5c48ffeafa990af244e13",
              "step-network": "0xb44a9b6905af7c801311e8f4e76932ee959c663c",
              "arbitrum-one": "0x2f2a2543b76a4166549f7aab2e75bef0aefc5b0f",
              "near-protocol":
                "2260fac5e5542a773aa44fbcfedf7c193bc2c599.factory.bridge.near",
              celo: "0xd629eb00deced2a080b7ec630ef6ac117e614f1b",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "wrapped-centrifuge",
            fileName: "WCFG",
            symbol: "wcfg",
            name: "Wrapped Centrifuge",
            marketCapRank: 231,
            addresses: {
              ethereum: "0xc221b7e65ffc80de234bbb6667abdd46593d34f0",
            },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "wrapped-nxm",
            fileName: "WNXM",
            symbol: "wnxm",
            name: "Wrapped NXM",
            marketCapRank: 591,
            addresses: {
              ethereum: "0x0d438f3b5175bebc262bf23753c1e53d03432bde",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "x-world-games",
            fileName: "XWG",
            symbol: "xwg",
            name: "X World Games",
            marketCapRank: 1536,
            addresses: {
              "binance-smart-chain":
                "0x6b23c89196deb721e6fd9726e6c76e4810a464bc",
              "arbitrum-one": "0xeb4d25db65dcef52380c99ba7e1344c820ecb1fc",
              ethereum: "0x0a77ef9bf662d62fbf9ba4cf861eaa83f9cc4fec",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "x2y2",
            fileName: "X2Y2",
            symbol: "x2y2",
            name: "X2Y2",
            marketCapRank: 1831,
            addresses: {
              ethereum: "0x1e4ede388cbc9f4b5c79681b7f94d36a11abebc9",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "xana",
            fileName: "XETA",
            symbol: "xeta",
            name: "XANA",
            marketCapRank: 660,
            addresses: {
              avalanche: "0x31c994ac062c1970c086260bc61babb708643fac",
              ethereum: "0x967fb0d760ed3ce53afe2f0a071674cccae73550",
              "binance-smart-chain":
                "0xbc7370641ddcf16a27eea11230af4a9f247b61f9",
              "step-network": "0xf390830df829cf22c53c8840554b98eafc5dcbc2",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "xaurum",
            fileName: "XAUR",
            symbol: "xaur",
            name: "Xaurum",
            marketCapRank: 2671,
            addresses: {
              ethereum: "0x4df812f6064def1e5e029f1ca858777cc98d2d81",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "xcad-network",
            fileName: "XCAD",
            symbol: "xcad",
            name: "XCAD Network",
            marketCapRank: 638,
            addresses: {
              ethereum: "0x7659ce147d0e714454073a5dd7003544234b6aa0",
              "binance-smart-chain":
                "0xa026ad2ceda16ca5fc28fd3c72f99e2c332c8a26",
              "polygon-pos": "0xa55870278d6389ec5b524553d03c04f5677c061e",
              zilliqa: "zil1z5l74hwy3pc3pr3gdh3nqju4jlyp0dzkhq2f5y",
              "metis-andromeda": "0x66673f0a3b5d99524ba76a558b93a9ca1386f4cd",
              "step-network": "0xe6801928061cdbe32ac5ad0634427e140efd05f9",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "xdce-crowd-sale",
            fileName: "XDC",
            symbol: "xdc",
            name: "XDC Network",
            marketCapRank: 151,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "xdefi",
            fileName: "XDEFI",
            symbol: "xdefi",
            name: "XDEFI",
            marketCapRank: 1245,
            addresses: {
              ethereum: "0x72b886d09c117654ab7da13a14d603001de0b777",
              "arbitrum-one": "0x180f7cf38805d1be95c7632f653e26b0838e2969",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "xels",
            fileName: "XELS",
            symbol: "xels",
            name: "XELS",
            marketCapRank: 1608,
            addresses: {
              ethereum: "0x397deb686c72384fad502a81f4d7fdb89e1f1280",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "xfinite-entertainment-token",
            fileName: "XET",
            symbol: "xet",
            name: "Xfinite Entertainment",
            marketCapRank: 2536,
            addresses: { algorand: "283820866" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "xfund",
            fileName: "XFUND",
            symbol: "xfund",
            name: "xFUND",
            marketCapRank: 1741,
            addresses: {
              ethereum: "0x892a6f9df0147e5f079b0993f486f9aca3c87881",
              sora: "0x007e908e399cc73f3dad9f02f9c5c83a7adcd07e78dd91676ff3c002e245d8e9",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "xi-token",
            fileName: "XI",
            symbol: "xi",
            name: "Xi",
            marketCapRank: 2212,
            addresses: {
              ethereum: "0x295b42684f90c77da7ea46336001010f2791ec8c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "xido-finance",
            fileName: "XIDO",
            symbol: "xido",
            name: "Xido Finance",
            marketCapRank: 907,
            addresses: {
              ethereum: "0xf6650117017ffd48b725b4ec5a00b414097108a7",
              "binance-smart-chain":
                "0x3764bc0de9b6a68c67929130aaec16b6060cab8c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "xmon",
            fileName: "XMON",
            symbol: "xmon",
            name: "XMON",
            marketCapRank: 2259,
            addresses: {
              ethereum: "0x3aada3e213abf8529606924d8d1c55cbdc70bf74",
            },
            variants: ["branded", "background"],
          },
          {
            id: "xp-network",
            fileName: "XPNET",
            symbol: "xpnet",
            name: "XP Network",
            marketCapRank: 2292,
            addresses: {
              "binance-smart-chain":
                "0x8cf8238abf7b933bf8bb5ea2c7e4be101c11de2a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "xpla",
            fileName: "XPLA",
            symbol: "xpla",
            name: "XPLA",
            marketCapRank: 441,
            addresses: {
              osmosis:
                "ibc/95C9B5870F95E21A242E6AF9ADCB1F212EE4A8855087226C36FBE43FC41A77B8",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "xsgd",
            fileName: "XSGD",
            symbol: "xsgd",
            name: "XSGD",
            marketCapRank: 883,
            addresses: {
              ethereum: "0x70e8de73ce538da2beed35d14187f6959a8eca96",
              zilliqa: "zil180v66mlw007ltdv8tq5t240y7upwgf7djklmwh",
              "polygon-pos": "0xdc3326e71d45186f113a2f448984ca0e8d201995",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "xsushi",
            fileName: "XSUSHI",
            symbol: "xsushi",
            name: "xSUSHI",
            marketCapRank: 722,
            addresses: {
              ethereum: "0x8798249c2e607446efb7ad49ec89dd1865ff4272",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "xswap-protocol",
            fileName: "XSP",
            symbol: "xsp",
            name: "XSwap Protocol",
            marketCapRank: 2227,
            addresses: {
              "xdc-network": "xdc36726235dadbdb4658d33e62a249dca7c4b2bc68",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "xwin-finance",
            fileName: "XWIN",
            symbol: "xwin",
            name: "xWIN Finance",
            marketCapRank: 1753,
            addresses: {
              "binance-smart-chain":
                "0xd88ca08d8eec1e9e09562213ae83a7853ebb5d28",
              "polygon-pos": "0x6cd6cb131764c704ba9167c29930fbdc38901ab7",
            },
            variants: ["branded", "background"],
          },
          {
            id: "xy-finance",
            fileName: "XY",
            symbol: "xy",
            name: "XY Finance",
            marketCapRank: 2167,
            addresses: {
              ethereum: "0x77777777772cf0455fb38ee0e75f38034dfa50de",
              "binance-smart-chain":
                "0x666666661f9b6d8c581602aaa2f76cbead06c401",
              fantom: "0x444444443b0fcb2733b93f23c910580fba52fffa",
              "polygon-pos": "0x55555555a687343c6ce28c8e1f6641dc71659fad",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "xyo-network",
            fileName: "XYO",
            symbol: "xyo",
            name: "XYO Network",
            marketCapRank: 413,
            addresses: {
              ethereum: "0x55296f69f40ea6d20e478533c15a6b08b654e758",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "y2k",
            fileName: "Y2K",
            symbol: "y2k",
            name: "Y2K",
            marketCapRank: 2606,
            addresses: {
              "arbitrum-one": "0x65c936f008bc34fe819bce9fa5afd9dc2d49977f",
            },
            variants: ["branded", "background"],
          },
          {
            id: "yam-2",
            fileName: "YAM",
            symbol: "yam",
            name: "YAM",
            marketCapRank: 2350,
            addresses: {
              ethereum: "0x0aacfbec6a24756c20d41914f2caba817c0d8521",
              "harmony-shard-0": "0x7202adf025cbd1cc9411fd56e3cc8ef2e9dffa9d",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "yearn-finance",
            fileName: "YFI",
            symbol: "yfi",
            name: "yearn.finance",
            marketCapRank: 272,
            addresses: {
              ethereum: "0x0bc529c00c6401aef6d220be8c6ea1667f6ad93e",
              xdai: "0xbf65bfcb5da067446cee6a706ba3fe2fb1a9fdfd",
              avalanche: "0x9eaac1b23d935365bd7b542fe22ceee2922f52dc",
              "optimistic-ethereum":
                "0x9046d36440290ffde54fe0dd84db8b1cfee9107b",
              "near-protocol":
                "0bc529c00c6401aef6d220be8c6ea1667f6ad93e.factory.bridge.near",
              energi: "0x2726dd5efb3a209a54c512e9562a2045b8f45dbc",
              base: "0x9eaf8c1e34f05a589eda6bafdf391cf6ad3cb239",
              "huobi-token": "0xb4f019beac758abbee2f906033aaa2f0f6dacb35",
              "polygon-pos": "0xda537104d6a5edd53c6fbba9a898708e465260b6",
              "harmony-shard-0": "0xa0dc05f84a27fccbd341305839019ab86576bc07",
              fantom: "0x29b0da86e484e1c0029b56e817912d778ac0ec69",
              "arbitrum-one": "0x82e3a8f066a6989666b031d916c43672085b1582",
              sora: "0x002676c3edea5b08bc0f9b6809a91aa313b7da35e28b190222e9dc032bf1e662",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "yes-money",
            fileName: "YES",
            symbol: "yes",
            name: "YES Money",
            marketCapRank: 663,
            addresses: { blast: "0x20fe91f17ec9080e3cac2d688b4ecb48c5ac3a9c" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "yfii-finance",
            fileName: "YFII",
            symbol: "yfii",
            name: "DFI.money",
            marketCapRank: 1132,
            addresses: {
              ethereum: "0xa1d0e215a23d7030842fc67ce582a6afa3ccab83",
              energi: "0xba71e0c0b13e724bf2329ecb9bdf5775a2ce9e8d",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "yield-guild-games",
            fileName: "YGG",
            symbol: "ygg",
            name: "Yield Guild Games",
            marketCapRank: 210,
            addresses: {
              ethereum: "0x25f8087ead173b73d6e8b84329989a8eea16cf73",
              ronin: "0x1c306872bc82525d72bf3562e8f0aa3f8f26e857",
              "polygon-pos": "0x82617aa52dddf5ed9bb7b370ed777b3182a30fd1",
              "harmony-shard-0": "0x63cf309500d8be0b9fdb8f1fb66c821236c0438c",
            },
            variants: ["branded", "background"],
          },
          {
            id: "yield-yak",
            fileName: "YAK",
            symbol: "yak",
            name: "Yield Yak",
            marketCapRank: 1596,
            addresses: {
              avalanche: "0x59414b3089ce2af0010e7523dea7e2b35d776ec7",
              "arbitrum-one": "0x7f4db37d7beb31f445307782bc3da0f18df13696",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "yieldification",
            fileName: "YDF",
            symbol: "ydf",
            name: "Yieldification",
            marketCapRank: 2358,
            addresses: {
              ethereum: "0x30dcba0405004cf124045793e1933c798af9e66a",
              "arbitrum-one": "0x30dcba0405004cf124045793e1933c798af9e66a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "yoshi-exchange",
            fileName: "YOSHI",
            symbol: "yoshi",
            name: "Yoshi.exchange",
            marketCapRank: 1657,
            addresses: {
              fantom: "0x3dc57b391262e3aae37a08d91241f9ba9d58b570",
              "binance-smart-chain":
                "0x4374f26f0148a6331905edf4cd33b89d8eed78d1",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "youves-you-governance",
            fileName: "YOU",
            symbol: "you",
            name: "Youves YOU Governance",
            marketCapRank: 1837,
            addresses: { tezos: "KT1Xobej4mc6XgEjDoJoHtTKgbD1ELMvcQuL" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "yuan-chain-coin",
            fileName: "YCC",
            symbol: "ycc",
            name: "Yuan Chain Coin",
            marketCapRank: 1651,
            addresses: {
              ethereum: "0x37e1160184f7dd29f00b78c050bf13224780b0b0",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "zano",
            fileName: "ZANO",
            symbol: "zano",
            name: "Zano",
            marketCapRank: 783,
            addresses: {
              ethereum: "0xdb85f6685950e285b1e611037bebe5b34e2b7d78",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "zap",
            fileName: "ZAP",
            symbol: "zap",
            name: "Zap",
            marketCapRank: 2064,
            addresses: {
              ethereum: "0x6781a0f84c7e9e846dcb84a9a5bd49333067b104",
              solana: "HxPoEHMt1vKeqjKCePcqTj6yYgn6Xqq1fKTY3Pjx4YrX",
              "binance-smart-chain":
                "0xc5326b32e8baef125acd68f8bc646fd646104f1c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "zcash",
            fileName: "ZEC",
            symbol: "zec",
            name: "Zcash",
            marketCapRank: 207,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "zcoin",
            fileName: "FIRO",
            symbol: "firo",
            name: "Firo",
            marketCapRank: 1032,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "zebec-protocol",
            fileName: "ZBC",
            symbol: "zbc",
            name: "Zebec Protocol",
            marketCapRank: 346,
            addresses: {
              solana: "zebeczgi5fSEtbpfQKVZKCJ3WgYXxjkMUkNNx7fLKAF",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "zeitgeist",
            fileName: "ZTG",
            symbol: "ztg",
            name: "Zeitgeist",
            marketCapRank: 2602,
            addresses: {},
            variants: ["mono", "branded", "background"],
          },
          {
            id: "zelcash",
            fileName: "FLUX",
            symbol: "flux",
            name: "Flux",
            marketCapRank: 204,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "zencash",
            fileName: "ZEN",
            symbol: "zen",
            name: "Horizen",
            marketCapRank: 330,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "zenlink-network-token",
            fileName: "ZLK",
            symbol: "zlk",
            name: "Zenlink Network",
            marketCapRank: 2648,
            addresses: {
              moonriver: "0x0f47ba9d9bde3442b42175e51d6a367928a1173b",
              astar: "0x998082c488e548820f970df5173bd2061ce90635",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "zenon-2",
            fileName: "ZNN",
            symbol: "znn",
            name: "Zenon",
            marketCapRank: 1297,
            addresses: {
              ethereum: "0xb2e96a63479c2edd2fd62b382c89d5ca79f572d3",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "zeroliquid",
            fileName: "ZERO",
            symbol: "zero",
            name: "ZeroLiquid",
            marketCapRank: 2629,
            addresses: {
              ethereum: "0xb0ed33f79d89541dfdcb04a8f04bc2c6be025ecc",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "zeroswap",
            fileName: "ZEE",
            symbol: "zee",
            name: "ZeroSwap",
            marketCapRank: 2194,
            addresses: {
              ethereum: "0x2edf094db69d6dcd487f1b3db9febe2eec0dd4c5",
              avalanche: "0x44754455564474a89358b2c2265883df993b12f0",
              "binance-smart-chain":
                "0x44754455564474a89358b2c2265883df993b12f0",
              "polygon-pos": "0xfd4959c06fbcc02250952daebf8e0fb38cf9fd8c",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "zignaly",
            fileName: "ZIG",
            symbol: "zig",
            name: "Zignaly",
            marketCapRank: 461,
            addresses: {
              ethereum: "0xb2617246d0c6c0087f18703d576831899ca94f01",
              injective: "peggy0xb2617246d0c6c0087f18703d576831899ca94f01",
              "polygon-pos": "0x7bebd226154e865954a87650faefa8f485d36081",
              "binance-smart-chain":
                "0x8c907e0a72c3d55627e853f4ec6a96b0c8771145",
              solana: "ANqY8h3sRSwkC29FvGJenAh7VGRABVVx7Ls6Mq4BuGT",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "zigzag-2",
            fileName: "ZZ",
            symbol: "zz",
            name: "ZigZag",
            marketCapRank: 2150,
            addresses: {
              ethereum: "0xc91a71a1ffa3d8b22ba615ba1b9c01b2bbbf55ad",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "zilliqa",
            fileName: "ZIL",
            symbol: "zil",
            name: "Zilliqa",
            marketCapRank: 153,
            addresses: {
              "binance-smart-chain":
                "0xb86abcb37c3a4b64f74f59301aff131a1becc787",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "zkapes-token",
            fileName: "ZAT",
            symbol: "zat",
            name: "zkApes Token",
            marketCapRank: 2624,
            addresses: { zksync: "0x47ef4a5641992a72cfd57b9406c9d9cefee8e0c4" },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "zkspace",
            fileName: "ZKB",
            symbol: "zkb",
            name: "ZKBase",
            marketCapRank: 1485,
            addresses: {
              ethereum: "0xbbbbbbbb46a1da0f0c3f64522c275baa4c332636",
              energi: "0xc4efad8386124927fb46b146526625e143e5a63a",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "zksync-id",
            fileName: "ZKID",
            symbol: "zkid",
            name: "zkSync id",
            marketCapRank: 2003,
            addresses: { zksync: "0x2141d7fe06a1d69c016fc638ba75b6ef92fa1435" },
            variants: ["mono", "branded", "background"],
          },
          {
            id: "zmine",
            fileName: "ZMN",
            symbol: "zmn",
            name: "ZMINE",
            marketCapRank: 1618,
            addresses: {
              "binance-smart-chain":
                "0xfcb8a4b1a0b645e08064e05b98e9cc6f48d2aa57",
            },
            variants: ["branded", "background"],
          },
          {
            id: "zoid-pay",
            fileName: "ZPAY",
            symbol: "zpay",
            name: "ZoidPay",
            marketCapRank: 1638,
            addresses: {
              tomochain: "0xe1a9a5fae06696d314994a9d6915c12a63ad055d",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "zoomer",
            fileName: "ZOOMER",
            symbol: "zoomer",
            name: "Zoomer",
            marketCapRank: 1913,
            addresses: {
              ethereum: "0x0d505c03d30e65f6e9b4ef88855a47a89e4b7676",
              "polygon-pos": "0xb962150760f9a3bb00e3e9cf48297ee20ada4a33",
              "arbitrum-nova": "0xb962150760f9a3bb00e3e9cf48297ee20ada4a33",
              "optimistic-ethereum":
                "0xb962150760f9a3bb00e3e9cf48297ee20ada4a33",
              base: "0xd1db4851bcf5b41442caa32025ce0afe6b8eabc2",
              "binance-smart-chain":
                "0xb962150760f9a3bb00e3e9cf48297ee20ada4a33",
              solana: "nBZEcHSG771mRbi4y2sSgKjfDUH8jsM2Eo5fNcASLeU",
            },
            variants: ["branded", "mono", "background"],
          },
          {
            id: "zynecoin",
            fileName: "ZYN",
            symbol: "zyn",
            name: "Zynecoin",
            marketCapRank: 2235,
            addresses: {},
            variants: ["branded", "mono", "background"],
          },
          {
            id: "hush",
            name: "Hush",
            variants: ["background", "branded", "mono"],
            fileName: "HUSH",
            symbol: "HUSH",
            marketCapRank: 0,
            addresses: {},
          },
          {
            id: "imx",
            name: "Immutable",
            variants: ["background", "branded", "mono"],
            fileName: "IMX",
            symbol: "IMX",
            marketCapRank: 0,
            addresses: {},
          },
          {
            id: "pnb",
            name: "Pink BNB",
            variants: ["background", "branded", "mono"],
            fileName: "PNB",
            symbol: "PNB",
            marketCapRank: 0,
            addresses: {},
          },
          {
            id: "JOP",
            name: "Japan Open Chain",
            variants: ["background", "branded", "mono"],
            fileName: "JOP",
            symbol: "JOP",
            marketCapRank: 0,
            addresses: {},
          },
          {
            id: "0x-protocol",
            name: "0x Protocol",
            variants: ["background", "branded", "mono"],
            fileName: "ZRX",
            symbol: "ZRX",
            marketCapRank: 0,
            addresses: {},
          },
          {
            id: "vara",
            name: "Vara",
            variants: ["background", "branded", "mono"],
            fileName: "VARA",
            symbol: "VARA",
            marketCapRank: 0,
            addresses: {},
          },
          {
            id: "vine",
            name: "Vine Coin",
            variants: ["background", "branded", "mono"],
            fileName: "VINE",
            symbol: "VINE",
            marketCapRank: 0,
            addresses: {
              solana: "6AJcP7wuLwmRYLBNbi825wgguaPsWzPBEHcHndpRpump",
            },
          },
          {
            id: "SWELL",
            name: "Swell",
            variants: ["background", "branded", "mono"],
            fileName: "SWELL",
            symbol: "SWELL",
            marketCapRank: 0,
            addresses: {
              ethereum: "0x0a6e7ba5042b38349e437ec6db6214aec7b35676",
            },
          },
          {
            id: "ARI",
            name: "ARI",
            variants: ["background", "branded", "mono"],
            fileName: "ARI",
            symbol: "ARI",
            marketCapRank: 0,
            addresses: { base: "0xd1e6f3f0a7f40d5412f7471875879381441bf722" },
          },
          {
            id: "PEAQ",
            name: "peaq",
            variants: ["background", "branded", "mono"],
            fileName: "PEAQ",
            symbol: "PEAQ",
            marketCapRank: 0,
            addresses: {
              ethereum: "0x408480574c803D05a0244b479c5020a97f546c51",
            },
          },
        ],
        r = [
          {
            id: "zksync",
            fileName: "zksync",
            chainId: 324,
            caip2id: "eip155:324",
            name: "zkSync era",
            shortName: "zkSync",
            nativeCoinId: "ethereum",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "thundercore",
            fileName: "thundercore",
            chainId: 108,
            caip2id: "eip155:108",
            name: "ThunderCore",
            shortName: "thunder",
            nativeCoinId: "thunder-token",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "theta",
            fileName: "theta",
            chainId: 361,
            caip2id: "eip155:361",
            name: "Theta",
            shortName: "theta",
            nativeCoinId: "theta-token",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "meter",
            fileName: "meter",
            chainId: 82,
            caip2id: "eip155:82",
            name: "Meter",
            shortName: "meter",
            nativeCoinId: "meter",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "fuse",
            fileName: "fuse",
            chainId: 122,
            caip2id: "eip155:122",
            name: "Fuse",
            shortName: "fuse",
            nativeCoinId: "fuse-network-token",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "near-protocol",
            fileName: "near-protocol",
            chainId: 39,
            caip2id: "near:mainnet",
            name: "Near Protocol",
            shortName: "near-protocol",
            nativeCoinId: "near",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "enuls",
            fileName: "enuls",
            chainId: 119,
            caip2id: "eip155:119",
            name: "enuls",
            shortName: "enuls",
            nativeCoinId: "nuls",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "aurora",
            fileName: "aurora",
            chainId: 0x4e454152,
            caip2id: "eip155:1313161554",
            name: "Aurora",
            shortName: "aurora",
            nativeCoinId: "aurora-near",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "polygon",
            fileName: "polygon",
            chainId: 137,
            caip2id: "eip155:137",
            name: "Polygon",
            shortName: "MATIC",
            nativeCoinId: "matic-network",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "multiversx",
            fileName: "multiversx",
            name: "MultiversX",
            shortName: "multiversx",
            nativeCoinId: "egld",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "tombchain",
            fileName: "tombchain",
            chainId: 6969,
            caip2id: "eip155:6969",
            name: "Tombchain",
            shortName: "tomb",
            nativeCoinId: "tomb",
            variants: ["background", "branded"],
          },
          {
            id: "l3x",
            fileName: "l3x",
            chainId: 12324,
            caip2id: "eip155:12324",
            name: "L3X Protocol",
            shortName: "l3x",
            nativeCoinId: "eth",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "fraxtal",
            fileName: "fraxtal",
            chainId: 252,
            caip2id: "eip155:252",
            name: "Fraxtal",
            shortName: "fraxtal",
            nativeCoinId: "fraxtal",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "ethereum",
            fileName: "ethereum",
            chainId: 1,
            caip2id: "eip155:1",
            name: "Ethereum",
            shortName: "Ethereum",
            nativeCoinId: "ethereum",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "neon-evm",
            fileName: "neon-evm",
            chainId: 0xe9ac0d6,
            caip2id: "eip155:245022934",
            name: "Neon EVM",
            shortName: "neon-evm",
            nativeCoinId: "neon",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "mint",
            fileName: "mint",
            chainId: 185,
            caip2id: "eip155:185",
            name: "Mint",
            shortName: "mint",
            nativeCoinId: "weth",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "zyx",
            fileName: "zyx",
            chainId: 55,
            caip2id: "eip155:55",
            name: "zyx",
            shortName: "zyx",
            nativeCoinId: "zyx",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "cronos-zkevm",
            fileName: "cronos-zkevm",
            chainId: 388,
            caip2id: "eip155:388",
            name: "Cronos zkEVM",
            shortName: "cronos",
            nativeCoinId: "cronos-zkevm-cro",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "apex-layer",
            fileName: "apex-layer",
            chainId: 2662,
            caip2id: "eip155:2662",
            name: "apex layer",
            shortName: "apex",
            nativeCoinId: "eth",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "lava-network",
            fileName: "lava-network",
            name: "lava-network",
            shortName: "lava",
            nativeCoinId: "lava-network",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "cosmos-hub",
            fileName: "cosmos-hub",
            caip2id: "cosmos:cosmoshub-4",
            name: "Cosmos Hub",
            shortName: "cosmos",
            nativeCoinId: "cosmos",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "diode",
            fileName: "diode",
            chainId: 15,
            caip2id: "eip155:15",
            name: "Diode",
            shortName: "diode",
            nativeCoinId: "diode",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "milkomeda-c1",
            fileName: "milkomeda-c1",
            chainId: 2001,
            caip2id: "eip155:2001",
            name: "milkomeda C1",
            shortName: "milkomeda",
            nativeCoinId: "mADA",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "vanar",
            fileName: "vanar",
            chainId: 2040,
            caip2id: "eip155:2040",
            name: "Vanar",
            shortName: "vanar",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "step",
            fileName: "step",
            chainId: 1234,
            caip2id: "eip155:1234",
            name: "step",
            shortName: "step",
            nativeCoinId: "step",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "polygon-zkevm",
            fileName: "polygon-zkevm",
            chainId: 1101,
            caip2id: "eip155:1101",
            name: "Polygon zkEVM",
            shortName: "polygon",
            nativeCoinId: "ethereum",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "mantra",
            fileName: "mantra",
            name: "Mantra Chain",
            shortName: "mantra",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "kujira",
            fileName: "kujira",
            caip2id: "cosmos:kaiyo-1",
            name: "Kujira",
            shortName: "kujira",
            nativeCoinId: "kujira",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "aptos",
            fileName: "aptos",
            name: "Aptos",
            shortName: "aptos",
            nativeCoinId: "aptos",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "cosmos",
            fileName: "cosmos",
            name: "Cosmos",
            shortName: "cosmos",
            nativeCoinId: "cosmos",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "hemi",
            fileName: "hemi",
            chainId: 743111,
            caip2id: "eip155:743111",
            name: "Hemi",
            shortName: "hemi",
            nativeCoinId: "eth",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "moonbase",
            fileName: "moonbase",
            chainId: 1287,
            caip2id: "eip155:1287",
            name: "moonbase",
            shortName: "moonbase",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "eos",
            fileName: "eos",
            chainId: 17777,
            caip2id: "eip155:17777",
            name: "EOS evm",
            shortName: "eos",
            nativeCoinId: "eos",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "arweave",
            fileName: "arweave",
            name: "Arweave",
            shortName: "arweave",
            nativeCoinId: "ar",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "stellar",
            fileName: "stellar",
            caip2id: "stellar:pubnet",
            name: "Stellar",
            shortName: "stellar",
            nativeCoinId: "stellar",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "zora",
            fileName: "zora",
            chainId: 7777777,
            caip2id: "eip155:7777777",
            name: "zora",
            shortName: "zora",
            nativeCoinId: "weth",
            variants: ["background", "branded"],
          },
          {
            id: "cronos",
            fileName: "cronos",
            chainId: 25,
            caip2id: "eip155:25",
            name: "Cronos",
            shortName: "CRO",
            nativeCoinId: "crypto-com-chain",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "binance-smart-chain",
            fileName: "binance-smart-chain",
            chainId: 56,
            caip2id: "eip155:56",
            name: "BNB Smart Chain",
            shortName: "BSC",
            nativeCoinId: "binancecoin",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "elastos",
            fileName: "elastos",
            chainId: 20,
            caip2id: "eip155:20",
            name: "Elastos Smart Contract Chain",
            shortName: "Elastos",
            nativeCoinId: "elastos",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "xai",
            fileName: "xai",
            chainId: 660279,
            caip2id: "eip155:660279",
            name: "XAI",
            shortName: "xai",
            nativeCoinId: "xai-blockchain",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "iotex",
            fileName: "iotex",
            chainId: 4689,
            caip2id: "eip155:4689",
            name: "IoTeX",
            shortName: "iotex",
            nativeCoinId: "iotex",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "bouncebit",
            fileName: "bouncebit",
            chainId: 6001,
            caip2id: "eip155:6001",
            name: "BounceBit",
            shortName: "bounce",
            nativeCoinId: "bouncebit",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "beam",
            fileName: "beam",
            chainId: 4337,
            caip2id: "eip155:4337",
            name: "Beam",
            shortName: "beam",
            nativeCoinId: "beam",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "lukso",
            fileName: "lukso",
            chainId: 42,
            caip2id: "eip155:42",
            name: "Lukso",
            shortName: "lukso",
            nativeCoinId: "lukso-token-2",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "abstract",
            fileName: "abstract",
            chainId: 11124,
            caip2id: "eip155:11124",
            name: "abstract",
            shortName: "abstract",
            nativeCoinId: "eth",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "astar",
            fileName: "astar",
            chainId: 592,
            caip2id: "eip155:592",
            name: "Astar",
            shortName: "astar",
            nativeCoinId: "astar",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "injective",
            fileName: "injective",
            name: "Injective",
            shortName: "injective",
            nativeCoinId: "injective-protocol",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "sonic",
            fileName: "sonic",
            chainId: 146,
            caip2id: "eip155:146",
            name: "Sonic",
            shortName: "sonic",
            nativeCoinId: "sonic",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "tron",
            fileName: "tron",
            name: "TRON",
            shortName: "tron",
            nativeCoinId: "tron",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "rootstock",
            fileName: "rootstock",
            chainId: 30,
            caip2id: "eip155:30",
            name: "Rootstock RSK",
            shortName: "rootstock",
            nativeCoinId: "rootstock",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "corn",
            fileName: "corn",
            chainId: 21e6,
            caip2id: "eip155:21000000",
            name: "Corn",
            shortName: "corn",
            nativeCoinId: "btc",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "harmony",
            fileName: "harmony",
            chainId: 16666e5,
            caip2id: "eip155:1666600000",
            name: "Harmony One",
            shortName: "one",
            nativeCoinId: "one",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "fantom",
            fileName: "fantom",
            chainId: 250,
            caip2id: "eip155:250",
            name: "Fantom Opera",
            shortName: "fantom",
            nativeCoinId: "fantom",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "clover",
            fileName: "clover",
            chainId: 1024,
            caip2id: "eip155:1024",
            name: "Clover",
            shortName: "clover",
            nativeCoinId: "clover-finance",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "xdc",
            fileName: "xdc",
            chainId: 50,
            caip2id: "eip155:50",
            name: "xdc network",
            shortName: "xdc",
            nativeCoinId: "xdc",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "velas",
            fileName: "velas",
            chainId: 106,
            caip2id: "eip155:106",
            name: "Velas",
            shortName: "velas",
            nativeCoinId: "velas",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "filecoin",
            fileName: "filecoin",
            chainId: 314,
            caip2id: "eip155:314",
            name: "Filecoin",
            shortName: "filecoin",
            nativeCoinId: "filecoin",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "chiliz",
            fileName: "chiliz",
            chainId: 88888,
            caip2id: "eip155:88888",
            name: "Chiliz",
            shortName: "chiliz",
            nativeCoinId: "chiliz",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "dogechain",
            fileName: "dogechain",
            chainId: 2e3,
            caip2id: "eip155:2000",
            name: "Dogechain",
            shortName: "dogechain",
            nativeCoinId: "doge",
            variants: ["background", "branded"],
          },
          {
            id: "lens",
            fileName: "lens",
            chainId: 37111,
            caip2id: "eip155:37111",
            name: "Lens",
            shortName: "lens",
            nativeCoinId: "GRASS",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "mode",
            fileName: "mode",
            chainId: 34443,
            caip2id: "eip155:34443",
            name: "Mode",
            shortName: "mode",
            nativeCoinId: "mode",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "linea",
            fileName: "linea",
            chainId: 59144,
            caip2id: "eip155:59144",
            name: "Linea",
            shortName: "linea",
            nativeCoinId: "ethereum",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "zeta-chain",
            fileName: "zeta-chain",
            chainId: 7e3,
            caip2id: "eip155:7000",
            name: "Zeta Chain",
            shortName: "zeta",
            nativeCoinId: "zetachain",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "juno",
            fileName: "juno",
            name: "Juno",
            shortName: "juno",
            nativeCoinId: "juno-network",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "gravity",
            fileName: "gravity",
            chainId: 1625,
            caip2id: "eip155:1625",
            name: "gravity-network",
            shortName: "gravity",
            nativeCoinId: "g",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "avalanche",
            fileName: "avalanche",
            chainId: 43114,
            caip2id: "eip155:43114",
            name: "Avalanche C-Chain",
            shortName: "Avalanche",
            nativeCoinId: "avax",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "rollux",
            fileName: "rollux",
            chainId: 570,
            caip2id: "eip155:570",
            name: "Rollux",
            shortName: "rollux",
            nativeCoinId: "syscoin",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "lumia",
            fileName: "lumia",
            chainId: 0x3b4c8eb9,
            caip2id: "eip155:994873017",
            name: "Lumia",
            shortName: "lumia",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "mantle",
            fileName: "mantle",
            chainId: 5e3,
            caip2id: "eip155:5000",
            name: "Mantle",
            shortName: "mantle",
            nativeCoinId: "mantle",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "bitcoin",
            fileName: "bitcoin",
            caip2id: "bip122:000000000019d6689c085ae165831e93",
            name: "Bitcoin",
            shortName: "bitcoin",
            nativeCoinId: "bitcoin",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "litecoin",
            fileName: "litecoin",
            caip2id: "bip122:12a765e31ffd4059bada1e25190f6e98",
            name: "Litecoin",
            shortName: "ltc",
            nativeCoinId: "litecoin",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "wemix",
            fileName: "wemix",
            chainId: 111,
            caip2id: "eip155:1111",
            name: "Wemix",
            shortName: "wemix",
            nativeCoinId: "wemix",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "bob",
            fileName: "bob",
            chainId: 60808,
            caip2id: "eip155:60808",
            name: "Bob",
            shortName: "bob",
            nativeCoinId: "eth",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "botanix",
            fileName: "botanix",
            chainId: 3637,
            caip2id: "eip155:3637",
            name: "Botanix",
            shortName: "botanix",
            nativeCoinId: "btc",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "sys",
            fileName: "sys",
            chainId: 57,
            caip2id: "eip155:57",
            name: "Syscoin",
            shortName: "sys",
            nativeCoinId: "sys",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "cardano",
            fileName: "cardano",
            caip2id: "cip-34:1-764824073",
            name: "Cardano",
            shortName: "ada",
            nativeCoinId: "cardano",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "treasure",
            fileName: "treasure",
            chainId: 61166,
            caip2id: "eip155:61166",
            name: "Treasure",
            shortName: "treasure",
            nativeCoinId: "magic",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "shiden",
            fileName: "shiden",
            chainId: 336,
            caip2id: "eip155:336",
            name: "shiden",
            shortName: "shiden",
            nativeCoinId: "sdn",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "stargaze",
            fileName: "stargaze",
            name: "Stargaze",
            shortName: "stargaze",
            nativeCoinId: "stargaze",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "kardia",
            fileName: "kardia",
            chainId: 24,
            caip2id: "eip155:24",
            name: "kardia chain",
            shortName: "kardia",
            nativeCoinId: "kai",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "blast",
            fileName: "blast",
            chainId: 81457,
            caip2id: "eip155:81457",
            name: "Blast",
            shortName: "blast",
            nativeCoinId: "blast",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "etherlink",
            fileName: "etherlink",
            chainId: 42793,
            caip2id: "eip155:42793",
            name: "etherlink",
            shortName: "etherlink",
            nativeCoinId: "xtz",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "rari",
            fileName: "rari",
            chainId: 0x52415249,
            caip2id: "eip155:1380012617",
            name: "Rari",
            shortName: "rari",
            nativeCoinId: "rari",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "unichain",
            fileName: "unichain",
            chainId: 130,
            caip2id: "eip155:130",
            name: "Unichain",
            shortName: "uni",
            nativeCoinId: "eth",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "rei",
            fileName: "rei",
            chainId: 47805,
            caip2id: "eip155:47805",
            name: "Rei",
            shortName: "rei",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "karura",
            fileName: "karura",
            chainId: 686,
            caip2id: "eip155:686",
            name: "Karura",
            shortName: "karura",
            nativeCoinId: "karura",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "world",
            fileName: "world",
            chainId: 480,
            caip2id: "eip155:480",
            name: "World Chain",
            shortName: "world",
            nativeCoinId: "eth",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "sui",
            fileName: "sui",
            name: "Sui",
            shortName: "sui",
            nativeCoinId: "sui",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "ronin",
            fileName: "ronin",
            chainId: 2020,
            caip2id: "eip155:2020",
            name: "Ronin",
            shortName: "ron",
            nativeCoinId: "ronin",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "bitkub-chain",
            fileName: "bitkub-chain",
            chainId: 96,
            caip2id: "eip155:96",
            name: "Bitkub Chain",
            shortName: "bitkub",
            nativeCoinId: "bitkub-coin",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "moonbase-alpha",
            fileName: "moonbase-alpha",
            chainId: 1287,
            caip2id: "eip155:1287",
            name: "Moonbase Alpha",
            shortName: "Moonbase Alpha",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "nibiru",
            fileName: "nibiru",
            chainId: 6900,
            caip2id: "eip155:6900",
            name: "Nibiru",
            nativeCoinId: "nibiru",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "gnosis",
            fileName: "gnosis",
            chainId: 100,
            caip2id: "eip155:100",
            name: "Gnosis Chain",
            shortName: "xdai",
            nativeCoinId: "xDai",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "xrp",
            fileName: "xrp",
            caip2id: "xrpl:0",
            name: "XRP Ledger",
            shortName: "xrp",
            nativeCoinId: "ripple",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "lumio",
            fileName: "lumio",
            chainId: 8866,
            caip2id: "eip155:8866",
            name: "Super Lumio",
            shortName: "lumio",
            nativeCoinId: "eth",
            variants: ["background", "branded"],
          },
          {
            id: "kakarot",
            fileName: "kakarot",
            name: "Kakarot",
            shortName: "kakarot",
            nativeCoinId: "eth",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "x-layer",
            fileName: "x-layer",
            chainId: 19,
            caip2id: "eip155:19",
            name: "X Layer",
            shortName: "xlayer",
            nativeCoinId: "okb",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "energy-web",
            fileName: "energy-web",
            chainId: 246,
            caip2id: "eip155:246",
            name: "energy web",
            shortName: "energy",
            nativeCoinId: "ewt",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "metis-andromeda",
            fileName: "metis-andromeda",
            chainId: 1088,
            caip2id: "eip155:1088",
            name: "Metis Andromeda",
            shortName: "metis",
            nativeCoinId: "metis-token",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "coinex-smart-chain",
            fileName: "coinex-smart-chain",
            chainId: 52,
            caip2id: "eip155:52",
            name: "CoinEx Smart Chain",
            shortName: "CSC",
            nativeCoinId: "coinex-token",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "hedera-hashgraph",
            fileName: "hedera-hashgraph",
            chainId: 295,
            caip2id: "eip155:295",
            name: "Hedera Hashgraph",
            shortName: "hedera",
            nativeCoinId: "hedera-hashgraph",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "tenet",
            fileName: "tenet",
            chainId: 1559,
            caip2id: "eip155:1559",
            name: "Tenet",
            shortName: "tenet",
            nativeCoinId: "tenet-1b000f7b-59cb-4e06-89ce-d62b32d362b9",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "arbitrum-one",
            fileName: "arbitrum-one",
            chainId: 42161,
            caip2id: "eip155:42161",
            name: "Arbitrum One",
            shortName: "Arbitrum",
            nativeCoinId: "ethereum",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "scroll",
            fileName: "scroll",
            chainId: 534352,
            caip2id: "eip155:534352",
            name: "Scroll",
            shortName: "scroll",
            nativeCoinId: "weth",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "boba",
            fileName: "boba",
            chainId: 288,
            caip2id: "eip155:288",
            name: "Boba Network",
            shortName: "boba",
            nativeCoinId: "ethereum",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "viction",
            fileName: "viction",
            chainId: 88,
            caip2id: "eip155:88",
            name: "Viction",
            shortName: "viction",
            nativeCoinId: "viction",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "monad",
            fileName: "monad",
            chainId: 143,
            caip2id: "eip155:143",
            name: "Monad",
            shortName: "monad",
            nativeCoinId: "monad",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "immutable",
            fileName: "immutable",
            chainId: 13371,
            caip2id: "eip155:13371",
            name: "Immutable zkEVM",
            shortName: "immutable",
            nativeCoinId: "immutable-x",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "flare",
            fileName: "flare",
            chainId: 14,
            caip2id: "eip155:14",
            name: "flare",
            shortName: "flare",
            nativeCoinId: "flr",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "wax",
            fileName: "wax",
            caip2id: "antelope:1064487b3cd1a897ce03ae5b6a865651",
            name: "WAX",
            shortName: "wax",
            nativeCoinId: "wax",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "taiko",
            fileName: "taiko",
            chainId: 167e3,
            caip2id: "eip155:167000",
            name: "Taiko",
            shortName: "taiko",
            nativeCoinId: "taiko",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "lyra",
            fileName: "lyra",
            chainId: 957,
            caip2id: "eip155:957",
            name: "lyra chain",
            shortName: "lyra",
            nativeCoinId: "eth",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "starknet",
            fileName: "starknet",
            name: "StarkNet",
            shortName: "starknet",
            nativeCoinId: "starknet",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "moonbeam",
            fileName: "moonbeam",
            chainId: 1284,
            caip2id: "eip155:1284",
            name: "Moonbeam",
            shortName: "moonbeam",
            nativeCoinId: "moonbeam",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "super-seed",
            fileName: "super-seed",
            chainId: 5330,
            caip2id: "eip155:5330",
            name: "Super Seed",
            shortName: "Super Seed",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "fluence",
            fileName: "fluence",
            chainId: 9999999,
            caip2id: "eip155:9999999",
            name: "Fluence",
            shortName: "fluence",
            nativeCoinId: "flt",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "orderly",
            fileName: "orderly",
            chainId: 291,
            caip2id: "eip155:291",
            name: "Orderly",
            shortName: "orderly",
            nativeCoinId: "eth",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "okex",
            fileName: "okex",
            chainId: 66,
            caip2id: "eip155:66",
            name: "OKEx Chain",
            shortName: "OKEx",
            nativeCoinId: "okex",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "kroma",
            fileName: "kroma",
            chainId: 255,
            caip2id: "eip155:255",
            name: "kroma",
            shortName: "kroma",
            nativeCoinId: "eth",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "kava",
            fileName: "kava",
            chainId: 2222,
            caip2id: "cosmos:kava-4",
            name: "Kava",
            shortName: "kava",
            nativeCoinId: "kava",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "moonriver",
            fileName: "moonriver",
            chainId: 1285,
            caip2id: "eip155:1285",
            name: "Moonriver",
            shortName: "moonriver",
            nativeCoinId: "moonriver",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "ubiq",
            fileName: "ubiq",
            chainId: 8,
            caip2id: "eip155:8",
            name: "ubiq",
            shortName: "ubiq",
            nativeCoinId: "ubq",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "soneium",
            fileName: "soneium",
            chainId: 1868,
            caip2id: "eip155:1868",
            name: "Soneium",
            shortName: "soneium",
            nativeCoinId: "eth",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "nahmii",
            fileName: "nahmii",
            chainId: 4061,
            caip2id: "eip155:4061",
            name: "Nahmii",
            shortName: "nahmii",
            nativeCoinId: "nahmii",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "lightlink",
            fileName: "lightlink",
            chainId: 1890,
            caip2id: "eip155:1890",
            name: "LightLink",
            shortName: "lightlink",
            nativeCoinId: "ethereum",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "lisk",
            fileName: "lisk",
            chainId: 1135,
            caip2id: "eip155:1135",
            name: "Lisk",
            shortName: "lisk",
            nativeCoinId: "lisk",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "push",
            fileName: "push",
            name: "Push Chain",
            shortName: "Push",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "polkadot",
            fileName: "polkadot",
            caip2id: "polkadot:91b171bb158e2d3848fa23a9f1c25182",
            name: "Polkadot",
            shortName: "dot",
            nativeCoinId: "polkadot",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "oasys",
            fileName: "oasys",
            chainId: 248,
            caip2id: "eip155:248",
            name: "Oasys",
            shortName: "oasys",
            nativeCoinId: "oasys",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "base",
            fileName: "base",
            chainId: 8453,
            caip2id: "eip155:8453",
            name: "Base",
            shortName: "base",
            nativeCoinId: "ethereum",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "optimism",
            fileName: "optimism",
            chainId: 10,
            caip2id: "eip155:10",
            name: "Optimism",
            shortName: "Optimism",
            nativeCoinId: "eth",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "loopring",
            fileName: "loopring",
            name: "Loopring",
            shortName: "loopring",
            nativeCoinId: "loopring",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "osmosis",
            fileName: "osmosis",
            name: "Osmosis",
            shortName: "Osmo",
            nativeCoinId: "osmosis",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "ultron",
            fileName: "ultron",
            chainId: 1231,
            caip2id: "eip155:1231",
            name: "Ultron",
            shortName: "ultron",
            nativeCoinId: "ultron",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "songbird",
            fileName: "songbird",
            chainId: 19,
            caip2id: "eip155:19",
            name: "Songbird",
            shortName: "19",
            nativeCoinId: "songbird",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "hubble-exchange",
            fileName: "hubble-exchange",
            chainId: 1992,
            caip2id: "eip155:1992",
            name: "hubble exchange",
            shortName: "hubble",
            nativeCoinId: "usdc",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "kucoin",
            fileName: "kucoin",
            name: "kucoin",
            shortName: "kucoin",
            nativeCoinId: "kcs",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "manta-pacific",
            fileName: "manta-pacific",
            chainId: 169,
            name: "Manta Pacific",
            shortName: "manta",
            nativeCoinId: "weth",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "ethereum-classic",
            fileName: "ethereum-classic",
            chainId: 61,
            caip2id: "eip155:61",
            name: "Ethereum Classic",
            shortName: "eth-classic",
            nativeCoinId: "ethereum-classic",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "acala",
            fileName: "acala",
            chainId: 787,
            caip2id: "eip155:787",
            name: "Acala",
            shortName: "acala",
            nativeCoinId: "acala",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "neo-x",
            fileName: "neo-x",
            chainId: 47763,
            caip2id: "eip155:47763",
            name: "neo-x",
            shortName: "neox",
            nativeCoinId: "neo",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "silicon",
            fileName: "silicon",
            chainId: 2355,
            caip2id: "eip155:2355",
            name: "Silicon zkEVM",
            shortName: "silicon",
            nativeCoinId: "eth",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "sei-network",
            fileName: "sei-network",
            chainId: 1329,
            caip2id: "eip155:1329",
            name: "Sei Network",
            shortName: "sei",
            nativeCoinId: "sei-network",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "milkomeda-a1",
            fileName: "milkomeda-a1",
            chainId: 2002,
            caip2id: "eip155:2002",
            name: "milkomeda A1",
            shortName: "milkomeda",
            nativeCoinId: "mALGO",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "shimmer-evm",
            fileName: "shimmer-evm",
            chainId: 148,
            caip2id: "eip155:148",
            name: "shimmer evm",
            shortName: "shimmer",
            nativeCoinId: "smr",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "telos",
            fileName: "telos",
            chainId: 40,
            caip2id: "eip155:40",
            name: "Telos",
            shortName: "telos",
            nativeCoinId: "telos",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "lycan",
            fileName: "lycan",
            chainId: 721,
            caip2id: "eip155:721",
            name: "Lycan",
            shortName: "lycan",
            nativeCoinId: "lyc",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "celo",
            fileName: "celo",
            chainId: 42220,
            caip2id: "eip155:42220",
            name: "Celo",
            shortName: "celo",
            nativeCoinId: "celo",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "zilliqa",
            fileName: "zilliqa",
            chainId: 32769,
            caip2id: "eip155:32769",
            name: "Zilliqa",
            shortName: "zilliqa",
            nativeCoinId: "zilliqa",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "reya",
            fileName: "reya",
            chainId: 1729,
            caip2id: "eip155:1729",
            name: "reya",
            shortName: "reya",
            nativeCoinId: "eth",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "edgeless",
            fileName: "edgeless",
            chainId: 2026,
            caip2id: "eip155:2026",
            name: "Edgeless Network",
            shortName: "edgeless",
            nativeCoinId: "eweth",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "kaia",
            fileName: "kaia",
            chainId: 8217,
            caip2id: "eip155:8217",
            name: "Kaia",
            shortName: "kaia",
            nativeCoinId: "kaia",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "conflux",
            fileName: "conflux",
            chainId: 1030,
            caip2id: "eip155:1030",
            name: "Conflux",
            shortName: "conflux",
            nativeCoinId: "conflux-token",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "solana",
            fileName: "solana",
            caip2id: "solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp",
            name: "Solana",
            shortName: "Solana",
            nativeCoinId: "solana",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "optopia",
            fileName: "optopia",
            chainId: 62050,
            caip2id: "eip155:62050",
            name: "Optopia AI",
            shortName: "optopia",
            nativeCoinId: "eth",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "arbitrum-nova",
            fileName: "arbitrum-nova",
            chainId: 42170,
            caip2id: "eip155:42170",
            name: "Arbitrum Nova",
            shortName: "arbitrum-nova",
            nativeCoinId: "ethereum",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "fio",
            fileName: "fio",
            name: "FIO Protocol",
            shortName: "fio",
            nativeCoinId: "FIO",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "algorand",
            fileName: "algorand",
            caip2id: "algorand:wGHE2Pwdvd7S12BL5FaOP20EGYesN73k",
            name: "Algorand",
            shortName: "algo",
            nativeCoinId: "algorand",
            variants: ["mono", "background", "branded"],
          },
          {
            id: "berachain",
            fileName: "berachain",
            chainId: 80094,
            caip2id: "eip155:80094",
            name: "Berachain",
            shortName: "berachain",
            nativeCoinId: "BERA",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "paradex",
            fileName: "paradex",
            name: "Paradex",
            shortName: "paradex",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "zero-network",
            fileName: "zero-network",
            chainId: 543210,
            caip2id: "eip155:543210",
            name: "Zero Network",
            shortName: "zero-network",
            nativeCoinId: "ETH",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "zircuit",
            fileName: "zircuit",
            chainId: 48900,
            caip2id: "eip155:48900",
            name: "Zircuit",
            shortName: "zircuit",
            nativeCoinId: "ETH",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "expchain",
            fileName: "expchain",
            chainId: 18880,
            caip2id: "eip155:18880",
            name: "EXPchain",
            shortName: "expchain",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "japan-open-chain",
            fileName: "japan-open-chain",
            chainId: 81,
            caip2id: "eip155:81",
            name: "Japan Open Chain",
            shortName: "JOC",
            nativeCoinId: "JOC",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "vana",
            fileName: "vana",
            chainId: 1480,
            caip2id: "eip155:1480",
            name: "Vana",
            shortName: "vana",
            nativeCoinId: "VANA",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "vara",
            fileName: "vara",
            caip2id: "gear:vara-mainnet",
            name: "Vara",
            shortName: "vara",
            nativeCoinId: "VARA",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "iota-evm",
            fileName: "iota-evm",
            chainId: 8822,
            caip2id: "eip155:8822",
            name: "Iota EVM",
            shortName: "Iota",
            nativeCoinId: "IOTA",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "apechain",
            fileName: "apechain",
            chainId: 33139,
            caip2id: "eip155:33139",
            name: "Apechain",
            shortName: "Ape",
            nativeCoinId: "APE",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "nexis",
            fileName: "nexis",
            chainId: 2370,
            caip2id: "eip155:2370",
            name: "Nexis Network",
            shortName: "Nexis",
            nativeCoinId: "NZT",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "ink",
            fileName: "ink",
            chainId: 57073,
            caip2id: "eip155:57073",
            name: "Ink",
            shortName: "Ink",
            nativeCoinId: "ETH",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "ontology",
            fileName: "ontology",
            chainId: 58,
            caip2id: "eip155:58",
            name: "Ontology",
            shortName: "Ontology",
            nativeCoinId: "ONG",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "prom",
            fileName: "prom",
            chainId: 227,
            caip2id: "eip155:227",
            name: "Prom",
            shortName: "Prom",
            nativeCoinId: "PROM",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "autonomys",
            fileName: "autonomys",
            chainId: 49e4,
            caip2id: "eip155:490000",
            name: "Autonomys EVM",
            shortName: "Auto EVM",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "swell",
            fileName: "swell",
            chainId: 1923,
            caip2id: "eip155:1923",
            name: "Swell Network",
            shortName: "Swell",
            nativeCoinId: "ETH",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "hashkey",
            fileName: "hashkey",
            chainId: 177,
            caip2id: "eip155:177",
            name: "Hashkey Chain",
            shortName: "Hashkey",
            nativeCoinId: "HSK",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "peaq",
            fileName: "peaq",
            chainId: 3338,
            caip2id: "eip155:3338",
            name: "peaq",
            shortName: "peaq",
            nativeCoinId: "PEAQ",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "mega-eth",
            fileName: "mega",
            chainId: 6342,
            caip2id: "eip155:6342",
            name: "Mega ETH",
            shortName: "Mega",
            nativeCoinId: "eth",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "ultra",
            fileName: "ultra",
            caip2id: "antelope:a9c481dfbc7d9506dc7e87e9a137c931",
            name: "Ultra",
            shortName: "Ultra",
            nativeCoinId: "UOS",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "katana",
            fileName: "katana",
            chainId: 129399,
            caip2id: "eip155:129399",
            name: "Katana",
            shortName: "katana",
            nativeCoinId: "eth",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "ozean",
            fileName: "ozean",
            chainId: 31911,
            caip2id: "eip155:31911",
            name: "Ozean",
            shortName: "ozean",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "status",
            fileName: "status",
            chainId: 0x6300b5ea,
            caip2id: "eip155:1660990954",
            name: "Status",
            shortName: "status",
            nativeCoinId: "ETH",
            variants: ["background", "branded", "mono"],
          },
        ],
        t = [
          {
            id: "alfa1",
            fileName: "alfa1",
            name: "alfa1",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "alpha-wallet",
            fileName: "alpha-wallet",
            name: "alpha wallet",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "argent",
            fileName: "argent",
            name: "argent x",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "backpack",
            fileName: "backpack",
            name: "backpack",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "clave",
            fileName: "clave",
            name: "clave",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "coin98",
            fileName: "coin98",
            name: "coin98",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "coinbase",
            fileName: "coinbase",
            name: "coinbase wallet",
            variants: ["branded", "background"],
          },
          {
            id: "enkrypt",
            fileName: "enkrypt",
            name: "enkrypt",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "imtoken",
            fileName: "imtoken",
            name: "imToken",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "kraken",
            fileName: "kraken",
            name: "kraken wallet",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ledger",
            fileName: "ledger",
            name: "ledger",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "lit",
            fileName: "lit",
            name: "lit protocol",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "metamask",
            fileName: "metamask",
            name: "MetaMask",
            variants: ["branded", "background"],
          },
          {
            id: "multis",
            fileName: "multis",
            name: "multis",
            variants: ["mono", "background"],
          },
          {
            id: "my-ether-wallet",
            fileName: "my-ether-wallet",
            name: "MyEtherWallet",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "obvious",
            fileName: "obvious",
            name: "obvious wallet",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "okx",
            fileName: "okx",
            name: "okx wallet",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "phantom",
            fileName: "phantom",
            name: "phantom",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "pillar",
            fileName: "pillar",
            name: "Pillar",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "portal",
            fileName: "portal",
            name: "portal",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "rabby",
            fileName: "rabby",
            name: "rabby",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "rainbow",
            fileName: "rainbow",
            name: "rainbow",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "ronin",
            fileName: "ronin",
            name: "ronin",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "safe",
            fileName: "safe",
            name: "safe wallet",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "sender",
            fileName: "sender",
            name: "sender",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "sequence",
            fileName: "sequence",
            name: "sequence",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "soul",
            fileName: "soul",
            name: "soul",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "squads",
            fileName: "squads",
            name: "squads",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "token-pocket",
            fileName: "token-pocket",
            name: "token pocket",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "trezor",
            fileName: "trezor",
            name: "trezor",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "trust",
            fileName: "trust",
            name: "trust wallet",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "unipass",
            fileName: "unipass",
            name: "unipass",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "venly",
            fileName: "venly",
            name: "venly",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "wallet-3",
            fileName: "wallet-3",
            name: "wallet3",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "wallet-connect",
            fileName: "wallet-connect",
            name: "wallet connect",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "xdefi",
            fileName: "xdefi",
            name: "xdefi",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "zengo",
            fileName: "zengo",
            name: "zengo",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "zerion",
            fileName: "zerion",
            name: "zerion",
            variants: ["branded", "mono", "background"],
          },
        ],
        s = [
          {
            id: "1inch",
            fileName: "1inch",
            name: "1inch",
            type: "dex",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "balancer",
            fileName: "balancer",
            name: "Balancer",
            type: "dex",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "bancor",
            fileName: "bancor",
            name: "Bancor",
            type: "dex",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "binance",
            fileName: "binance",
            name: "Binance",
            type: "cex",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "bithumb",
            fileName: "bithumb",
            name: "Bithumb",
            type: "cex",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "bitstamp",
            fileName: "bitstamp",
            name: "Bitstamp",
            type: "cex",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "btcturk",
            fileName: "btcturk",
            name: "BTC Turk",
            type: "cex",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "bybit",
            fileName: "bybit",
            name: "Bybit",
            type: "cex",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "coinbase",
            fileName: "coinbase",
            name: "Coinbase",
            type: "dex",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "cowswap",
            fileName: "cowswap",
            name: "Cow Swap",
            type: "dex",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "crypto-com",
            fileName: "crypto-com",
            name: "Crypto.com",
            type: "cex",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "gate-io",
            fileName: "gate-io",
            name: "Gate Io",
            type: "cex",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "gemini",
            fileName: "gemini",
            name: "Gemini",
            type: "cex",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "kraken",
            fileName: "kraken",
            name: "Kraken",
            type: "cex",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "kucoin",
            fileName: "kucoin",
            name: "Kucoin",
            type: "cex",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "odos",
            fileName: "odos",
            name: "Odos",
            type: "dex",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "okx",
            fileName: "okx",
            name: "OkX",
            type: "cex",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "pancake-swap",
            fileName: "pancake-swap",
            name: "Pancake Swap",
            type: "dex",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "para-swap",
            fileName: "para-swap",
            name: "ParaSwap",
            type: "dex",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "paribu",
            fileName: "paribu",
            name: "Paribu",
            type: "cex",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "sushiswap",
            fileName: "sushiswap",
            name: "Sushi Swap",
            type: "dex",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "swissborg",
            fileName: "swissborg",
            name: "SwissBorg",
            type: "cex",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "uniswap",
            fileName: "uniswap",
            name: "Uniswap",
            type: "dex",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "upbit",
            fileName: "upbit",
            name: "UpBit",
            type: "cex",
            variants: ["branded", "mono", "background"],
          },
          {
            id: "aevo",
            fileName: "aevo",
            name: "Aevo",
            type: "dex",
            variants: ["background", "branded", "mono"],
          },
          {
            id: "paradex",
            fileName: "paradex",
            name: "Paradex",
            type: "dex",
            variants: ["background", "branded", "mono"],
          },
        ],
        i = e.i(150840),
        d = (e) =>
          e
            .split(" ")
            .map((e, a) =>
              0 === a ? e.toLowerCase() : e.charAt(0).toLowerCase() + e.slice(1)
            )
            .join("-"),
        c = (e, a) =>
          e.find((e) =>
            Object.keys(a).some((n) => {
              let o = a[n];
              if (void 0 === o) return !1;
              if ("object" == typeof o)
                return Object.entries(o).every((a) => {
                  var o;
                  let [r, t] = a;
                  return (null == (o = e[n]) ? void 0 : o[r]) === t;
                });
              if ("string" != typeof o) return e[n] === o;
              {
                let a = e[n];
                return (
                  "string" == typeof a && a.toLowerCase() === o.toLowerCase()
                );
              }
            })
          ),
        b = (e) => {
          let { name: a, id: n } = e;
          return n
            ? c(s, { id: d(n), name: n })
            : a
            ? c(s, { id: d(a), name: a })
            : void 0;
        },
        m = (0, a.__glob)({
          "../icons/exchanges/Exchange1inch.tsx": () => e.r(618179)(e.i),
          "../icons/exchanges/ExchangeAevo.tsx": () => e.r(335292)(e.i),
          "../icons/exchanges/ExchangeBalancer.tsx": () => e.r(123161)(e.i),
          "../icons/exchanges/ExchangeBancor.tsx": () => e.r(860133)(e.i),
          "../icons/exchanges/ExchangeBinance.tsx": () => e.r(749040)(e.i),
          "../icons/exchanges/ExchangeBithumb.tsx": () => e.r(674038)(e.i),
          "../icons/exchanges/ExchangeBitstamp.tsx": () => e.r(541191)(e.i),
          "../icons/exchanges/ExchangeBtcturk.tsx": () => e.r(550230)(e.i),
          "../icons/exchanges/ExchangeBybit.tsx": () => e.r(884091)(e.i),
          "../icons/exchanges/ExchangeCoinbase.tsx": () => e.r(455444)(e.i),
          "../icons/exchanges/ExchangeCowswap.tsx": () => e.r(346688)(e.i),
          "../icons/exchanges/ExchangeCryptoCom.tsx": () => e.r(545068)(e.i),
          "../icons/exchanges/ExchangeGateIo.tsx": () => e.r(655785)(e.i),
          "../icons/exchanges/ExchangeGemini.tsx": () => e.r(987827)(e.i),
          "../icons/exchanges/ExchangeKraken.tsx": () => e.r(179)(e.i),
          "../icons/exchanges/ExchangeKucoin.tsx": () => e.r(477167)(e.i),
          "../icons/exchanges/ExchangeOdos.tsx": () => e.r(652383)(e.i),
          "../icons/exchanges/ExchangeOkx.tsx": () => e.r(554410)(e.i),
          "../icons/exchanges/ExchangePancakeSwap.tsx": () => e.r(425261)(e.i),
          "../icons/exchanges/ExchangeParaSwap.tsx": () => e.r(96497)(e.i),
          "../icons/exchanges/ExchangeParadex.tsx": () => e.r(691533)(e.i),
          "../icons/exchanges/ExchangeParibu.tsx": () => e.r(362424)(e.i),
          "../icons/exchanges/ExchangeSushiswap.tsx": () => e.r(113998)(e.i),
          "../icons/exchanges/ExchangeSwissborg.tsx": () => e.r(360409)(e.i),
          "../icons/exchanges/ExchangeUniswap.tsx": () => e.r(659043)(e.i),
          "../icons/exchanges/ExchangeUpbit.tsx": () => e.r(97922)(e.i),
          "../icons/networks/NetworkAbstract.tsx": () => e.r(342196)(e.i),
          "../icons/networks/NetworkAcala.tsx": () => e.r(431730)(e.i),
          "../icons/networks/NetworkAlgorand.tsx": () => e.r(44020)(e.i),
          "../icons/networks/NetworkApechain.tsx": () => e.r(904066)(e.i),
          "../icons/networks/NetworkApexLayer.tsx": () => e.r(962805)(e.i),
          "../icons/networks/NetworkAptos.tsx": () => e.r(114161)(e.i),
          "../icons/networks/NetworkArbitrumNova.tsx": () => e.r(313960)(e.i),
          "../icons/networks/NetworkArbitrumOne.tsx": () => e.r(201066)(e.i),
          "../icons/networks/NetworkArweave.tsx": () => e.r(238983)(e.i),
          "../icons/networks/NetworkAstar.tsx": () => e.r(834684)(e.i),
          "../icons/networks/NetworkAurora.tsx": () => e.r(815363)(e.i),
          "../icons/networks/NetworkAutonomys.tsx": () => e.r(512854)(e.i),
          "../icons/networks/NetworkAvalanche.tsx": () => e.r(84185)(e.i),
          "../icons/networks/NetworkBase.tsx": () => e.r(174053)(e.i),
          "../icons/networks/NetworkBeam.tsx": () => e.r(32363)(e.i),
          "../icons/networks/NetworkBerachain.tsx": () => e.r(11097)(e.i),
          "../icons/networks/NetworkBinanceSmartChain.tsx": () =>
            e.r(208120)(e.i),
          "../icons/networks/NetworkBitcoin.tsx": () => e.r(237968)(e.i),
          "../icons/networks/NetworkBitkubChain.tsx": () => e.r(363001)(e.i),
          "../icons/networks/NetworkBlast.tsx": () => e.r(635376)(e.i),
          "../icons/networks/NetworkBob.tsx": () => e.r(680572)(e.i),
          "../icons/networks/NetworkBoba.tsx": () => e.r(40342)(e.i),
          "../icons/networks/NetworkBotanix.tsx": () => e.r(277822)(e.i),
          "../icons/networks/NetworkBouncebit.tsx": () => e.r(673954)(e.i),
          "../icons/networks/NetworkCardano.tsx": () => e.r(842595)(e.i),
          "../icons/networks/NetworkCelo.tsx": () => e.r(673852)(e.i),
          "../icons/networks/NetworkChiliz.tsx": () => e.r(229077)(e.i),
          "../icons/networks/NetworkClover.tsx": () => e.r(863456)(e.i),
          "../icons/networks/NetworkCoinexSmartChain.tsx": () =>
            e.r(300017)(e.i),
          "../icons/networks/NetworkConflux.tsx": () => e.r(785384)(e.i),
          "../icons/networks/NetworkCorn.tsx": () => e.r(542310)(e.i),
          "../icons/networks/NetworkCosmos.tsx": () => e.r(644897)(e.i),
          "../icons/networks/NetworkCosmosHub.tsx": () => e.r(605816)(e.i),
          "../icons/networks/NetworkCronos.tsx": () => e.r(260596)(e.i),
          "../icons/networks/NetworkCronosZkevm.tsx": () => e.r(285553)(e.i),
          "../icons/networks/NetworkDiode.tsx": () => e.r(318141)(e.i),
          "../icons/networks/NetworkDogechain.tsx": () => e.r(804994)(e.i),
          "../icons/networks/NetworkEdgeless.tsx": () => e.r(791808)(e.i),
          "../icons/networks/NetworkElastos.tsx": () => e.r(716314)(e.i),
          "../icons/networks/NetworkEnergyWeb.tsx": () => e.r(49863)(e.i),
          "../icons/networks/NetworkEnuls.tsx": () => e.r(961145)(e.i),
          "../icons/networks/NetworkEos.tsx": () => e.r(282866)(e.i),
          "../icons/networks/NetworkEthereum.tsx": () => e.r(667872)(e.i),
          "../icons/networks/NetworkEthereumClassic.tsx": () =>
            e.r(872616)(e.i),
          "../icons/networks/NetworkEtherlink.tsx": () => e.r(699900)(e.i),
          "../icons/networks/NetworkExpchain.tsx": () => e.r(693383)(e.i),
          "../icons/networks/NetworkFantom.tsx": () => e.r(884539)(e.i),
          "../icons/networks/NetworkFilecoin.tsx": () => e.r(453308)(e.i),
          "../icons/networks/NetworkFio.tsx": () => e.r(848088)(e.i),
          "../icons/networks/NetworkFlare.tsx": () => e.r(816099)(e.i),
          "../icons/networks/NetworkFluence.tsx": () => e.r(241660)(e.i),
          "../icons/networks/NetworkFraxtal.tsx": () => e.r(608963)(e.i),
          "../icons/networks/NetworkFuse.tsx": () => e.r(729300)(e.i),
          "../icons/networks/NetworkGnosis.tsx": () => e.r(332049)(e.i),
          "../icons/networks/NetworkGravity.tsx": () => e.r(873945)(e.i),
          "../icons/networks/NetworkHarmony.tsx": () => e.r(659746)(e.i),
          "../icons/networks/NetworkHashkey.tsx": () => e.r(446591)(e.i),
          "../icons/networks/NetworkHederaHashgraph.tsx": () =>
            e.r(628271)(e.i),
          "../icons/networks/NetworkHemi.tsx": () => e.r(261752)(e.i),
          "../icons/networks/NetworkHubbleExchange.tsx": () => e.r(936845)(e.i),
          "../icons/networks/NetworkImmutable.tsx": () => e.r(500031)(e.i),
          "../icons/networks/NetworkInjective.tsx": () => e.r(524649)(e.i),
          "../icons/networks/NetworkInk.tsx": () => e.r(688483)(e.i),
          "../icons/networks/NetworkIotaEvm.tsx": () => e.r(474392)(e.i),
          "../icons/networks/NetworkIotex.tsx": () => e.r(663215)(e.i),
          "../icons/networks/NetworkJapanOpenChain.tsx": () => e.r(765871)(e.i),
          "../icons/networks/NetworkJuno.tsx": () => e.r(872773)(e.i),
          "../icons/networks/NetworkKaia.tsx": () => e.r(322054)(e.i),
          "../icons/networks/NetworkKakarot.tsx": () => e.r(23625)(e.i),
          "../icons/networks/NetworkKardia.tsx": () => e.r(865873)(e.i),
          "../icons/networks/NetworkKarura.tsx": () => e.r(25073)(e.i),
          "../icons/networks/NetworkKatana.tsx": () => e.r(735025)(e.i),
          "../icons/networks/NetworkKava.tsx": () => e.r(872851)(e.i),
          "../icons/networks/NetworkKroma.tsx": () => e.r(286491)(e.i),
          "../icons/networks/NetworkKucoin.tsx": () => e.r(228276)(e.i),
          "../icons/networks/NetworkKujira.tsx": () => e.r(118678)(e.i),
          "../icons/networks/NetworkL3x.tsx": () => e.r(374270)(e.i),
          "../icons/networks/NetworkLavaNetwork.tsx": () => e.r(542265)(e.i),
          "../icons/networks/NetworkLens.tsx": () => e.r(367067)(e.i),
          "../icons/networks/NetworkLightlink.tsx": () => e.r(279888)(e.i),
          "../icons/networks/NetworkLinea.tsx": () => e.r(82188)(e.i),
          "../icons/networks/NetworkLisk.tsx": () => e.r(471118)(e.i),
          "../icons/networks/NetworkLitecoin.tsx": () => e.r(891673)(e.i),
          "../icons/networks/NetworkLoopring.tsx": () => e.r(815626)(e.i),
          "../icons/networks/NetworkLukso.tsx": () => e.r(166715)(e.i),
          "../icons/networks/NetworkLumia.tsx": () => e.r(864201)(e.i),
          "../icons/networks/NetworkLumio.tsx": () => e.r(482296)(e.i),
          "../icons/networks/NetworkLycan.tsx": () => e.r(427243)(e.i),
          "../icons/networks/NetworkLyra.tsx": () => e.r(978747)(e.i),
          "../icons/networks/NetworkMantaPacific.tsx": () => e.r(49053)(e.i),
          "../icons/networks/NetworkMantle.tsx": () => e.r(793597)(e.i),
          "../icons/networks/NetworkMantra.tsx": () => e.r(389173)(e.i),
          "../icons/networks/NetworkMegaEth.tsx": () => e.r(752874)(e.i),
          "../icons/networks/NetworkMeter.tsx": () => e.r(651113)(e.i),
          "../icons/networks/NetworkMetisAndromeda.tsx": () => e.r(605363)(e.i),
          "../icons/networks/NetworkMilkomedaA1.tsx": () => e.r(232195)(e.i),
          "../icons/networks/NetworkMilkomedaC1.tsx": () => e.r(350154)(e.i),
          "../icons/networks/NetworkMint.tsx": () => e.r(714535)(e.i),
          "../icons/networks/NetworkMode.tsx": () => e.r(833018)(e.i),
          "../icons/networks/NetworkMonad.tsx": () => e.r(342906)(e.i),
          "../icons/networks/NetworkMoonbase.tsx": () => e.r(895145)(e.i),
          "../icons/networks/NetworkMoonbaseAlpha.tsx": () => e.r(551574)(e.i),
          "../icons/networks/NetworkMoonbeam.tsx": () => e.r(224137)(e.i),
          "../icons/networks/NetworkMoonriver.tsx": () => e.r(765430)(e.i),
          "../icons/networks/NetworkMultiversx.tsx": () => e.r(617711)(e.i),
          "../icons/networks/NetworkNahmii.tsx": () => e.r(609167)(e.i),
          "../icons/networks/NetworkNearProtocol.tsx": () => e.r(187378)(e.i),
          "../icons/networks/NetworkNeoX.tsx": () => e.r(791702)(e.i),
          "../icons/networks/NetworkNeonEvm.tsx": () => e.r(327796)(e.i),
          "../icons/networks/NetworkNexis.tsx": () => e.r(66121)(e.i),
          "../icons/networks/NetworkNibiru.tsx": () => e.r(958205)(e.i),
          "../icons/networks/NetworkOasys.tsx": () => e.r(862328)(e.i),
          "../icons/networks/NetworkOkex.tsx": () => e.r(301406)(e.i),
          "../icons/networks/NetworkOntology.tsx": () => e.r(176321)(e.i),
          "../icons/networks/NetworkOptimism.tsx": () => e.r(7610)(e.i),
          "../icons/networks/NetworkOptopia.tsx": () => e.r(370646)(e.i),
          "../icons/networks/NetworkOrderly.tsx": () => e.r(911892)(e.i),
          "../icons/networks/NetworkOsmosis.tsx": () => e.r(865791)(e.i),
          "../icons/networks/NetworkOzean.tsx": () => e.r(633706)(e.i),
          "../icons/networks/NetworkParadex.tsx": () => e.r(930251)(e.i),
          "../icons/networks/NetworkPeaq.tsx": () => e.r(615759)(e.i),
          "../icons/networks/NetworkPolkadot.tsx": () => e.r(732335)(e.i),
          "../icons/networks/NetworkPolygon.tsx": () => e.r(809997)(e.i),
          "../icons/networks/NetworkPolygonZkevm.tsx": () => e.r(62777)(e.i),
          "../icons/networks/NetworkProm.tsx": () => e.r(561977)(e.i),
          "../icons/networks/NetworkPush.tsx": () => e.r(466215)(e.i),
          "../icons/networks/NetworkRari.tsx": () => e.r(460918)(e.i),
          "../icons/networks/NetworkRei.tsx": () => e.r(301435)(e.i),
          "../icons/networks/NetworkReya.tsx": () => e.r(803318)(e.i),
          "../icons/networks/NetworkRollux.tsx": () => e.r(968207)(e.i),
          "../icons/networks/NetworkRonin.tsx": () => e.r(444413)(e.i),
          "../icons/networks/NetworkRootstock.tsx": () => e.r(499731)(e.i),
          "../icons/networks/NetworkScroll.tsx": () => e.r(927089)(e.i),
          "../icons/networks/NetworkSeiNetwork.tsx": () => e.r(404222)(e.i),
          "../icons/networks/NetworkShiden.tsx": () => e.r(112717)(e.i),
          "../icons/networks/NetworkShimmerEvm.tsx": () => e.r(624854)(e.i),
          "../icons/networks/NetworkSilicon.tsx": () => e.r(116955)(e.i),
          "../icons/networks/NetworkSolana.tsx": () => e.r(396338)(e.i),
          "../icons/networks/NetworkSoneium.tsx": () => e.r(264116)(e.i),
          "../icons/networks/NetworkSongbird.tsx": () => e.r(248619)(e.i),
          "../icons/networks/NetworkSonic.tsx": () => e.r(842809)(e.i),
          "../icons/networks/NetworkStargaze.tsx": () => e.r(782822)(e.i),
          "../icons/networks/NetworkStarknet.tsx": () => e.r(488447)(e.i),
          "../icons/networks/NetworkStatus.tsx": () => e.r(960438)(e.i),
          "../icons/networks/NetworkStellar.tsx": () => e.r(195919)(e.i),
          "../icons/networks/NetworkStep.tsx": () => e.r(959799)(e.i),
          "../icons/networks/NetworkSui.tsx": () => e.r(467950)(e.i),
          "../icons/networks/NetworkSuperSeed.tsx": () => e.r(5573)(e.i),
          "../icons/networks/NetworkSwell.tsx": () => e.r(845161)(e.i),
          "../icons/networks/NetworkSys.tsx": () => e.r(786053)(e.i),
          "../icons/networks/NetworkTaiko.tsx": () => e.r(193052)(e.i),
          "../icons/networks/NetworkTelos.tsx": () => e.r(409838)(e.i),
          "../icons/networks/NetworkTenet.tsx": () => e.r(26994)(e.i),
          "../icons/networks/NetworkTheta.tsx": () => e.r(925923)(e.i),
          "../icons/networks/NetworkThundercore.tsx": () => e.r(586122)(e.i),
          "../icons/networks/NetworkTombchain.tsx": () => e.r(468755)(e.i),
          "../icons/networks/NetworkTreasure.tsx": () => e.r(58614)(e.i),
          "../icons/networks/NetworkTron.tsx": () => e.r(954440)(e.i),
          "../icons/networks/NetworkUbiq.tsx": () => e.r(231375)(e.i),
          "../icons/networks/NetworkUltra.tsx": () => e.r(784904)(e.i),
          "../icons/networks/NetworkUltron.tsx": () => e.r(45473)(e.i),
          "../icons/networks/NetworkUnichain.tsx": () => e.r(901951)(e.i),
          "../icons/networks/NetworkVana.tsx": () => e.r(238972)(e.i),
          "../icons/networks/NetworkVanar.tsx": () => e.r(739412)(e.i),
          "../icons/networks/NetworkVara.tsx": () => e.r(590578)(e.i),
          "../icons/networks/NetworkVelas.tsx": () => e.r(868310)(e.i),
          "../icons/networks/NetworkViction.tsx": () => e.r(338538)(e.i),
          "../icons/networks/NetworkWax.tsx": () => e.r(663604)(e.i),
          "../icons/networks/NetworkWemix.tsx": () => e.r(825484)(e.i),
          "../icons/networks/NetworkWorld.tsx": () => e.r(812411)(e.i),
          "../icons/networks/NetworkXLayer.tsx": () => e.r(298607)(e.i),
          "../icons/networks/NetworkXai.tsx": () => e.r(978658)(e.i),
          "../icons/networks/NetworkXdc.tsx": () => e.r(221142)(e.i),
          "../icons/networks/NetworkXrp.tsx": () => e.r(971682)(e.i),
          "../icons/networks/NetworkZeroNetwork.tsx": () => e.r(840518)(e.i),
          "../icons/networks/NetworkZetaChain.tsx": () => e.r(71729)(e.i),
          "../icons/networks/NetworkZilliqa.tsx": () => e.r(736287)(e.i),
          "../icons/networks/NetworkZircuit.tsx": () => e.r(490601)(e.i),
          "../icons/networks/NetworkZksync.tsx": () => e.r(282415)(e.i),
          "../icons/networks/NetworkZora.tsx": () => e.r(43460)(e.i),
          "../icons/networks/NetworkZyx.tsx": () => e.r(40501)(e.i),
          "../icons/tokens/Token0X0.tsx": () => e.r(124876)(e.i),
          "../icons/tokens/Token0XGAS.tsx": () => e.r(95597)(e.i),
          "../icons/tokens/Token10SET.tsx": () => e.r(289467)(e.i),
          "../icons/tokens/Token1ART.tsx": () => e.r(624714)(e.i),
          "../icons/tokens/Token1INCH.tsx": () => e.r(687862)(e.i),
          "../icons/tokens/Token2DAI.tsx": () => e.r(231960)(e.i),
          "../icons/tokens/Token3ULL.tsx": () => e.r(931650)(e.i),
          "../icons/tokens/TokenAA.tsx": () => e.r(975469)(e.i),
          "../icons/tokens/TokenAAG.tsx": () => e.r(306520)(e.i),
          "../icons/tokens/TokenAART.tsx": () => e.r(835481)(e.i),
          "../icons/tokens/TokenAAVE.tsx": () => e.r(964851)(e.i),
          "../icons/tokens/TokenABL.tsx": () => e.r(1643)(e.i),
          "../icons/tokens/TokenABR.tsx": () => e.r(353494)(e.i),
          "../icons/tokens/TokenABT.tsx": () => e.r(986259)(e.i),
          "../icons/tokens/TokenABYSS.tsx": () => e.r(236377)(e.i),
          "../icons/tokens/TokenACH.tsx": () => e.r(693802)(e.i),
          "../icons/tokens/TokenACQ.tsx": () => e.r(800736)(e.i),
          "../icons/tokens/TokenACRIA.tsx": () => e.r(158325)(e.i),
          "../icons/tokens/TokenACS.tsx": () => e.r(1970)(e.i),
          "../icons/tokens/TokenACT.tsx": () => e.r(46136)(e.i),
          "../icons/tokens/TokenACX.tsx": () => e.r(254521)(e.i),
          "../icons/tokens/TokenADA.tsx": () => e.r(963581)(e.i),
          "../icons/tokens/TokenADAPAD.tsx": () => e.r(542433)(e.i),
          "../icons/tokens/TokenAGIX.tsx": () => e.r(496837)(e.i),
          "../icons/tokens/TokenAGLA.tsx": () => e.r(688992)(e.i),
          "../icons/tokens/TokenAGRS.tsx": () => e.r(988569)(e.i),
          "../icons/tokens/TokenAHT.tsx": () => e.r(174124)(e.i),
          "../icons/tokens/TokenAI.tsx": () => e.r(117857)(e.i),
          "../icons/tokens/TokenAIMBOT.tsx": () => e.r(618425)(e.i),
          "../icons/tokens/TokenAIMX.tsx": () => e.r(927585)(e.i),
          "../icons/tokens/TokenAIN.tsx": () => e.r(599116)(e.i),
          "../icons/tokens/TokenAIOZ.tsx": () => e.r(387743)(e.i),
          "../icons/tokens/TokenAIPAD.tsx": () => e.r(180507)(e.i),
          "../icons/tokens/TokenAIR.tsx": () => e.r(121491)(e.i),
          "../icons/tokens/TokenAIRI.tsx": () => e.r(381835)(e.i),
          "../icons/tokens/TokenAIS.tsx": () => e.r(453236)(e.i),
          "../icons/tokens/TokenAIT.tsx": () => e.r(589387)(e.i),
          "../icons/tokens/TokenAITECH.tsx": () => e.r(579429)(e.i),
          "../icons/tokens/TokenAKT.tsx": () => e.r(256326)(e.i),
          "../icons/tokens/TokenALCX.tsx": () => e.r(100243)(e.i),
          "../icons/tokens/TokenALEPH.tsx": () => e.r(341277)(e.i),
          "../icons/tokens/TokenALEX.tsx": () => e.r(90367)(e.i),
          "../icons/tokens/TokenALGB.tsx": () => e.r(30473)(e.i),
          "../icons/tokens/TokenALGO.tsx": () => e.r(451408)(e.i),
          "../icons/tokens/TokenALI.tsx": () => e.r(967399)(e.i),
          "../icons/tokens/TokenALICE.tsx": () => e.r(600735)(e.i),
          "../icons/tokens/TokenALLIN.tsx": () => e.r(503456)(e.i),
          "../icons/tokens/TokenALOT.tsx": () => e.r(916525)(e.i),
          "../icons/tokens/TokenALPACA.tsx": () => e.r(664308)(e.i),
          "../icons/tokens/TokenALPH.tsx": () => e.r(919807)(e.i),
          "../icons/tokens/TokenANT.tsx": () => e.r(298097)(e.i),
          "../icons/tokens/TokenAPE.tsx": () => e.r(460018)(e.i),
          "../icons/tokens/TokenAPEFI.tsx": () => e.r(230292)(e.i),
          "../icons/tokens/TokenAPEX.tsx": () => e.r(895565)(e.i),
          "../icons/tokens/TokenAPFC.tsx": () => e.r(914982)(e.i),
          "../icons/tokens/TokenAPL.tsx": () => e.r(466177)(e.i),
          "../icons/tokens/TokenAPM.tsx": () => e.r(596790)(e.i),
          "../icons/tokens/TokenAPOLLO.tsx": () => e.r(683138)(e.i),
          "../icons/tokens/TokenAPT.tsx": () => e.r(338247)(e.i),
          "../icons/tokens/TokenAPW.tsx": () => e.r(39795)(e.i),
          "../icons/tokens/TokenAPX.tsx": () => e.r(610087)(e.i),
          "../icons/tokens/TokenAQT.tsx": () => e.r(122533)(e.i),
          "../icons/tokens/TokenAQTIS.tsx": () => e.r(910048)(e.i),
          "../icons/tokens/TokenAQUA.tsx": () => e.r(762432)(e.i),
          "../icons/tokens/TokenAR.tsx": () => e.r(261869)(e.i),
          "../icons/tokens/TokenARB.tsx": () => e.r(800376)(e.i),
          "../icons/tokens/TokenARC.tsx": () => e.r(411365)(e.i),
          "../icons/tokens/TokenARCH.tsx": () => e.r(679936)(e.i),
          "../icons/tokens/TokenARDR.tsx": () => e.r(204496)(e.i),
          "../icons/tokens/TokenAREA.tsx": () => e.r(269240)(e.i),
          "../icons/tokens/TokenARI.tsx": () => e.r(636043)(e.i),
          "../icons/tokens/TokenARI10.tsx": () => e.r(641426)(e.i),
          "../icons/tokens/TokenARIA20.tsx": () => e.r(259846)(e.i),
          "../icons/tokens/TokenARIX.tsx": () => e.r(575281)(e.i),
          "../icons/tokens/TokenARK.tsx": () => e.r(122973)(e.i),
          "../icons/tokens/TokenARKM.tsx": () => e.r(854864)(e.i),
          "../icons/tokens/TokenARPA.tsx": () => e.r(453076)(e.i),
          "../icons/tokens/TokenARRR.tsx": () => e.r(325993)(e.i),
          "../icons/tokens/TokenARSW.tsx": () => e.r(776055)(e.i),
          "../icons/tokens/TokenATA.tsx": () => e.r(854478)(e.i),
          "../icons/tokens/TokenATD.tsx": () => e.r(888608)(e.i),
          "../icons/tokens/TokenATH.tsx": () => e.r(802694)(e.i),
          "../icons/tokens/TokenATLAS.tsx": () => e.r(287093)(e.i),
          "../icons/tokens/TokenATM.tsx": () => e.r(478641)(e.i),
          "../icons/tokens/TokenATOM.tsx": () => e.r(88171)(e.i),
          "../icons/tokens/TokenATOR.tsx": () => e.r(793355)(e.i),
          "../icons/tokens/TokenATPAY.tsx": () => e.r(581345)(e.i),
          "../icons/tokens/TokenATR.tsx": () => e.r(661899)(e.i),
          "../icons/tokens/TokenATRI.tsx": () => e.r(769893)(e.i),
          "../icons/tokens/TokenAUCTION.tsx": () => e.r(452735)(e.i),
          "../icons/tokens/TokenAUDIO.tsx": () => e.r(472326)(e.i),
          "../icons/tokens/TokenAURA.tsx": () => e.r(964027)(e.i),
          "../icons/tokens/TokenAURABAL.tsx": () => e.r(249849)(e.i),
          "../icons/tokens/TokenAURORA.tsx": () => e.r(811564)(e.i),
          "../icons/tokens/TokenAURY.tsx": () => e.r(368980)(e.i),
          "../icons/tokens/TokenAUTO.tsx": () => e.r(821168)(e.i),
          "../icons/tokens/TokenAVA.tsx": () => e.r(2290)(e.i),
          "../icons/tokens/TokenAVAX.tsx": () => e.r(317502)(e.i),
          "../icons/tokens/TokenAVG.tsx": () => e.r(689145)(e.i),
          "../icons/tokens/TokenAVI.tsx": () => e.r(533899)(e.i),
          "../icons/tokens/TokenAVINOC.tsx": () => e.r(243790)(e.i),
          "../icons/tokens/TokenAVL.tsx": () => e.r(58464)(e.i),
          "../icons/tokens/TokenAVT.tsx": () => e.r(441719)(e.i),
          "../icons/tokens/TokenAXE.tsx": () => e.r(195698)(e.i),
          "../icons/tokens/TokenAXEL.tsx": () => e.r(367257)(e.i),
          "../icons/tokens/TokenAXL.tsx": () => e.r(492323)(e.i),
          "../icons/tokens/TokenAXS.tsx": () => e.r(954608)(e.i),
          "../icons/tokens/TokenAZERO.tsx": () => e.r(669107)(e.i),
          "../icons/tokens/TokenAZIT.tsx": () => e.r(841049)(e.i),
          "../icons/tokens/TokenBAT.tsx": () => e.r(212545)(e.i),
          "../icons/tokens/TokenBAX.tsx": () => e.r(19872)(e.i),
          "../icons/tokens/TokenBBANK.tsx": () => e.r(908884)(e.i),
          "../icons/tokens/TokenBBL.tsx": () => e.r(9569)(e.i),
          "../icons/tokens/TokenBCAT.tsx": () => e.r(379217)(e.i),
          "../icons/tokens/TokenBCB.tsx": () => e.r(320426)(e.i),
          "../icons/tokens/TokenBCD.tsx": () => e.r(244823)(e.i),
          "../icons/tokens/TokenBCDT.tsx": () => e.r(901778)(e.i),
          "../icons/tokens/TokenBCH.tsx": () => e.r(618748)(e.i),
          "../icons/tokens/TokenBCMC.tsx": () => e.r(427820)(e.i),
          "../icons/tokens/TokenBCN.tsx": () => e.r(209303)(e.i),
          "../icons/tokens/TokenBCOIN.tsx": () => e.r(810773)(e.i),
          "../icons/tokens/TokenBCT.tsx": () => e.r(361057)(e.i),
          "../icons/tokens/TokenBCUBE.tsx": () => e.r(18133)(e.i),
          "../icons/tokens/TokenBDP.tsx": () => e.r(686951)(e.i),
          "../icons/tokens/TokenBDT.tsx": () => e.r(325318)(e.i),
          "../icons/tokens/TokenBDX.tsx": () => e.r(301097)(e.i),
          "../icons/tokens/TokenBEAM.tsx": () => e.r(36691)(e.i),
          "../icons/tokens/TokenBEAN.tsx": () => e.r(133562)(e.i),
          "../icons/tokens/TokenBEETS.tsx": () => e.r(532350)(e.i),
          "../icons/tokens/TokenBEL.tsx": () => e.r(931168)(e.i),
          "../icons/tokens/TokenBELT.tsx": () => e.r(796225)(e.i),
          "../icons/tokens/TokenBEN.tsx": () => e.r(1748)(e.i),
          "../icons/tokens/TokenBEND.tsx": () => e.r(728885)(e.i),
          "../icons/tokens/TokenBEPRO.tsx": () => e.r(12261)(e.i),
          "../icons/tokens/TokenBERRY.tsx": () => e.r(212676)(e.i),
          "../icons/tokens/TokenBETA.tsx": () => e.r(146753)(e.i),
          "../icons/tokens/TokenBIST.tsx": () => e.r(415944)(e.i),
          "../icons/tokens/TokenBIT.tsx": () => e.r(831552)(e.i),
          "../icons/tokens/TokenBITCI.tsx": () => e.r(109523)(e.i),
          "../icons/tokens/TokenBKN.tsx": () => e.r(724598)(e.i),
          "../icons/tokens/TokenBLANK.tsx": () => e.r(232096)(e.i),
          "../icons/tokens/TokenBLAST.tsx": () => e.r(631022)(e.i),
          "../icons/tokens/TokenBLD.tsx": () => e.r(493275)(e.i),
          "../icons/tokens/TokenBLID.tsx": () => e.r(20498)(e.i),
          "../icons/tokens/TokenBLOCK.tsx": () => e.r(306452)(e.i),
          "../icons/tokens/TokenBLOX.tsx": () => e.r(149037)(e.i),
          "../icons/tokens/TokenBLP.tsx": () => e.r(62254)(e.i),
          "../icons/tokens/TokenBLT.tsx": () => e.r(273316)(e.i),
          "../icons/tokens/TokenBLUESPARROW.tsx": () => e.r(200968)(e.i),
          "../icons/tokens/TokenBLUR.tsx": () => e.r(638733)(e.i),
          "../icons/tokens/TokenBLUSD.tsx": () => e.r(265177)(e.i),
          "../icons/tokens/TokenBLX.tsx": () => e.r(233760)(e.i),
          "../icons/tokens/TokenBLXM.tsx": () => e.r(876523)(e.i),
          "../icons/tokens/TokenBLZ.tsx": () => e.r(492916)(e.i),
          "../icons/tokens/TokenBMC.tsx": () => e.r(244953)(e.i),
          "../icons/tokens/TokenBMEX.tsx": () => e.r(62143)(e.i),
          "../icons/tokens/TokenBMX.tsx": () => e.r(509455)(e.i),
          "../icons/tokens/TokenBNB.tsx": () => e.r(248164)(e.i),
          "../icons/tokens/TokenBNT.tsx": () => e.r(866330)(e.i),
          "../icons/tokens/TokenBNX.tsx": () => e.r(346650)(e.i),
          "../icons/tokens/TokenBOA.tsx": () => e.r(623585)(e.i),
          "../icons/tokens/TokenBOB.tsx": () => e.r(139363)(e.i),
          "../icons/tokens/TokenBOBA.tsx": () => e.r(528655)(e.i),
          "../icons/tokens/TokenBOLT.tsx": () => e.r(949238)(e.i),
          "../icons/tokens/TokenBOND.tsx": () => e.r(27487)(e.i),
          "../icons/tokens/TokenBRG.tsx": () => e.r(544877)(e.i),
          "../icons/tokens/TokenBRICK.tsx": () => e.r(37239)(e.i),
          "../icons/tokens/TokenBRIDGE.tsx": () => e.r(98579)(e.i),
          "../icons/tokens/TokenBRISE.tsx": () => e.r(87698)(e.i),
          "../icons/tokens/TokenBRN.tsx": () => e.r(134167)(e.i),
          "../icons/tokens/TokenBROCK.tsx": () => e.r(997879)(e.i),
          "../icons/tokens/TokenBRRR.tsx": () => e.r(65981)(e.i),
          "../icons/tokens/TokenBRUSH.tsx": () => e.r(199030)(e.i),
          "../icons/tokens/TokenBRWL.tsx": () => e.r(935487)(e.i),
          "../icons/tokens/TokenBS.tsx": () => e.r(748374)(e.i),
          "../icons/tokens/TokenBSCPAD.tsx": () => e.r(509862)(e.i),
          "../icons/tokens/TokenBSCS.tsx": () => e.r(317364)(e.i),
          "../icons/tokens/TokenBSGG.tsx": () => e.r(715965)(e.i),
          "../icons/tokens/TokenBST.tsx": () => e.r(488385)(e.i),
          "../icons/tokens/TokenBSV.tsx": () => e.r(591688)(e.i),
          "../icons/tokens/TokenBSW.tsx": () => e.r(650774)(e.i),
          "../icons/tokens/TokenBSX.tsx": () => e.r(399595)(e.i),
          "../icons/tokens/TokenBTA.tsx": () => e.r(903671)(e.i),
          "../icons/tokens/TokenBTC.tsx": () => e.r(234832)(e.i),
          "../icons/tokens/TokenBTC2.tsx": () => e.r(261856)(e.i),
          "../icons/tokens/TokenBTCMT.tsx": () => e.r(74063)(e.i),
          "../icons/tokens/TokenBTCP.tsx": () => e.r(515761)(e.i),
          "../icons/tokens/TokenBTCST.tsx": () => e.r(498822)(e.i),
          "../icons/tokens/TokenBTG.tsx": () => e.r(970523)(e.i),
          "../icons/tokens/TokenBTM.tsx": () => e.r(709365)(e.i),
          "../icons/tokens/TokenBTRFLY.tsx": () => e.r(444116)(e.i),
          "../icons/tokens/TokenBTS.tsx": () => e.r(813191)(e.i),
          "../icons/tokens/TokenBTSE.tsx": () => e.r(99096)(e.i),
          "../icons/tokens/TokenBZR.tsx": () => e.r(114741)(e.i),
          "../icons/tokens/TokenBZRX.tsx": () => e.r(518823)(e.i),
          "../icons/tokens/TokenBZZ.tsx": () => e.r(182850)(e.i),
          "../icons/tokens/TokenC3.tsx": () => e.r(454905)(e.i),
          "../icons/tokens/TokenC98.tsx": () => e.r(3670)(e.i),
          "../icons/tokens/TokenCAH.tsx": () => e.r(844667)(e.i),
          "../icons/tokens/TokenCAKE.tsx": () => e.r(939869)(e.i),
          "../icons/tokens/TokenCANTO.tsx": () => e.r(85129)(e.i),
          "../icons/tokens/TokenCAP.tsx": () => e.r(164061)(e.i),
          "../icons/tokens/TokenCAPS.tsx": () => e.r(106956)(e.i),
          "../icons/tokens/TokenCARAT.tsx": () => e.r(634019)(e.i),
          "../icons/tokens/TokenCARBON.tsx": () => e.r(166779)(e.i),
          "../icons/tokens/TokenCARD.tsx": () => e.r(700577)(e.i),
          "../icons/tokens/TokenCAS.tsx": () => e.r(145826)(e.i),
          "../icons/tokens/TokenCAST.tsx": () => e.r(904870)(e.i),
          "../icons/tokens/TokenCAT.tsx": () => e.r(692152)(e.i),
          "../icons/tokens/TokenCATGIRL.tsx": () => e.r(173997)(e.i),
          "../icons/tokens/TokenCATHEON.tsx": () => e.r(895644)(e.i),
          "../icons/tokens/TokenCAW.tsx": () => e.r(191894)(e.i),
          "../icons/tokens/TokenCBETH.tsx": () => e.r(91125)(e.i),
          "../icons/tokens/TokenCBX.tsx": () => e.r(195440)(e.i),
          "../icons/tokens/TokenCBY.tsx": () => e.r(635477)(e.i),
          "../icons/tokens/TokenCCD.tsx": () => e.r(309076)(e.i),
          "../icons/tokens/TokenCCT.tsx": () => e.r(810637)(e.i),
          "../icons/tokens/TokenCCV2.tsx": () => e.r(718616)(e.i),
          "../icons/tokens/TokenCDAI.tsx": () => e.r(454379)(e.i),
          "../icons/tokens/TokenCDT.tsx": () => e.r(214681)(e.i),
          "../icons/tokens/TokenCEEK.tsx": () => e.r(287531)(e.i),
          "../icons/tokens/TokenCEL.tsx": () => e.r(903058)(e.i),
          "../icons/tokens/TokenCELL.tsx": () => e.r(957966)(e.i),
          "../icons/tokens/TokenCELO.tsx": () => e.r(260319)(e.i),
          "../icons/tokens/TokenCELR.tsx": () => e.r(821509)(e.i),
          "../icons/tokens/TokenCERE.tsx": () => e.r(691082)(e.i),
          "../icons/tokens/TokenCETUS.tsx": () => e.r(715622)(e.i),
          "../icons/tokens/TokenCEUR.tsx": () => e.r(946436)(e.i),
          "../icons/tokens/TokenCFG.tsx": () => e.r(306604)(e.i),
          "../icons/tokens/TokenCFX.tsx": () => e.r(688415)(e.i),
          "../icons/tokens/TokenCGG.tsx": () => e.r(505425)(e.i),
          "../icons/tokens/TokenCGL.tsx": () => e.r(677673)(e.i),
          "../icons/tokens/TokenCGO.tsx": () => e.r(958588)(e.i),
          "../icons/tokens/TokenCGPT.tsx": () => e.r(302254)(e.i),
          "../icons/tokens/TokenCGT.tsx": () => e.r(134690)(e.i),
          "../icons/tokens/TokenCHAIN.tsx": () => e.r(329660)(e.i),
          "../icons/tokens/TokenCHAMPZ.tsx": () => e.r(613591)(e.i),
          "../icons/tokens/TokenCHAT.tsx": () => e.r(771018)(e.i),
          "../icons/tokens/TokenCHEEMS.tsx": () => e.r(948272)(e.i),
          "../icons/tokens/TokenCHEQ.tsx": () => e.r(307608)(e.i),
          "../icons/tokens/TokenCHMB.tsx": () => e.r(966482)(e.i),
          "../icons/tokens/TokenCHO.tsx": () => e.r(157598)(e.i),
          "../icons/tokens/TokenCHR.tsx": () => e.r(337184)(e.i),
          "../icons/tokens/TokenCHRP.tsx": () => e.r(213866)(e.i),
          "../icons/tokens/TokenCHZ.tsx": () => e.r(123058)(e.i),
          "../icons/tokens/TokenCIRUS.tsx": () => e.r(217204)(e.i),
          "../icons/tokens/TokenCKB.tsx": () => e.r(487345)(e.i),
          "../icons/tokens/TokenCKP.tsx": () => e.r(317835)(e.i),
          "../icons/tokens/TokenCLH.tsx": () => e.r(590422)(e.i),
          "../icons/tokens/TokenCLORE.tsx": () => e.r(329262)(e.i),
          "../icons/tokens/TokenCLS.tsx": () => e.r(337931)(e.i),
          "../icons/tokens/TokenCLV.tsx": () => e.r(629087)(e.i),
          "../icons/tokens/TokenCLXY.tsx": () => e.r(66368)(e.i),
          "../icons/tokens/TokenCLY.tsx": () => e.r(60854)(e.i),
          "../icons/tokens/TokenCMDX.tsx": () => e.r(788475)(e.i),
          "../icons/tokens/TokenCMOS.tsx": () => e.r(538173)(e.i),
          "../icons/tokens/TokenCNC.tsx": () => e.r(124180)(e.i),
          "../icons/tokens/TokenCND.tsx": () => e.r(767395)(e.i),
          "../icons/tokens/TokenCNFI.tsx": () => e.r(350278)(e.i),
          "../icons/tokens/TokenCNG.tsx": () => e.r(129101)(e.i),
          "../icons/tokens/TokenCNHT.tsx": () => e.r(194805)(e.i),
          "../icons/tokens/TokenCOC.tsx": () => e.r(698951)(e.i),
          "../icons/tokens/TokenCOL.tsx": () => e.r(781479)(e.i),
          "../icons/tokens/TokenCOLLAB.tsx": () => e.r(445925)(e.i),
          "../icons/tokens/TokenCOMBO.tsx": () => e.r(2675)(e.i),
          "../icons/tokens/TokenCOMP.tsx": () => e.r(127189)(e.i),
          "../icons/tokens/TokenCONE.tsx": () => e.r(483933)(e.i),
          "../icons/tokens/TokenCONV.tsx": () => e.r(740622)(e.i),
          "../icons/tokens/TokenCOPE.tsx": () => e.r(330452)(e.i),
          "../icons/tokens/TokenCOPI.tsx": () => e.r(384365)(e.i),
          "../icons/tokens/TokenCORE.tsx": () => e.r(537235)(e.i),
          "../icons/tokens/TokenCOS.tsx": () => e.r(767111)(e.i),
          "../icons/tokens/TokenCOTI.tsx": () => e.r(520722)(e.i),
          "../icons/tokens/TokenCOV.tsx": () => e.r(945413)(e.i),
          "../icons/tokens/TokenCOVAL.tsx": () => e.r(290067)(e.i),
          "../icons/tokens/TokenCOW.tsx": () => e.r(30071)(e.i),
          "../icons/tokens/TokenCPH.tsx": () => e.r(181709)(e.i),
          "../icons/tokens/TokenCPOOL.tsx": () => e.r(589132)(e.i),
          "../icons/tokens/TokenCQT.tsx": () => e.r(51499)(e.i),
          "../icons/tokens/TokenCRE.tsx": () => e.r(630712)(e.i),
          "../icons/tokens/TokenCREAM.tsx": () => e.r(160456)(e.i),
          "../icons/tokens/TokenCREDI.tsx": () => e.r(483545)(e.i),
          "../icons/tokens/TokenCREO.tsx": () => e.r(488066)(e.i),
          "../icons/tokens/TokenCRO.tsx": () => e.r(496144)(e.i),
          "../icons/tokens/TokenCROID.tsx": () => e.r(142875)(e.i),
          "../icons/tokens/TokenCROWD.tsx": () => e.r(258186)(e.i),
          "../icons/tokens/TokenCROWN.tsx": () => e.r(731897)(e.i),
          "../icons/tokens/TokenCRPT.tsx": () => e.r(989210)(e.i),
          "../icons/tokens/TokenCRTS.tsx": () => e.r(59086)(e.i),
          "../icons/tokens/TokenCRU.tsx": () => e.r(685059)(e.i),
          "../icons/tokens/TokenCRV.tsx": () => e.r(587785)(e.i),
          "../icons/tokens/TokenCRVUSD.tsx": () => e.r(418581)(e.i),
          "../icons/tokens/TokenCRWNY.tsx": () => e.r(931962)(e.i),
          "../icons/tokens/TokenCRYSTAL.tsx": () => e.r(86734)(e.i),
          "../icons/tokens/TokenCSIX.tsx": () => e.r(803306)(e.i),
          "../icons/tokens/TokenCSPR.tsx": () => e.r(783518)(e.i),
          "../icons/tokens/TokenCTC.tsx": () => e.r(251445)(e.i),
          "../icons/tokens/TokenCTG.tsx": () => e.r(933912)(e.i),
          "../icons/tokens/TokenCTI.tsx": () => e.r(113678)(e.i),
          "../icons/tokens/TokenCTK.tsx": () => e.r(850574)(e.i),
          "../icons/tokens/TokenCTR.tsx": () => e.r(881897)(e.i),
          "../icons/tokens/TokenCTSI.tsx": () => e.r(60601)(e.i),
          "../icons/tokens/TokenCTX.tsx": () => e.r(797574)(e.i),
          "../icons/tokens/TokenCTXC.tsx": () => e.r(34546)(e.i),
          "../icons/tokens/TokenCUBE.tsx": () => e.r(636614)(e.i),
          "../icons/tokens/TokenCUDOS.tsx": () => e.r(908200)(e.i),
          "../icons/tokens/TokenCULT.tsx": () => e.r(345858)(e.i),
          "../icons/tokens/TokenCUMINU.tsx": () => e.r(798687)(e.i),
          "../icons/tokens/TokenCUMMIES.tsx": () => e.r(805206)(e.i),
          "../icons/tokens/TokenCUSD.tsx": () => e.r(39048)(e.i),
          "../icons/tokens/TokenCUSDC.tsx": () => e.r(86046)(e.i),
          "../icons/tokens/TokenCVC.tsx": () => e.r(572738)(e.i),
          "../icons/tokens/TokenCVP.tsx": () => e.r(775293)(e.i),
          "../icons/tokens/TokenCVR.tsx": () => e.r(117561)(e.i),
          "../icons/tokens/TokenCWAR.tsx": () => e.r(80559)(e.i),
          "../icons/tokens/TokenCWEB.tsx": () => e.r(399295)(e.i),
          "../icons/tokens/TokenCWS.tsx": () => e.r(647596)(e.i),
          "../icons/tokens/TokenCXO.tsx": () => e.r(925615)(e.i),
          "../icons/tokens/TokenCYBER.tsx": () => e.r(220061)(e.i),
          "../icons/tokens/TokenD2T.tsx": () => e.r(293044)(e.i),
          "../icons/tokens/TokenD3D.tsx": () => e.r(978304)(e.i),
          "../icons/tokens/TokenDACXI.tsx": () => e.r(602887)(e.i),
          "../icons/tokens/TokenDAD.tsx": () => e.r(172325)(e.i),
          "../icons/tokens/TokenDAFI.tsx": () => e.r(473058)(e.i),
          "../icons/tokens/TokenDAG.tsx": () => e.r(322394)(e.i),
          "../icons/tokens/TokenDAI.tsx": () => e.r(110800)(e.i),
          "../icons/tokens/TokenDAO.tsx": () => e.r(676202)(e.i),
          "../icons/tokens/TokenDASH.tsx": () => e.r(906227)(e.i),
          "../icons/tokens/TokenDATA.tsx": () => e.r(754624)(e.i),
          "../icons/tokens/TokenDBC.tsx": () => e.r(77286)(e.i),
          "../icons/tokens/TokenDBI.tsx": () => e.r(887635)(e.i),
          "../icons/tokens/TokenDBR.tsx": () => e.r(599218)(e.i),
          "../icons/tokens/TokenDC.tsx": () => e.r(817710)(e.i),
          "../icons/tokens/TokenDCB.tsx": () => e.r(251369)(e.i),
          "../icons/tokens/TokenDCK.tsx": () => e.r(329749)(e.i),
          "../icons/tokens/TokenDCR.tsx": () => e.r(309997)(e.i),
          "../icons/tokens/TokenDEC.tsx": () => e.r(998033)(e.i),
          "../icons/tokens/TokenDEFI.tsx": () => e.r(552877)(e.i),
          "../icons/tokens/TokenDEFIT.tsx": () => e.r(365298)(e.i),
          "../icons/tokens/TokenDEFX.tsx": () => e.r(782831)(e.i),
          "../icons/tokens/TokenDEGEN.tsx": () => e.r(338654)(e.i),
          "../icons/tokens/TokenDEGO.tsx": () => e.r(371334)(e.i),
          "../icons/tokens/TokenDEL.tsx": () => e.r(409351)(e.i),
          "../icons/tokens/TokenDENT.tsx": () => e.r(659993)(e.i),
          "../icons/tokens/TokenDEP.tsx": () => e.r(560490)(e.i),
          "../icons/tokens/TokenDERC.tsx": () => e.r(713211)(e.i),
          "../icons/tokens/TokenDERI.tsx": () => e.r(161194)(e.i),
          "../icons/tokens/TokenDERO.tsx": () => e.r(893217)(e.i),
          "../icons/tokens/TokenDESO.tsx": () => e.r(386213)(e.i),
          "../icons/tokens/TokenDEXE.tsx": () => e.r(861695)(e.i),
          "../icons/tokens/TokenDEXT.tsx": () => e.r(850022)(e.i),
          "../icons/tokens/TokenDEXTF.tsx": () => e.r(659010)(e.i),
          "../icons/tokens/TokenDF.tsx": () => e.r(552011)(e.i),
          "../icons/tokens/TokenDFI.tsx": () => e.r(186807)(e.i),
          "../icons/tokens/TokenDFX.tsx": () => e.r(639386)(e.i),
          "../icons/tokens/TokenDFYN.tsx": () => e.r(593334)(e.i),
          "../icons/tokens/TokenDGB.tsx": () => e.r(315345)(e.i),
          "../icons/tokens/TokenDGNX.tsx": () => e.r(868032)(e.i),
          "../icons/tokens/TokenDGX.tsx": () => e.r(649505)(e.i),
          "../icons/tokens/TokenDHT.tsx": () => e.r(950210)(e.i),
          "../icons/tokens/TokenDIA.tsx": () => e.r(798991)(e.i),
          "../icons/tokens/TokenDIKO.tsx": () => e.r(358134)(e.i),
          "../icons/tokens/TokenDIMO.tsx": () => e.r(734763)(e.i),
          "../icons/tokens/TokenDINGO.tsx": () => e.r(404016)(e.i),
          "../icons/tokens/TokenDIONE.tsx": () => e.r(617832)(e.i),
          "../icons/tokens/TokenDIP.tsx": () => e.r(188169)(e.i),
          "../icons/tokens/TokenDIVER.tsx": () => e.r(355924)(e.i),
          "../icons/tokens/TokenDIVI.tsx": () => e.r(280952)(e.i),
          "../icons/tokens/TokenDJED.tsx": () => e.r(558927)(e.i),
          "../icons/tokens/TokenDKA.tsx": () => e.r(479198)(e.i),
          "../icons/tokens/TokenDLC.tsx": () => e.r(59082)(e.i),
          "../icons/tokens/TokenDMC.tsx": () => e.r(450313)(e.i),
          "../icons/tokens/TokenDMD.tsx": () => e.r(156947)(e.i),
          "../icons/tokens/TokenDMT.tsx": () => e.r(274197)(e.i),
          "../icons/tokens/TokenDMTR.tsx": () => e.r(649503)(e.i),
          "../icons/tokens/TokenDNT.tsx": () => e.r(277201)(e.i),
          "../icons/tokens/TokenDNXC.tsx": () => e.r(400401)(e.i),
          "../icons/tokens/TokenDOBO.tsx": () => e.r(44408)(e.i),
          "../icons/tokens/TokenDODO.tsx": () => e.r(899549)(e.i),
          "../icons/tokens/TokenDOG.tsx": () => e.r(959332)(e.i),
          "../icons/tokens/TokenDOGA.tsx": () => e.r(974924)(e.i),
          "../icons/tokens/TokenDOGE.tsx": () => e.r(748834)(e.i),
          "../icons/tokens/TokenDOGEGF.tsx": () => e.r(874604)(e.i),
          "../icons/tokens/TokenDOLA.tsx": () => e.r(584177)(e.i),
          "../icons/tokens/TokenDOME.tsx": () => e.r(561711)(e.i),
          "../icons/tokens/TokenDOMI.tsx": () => e.r(652689)(e.i),
          "../icons/tokens/TokenDONUT.tsx": () => e.r(374012)(e.i),
          "../icons/tokens/TokenDOR.tsx": () => e.r(744098)(e.i),
          "../icons/tokens/TokenDORA.tsx": () => e.r(16311)(e.i),
          "../icons/tokens/TokenDOSE.tsx": () => e.r(845636)(e.i),
          "../icons/tokens/TokenDOT.tsx": () => e.r(568526)(e.i),
          "../icons/tokens/TokenDPAY.tsx": () => e.r(247098)(e.i),
          "../icons/tokens/TokenDPET.tsx": () => e.r(621915)(e.i),
          "../icons/tokens/TokenDPI.tsx": () => e.r(289469)(e.i),
          "../icons/tokens/TokenDPS.tsx": () => e.r(392180)(e.i),
          "../icons/tokens/TokenDPX.tsx": () => e.r(818784)(e.i),
          "../icons/tokens/TokenDREP.tsx": () => e.r(232825)(e.i),
          "../icons/tokens/TokenDRGN.tsx": () => e.r(791721)(e.i),
          "../icons/tokens/TokenDSETH.tsx": () => e.r(588480)(e.i),
          "../icons/tokens/TokenDSLA.tsx": () => e.r(455261)(e.i),
          "../icons/tokens/TokenDSM.tsx": () => e.r(285474)(e.i),
          "../icons/tokens/TokenDSRUN.tsx": () => e.r(788450)(e.i),
          "../icons/tokens/TokenDTX.tsx": () => e.r(568341)(e.i),
          "../icons/tokens/TokenDUA.tsx": () => e.r(557001)(e.i),
          "../icons/tokens/TokenDUSK.tsx": () => e.r(116921)(e.i),
          "../icons/tokens/TokenDUST.tsx": () => e.r(815861)(e.i),
          "../icons/tokens/TokenDVF.tsx": () => e.r(970193)(e.i),
          "../icons/tokens/TokenDVI.tsx": () => e.r(36009)(e.i),
          "../icons/tokens/TokenDVPN.tsx": () => e.r(380087)(e.i),
          "../icons/tokens/TokenDWEB.tsx": () => e.r(27671)(e.i),
          "../icons/tokens/TokenDXGM.tsx": () => e.r(383156)(e.i),
          "../icons/tokens/TokenDXL.tsx": () => e.r(53334)(e.i),
          "../icons/tokens/TokenDXP.tsx": () => e.r(551877)(e.i),
          "../icons/tokens/TokenDYDX.tsx": () => e.r(244037)(e.i),
          "../icons/tokens/TokenDYP.tsx": () => e.r(420551)(e.i),
          "../icons/tokens/TokenDZOO.tsx": () => e.r(553309)(e.i),
          "../icons/tokens/TokenEARN.tsx": () => e.r(613610)(e.i),
          "../icons/tokens/TokenECO.tsx": () => e.r(483580)(e.i),
          "../icons/tokens/TokenECOIN.tsx": () => e.r(258527)(e.i),
          "../icons/tokens/TokenECOX.tsx": () => e.r(807451)(e.i),
          "../icons/tokens/TokenEDEN.tsx": () => e.r(142753)(e.i),
          "../icons/tokens/TokenEDG.tsx": () => e.r(866669)(e.i),
          "../icons/tokens/TokenEDGE.tsx": () => e.r(246776)(e.i),
          "../icons/tokens/TokenEDU.tsx": () => e.r(462733)(e.i),
          "../icons/tokens/TokenEFC.tsx": () => e.r(480104)(e.i),
          "../icons/tokens/TokenEFI.tsx": () => e.r(576290)(e.i),
          "../icons/tokens/TokenEFL.tsx": () => e.r(770213)(e.i),
          "../icons/tokens/TokenEFX.tsx": () => e.r(562837)(e.i),
          "../icons/tokens/TokenEGC.tsx": () => e.r(205146)(e.i),
          "../icons/tokens/TokenEGG.tsx": () => e.r(3888)(e.i),
          "../icons/tokens/TokenEGLD.tsx": () => e.r(288575)(e.i),
          "../icons/tokens/TokenEGO.tsx": () => e.r(764694)(e.i),
          "../icons/tokens/TokenEJS.tsx": () => e.r(801399)(e.i),
          "../icons/tokens/TokenEL.tsx": () => e.r(356641)(e.i),
          "../icons/tokens/TokenELA.tsx": () => e.r(390211)(e.i),
          "../icons/tokens/TokenELAND.tsx": () => e.r(662403)(e.i),
          "../icons/tokens/TokenELF.tsx": () => e.r(362664)(e.i),
          "../icons/tokens/TokenELK.tsx": () => e.r(540971)(e.i),
          "../icons/tokens/TokenELON.tsx": () => e.r(329799)(e.i),
          "../icons/tokens/TokenELU.tsx": () => e.r(591655)(e.i),
          "../icons/tokens/TokenEMAGIC.tsx": () => e.r(411163)(e.i),
          "../icons/tokens/TokenEMAID.tsx": () => e.r(669292)(e.i),
          "../icons/tokens/TokenEML.tsx": () => e.r(242795)(e.i),
          "../icons/tokens/TokenEMP.tsx": () => e.r(530068)(e.i),
          "../icons/tokens/TokenENG.tsx": () => e.r(504004)(e.i),
          "../icons/tokens/TokenENJ.tsx": () => e.r(944812)(e.i),
          "../icons/tokens/TokenENS.tsx": () => e.r(316077)(e.i),
          "../icons/tokens/TokenEOS.tsx": () => e.r(107053)(e.i),
          "../icons/tokens/TokenEOSDT.tsx": () => e.r(370654)(e.i),
          "../icons/tokens/TokenEPIC.tsx": () => e.r(458711)(e.i),
          "../icons/tokens/TokenEPIK.tsx": () => e.r(767986)(e.i),
          "../icons/tokens/TokenEQB.tsx": () => e.r(745093)(e.i),
          "../icons/tokens/TokenEQU.tsx": () => e.r(506298)(e.i),
          "../icons/tokens/TokenEQUAD.tsx": () => e.r(267770)(e.i),
          "../icons/tokens/TokenEQUAL.tsx": () => e.r(675980)(e.i),
          "../icons/tokens/TokenEQX.tsx": () => e.r(127747)(e.i),
          "../icons/tokens/TokenERG.tsx": () => e.r(565868)(e.i),
          "../icons/tokens/TokenERN.tsx": () => e.r(497798)(e.i),
          "../icons/tokens/TokenERTHA.tsx": () => e.r(996466)(e.i),
          "../icons/tokens/TokenES.tsx": () => e.r(100105)(e.i),
          "../icons/tokens/TokenETC.tsx": () => e.r(684022)(e.i),
          "../icons/tokens/TokenETE.tsx": () => e.r(561804)(e.i),
          "../icons/tokens/TokenETH.tsx": () => e.r(640010)(e.i),
          "../icons/tokens/TokenETHIX.tsx": () => e.r(257014)(e.i),
          "../icons/tokens/TokenETHM.tsx": () => e.r(497256)(e.i),
          "../icons/tokens/TokenETHW.tsx": () => e.r(226788)(e.i),
          "../icons/tokens/TokenETHX.tsx": () => e.r(164582)(e.i),
          "../icons/tokens/TokenETI.tsx": () => e.r(921278)(e.i),
          "../icons/tokens/TokenETN.tsx": () => e.r(395811)(e.i),
          "../icons/tokens/TokenETP.tsx": () => e.r(561772)(e.i),
          "../icons/tokens/TokenEUL.tsx": () => e.r(921717)(e.i),
          "../icons/tokens/TokenEUNO.tsx": () => e.r(936760)(e.i),
          "../icons/tokens/TokenEUROE.tsx": () => e.r(36377)(e.i),
          "../icons/tokens/TokenEURS.tsx": () => e.r(556712)(e.i),
          "../icons/tokens/TokenEURT.tsx": () => e.r(952379)(e.i),
          "../icons/tokens/TokenEUSD.tsx": () => e.r(192516)(e.i),
          "../icons/tokens/TokenEVEAI.tsx": () => e.r(458538)(e.i),
          "../icons/tokens/TokenEVER.tsx": () => e.r(462753)(e.i),
          "../icons/tokens/TokenEVMOS.tsx": () => e.r(139118)(e.i),
          "../icons/tokens/TokenEWT.tsx": () => e.r(468502)(e.i),
          "../icons/tokens/TokenEXD.tsx": () => e.r(300551)(e.i),
          "../icons/tokens/TokenEXRD.tsx": () => e.r(724075)(e.i),
          "../icons/tokens/TokenEXTRA.tsx": () => e.r(747744)(e.i),
          "../icons/tokens/TokenFACTR.tsx": () => e.r(292654)(e.i),
          "../icons/tokens/TokenFAKEAI.tsx": () => e.r(782181)(e.i),
          "../icons/tokens/TokenFARA.tsx": () => e.r(920047)(e.i),
          "../icons/tokens/TokenFARM.tsx": () => e.r(887234)(e.i),
          "../icons/tokens/TokenFCON.tsx": () => e.r(569958)(e.i),
          "../icons/tokens/TokenFCT.tsx": () => e.r(296477)(e.i),
          "../icons/tokens/TokenFCTR.tsx": () => e.r(139907)(e.i),
          "../icons/tokens/TokenFDUSD.tsx": () => e.r(903653)(e.i),
          "../icons/tokens/TokenFEAR.tsx": () => e.r(33885)(e.i),
          "../icons/tokens/TokenFEG.tsx": () => e.r(318453)(e.i),
          "../icons/tokens/TokenFEI.tsx": () => e.r(591653)(e.i),
          "../icons/tokens/TokenFER.tsx": () => e.r(949277)(e.i),
          "../icons/tokens/TokenFET.tsx": () => e.r(433107)(e.i),
          "../icons/tokens/TokenFEVR.tsx": () => e.r(589459)(e.i),
          "../icons/tokens/TokenFIDA.tsx": () => e.r(92582)(e.i),
          "../icons/tokens/TokenFIL.tsx": () => e.r(833917)(e.i),
          "../icons/tokens/TokenFIO.tsx": () => e.r(403743)(e.i),
          "../icons/tokens/TokenFIRO.tsx": () => e.r(109780)(e.i),
          "../icons/tokens/TokenFIS.tsx": () => e.r(358695)(e.i),
          "../icons/tokens/TokenFITFI.tsx": () => e.r(976162)(e.i),
          "../icons/tokens/TokenFLAME.tsx": () => e.r(625854)(e.i),
          "../icons/tokens/TokenFLEX.tsx": () => e.r(463041)(e.i),
          "../icons/tokens/TokenFLM.tsx": () => e.r(654300)(e.i),
          "../icons/tokens/TokenFLOOR.tsx": () => e.r(18574)(e.i),
          "../icons/tokens/TokenFLOW.tsx": () => e.r(358809)(e.i),
          "../icons/tokens/TokenFLR.tsx": () => e.r(692703)(e.i),
          "../icons/tokens/TokenFLS.tsx": () => e.r(500940)(e.i),
          "../icons/tokens/TokenFLUID.tsx": () => e.r(882346)(e.i),
          "../icons/tokens/TokenFLUX.tsx": () => e.r(175514)(e.i),
          "../icons/tokens/TokenFLX.tsx": () => e.r(117295)(e.i),
          "../icons/tokens/TokenFNSA.tsx": () => e.r(976922)(e.i),
          "../icons/tokens/TokenFOAM.tsx": () => e.r(973832)(e.i),
          "../icons/tokens/TokenFOLD.tsx": () => e.r(216187)(e.i),
          "../icons/tokens/TokenFOOM.tsx": () => e.r(338178)(e.i),
          "../icons/tokens/TokenFOR.tsx": () => e.r(103499)(e.i),
          "../icons/tokens/TokenFORE.tsx": () => e.r(537446)(e.i),
          "../icons/tokens/TokenFOREX.tsx": () => e.r(95879)(e.i),
          "../icons/tokens/TokenFORT.tsx": () => e.r(198404)(e.i),
          "../icons/tokens/TokenFORTH.tsx": () => e.r(424176)(e.i),
          "../icons/tokens/TokenFOUR.tsx": () => e.r(150538)(e.i),
          "../icons/tokens/TokenFPIS.tsx": () => e.r(794699)(e.i),
          "../icons/tokens/TokenFPS.tsx": () => e.r(516213)(e.i),
          "../icons/tokens/TokenFRA.tsx": () => e.r(545626)(e.i),
          "../icons/tokens/TokenFRAX.tsx": () => e.r(689903)(e.i),
          "../icons/tokens/TokenFREE.tsx": () => e.r(472314)(e.i),
          "../icons/tokens/TokenFREN.tsx": () => e.r(30543)(e.i),
          "../icons/tokens/TokenFRIN.tsx": () => e.r(663297)(e.i),
          "../icons/tokens/TokenFRM.tsx": () => e.r(715151)(e.i),
          "../icons/tokens/TokenFRONT.tsx": () => e.r(734107)(e.i),
          "../icons/tokens/TokenFSN.tsx": () => e.r(342952)(e.i),
          "../icons/tokens/TokenFTC.tsx": () => e.r(924573)(e.i),
          "../icons/tokens/TokenFTM.tsx": () => e.r(127777)(e.i),
          "../icons/tokens/TokenFTN.tsx": () => e.r(943648)(e.i),
          "../icons/tokens/TokenFUN.tsx": () => e.r(373126)(e.i),
          "../icons/tokens/TokenFUND.tsx": () => e.r(733224)(e.i),
          "../icons/tokens/TokenFUSE.tsx": () => e.r(325564)(e.i),
          "../icons/tokens/TokenFUTURE.tsx": () => e.r(196063)(e.i),
          "../icons/tokens/TokenFWB.tsx": () => e.r(429189)(e.i),
          "../icons/tokens/TokenFX.tsx": () => e.r(872541)(e.i),
          "../icons/tokens/TokenFXS.tsx": () => e.r(703042)(e.i),
          "../icons/tokens/TokenFYN.tsx": () => e.r(419915)(e.i),
          "../icons/tokens/TokenG.tsx": () => e.r(837653)(e.i),
          "../icons/tokens/TokenGAFI.tsx": () => e.r(448612)(e.i),
          "../icons/tokens/TokenGAI.tsx": () => e.r(162480)(e.i),
          "../icons/tokens/TokenGAINS.tsx": () => e.r(410388)(e.i),
          "../icons/tokens/TokenGAL.tsx": () => e.r(389365)(e.i),
          "../icons/tokens/TokenGALA.tsx": () => e.r(175565)(e.i),
          "../icons/tokens/TokenGALEON.tsx": () => e.r(714959)(e.i),
          "../icons/tokens/TokenGAME.tsx": () => e.r(841147)(e.i),
          "../icons/tokens/TokenGAMEFI.tsx": () => e.r(5222)(e.i),
          "../icons/tokens/TokenGAMI.tsx": () => e.r(287786)(e.i),
          "../icons/tokens/TokenGAMMA.tsx": () => e.r(270652)(e.i),
          "../icons/tokens/TokenGARI.tsx": () => e.r(67651)(e.i),
          "../icons/tokens/TokenGAS.tsx": () => e.r(422321)(e.i),
          "../icons/tokens/TokenGAT.tsx": () => e.r(602589)(e.i),
          "../icons/tokens/TokenGBEX.tsx": () => e.r(214201)(e.i),
          "../icons/tokens/TokenGBYTE.tsx": () => e.r(55030)(e.i),
          "../icons/tokens/TokenGCOIN.tsx": () => e.r(880858)(e.i),
          "../icons/tokens/TokenGCR.tsx": () => e.r(801280)(e.i),
          "../icons/tokens/TokenGDCC.tsx": () => e.r(808368)(e.i),
          "../icons/tokens/TokenGEEQ.tsx": () => e.r(258612)(e.i),
          "../icons/tokens/TokenGEL.tsx": () => e.r(886328)(e.i),
          "../icons/tokens/TokenGENI.tsx": () => e.r(394293)(e.i),
          "../icons/tokens/TokenGEOD.tsx": () => e.r(477804)(e.i),
          "../icons/tokens/TokenGET.tsx": () => e.r(613344)(e.i),
          "../icons/tokens/TokenGFAL.tsx": () => e.r(565033)(e.i),
          "../icons/tokens/TokenGFT.tsx": () => e.r(189995)(e.i),
          "../icons/tokens/TokenGG.tsx": () => e.r(854234)(e.i),
          "../icons/tokens/TokenGGG.tsx": () => e.r(300382)(e.i),
          "../icons/tokens/TokenGGP.tsx": () => e.r(423086)(e.i),
          "../icons/tokens/TokenGHNY.tsx": () => e.r(712894)(e.i),
          "../icons/tokens/TokenGHO.tsx": () => e.r(172281)(e.i),
          "../icons/tokens/TokenGHOST.tsx": () => e.r(24052)(e.i),
          "../icons/tokens/TokenGHST.tsx": () => e.r(823490)(e.i),
          "../icons/tokens/TokenGHUB.tsx": () => e.r(253502)(e.i),
          "../icons/tokens/TokenGHX.tsx": () => e.r(178733)(e.i),
          "../icons/tokens/TokenGIV.tsx": () => e.r(498922)(e.i),
          "../icons/tokens/TokenGLC.tsx": () => e.r(130359)(e.i),
          "../icons/tokens/TokenGLEEC.tsx": () => e.r(450572)(e.i),
          "../icons/tokens/TokenGLINK.tsx": () => e.r(74701)(e.i),
          "../icons/tokens/TokenGLM.tsx": () => e.r(308033)(e.i),
          "../icons/tokens/TokenGLMR.tsx": () => e.r(930814)(e.i),
          "../icons/tokens/TokenGLQ.tsx": () => e.r(184667)(e.i),
          "../icons/tokens/TokenGMEE.tsx": () => e.r(416286)(e.i),
          "../icons/tokens/TokenGMM.tsx": () => e.r(756225)(e.i),
          "../icons/tokens/TokenGMPD.tsx": () => e.r(284663)(e.i),
          "../icons/tokens/TokenGMX.tsx": () => e.r(799345)(e.i),
          "../icons/tokens/TokenGNO.tsx": () => e.r(215956)(e.i),
          "../icons/tokens/TokenGNS.tsx": () => e.r(345538)(e.i),
          "../icons/tokens/TokenGNY.tsx": () => e.r(934624)(e.i),
          "../icons/tokens/TokenGO.tsx": () => e.r(404742)(e.i),
          "../icons/tokens/TokenGOB.tsx": () => e.r(898881)(e.i),
          "../icons/tokens/TokenGODS.tsx": () => e.r(356681)(e.i),
          "../icons/tokens/TokenGOFX.tsx": () => e.r(314810)(e.i),
          "../icons/tokens/TokenGOG.tsx": () => e.r(248303)(e.i),
          "../icons/tokens/TokenGOLDEN.tsx": () => e.r(958605)(e.i),
          "../icons/tokens/TokenGORA.tsx": () => e.r(569196)(e.i),
          "../icons/tokens/TokenGORILLA.tsx": () => e.r(151106)(e.i),
          "../icons/tokens/TokenGOVI.tsx": () => e.r(211532)(e.i),
          "../icons/tokens/TokenGOZ.tsx": () => e.r(387162)(e.i),
          "../icons/tokens/TokenGPCX.tsx": () => e.r(114188)(e.i),
          "../icons/tokens/TokenGQ.tsx": () => e.r(684559)(e.i),
          "../icons/tokens/TokenGRAI.tsx": () => e.r(176540)(e.i),
          "../icons/tokens/TokenGRAIL.tsx": () => e.r(11302)(e.i),
          "../icons/tokens/TokenGRAIN.tsx": () => e.r(227905)(e.i),
          "../icons/tokens/TokenGRAV.tsx": () => e.r(67624)(e.i),
          "../icons/tokens/TokenGRC.tsx": () => e.r(417718)(e.i),
          "../icons/tokens/TokenGRG.tsx": () => e.r(634820)(e.i),
          "../icons/tokens/TokenGRIN.tsx": () => e.r(961724)(e.i),
          "../icons/tokens/TokenGRND.tsx": () => e.r(756907)(e.i),
          "../icons/tokens/TokenGRS.tsx": () => e.r(931483)(e.i),
          "../icons/tokens/TokenGRT.tsx": () => e.r(241969)(e.i),
          "../icons/tokens/TokenGRV.tsx": () => e.r(271977)(e.i),
          "../icons/tokens/TokenGSE.tsx": () => e.r(661160)(e.i),
          "../icons/tokens/TokenGSTS.tsx": () => e.r(648117)(e.i),
          "../icons/tokens/TokenGSWAP.tsx": () => e.r(440878)(e.i),
          "../icons/tokens/TokenGSWIFT.tsx": () => e.r(773823)(e.i),
          "../icons/tokens/TokenGT.tsx": () => e.r(593968)(e.i),
          "../icons/tokens/TokenGTC.tsx": () => e.r(654386)(e.i),
          "../icons/tokens/TokenGUILD.tsx": () => e.r(798053)(e.i),
          "../icons/tokens/TokenGULF.tsx": () => e.r(443374)(e.i),
          "../icons/tokens/TokenGUSD.tsx": () => e.r(408741)(e.i),
          "../icons/tokens/TokenGXA.tsx": () => e.r(941193)(e.i),
          "../icons/tokens/TokenGXC.tsx": () => e.r(52715)(e.i),
          "../icons/tokens/TokenGYEN.tsx": () => e.r(3736)(e.i),
          "../icons/tokens/TokenGYMNET.tsx": () => e.r(628920)(e.i),
          "../icons/tokens/TokenGZIL.tsx": () => e.r(664034)(e.i),
          "../icons/tokens/TokenGZONE.tsx": () => e.r(774264)(e.i),
          "../icons/tokens/TokenH2O.tsx": () => e.r(621270)(e.i),
          "../icons/tokens/TokenHAI.tsx": () => e.r(965872)(e.i),
          "../icons/tokens/TokenHAIR.tsx": () => e.r(225582)(e.i),
          "../icons/tokens/TokenHAKA.tsx": () => e.r(477401)(e.i),
          "../icons/tokens/TokenHANDY.tsx": () => e.r(735701)(e.i),
          "../icons/tokens/TokenHAPI.tsx": () => e.r(567640)(e.i),
          "../icons/tokens/TokenHARD.tsx": () => e.r(580950)(e.i),
          "../icons/tokens/TokenHAWK.tsx": () => e.r(141043)(e.i),
          "../icons/tokens/TokenHBAR.tsx": () => e.r(753948)(e.i),
          "../icons/tokens/TokenHBB.tsx": () => e.r(94069)(e.i),
          "../icons/tokens/TokenHBOT.tsx": () => e.r(267352)(e.i),
          "../icons/tokens/TokenHBTC.tsx": () => e.r(364789)(e.i),
          "../icons/tokens/TokenHDX.tsx": () => e.r(566099)(e.i),
          "../icons/tokens/TokenHEART.tsx": () => e.r(515457)(e.i),
          "../icons/tokens/TokenHEGIC.tsx": () => e.r(352986)(e.i),
          "../icons/tokens/TokenHELLO.tsx": () => e.r(723814)(e.i),
          "../icons/tokens/TokenHERA.tsx": () => e.r(352898)(e.i),
          "../icons/tokens/TokenHERMES.tsx": () => e.r(539726)(e.i),
          "../icons/tokens/TokenHERO.tsx": () => e.r(158557)(e.i),
          "../icons/tokens/TokenHEZ.tsx": () => e.r(845848)(e.i),
          "../icons/tokens/TokenHFT.tsx": () => e.r(713792)(e.i),
          "../icons/tokens/TokenHGPT.tsx": () => e.r(222530)(e.i),
          "../icons/tokens/TokenHGT.tsx": () => e.r(241583)(e.i),
          "../icons/tokens/TokenHIBS.tsx": () => e.r(644953)(e.i),
          "../icons/tokens/TokenHID.tsx": () => e.r(259217)(e.i),
          "../icons/tokens/TokenHIFI.tsx": () => e.r(852963)(e.i),
          "../icons/tokens/TokenHILO.tsx": () => e.r(42273)(e.i),
          "../icons/tokens/TokenHIPP.tsx": () => e.r(186863)(e.i),
          "../icons/tokens/TokenHIVE.tsx": () => e.r(384407)(e.i),
          "../icons/tokens/TokenHMND.tsx": () => e.r(414932)(e.i),
          "../icons/tokens/TokenHMX.tsx": () => e.r(228843)(e.i),
          "../icons/tokens/TokenHNT.tsx": () => e.r(346375)(e.i),
          "../icons/tokens/TokenHOGE.tsx": () => e.r(244581)(e.i),
          "../icons/tokens/TokenHOLD.tsx": () => e.r(669569)(e.i),
          "../icons/tokens/TokenHON.tsx": () => e.r(910094)(e.i),
          "../icons/tokens/TokenHONEY.tsx": () => e.r(98622)(e.i),
          "../icons/tokens/TokenHONK.tsx": () => e.r(839595)(e.i),
          "../icons/tokens/TokenHOOK.tsx": () => e.r(759301)(e.i),
          "../icons/tokens/TokenHOP.tsx": () => e.r(789387)(e.i),
          "../icons/tokens/TokenHOPR.tsx": () => e.r(974329)(e.i),
          "../icons/tokens/TokenHORD.tsx": () => e.r(461456)(e.i),
          "../icons/tokens/TokenHOSHI.tsx": () => e.r(957210)(e.i),
          "../icons/tokens/TokenHOT.tsx": () => e.r(323932)(e.i),
          "../icons/tokens/TokenHPO.tsx": () => e.r(516146)(e.i),
          "../icons/tokens/TokenHST.tsx": () => e.r(528842)(e.i),
          "../icons/tokens/TokenHT.tsx": () => e.r(22907)(e.i),
          "../icons/tokens/TokenHTM.tsx": () => e.r(714398)(e.i),
          "../icons/tokens/TokenHTR.tsx": () => e.r(605453)(e.i),
          "../icons/tokens/TokenHUAHUA.tsx": () => e.r(395519)(e.i),
          "../icons/tokens/TokenHUNT.tsx": () => e.r(47187)(e.i),
          "../icons/tokens/TokenHUSD.tsx": () => e.r(97952)(e.i),
          "../icons/tokens/TokenHUSH.tsx": () => e.r(900891)(e.i),
          "../icons/tokens/TokenHUSKY.tsx": () => e.r(505751)(e.i),
          "../icons/tokens/TokenHVH.tsx": () => e.r(217708)(e.i),
          "../icons/tokens/TokenHXD.tsx": () => e.r(749425)(e.i),
          "../icons/tokens/TokenHXRO.tsx": () => e.r(218467)(e.i),
          "../icons/tokens/TokenHYDRA.tsx": () => e.r(117628)(e.i),
          "../icons/tokens/TokenHYVE.tsx": () => e.r(168948)(e.i),
          "../icons/tokens/TokenHZN.tsx": () => e.r(762381)(e.i),
          "../icons/tokens/TokenIBAT.tsx": () => e.r(693428)(e.i),
          "../icons/tokens/TokenIBIT.tsx": () => e.r(606027)(e.i),
          "../icons/tokens/TokenICE.tsx": () => e.r(757787)(e.i),
          "../icons/tokens/TokenICHI.tsx": () => e.r(662016)(e.i),
          "../icons/tokens/TokenICP.tsx": () => e.r(638626)(e.i),
          "../icons/tokens/TokenICX.tsx": () => e.r(906592)(e.i),
          "../icons/tokens/TokenID.tsx": () => e.r(132722)(e.i),
          "../icons/tokens/TokenIDEA.tsx": () => e.r(796018)(e.i),
          "../icons/tokens/TokenIDEX.tsx": () => e.r(408742)(e.i),
          "../icons/tokens/TokenIDIA.tsx": () => e.r(510168)(e.i),
          "../icons/tokens/TokenIDLE.tsx": () => e.r(752619)(e.i),
          "../icons/tokens/TokenIDNA.tsx": () => e.r(85593)(e.i),
          "../icons/tokens/TokenIDRT.tsx": () => e.r(258626)(e.i),
          "../icons/tokens/TokenIDV.tsx": () => e.r(511707)(e.i),
          "../icons/tokens/TokenIETH.tsx": () => e.r(193242)(e.i),
          "../icons/tokens/TokenIGNIS.tsx": () => e.r(226438)(e.i),
          "../icons/tokens/TokenIGU.tsx": () => e.r(572314)(e.i),
          "../icons/tokens/TokenILV.tsx": () => e.r(291971)(e.i),
          "../icons/tokens/TokenIMGNAI.tsx": () => e.r(790757)(e.i),
          "../icons/tokens/TokenIMO.tsx": () => e.r(290106)(e.i),
          "../icons/tokens/TokenIMPT.tsx": () => e.r(816717)(e.i),
          "../icons/tokens/TokenIMX.tsx": () => e.r(305065)(e.i),
          "../icons/tokens/TokenINFRA.tsx": () => e.r(458165)(e.i),
          "../icons/tokens/TokenINJ.tsx": () => e.r(319076)(e.i),
          "../icons/tokens/TokenINS.tsx": () => e.r(159014)(e.i),
          "../icons/tokens/TokenINST.tsx": () => e.r(94951)(e.i),
          "../icons/tokens/TokenINSUR.tsx": () => e.r(368085)(e.i),
          "../icons/tokens/TokenINT.tsx": () => e.r(157892)(e.i),
          "../icons/tokens/TokenINTR.tsx": () => e.r(944747)(e.i),
          "../icons/tokens/TokenINV.tsx": () => e.r(614634)(e.i),
          "../icons/tokens/TokenION.tsx": () => e.r(270248)(e.i),
          "../icons/tokens/TokenIONX.tsx": () => e.r(522228)(e.i),
          "../icons/tokens/TokenIOST.tsx": () => e.r(930117)(e.i),
          "../icons/tokens/TokenIOTA.tsx": () => e.r(884959)(e.i),
          "../icons/tokens/TokenIPAD.tsx": () => e.r(189379)(e.i),
          "../icons/tokens/TokenIPOR.tsx": () => e.r(561416)(e.i),
          "../icons/tokens/TokenIQ.tsx": () => e.r(595333)(e.i),
          "../icons/tokens/TokenIRIS.tsx": () => e.r(354542)(e.i),
          "../icons/tokens/TokenIRON.tsx": () => e.r(258798)(e.i),
          "../icons/tokens/TokenISK.tsx": () => e.r(622706)(e.i),
          "../icons/tokens/TokenISP.tsx": () => e.r(384429)(e.i),
          "../icons/tokens/TokenIST.tsx": () => e.r(248577)(e.i),
          "../icons/tokens/TokenITHEUM.tsx": () => e.r(247369)(e.i),
          "../icons/tokens/TokenITP.tsx": () => e.r(218139)(e.i),
          "../icons/tokens/TokenIXO.tsx": () => e.r(837685)(e.i),
          "../icons/tokens/TokenIXS.tsx": () => e.r(260627)(e.i),
          "../icons/tokens/TokenIXT.tsx": () => e.r(95457)(e.i),
          "../icons/tokens/TokenJAM.tsx": () => e.r(378560)(e.i),
          "../icons/tokens/TokenJASMY.tsx": () => e.r(195996)(e.i),
          "../icons/tokens/TokenJESUS.tsx": () => e.r(309873)(e.i),
          "../icons/tokens/TokenJEWEL.tsx": () => e.r(766448)(e.i),
          "../icons/tokens/TokenJIM.tsx": () => e.r(485238)(e.i),
          "../icons/tokens/TokenJKL.tsx": () => e.r(769583)(e.i),
          "../icons/tokens/TokenJMPT.tsx": () => e.r(346530)(e.i),
          "../icons/tokens/TokenJOE.tsx": () => e.r(942431)(e.i),
          "../icons/tokens/TokenJONES.tsx": () => e.r(181374)(e.i),
          "../icons/tokens/TokenJOP.tsx": () => e.r(856015)(e.i),
          "../icons/tokens/TokenJOY.tsx": () => e.r(990896)(e.i),
          "../icons/tokens/TokenJST.tsx": () => e.r(332260)(e.i),
          "../icons/tokens/TokenJULD.tsx": () => e.r(780411)(e.i),
          "../icons/tokens/TokenJUNO.tsx": () => e.r(377331)(e.i),
          "../icons/tokens/TokenJUP.tsx": () => e.r(737168)(e.i),
          "../icons/tokens/TokenK21.tsx": () => e.r(801770)(e.i),
          "../icons/tokens/TokenKAG.tsx": () => e.r(569020)(e.i),
          "../icons/tokens/TokenKAI.tsx": () => e.r(501091)(e.i),
          "../icons/tokens/TokenKALM.tsx": () => e.r(334350)(e.i),
          "../icons/tokens/TokenKAN.tsx": () => e.r(795614)(e.i),
          "../icons/tokens/TokenKAP.tsx": () => e.r(296758)(e.i),
          "../icons/tokens/TokenKAR.tsx": () => e.r(866863)(e.i),
          "../icons/tokens/TokenKARATE.tsx": () => e.r(380930)(e.i),
          "../icons/tokens/TokenKAS.tsx": () => e.r(245376)(e.i),
          "../icons/tokens/TokenKASTA.tsx": () => e.r(192017)(e.i),
          "../icons/tokens/TokenKAT.tsx": () => e.r(430016)(e.i),
          "../icons/tokens/TokenKATA.tsx": () => e.r(596301)(e.i),
          "../icons/tokens/TokenKAU.tsx": () => e.r(633974)(e.i),
          "../icons/tokens/TokenKAVA.tsx": () => e.r(768935)(e.i),
          "../icons/tokens/TokenKCS.tsx": () => e.r(12425)(e.i),
          "../icons/tokens/TokenKDA.tsx": () => e.r(815510)(e.i),
          "../icons/tokens/TokenKEEP.tsx": () => e.r(666060)(e.i),
          "../icons/tokens/TokenKEKE.tsx": () => e.r(82969)(e.i),
          "../icons/tokens/TokenKEX.tsx": () => e.r(691943)(e.i),
          "../icons/tokens/TokenKEY.tsx": () => e.r(728190)(e.i),
          "../icons/tokens/TokenKIBA.tsx": () => e.r(2358)(e.i),
          "../icons/tokens/TokenKIBSHI.tsx": () => e.r(732e3)(e.i),
          "../icons/tokens/TokenKICK.tsx": () => e.r(893141)(e.i),
          "../icons/tokens/TokenKICKS.tsx": () => e.r(783005)(e.i),
          "../icons/tokens/TokenKILT.tsx": () => e.r(982340)(e.i),
          "../icons/tokens/TokenKIN.tsx": () => e.r(789534)(e.i),
          "../icons/tokens/TokenKINE.tsx": () => e.r(260359)(e.i),
          "../icons/tokens/TokenKINGSHIB.tsx": () => e.r(645178)(e.i),
          "../icons/tokens/TokenKINT.tsx": () => e.r(793694)(e.i),
          "../icons/tokens/TokenKISHU.tsx": () => e.r(473084)(e.i),
          "../icons/tokens/TokenKIT.tsx": () => e.r(751828)(e.i),
          "../icons/tokens/TokenKITTY.tsx": () => e.r(86373)(e.i),
          "../icons/tokens/TokenKLAY.tsx": () => e.r(880034)(e.i),
          "../icons/tokens/TokenKLEE.tsx": () => e.r(93554)(e.i),
          "../icons/tokens/TokenKLEVA.tsx": () => e.r(437737)(e.i),
          "../icons/tokens/TokenKLIMA.tsx": () => e.r(948130)(e.i),
          "../icons/tokens/TokenKLT.tsx": () => e.r(816850)(e.i),
          "../icons/tokens/TokenKLV.tsx": () => e.r(372229)(e.i),
          "../icons/tokens/TokenKMA.tsx": () => e.r(460211)(e.i),
          "../icons/tokens/TokenKMD.tsx": () => e.r(714640)(e.i),
          "../icons/tokens/TokenKMON.tsx": () => e.r(152570)(e.i),
          "../icons/tokens/TokenKNC.tsx": () => e.r(650147)(e.i),
          "../icons/tokens/TokenKNDX.tsx": () => e.r(589807)(e.i),
          "../icons/tokens/TokenKOGE.tsx": () => e.r(426955)(e.i),
          "../icons/tokens/TokenKOIN.tsx": () => e.r(831256)(e.i),
          "../icons/tokens/TokenKOM.tsx": () => e.r(918295)(e.i),
          "../icons/tokens/TokenKOMPETE.tsx": () => e.r(241396)(e.i),
          "../icons/tokens/TokenKP3R.tsx": () => e.r(397737)(e.i),
          "../icons/tokens/TokenKRL.tsx": () => e.r(548278)(e.i),
          "../icons/tokens/TokenKROM.tsx": () => e.r(866662)(e.i),
          "../icons/tokens/TokenKSM.tsx": () => e.r(902167)(e.i),
          "../icons/tokens/TokenKTC.tsx": () => e.r(513075)(e.i),
          "../icons/tokens/TokenKUB.tsx": () => e.r(631071)(e.i),
          "../icons/tokens/TokenKUJI.tsx": () => e.r(835803)(e.i),
          "../icons/tokens/TokenKUMA.tsx": () => e.r(982987)(e.i),
          "../icons/tokens/TokenKUNCI.tsx": () => e.r(868850)(e.i),
          "../icons/tokens/TokenKWAI.tsx": () => e.r(707795)(e.i),
          "../icons/tokens/TokenKWENTA.tsx": () => e.r(575372)(e.i),
          "../icons/tokens/TokenKYVE.tsx": () => e.r(765117)(e.i),
          "../icons/tokens/TokenKZEN.tsx": () => e.r(99792)(e.i),
          "../icons/tokens/TokenL2.tsx": () => e.r(640429)(e.i),
          "../icons/tokens/TokenLA.tsx": () => e.r(175569)(e.i),
          "../icons/tokens/TokenLADYS.tsx": () => e.r(629387)(e.i),
          "../icons/tokens/TokenLAI.tsx": () => e.r(476298)(e.i),
          "../icons/tokens/TokenLAKE.tsx": () => e.r(486347)(e.i),
          "../icons/tokens/TokenLAMB.tsx": () => e.r(553221)(e.i),
          "../icons/tokens/TokenLAND.tsx": () => e.r(570955)(e.i),
          "../icons/tokens/TokenLAT.tsx": () => e.r(256156)(e.i),
          "../icons/tokens/TokenLAUNCH.tsx": () => e.r(449715)(e.i),
          "../icons/tokens/TokenLAYER.tsx": () => e.r(509238)(e.i),
          "../icons/tokens/TokenLAZIO.tsx": () => e.r(969422)(e.i),
          "../icons/tokens/TokenLBR.tsx": () => e.r(823207)(e.i),
          "../icons/tokens/TokenLBT.tsx": () => e.r(408157)(e.i),
          "../icons/tokens/TokenLCC.tsx": () => e.r(726663)(e.i),
          "../icons/tokens/TokenLCD.tsx": () => e.r(887940)(e.i),
          "../icons/tokens/TokenLCR.tsx": () => e.r(959129)(e.i),
          "../icons/tokens/TokenLCS.tsx": () => e.r(649926)(e.i),
          "../icons/tokens/TokenLCX.tsx": () => e.r(561307)(e.i),
          "../icons/tokens/TokenLDO.tsx": () => e.r(978991)(e.i),
          "../icons/tokens/TokenLEASH.tsx": () => e.r(540597)(e.i),
          "../icons/tokens/TokenLEO.tsx": () => e.r(451676)(e.i),
          "../icons/tokens/TokenLEOX.tsx": () => e.r(976477)(e.i),
          "../icons/tokens/TokenLET.tsx": () => e.r(70736)(e.i),
          "../icons/tokens/TokenLEVER.tsx": () => e.r(764802)(e.i),
          "../icons/tokens/TokenLGCY.tsx": () => e.r(257970)(e.i),
          "../icons/tokens/TokenLIBRE.tsx": () => e.r(165043)(e.i),
          "../icons/tokens/TokenLIF3.tsx": () => e.r(503797)(e.i),
          "../icons/tokens/TokenLIME.tsx": () => e.r(831984)(e.i),
          "../icons/tokens/TokenLINA.tsx": () => e.r(690500)(e.i),
          "../icons/tokens/TokenLINDA.tsx": () => e.r(749979)(e.i),
          "../icons/tokens/TokenLING.tsx": () => e.r(38721)(e.i),
          "../icons/tokens/TokenLINK.tsx": () => e.r(94517)(e.i),
          "../icons/tokens/TokenLINU.tsx": () => e.r(370018)(e.i),
          "../icons/tokens/TokenLIT.tsx": () => e.r(467501)(e.i),
          "../icons/tokens/TokenLITH.tsx": () => e.r(362669)(e.i),
          "../icons/tokens/TokenLITT.tsx": () => e.r(731347)(e.i),
          "../icons/tokens/TokenLIXX.tsx": () => e.r(270787)(e.i),
          "../icons/tokens/TokenLIZA.tsx": () => e.r(851655)(e.i),
          "../icons/tokens/TokenLM.tsx": () => e.r(135631)(e.i),
          "../icons/tokens/TokenLMWR.tsx": () => e.r(920027)(e.i),
          "../icons/tokens/TokenLOC.tsx": () => e.r(639192)(e.i),
          "../icons/tokens/TokenLODE.tsx": () => e.r(824879)(e.i),
          "../icons/tokens/TokenLOKA.tsx": () => e.r(920298)(e.i),
          "../icons/tokens/TokenLON.tsx": () => e.r(343173)(e.i),
          "../icons/tokens/TokenLOOKS.tsx": () => e.r(892)(e.i),
          "../icons/tokens/TokenLOOM.tsx": () => e.r(695078)(e.i),
          "../icons/tokens/TokenLORDS.tsx": () => e.r(516487)(e.i),
          "../icons/tokens/TokenLOVELY.tsx": () => e.r(173697)(e.i),
          "../icons/tokens/TokenLPNT.tsx": () => e.r(874670)(e.i),
          "../icons/tokens/TokenLPOOL.tsx": () => e.r(416239)(e.i),
          "../icons/tokens/TokenLPT.tsx": () => e.r(722686)(e.i),
          "../icons/tokens/TokenLQDR.tsx": () => e.r(147122)(e.i),
          "../icons/tokens/TokenLQTY.tsx": () => e.r(934571)(e.i),
          "../icons/tokens/TokenLRC.tsx": () => e.r(33584)(e.i),
          "../icons/tokens/TokenLSD.tsx": () => e.r(459771)(e.i),
          "../icons/tokens/TokenLSK.tsx": () => e.r(415394)(e.i),
          "../icons/tokens/TokenLSS.tsx": () => e.r(951291)(e.i),
          "../icons/tokens/TokenLTC.tsx": () => e.r(580290)(e.i),
          "../icons/tokens/TokenLTO.tsx": () => e.r(52553)(e.i),
          "../icons/tokens/TokenLTX.tsx": () => e.r(369978)(e.i),
          "../icons/tokens/TokenLUA.tsx": () => e.r(307258)(e.i),
          "../icons/tokens/TokenLUCA.tsx": () => e.r(341265)(e.i),
          "../icons/tokens/TokenLUFC.tsx": () => e.r(719126)(e.i),
          "../icons/tokens/TokenLUNA.tsx": () => e.r(375278)(e.i),
          "../icons/tokens/TokenLUNC.tsx": () => e.r(713452)(e.i),
          "../icons/tokens/TokenLUNR.tsx": () => e.r(256551)(e.i),
          "../icons/tokens/TokenLUSD.tsx": () => e.r(312422)(e.i),
          "../icons/tokens/TokenLVL.tsx": () => e.r(44992)(e.i),
          "../icons/tokens/TokenLYM.tsx": () => e.r(48613)(e.i),
          "../icons/tokens/TokenLYRA.tsx": () => e.r(340757)(e.i),
          "../icons/tokens/TokenLYX.tsx": () => e.r(224829)(e.i),
          "../icons/tokens/TokenLYXE.tsx": () => e.r(544149)(e.i),
          "../icons/tokens/TokenLZM.tsx": () => e.r(922183)(e.i),
          "../icons/tokens/TokenM87.tsx": () => e.r(228994)(e.i),
          "../icons/tokens/TokenMAHA.tsx": () => e.r(92100)(e.i),
          "../icons/tokens/TokenMAN.tsx": () => e.r(529096)(e.i),
          "../icons/tokens/TokenMANA.tsx": () => e.r(442988)(e.i),
          "../icons/tokens/TokenMANC.tsx": () => e.r(944511)(e.i),
          "../icons/tokens/TokenMAP.tsx": () => e.r(955839)(e.i),
          "../icons/tokens/TokenMAPS.tsx": () => e.r(964914)(e.i),
          "../icons/tokens/TokenMARS4.tsx": () => e.r(865226)(e.i),
          "../icons/tokens/TokenMARSH.tsx": () => e.r(349320)(e.i),
          "../icons/tokens/TokenMASK.tsx": () => e.r(631952)(e.i),
          "../icons/tokens/TokenMASQ.tsx": () => e.r(254429)(e.i),
          "../icons/tokens/TokenMATH.tsx": () => e.r(819811)(e.i),
          "../icons/tokens/TokenMATIC.tsx": () => e.r(680618)(e.i),
          "../icons/tokens/TokenMATICX.tsx": () => e.r(741512)(e.i),
          "../icons/tokens/TokenMAV.tsx": () => e.r(348325)(e.i),
          "../icons/tokens/TokenMAX.tsx": () => e.r(689735)(e.i),
          "../icons/tokens/TokenMBD.tsx": () => e.r(199156)(e.i),
          "../icons/tokens/TokenMBL.tsx": () => e.r(64735)(e.i),
          "../icons/tokens/TokenMBOX.tsx": () => e.r(850894)(e.i),
          "../icons/tokens/TokenMBX.tsx": () => e.r(59133)(e.i),
          "../icons/tokens/TokenMC.tsx": () => e.r(151171)(e.i),
          "../icons/tokens/TokenMCADE.tsx": () => e.r(522527)(e.i),
          "../icons/tokens/TokenMCB.tsx": () => e.r(551098)(e.i),
          "../icons/tokens/TokenMCHC.tsx": () => e.r(192403)(e.i),
          "../icons/tokens/TokenMCONTENT.tsx": () => e.r(731663)(e.i),
          "../icons/tokens/TokenMCRT.tsx": () => e.r(205371)(e.i),
          "../icons/tokens/TokenMDAO.tsx": () => e.r(285672)(e.i),
          "../icons/tokens/TokenMDT.tsx": () => e.r(656945)(e.i),
          "../icons/tokens/TokenMDX.tsx": () => e.r(193590)(e.i),
          "../icons/tokens/TokenMEAN.tsx": () => e.r(921943)(e.i),
          "../icons/tokens/TokenMED.tsx": () => e.r(288911)(e.i),
          "../icons/tokens/TokenMEDIA.tsx": () => e.r(495150)(e.i),
          "../icons/tokens/TokenMEED.tsx": () => e.r(765190)(e.i),
          "../icons/tokens/TokenMELD.tsx": () => e.r(987688)(e.i),
          "../icons/tokens/TokenMEME.tsx": () => e.r(14562)(e.i),
          "../icons/tokens/TokenMEMEAI.tsx": () => e.r(790117)(e.i),
          "../icons/tokens/TokenMET.tsx": () => e.r(45398)(e.i),
          "../icons/tokens/TokenMETA.tsx": () => e.r(958548)(e.i),
          "../icons/tokens/TokenMETAL.tsx": () => e.r(670221)(e.i),
          "../icons/tokens/TokenMETAV.tsx": () => e.r(784323)(e.i),
          "../icons/tokens/TokenMETF.tsx": () => e.r(243598)(e.i),
          "../icons/tokens/TokenMETFI.tsx": () => e.r(563247)(e.i),
          "../icons/tokens/TokenMETIS.tsx": () => e.r(831741)(e.i),
          "../icons/tokens/TokenMEX.tsx": () => e.r(256e3)(e.i),
          "../icons/tokens/TokenMF.tsx": () => e.r(396661)(e.i),
          "../icons/tokens/TokenMFT.tsx": () => e.r(471444)(e.i),
          "../icons/tokens/TokenMGP.tsx": () => e.r(950922)(e.i),
          "../icons/tokens/TokenMIM.tsx": () => e.r(984648)(e.i),
          "../icons/tokens/TokenMIMATIC.tsx": () => e.r(926617)(e.i),
          "../icons/tokens/TokenMIMO.tsx": () => e.r(668646)(e.i),
          "../icons/tokens/TokenMIN.tsx": () => e.r(87620)(e.i),
          "../icons/tokens/TokenMINA.tsx": () => e.r(719999)(e.i),
          "../icons/tokens/TokenMIND.tsx": () => e.r(668023)(e.i),
          "../icons/tokens/TokenMINTME.tsx": () => e.r(427516)(e.i),
          "../icons/tokens/TokenMINU.tsx": () => e.r(304001)(e.i),
          "../icons/tokens/TokenMIR.tsx": () => e.r(698529)(e.i),
          "../icons/tokens/TokenMIX.tsx": () => e.r(127715)(e.i),
          "../icons/tokens/TokenMKR.tsx": () => e.r(174302)(e.i),
          "../icons/tokens/TokenML.tsx": () => e.r(126483)(e.i),
          "../icons/tokens/TokenMLK.tsx": () => e.r(285020)(e.i),
          "../icons/tokens/TokenMLN.tsx": () => e.r(363783)(e.i),
          "../icons/tokens/TokenMM.tsx": () => e.r(561773)(e.i),
          "../icons/tokens/TokenMMF.tsx": () => e.r(431632)(e.i),
          "../icons/tokens/TokenMMIT.tsx": () => e.r(531822)(e.i),
          "../icons/tokens/TokenMMO.tsx": () => e.r(853638)(e.i),
          "../icons/tokens/TokenMMPRO.tsx": () => e.r(262634)(e.i),
          "../icons/tokens/TokenMMY.tsx": () => e.r(579318)(e.i),
          "../icons/tokens/TokenMNB.tsx": () => e.r(528004)(e.i),
          "../icons/tokens/TokenMND.tsx": () => e.r(492041)(e.i),
          "../icons/tokens/TokenMNDE.tsx": () => e.r(719410)(e.i),
          "../icons/tokens/TokenMNGO.tsx": () => e.r(896520)(e.i),
          "../icons/tokens/TokenMNR.tsx": () => e.r(712451)(e.i),
          "../icons/tokens/TokenMNST.tsx": () => e.r(74964)(e.i),
          "../icons/tokens/TokenMNT.tsx": () => e.r(999695)(e.i),
          "../icons/tokens/TokenMNTC.tsx": () => e.r(824514)(e.i),
          "../icons/tokens/TokenMNTL.tsx": () => e.r(343214)(e.i),
          "../icons/tokens/TokenMNW.tsx": () => e.r(408454)(e.i),
          "../icons/tokens/TokenMOBI.tsx": () => e.r(988989)(e.i),
          "../icons/tokens/TokenMOBILE.tsx": () => e.r(826670)(e.i),
          "../icons/tokens/TokenMOBY.tsx": () => e.r(455979)(e.i),
          "../icons/tokens/TokenMOC.tsx": () => e.r(523722)(e.i),
          "../icons/tokens/TokenMOCHI.tsx": () => e.r(252840)(e.i),
          "../icons/tokens/TokenMOD.tsx": () => e.r(916553)(e.i),
          "../icons/tokens/TokenMOE.tsx": () => e.r(914450)(e.i),
          "../icons/tokens/TokenMOG.tsx": () => e.r(703469)(e.i),
          "../icons/tokens/TokenMONA.tsx": () => e.r(220633)(e.i),
          "../icons/tokens/TokenMOON.tsx": () => e.r(41362)(e.i),
          "../icons/tokens/TokenMOONED.tsx": () => e.r(288733)(e.i),
          "../icons/tokens/TokenMOOV.tsx": () => e.r(482455)(e.i),
          "../icons/tokens/TokenMORK.tsx": () => e.r(298894)(e.i),
          "../icons/tokens/TokenMOVE.tsx": () => e.r(623964)(e.i),
          "../icons/tokens/TokenMOVR.tsx": () => e.r(608005)(e.i),
          "../icons/tokens/TokenMPL.tsx": () => e.r(904004)(e.i),
          "../icons/tokens/TokenMPLX.tsx": () => e.r(239215)(e.i),
          "../icons/tokens/TokenMPS.tsx": () => e.r(510566)(e.i),
          "../icons/tokens/TokenMRS.tsx": () => e.r(271791)(e.i),
          "../icons/tokens/TokenMSOL.tsx": () => e.r(701023)(e.i),
          "../icons/tokens/TokenMST.tsx": () => e.r(684126)(e.i),
          "../icons/tokens/TokenMTA.tsx": () => e.r(140057)(e.i),
          "../icons/tokens/TokenMTD.tsx": () => e.r(589232)(e.i),
          "../icons/tokens/TokenMTH.tsx": () => e.r(422443)(e.i),
          "../icons/tokens/TokenMTL.tsx": () => e.r(887420)(e.i),
          "../icons/tokens/TokenMTLX.tsx": () => e.r(878650)(e.i),
          "../icons/tokens/TokenMTRG.tsx": () => e.r(286175)(e.i),
          "../icons/tokens/TokenMTRM.tsx": () => e.r(637028)(e.i),
          "../icons/tokens/TokenMTS.tsx": () => e.r(948171)(e.i),
          "../icons/tokens/TokenMTV.tsx": () => e.r(212230)(e.i),
          "../icons/tokens/TokenMTVT.tsx": () => e.r(999568)(e.i),
          "../icons/tokens/TokenMUDOL2.tsx": () => e.r(569483)(e.i),
          "../icons/tokens/TokenMUSD.tsx": () => e.r(927388)(e.i),
          "../icons/tokens/TokenMUSE.tsx": () => e.r(298321)(e.i),
          "../icons/tokens/TokenMUSIC.tsx": () => e.r(744167)(e.i),
          "../icons/tokens/TokenMUTE.tsx": () => e.r(902848)(e.i),
          "../icons/tokens/TokenMV.tsx": () => e.r(664613)(e.i),
          "../icons/tokens/TokenMVD.tsx": () => e.r(908157)(e.i),
          "../icons/tokens/TokenMVI.tsx": () => e.r(734957)(e.i),
          "../icons/tokens/TokenMVL.tsx": () => e.r(867089)(e.i),
          "../icons/tokens/TokenMVX.tsx": () => e.r(901872)(e.i),
          "../icons/tokens/TokenMWC.tsx": () => e.r(320576)(e.i),
          "../icons/tokens/TokenMX.tsx": () => e.r(605990)(e.i),
          "../icons/tokens/TokenMXC.tsx": () => e.r(600652)(e.i),
          "../icons/tokens/TokenMXM.tsx": () => e.r(722373)(e.i),
          "../icons/tokens/TokenMYRIA.tsx": () => e.r(535532)(e.i),
          "../icons/tokens/TokenMYST.tsx": () => e.r(335948)(e.i),
          "../icons/tokens/TokenMZR.tsx": () => e.r(265499)(e.i),
          "../icons/tokens/TokenNABOX.tsx": () => e.r(311857)(e.i),
          "../icons/tokens/TokenNADA.tsx": () => e.r(241624)(e.i),
          "../icons/tokens/TokenNAKA.tsx": () => e.r(26249)(e.i),
          "../icons/tokens/TokenNALS.tsx": () => e.r(284463)(e.i),
          "../icons/tokens/TokenNAOS.tsx": () => e.r(11619)(e.i),
          "../icons/tokens/TokenNAP.tsx": () => e.r(191130)(e.i),
          "../icons/tokens/TokenNAV.tsx": () => e.r(914805)(e.i),
          "../icons/tokens/TokenNAVI.tsx": () => e.r(193146)(e.i),
          "../icons/tokens/TokenNBLU.tsx": () => e.r(847017)(e.i),
          "../icons/tokens/TokenNBT.tsx": () => e.r(233036)(e.i),
          "../icons/tokens/TokenNCDT.tsx": () => e.r(941226)(e.i),
          "../icons/tokens/TokenNCR.tsx": () => e.r(374539)(e.i),
          "../icons/tokens/TokenNCT.tsx": () => e.r(598952)(e.i),
          "../icons/tokens/TokenNEAR.tsx": () => e.r(233164)(e.i),
          "../icons/tokens/TokenNEBO.tsx": () => e.r(676889)(e.i),
          "../icons/tokens/TokenNEER.tsx": () => e.r(997536)(e.i),
          "../icons/tokens/TokenNEO.tsx": () => e.r(756634)(e.i),
          "../icons/tokens/TokenNEON.tsx": () => e.r(792418)(e.i),
          "../icons/tokens/TokenNEST.tsx": () => e.r(391172)(e.i),
          "../icons/tokens/TokenNETT.tsx": () => e.r(565800)(e.i),
          "../icons/tokens/TokenNEURONI.tsx": () => e.r(291359)(e.i),
          "../icons/tokens/TokenNEUROS.tsx": () => e.r(535452)(e.i),
          "../icons/tokens/TokenNEWO.tsx": () => e.r(206909)(e.i),
          "../icons/tokens/TokenNEX.tsx": () => e.r(649061)(e.i),
          "../icons/tokens/TokenNEXA.tsx": () => e.r(39574)(e.i),
          "../icons/tokens/TokenNEXO.tsx": () => e.r(758675)(e.i),
          "../icons/tokens/TokenNFAI.tsx": () => e.r(774850)(e.i),
          "../icons/tokens/TokenNFD.tsx": () => e.r(151761)(e.i),
          "../icons/tokens/TokenNFTART.tsx": () => e.r(930424)(e.i),
          "../icons/tokens/TokenNFTB.tsx": () => e.r(779098)(e.i),
          "../icons/tokens/TokenNFTBS.tsx": () => e.r(670626)(e.i),
          "../icons/tokens/TokenNFTX.tsx": () => e.r(629808)(e.i),
          "../icons/tokens/TokenNGC.tsx": () => e.r(704713)(e.i),
          "../icons/tokens/TokenNGL.tsx": () => e.r(955604)(e.i),
          "../icons/tokens/TokenNGM.tsx": () => e.r(489431)(e.i),
          "../icons/tokens/TokenNHT.tsx": () => e.r(463246)(e.i),
          "../icons/tokens/TokenNIM.tsx": () => e.r(105568)(e.i),
          "../icons/tokens/TokenNKN.tsx": () => e.r(575241)(e.i),
          "../icons/tokens/TokenNLS.tsx": () => e.r(632195)(e.i),
          "../icons/tokens/TokenNMR.tsx": () => e.r(21721)(e.i),
          "../icons/tokens/TokenNMX.tsx": () => e.r(724486)(e.i),
          "../icons/tokens/TokenNODL.tsx": () => e.r(672085)(e.i),
          "../icons/tokens/TokenNOIA.tsx": () => e.r(509759)(e.i),
          "../icons/tokens/TokenNOM.tsx": () => e.r(900754)(e.i),
          "../icons/tokens/TokenNORD.tsx": () => e.r(852329)(e.i),
          "../icons/tokens/TokenNOS.tsx": () => e.r(228154)(e.i),
          "../icons/tokens/TokenNPC.tsx": () => e.r(511567)(e.i),
          "../icons/tokens/TokenNPM.tsx": () => e.r(497341)(e.i),
          "../icons/tokens/TokenNPXS.tsx": () => e.r(654424)(e.i),
          "../icons/tokens/TokenNRCH.tsx": () => e.r(722300)(e.i),
          "../icons/tokens/TokenNRG.tsx": () => e.r(356753)(e.i),
          "../icons/tokens/TokenNSBT.tsx": () => e.r(917629)(e.i),
          "../icons/tokens/TokenNSFW.tsx": () => e.r(665490)(e.i),
          "../icons/tokens/TokenNTX.tsx": () => e.r(484610)(e.i),
          "../icons/tokens/TokenNULS.tsx": () => e.r(914867)(e.i),
          "../icons/tokens/TokenNUM.tsx": () => e.r(567713)(e.i),
          "../icons/tokens/TokenNVIR.tsx": () => e.r(747883)(e.i),
          "../icons/tokens/TokenNVT.tsx": () => e.r(777535)(e.i),
          "../icons/tokens/TokenNWC.tsx": () => e.r(403606)(e.i),
          "../icons/tokens/TokenNXM.tsx": () => e.r(597754)(e.i),
          "../icons/tokens/TokenNXRA.tsx": () => e.r(90301)(e.i),
          "../icons/tokens/TokenNXT.tsx": () => e.r(530867)(e.i),
          "../icons/tokens/TokenNYM.tsx": () => e.r(967574)(e.i),
          "../icons/tokens/TokenO3.tsx": () => e.r(671594)(e.i),
          "../icons/tokens/TokenOAS.tsx": () => e.r(786118)(e.i),
          "../icons/tokens/TokenOATH.tsx": () => e.r(750609)(e.i),
          "../icons/tokens/TokenOAX.tsx": () => e.r(853575)(e.i),
          "../icons/tokens/TokenOBI.tsx": () => e.r(629839)(e.i),
          "../icons/tokens/TokenOBOT.tsx": () => e.r(857998)(e.i),
          "../icons/tokens/TokenOBSR.tsx": () => e.r(778182)(e.i),
          "../icons/tokens/TokenOCE.tsx": () => e.r(880302)(e.i),
          "../icons/tokens/TokenOCEAN.tsx": () => e.r(637685)(e.i),
          "../icons/tokens/TokenOCTA.tsx": () => e.r(776761)(e.i),
          "../icons/tokens/TokenODDZ.tsx": () => e.r(747651)(e.i),
          "../icons/tokens/TokenODIN.tsx": () => e.r(880059)(e.i),
          "../icons/tokens/TokenOETH.tsx": () => e.r(102520)(e.i),
          "../icons/tokens/TokenOGGY.tsx": () => e.r(871392)(e.i),
          "../icons/tokens/TokenOGN.tsx": () => e.r(950479)(e.i),
          "../icons/tokens/TokenOKB.tsx": () => e.r(240903)(e.i),
          "../icons/tokens/TokenOKT.tsx": () => e.r(895829)(e.i),
          "../icons/tokens/TokenOLT.tsx": () => e.r(692970)(e.i),
          "../icons/tokens/TokenOM.tsx": () => e.r(529932)(e.i),
          "../icons/tokens/TokenOMAX.tsx": () => e.r(771868)(e.i),
          "../icons/tokens/TokenOMG.tsx": () => e.r(718337)(e.i),
          "../icons/tokens/TokenOMI.tsx": () => e.r(546370)(e.i),
          "../icons/tokens/TokenOMMI.tsx": () => e.r(377890)(e.i),
          "../icons/tokens/TokenOMNI.tsx": () => e.r(436414)(e.i),
          "../icons/tokens/TokenOMNOM.tsx": () => e.r(576308)(e.i),
          "../icons/tokens/TokenONE.tsx": () => e.r(101274)(e.i),
          "../icons/tokens/TokenONG.tsx": () => e.r(25125)(e.i),
          "../icons/tokens/TokenONI.tsx": () => e.r(131786)(e.i),
          "../icons/tokens/TokenONION.tsx": () => e.r(932800)(e.i),
          "../icons/tokens/TokenONIT.tsx": () => e.r(16055)(e.i),
          "../icons/tokens/TokenONT.tsx": () => e.r(918259)(e.i),
          "../icons/tokens/TokenOOE.tsx": () => e.r(638704)(e.i),
          "../icons/tokens/TokenOOKI.tsx": () => e.r(11077)(e.i),
          "../icons/tokens/TokenOOKS.tsx": () => e.r(507541)(e.i),
          "../icons/tokens/TokenOP.tsx": () => e.r(714608)(e.i),
          "../icons/tokens/TokenOPIUM.tsx": () => e.r(92660)(e.i),
          "../icons/tokens/TokenOPTI.tsx": () => e.r(864715)(e.i),
          "../icons/tokens/TokenOPUL.tsx": () => e.r(289956)(e.i),
          "../icons/tokens/TokenORAI.tsx": () => e.r(905917)(e.i),
          "../icons/tokens/TokenORARE.tsx": () => e.r(183770)(e.i),
          "../icons/tokens/TokenORB.tsx": () => e.r(549229)(e.i),
          "../icons/tokens/TokenORBS.tsx": () => e.r(933153)(e.i),
          "../icons/tokens/TokenORDI.tsx": () => e.r(279437)(e.i),
          "../icons/tokens/TokenORN.tsx": () => e.r(206705)(e.i),
          "../icons/tokens/TokenORT.tsx": () => e.r(993646)(e.i),
          "../icons/tokens/TokenOS.tsx": () => e.r(111832)(e.i),
          "../icons/tokens/TokenOSAK.tsx": () => e.r(880408)(e.i),
          "../icons/tokens/TokenOSMO.tsx": () => e.r(470791)(e.i),
          "../icons/tokens/TokenOTK.tsx": () => e.r(509567)(e.i),
          "../icons/tokens/TokenOUSD.tsx": () => e.r(940229)(e.i),
          "../icons/tokens/TokenOVR.tsx": () => e.r(565945)(e.i),
          "../icons/tokens/TokenOX.tsx": () => e.r(332188)(e.i),
          "../icons/tokens/TokenOXB.tsx": () => e.r(245890)(e.i),
          "../icons/tokens/TokenOXEN.tsx": () => e.r(505878)(e.i),
          "../icons/tokens/TokenOXT.tsx": () => e.r(587256)(e.i),
          "../icons/tokens/TokenOXY.tsx": () => e.r(121449)(e.i),
          "../icons/tokens/TokenOZO.tsx": () => e.r(850924)(e.i),
          "../icons/tokens/TokenPAAL.tsx": () => e.r(295122)(e.i),
          "../icons/tokens/TokenPAC.tsx": () => e.r(778461)(e.i),
          "../icons/tokens/TokenPAI.tsx": () => e.r(366779)(e.i),
          "../icons/tokens/TokenPAID.tsx": () => e.r(508685)(e.i),
          "../icons/tokens/TokenPAL.tsx": () => e.r(309056)(e.i),
          "../icons/tokens/TokenPALM.tsx": () => e.r(615685)(e.i),
          "../icons/tokens/TokenPAPER.tsx": () => e.r(444214)(e.i),
          "../icons/tokens/TokenPARA.tsx": () => e.r(299420)(e.i),
          "../icons/tokens/TokenPART.tsx": () => e.r(739193)(e.i),
          "../icons/tokens/TokenPASG.tsx": () => e.r(514060)(e.i),
          "../icons/tokens/TokenPAW.tsx": () => e.r(53309)(e.i),
          "../icons/tokens/TokenPAWTH.tsx": () => e.r(809049)(e.i),
          "../icons/tokens/TokenPAXG.tsx": () => e.r(152572)(e.i),
          "../icons/tokens/TokenPAY.tsx": () => e.r(544639)(e.i),
          "../icons/tokens/TokenPBR.tsx": () => e.r(92098)(e.i),
          "../icons/tokens/TokenPBX.tsx": () => e.r(812176)(e.i),
          "../icons/tokens/TokenPDEX.tsx": () => e.r(985938)(e.i),
          "../icons/tokens/TokenPDT.tsx": () => e.r(62297)(e.i),
          "../icons/tokens/TokenPEAQ.tsx": () => e.r(91107)(e.i),
          "../icons/tokens/TokenPEEL.tsx": () => e.r(786871)(e.i),
          "../icons/tokens/TokenPENDLE.tsx": () => e.r(905242)(e.i),
          "../icons/tokens/TokenPEOPLE.tsx": () => e.r(149178)(e.i),
          "../icons/tokens/TokenPEPE.tsx": () => e.r(629502)(e.i),
          "../icons/tokens/TokenPEPES.tsx": () => e.r(349466)(e.i),
          "../icons/tokens/TokenPER.tsx": () => e.r(192702)(e.i),
          "../icons/tokens/TokenPERC.tsx": () => e.r(859339)(e.i),
          "../icons/tokens/TokenPERI.tsx": () => e.r(83907)(e.i),
          "../icons/tokens/TokenPERP.tsx": () => e.r(555409)(e.i),
          "../icons/tokens/TokenPEX.tsx": () => e.r(788331)(e.i),
          "../icons/tokens/TokenPGX.tsx": () => e.r(81592)(e.i),
          "../icons/tokens/TokenPHA.tsx": () => e.r(899582)(e.i),
          "../icons/tokens/TokenPHB.tsx": () => e.r(904641)(e.i),
          "../icons/tokens/TokenPHONON.tsx": () => e.r(549743)(e.i),
          "../icons/tokens/TokenPI.tsx": () => e.r(604453)(e.i),
          "../icons/tokens/TokenPIB.tsx": () => e.r(515131)(e.i),
          "../icons/tokens/TokenPICA.tsx": () => e.r(541201)(e.i),
          "../icons/tokens/TokenPICKLE.tsx": () => e.r(349263)(e.i),
          "../icons/tokens/TokenPIKA.tsx": () => e.r(508351)(e.i),
          "../icons/tokens/TokenPINKSALE.tsx": () => e.r(932091)(e.i),
          "../icons/tokens/TokenPINU.tsx": () => e.r(8828)(e.i),
          "../icons/tokens/TokenPIP.tsx": () => e.r(785857)(e.i),
          "../icons/tokens/TokenPIVX.tsx": () => e.r(209942)(e.i),
          "../icons/tokens/TokenPIXEL.tsx": () => e.r(512075)(e.i),
          "../icons/tokens/TokenPIZA.tsx": () => e.r(696967)(e.i),
          "../icons/tokens/TokenPKF.tsx": () => e.r(584702)(e.i),
          "../icons/tokens/TokenPKR.tsx": () => e.r(782424)(e.i),
          "../icons/tokens/TokenPKT.tsx": () => e.r(96887)(e.i),
          "../icons/tokens/TokenPLA.tsx": () => e.r(345099)(e.i),
          "../icons/tokens/TokenPLANETS.tsx": () => e.r(289726)(e.i),
          "../icons/tokens/TokenPLASTIK.tsx": () => e.r(958260)(e.i),
          "../icons/tokens/TokenPLEB.tsx": () => e.r(888844)(e.i),
          "../icons/tokens/TokenPLEX.tsx": () => e.r(463016)(e.i),
          "../icons/tokens/TokenPLI.tsx": () => e.r(235557)(e.i),
          "../icons/tokens/TokenPLN.tsx": () => e.r(748481)(e.i),
          "../icons/tokens/TokenPLR.tsx": () => e.r(526304)(e.i),
          "../icons/tokens/TokenPLT.tsx": () => e.r(170401)(e.i),
          "../icons/tokens/TokenPLU.tsx": () => e.r(609747)(e.i),
          "../icons/tokens/TokenPLY.tsx": () => e.r(353778)(e.i),
          "../icons/tokens/TokenPMON.tsx": () => e.r(435175)(e.i),
          "../icons/tokens/TokenPNB.tsx": () => e.r(707372)(e.i),
          "../icons/tokens/TokenPNG.tsx": () => e.r(211723)(e.i),
          "../icons/tokens/TokenPNK.tsx": () => e.r(464559)(e.i),
          "../icons/tokens/TokenPNP.tsx": () => e.r(658109)(e.i),
          "../icons/tokens/TokenPNT.tsx": () => e.r(393940)(e.i),
          "../icons/tokens/TokenPOKT.tsx": () => e.r(659223)(e.i),
          "../icons/tokens/TokenPOL.tsx": () => e.r(307207)(e.i),
          "../icons/tokens/TokenPOLA.tsx": () => e.r(229255)(e.i),
          "../icons/tokens/TokenPOLC.tsx": () => e.r(593061)(e.i),
          "../icons/tokens/TokenPOLK.tsx": () => e.r(375749)(e.i),
          "../icons/tokens/TokenPOLS.tsx": () => e.r(805708)(e.i),
          "../icons/tokens/TokenPOLX.tsx": () => e.r(426038)(e.i),
          "../icons/tokens/TokenPOLY.tsx": () => e.r(772938)(e.i),
          "../icons/tokens/TokenPOLYDOGE.tsx": () => e.r(217689)(e.i),
          "../icons/tokens/TokenPOLYPAD.tsx": () => e.r(692972)(e.i),
          "../icons/tokens/TokenPOLYX.tsx": () => e.r(738541)(e.i),
          "../icons/tokens/TokenPOND.tsx": () => e.r(194414)(e.i),
          "../icons/tokens/TokenPOOH.tsx": () => e.r(990476)(e.i),
          "../icons/tokens/TokenPOOLX.tsx": () => e.r(448841)(e.i),
          "../icons/tokens/TokenPOP.tsx": () => e.r(84869)(e.i),
          "../icons/tokens/TokenPOPCAT.tsx": () => e.r(67291)(e.i),
          "../icons/tokens/TokenPORK.tsx": () => e.r(282562)(e.i),
          "../icons/tokens/TokenPORTAL.tsx": () => e.r(751530)(e.i),
          "../icons/tokens/TokenPORTX.tsx": () => e.r(137445)(e.i),
          "../icons/tokens/TokenPOWR.tsx": () => e.r(795496)(e.i),
          "../icons/tokens/TokenPPAY.tsx": () => e.r(625295)(e.i),
          "../icons/tokens/TokenPPC.tsx": () => e.r(889382)(e.i),
          "../icons/tokens/TokenPPT.tsx": () => e.r(40655)(e.i),
          "../icons/tokens/TokenPRE.tsx": () => e.r(375942)(e.i),
          "../icons/tokens/TokenPREMIA.tsx": () => e.r(175054)(e.i),
          "../icons/tokens/TokenPRIMAL.tsx": () => e.r(847044)(e.i),
          "../icons/tokens/TokenPRIME.tsx": () => e.r(908865)(e.i),
          "../icons/tokens/TokenPRISM.tsx": () => e.r(759623)(e.i),
          "../icons/tokens/TokenPRO.tsx": () => e.r(274039)(e.i),
          "../icons/tokens/TokenPROB.tsx": () => e.r(544142)(e.i),
          "../icons/tokens/TokenPROM.tsx": () => e.r(277485)(e.i),
          "../icons/tokens/TokenPROPC.tsx": () => e.r(999855)(e.i),
          "../icons/tokens/TokenPROPS.tsx": () => e.r(327481)(e.i),
          "../icons/tokens/TokenPROS.tsx": () => e.r(810983)(e.i),
          "../icons/tokens/TokenPROTEO.tsx": () => e.r(240955)(e.i),
          "../icons/tokens/TokenPRQ.tsx": () => e.r(865750)(e.i),
          "../icons/tokens/TokenPRTC.tsx": () => e.r(210319)(e.i),
          "../icons/tokens/TokenPRX.tsx": () => e.r(652856)(e.i),
          "../icons/tokens/TokenPRY.tsx": () => e.r(940291)(e.i),
          "../icons/tokens/TokenPSL.tsx": () => e.r(813520)(e.i),
          "../icons/tokens/TokenPSP.tsx": () => e.r(17352)(e.i),
          "../icons/tokens/TokenPSTAKE.tsx": () => e.r(283894)(e.i),
          "../icons/tokens/TokenPSWAP.tsx": () => e.r(988359)(e.i),
          "../icons/tokens/TokenPTS.tsx": () => e.r(324505)(e.i),
          "../icons/tokens/TokenPTU.tsx": () => e.r(935327)(e.i),
          "../icons/tokens/TokenPUMLX.tsx": () => e.r(618673)(e.i),
          "../icons/tokens/TokenPUNDIX.tsx": () => e.r(997511)(e.i),
          "../icons/tokens/TokenPURSE.tsx": () => e.r(860827)(e.i),
          "../icons/tokens/TokenPUSH.tsx": () => e.r(667360)(e.i),
          "../icons/tokens/TokenPUSSY.tsx": () => e.r(855223)(e.i),
          "../icons/tokens/TokenPWR.tsx": () => e.r(947222)(e.i),
          "../icons/tokens/TokenPXP.tsx": () => e.r(511099)(e.i),
          "../icons/tokens/TokenPYR.tsx": () => e.r(600035)(e.i),
          "../icons/tokens/TokenPYTH.tsx": () => e.r(948132)(e.i),
          "../icons/tokens/TokenPYUSD.tsx": () => e.r(720271)(e.i),
          "../icons/tokens/TokenPZP.tsx": () => e.r(436334)(e.i),
          "../icons/tokens/TokenQANX.tsx": () => e.r(465333)(e.i),
          "../icons/tokens/TokenQASH.tsx": () => e.r(995798)(e.i),
          "../icons/tokens/TokenQKC.tsx": () => e.r(849534)(e.i),
          "../icons/tokens/TokenQLC.tsx": () => e.r(776351)(e.i),
          "../icons/tokens/TokenQMALL.tsx": () => e.r(936662)(e.i),
          "../icons/tokens/TokenQNT.tsx": () => e.r(169421)(e.i),
          "../icons/tokens/TokenQOM.tsx": () => e.r(800372)(e.i),
          "../icons/tokens/TokenQR.tsx": () => e.r(814623)(e.i),
          "../icons/tokens/TokenQRDO.tsx": () => e.r(186089)(e.i),
          "../icons/tokens/TokenQRL.tsx": () => e.r(447251)(e.i),
          "../icons/tokens/TokenQSR.tsx": () => e.r(740772)(e.i),
          "../icons/tokens/TokenQTCON.tsx": () => e.r(371133)(e.i),
          "../icons/tokens/TokenQTUM.tsx": () => e.r(566151)(e.i),
          "../icons/tokens/TokenQUAD.tsx": () => e.r(266683)(e.i),
          "../icons/tokens/TokenQUARTZ.tsx": () => e.r(122339)(e.i),
          "../icons/tokens/TokenQUBE.tsx": () => e.r(103750)(e.i),
          "../icons/tokens/TokenQUICK.tsx": () => e.r(848576)(e.i),
          "../icons/tokens/TokenQUIDD.tsx": () => e.r(857838)(e.i),
          "../icons/tokens/TokenQUINT.tsx": () => e.r(766509)(e.i),
          "../icons/tokens/TokenR.tsx": () => e.r(950285)(e.i),
          "../icons/tokens/TokenRAD.tsx": () => e.r(971334)(e.i),
          "../icons/tokens/TokenRADIO.tsx": () => e.r(260556)(e.i),
          "../icons/tokens/TokenRAE.tsx": () => e.r(983649)(e.i),
          "../icons/tokens/TokenRAI.tsx": () => e.r(786761)(e.i),
          "../icons/tokens/TokenRAIL.tsx": () => e.r(741682)(e.i),
          "../icons/tokens/TokenRAKE.tsx": () => e.r(400404)(e.i),
          "../icons/tokens/TokenRAM.tsx": () => e.r(66583)(e.i),
          "../icons/tokens/TokenRAMP.tsx": () => e.r(10929)(e.i),
          "../icons/tokens/TokenRARE.tsx": () => e.r(597846)(e.i),
          "../icons/tokens/TokenRARI.tsx": () => e.r(872904)(e.i),
          "../icons/tokens/TokenRAVEN.tsx": () => e.r(276154)(e.i),
          "../icons/tokens/TokenRAY.tsx": () => e.r(910510)(e.i),
          "../icons/tokens/TokenRAZOR.tsx": () => e.r(447544)(e.i),
          "../icons/tokens/TokenRBD.tsx": () => e.r(205389)(e.i),
          "../icons/tokens/TokenRBIF.tsx": () => e.r(696498)(e.i),
          "../icons/tokens/TokenRBLS.tsx": () => e.r(197675)(e.i),
          "../icons/tokens/TokenRBN.tsx": () => e.r(282521)(e.i),
          "../icons/tokens/TokenRBW.tsx": () => e.r(328147)(e.i),
          "../icons/tokens/TokenRBX.tsx": () => e.r(581115)(e.i),
          "../icons/tokens/TokenRCN.tsx": () => e.r(213334)(e.i),
          "../icons/tokens/TokenRDD.tsx": () => e.r(794504)(e.i),
          "../icons/tokens/TokenRDN.tsx": () => e.r(589395)(e.i),
          "../icons/tokens/TokenRDNT.tsx": () => e.r(406697)(e.i),
          "../icons/tokens/TokenRDPX.tsx": () => e.r(253823)(e.i),
          "../icons/tokens/TokenRDT.tsx": () => e.r(699495)(e.i),
          "../icons/tokens/TokenREALM.tsx": () => e.r(206162)(e.i),
          "../icons/tokens/TokenREEF.tsx": () => e.r(198533)(e.i),
          "../icons/tokens/TokenREF.tsx": () => e.r(260832)(e.i),
          "../icons/tokens/TokenREGEN.tsx": () => e.r(579927)(e.i),
          "../icons/tokens/TokenREN.tsx": () => e.r(599074)(e.i),
          "../icons/tokens/TokenRENBTC.tsx": () => e.r(726115)(e.i),
          "../icons/tokens/TokenREP.tsx": () => e.r(644033)(e.i),
          "../icons/tokens/TokenREQ.tsx": () => e.r(791403)(e.i),
          "../icons/tokens/TokenRET.tsx": () => e.r(178630)(e.i),
          "../icons/tokens/TokenRETH.tsx": () => e.r(33367)(e.i),
          "../icons/tokens/TokenREUNI.tsx": () => e.r(851979)(e.i),
          "../icons/tokens/TokenREV.tsx": () => e.r(191258)(e.i),
          "../icons/tokens/TokenREV3L.tsx": () => e.r(993656)(e.i),
          "../icons/tokens/TokenREVO.tsx": () => e.r(758741)(e.i),
          "../icons/tokens/TokenREVV.tsx": () => e.r(930002)(e.i),
          "../icons/tokens/TokenRFD.tsx": () => e.r(458896)(e.i),
          "../icons/tokens/TokenRFOX.tsx": () => e.r(63903)(e.i),
          "../icons/tokens/TokenRGEN.tsx": () => e.r(748892)(e.i),
          "../icons/tokens/TokenRGT.tsx": () => e.r(641665)(e.i),
          "../icons/tokens/TokenRIBBIT.tsx": () => e.r(964877)(e.i),
          "../icons/tokens/TokenRIDE.tsx": () => e.r(744763)(e.i),
          "../icons/tokens/TokenRIF.tsx": () => e.r(712994)(e.i),
          "../icons/tokens/TokenRIN.tsx": () => e.r(795709)(e.i),
          "../icons/tokens/TokenRING.tsx": () => e.r(395835)(e.i),
          "../icons/tokens/TokenRISE.tsx": () => e.r(919613)(e.i),
          "../icons/tokens/TokenRISITA.tsx": () => e.r(40601)(e.i),
          "../icons/tokens/TokenRITE.tsx": () => e.r(652589)(e.i),
          "../icons/tokens/TokenRJV.tsx": () => e.r(566134)(e.i),
          "../icons/tokens/TokenRLB.tsx": () => e.r(825716)(e.i),
          "../icons/tokens/TokenRLC.tsx": () => e.r(914068)(e.i),
          "../icons/tokens/TokenRLY.tsx": () => e.r(51423)(e.i),
          "../icons/tokens/TokenRMRK.tsx": () => e.r(72012)(e.i),
          "../icons/tokens/TokenRNDR.tsx": () => e.r(715120)(e.i),
          "../icons/tokens/TokenROKO.tsx": () => e.r(774227)(e.i),
          "../icons/tokens/TokenROME.tsx": () => e.r(686985)(e.i),
          "../icons/tokens/TokenROOBEE.tsx": () => e.r(431913)(e.i),
          "../icons/tokens/TokenROOK.tsx": () => e.r(702680)(e.i),
          "../icons/tokens/TokenROSE.tsx": () => e.r(71228)(e.i),
          "../icons/tokens/TokenROUTE.tsx": () => e.r(738309)(e.i),
          "../icons/tokens/TokenRPG.tsx": () => e.r(516392)(e.i),
          "../icons/tokens/TokenRPL.tsx": () => e.r(719996)(e.i),
          "../icons/tokens/TokenRSC.tsx": () => e.r(875189)(e.i),
          "../icons/tokens/TokenRSR.tsx": () => e.r(3152)(e.i),
          "../icons/tokens/TokenRSS3.tsx": () => e.r(339868)(e.i),
          "../icons/tokens/TokenRTM.tsx": () => e.r(947434)(e.i),
          "../icons/tokens/TokenRUG.tsx": () => e.r(463939)(e.i),
          "../icons/tokens/TokenRUNE.tsx": () => e.r(559084)(e.i),
          "../icons/tokens/TokenRVC.tsx": () => e.r(949387)(e.i),
          "../icons/tokens/TokenRVF.tsx": () => e.r(206891)(e.i),
          "../icons/tokens/TokenRVN.tsx": () => e.r(356200)(e.i),
          "../icons/tokens/TokenRVST.tsx": () => e.r(769925)(e.i),
          "../icons/tokens/TokenRWN.tsx": () => e.r(191036)(e.i),
          "../icons/tokens/TokenRXD.tsx": () => e.r(207728)(e.i),
          "../icons/tokens/TokenSAFE.tsx": () => e.r(948542)(e.i),
          "../icons/tokens/TokenSAFEMARS.tsx": () => e.r(112902)(e.i),
          "../icons/tokens/TokenSAI.tsx": () => e.r(780956)(e.i),
          "../icons/tokens/TokenSAIL.tsx": () => e.r(898572)(e.i),
          "../icons/tokens/TokenSAITAMA.tsx": () => e.r(856265)(e.i),
          "../icons/tokens/TokenSAITO.tsx": () => e.r(801375)(e.i),
          "../icons/tokens/TokenSAKAI.tsx": () => e.r(860679)(e.i),
          "../icons/tokens/TokenSALT.tsx": () => e.r(243889)(e.i),
          "../icons/tokens/TokenSAM.tsx": () => e.r(532941)(e.i),
          "../icons/tokens/TokenSAMA.tsx": () => e.r(454475)(e.i),
          "../icons/tokens/TokenSAMO.tsx": () => e.r(892515)(e.i),
          "../icons/tokens/TokenSAN.tsx": () => e.r(234615)(e.i),
          "../icons/tokens/TokenSAND.tsx": () => e.r(177814)(e.i),
          "../icons/tokens/TokenSANI.tsx": () => e.r(548214)(e.i),
          "../icons/tokens/TokenSATS.tsx": () => e.r(622454)(e.i),
          "../icons/tokens/TokenSATT.tsx": () => e.r(541016)(e.i),
          "../icons/tokens/TokenSAUCE.tsx": () => e.r(348715)(e.i),
          "../icons/tokens/TokenSAVG.tsx": () => e.r(759917)(e.i),
          "../icons/tokens/TokenSBD.tsx": () => e.r(851577)(e.i),
          "../icons/tokens/TokenSBTC.tsx": () => e.r(898218)(e.i),
          "../icons/tokens/TokenSC.tsx": () => e.r(7670)(e.i),
          "../icons/tokens/TokenSCAR.tsx": () => e.r(576060)(e.i),
          "../icons/tokens/TokenSCB.tsx": () => e.r(519709)(e.i),
          "../icons/tokens/TokenSCLP.tsx": () => e.r(422597)(e.i),
          "../icons/tokens/TokenSCP.tsx": () => e.r(424920)(e.i),
          "../icons/tokens/TokenSCRT.tsx": () => e.r(952977)(e.i),
          "../icons/tokens/TokenSCS.tsx": () => e.r(789112)(e.i),
          "../icons/tokens/TokenSDAO.tsx": () => e.r(256655)(e.i),
          "../icons/tokens/TokenSDEX.tsx": () => e.r(621426)(e.i),
          "../icons/tokens/TokenSDL.tsx": () => e.r(29484)(e.i),
          "../icons/tokens/TokenSDN.tsx": () => e.r(923687)(e.i),
          "../icons/tokens/TokenSDT.tsx": () => e.r(539714)(e.i),
          "../icons/tokens/TokenSEED.tsx": () => e.r(301371)(e.i),
          "../icons/tokens/TokenSEI.tsx": () => e.r(440334)(e.i),
          "../icons/tokens/TokenSEILOR.tsx": () => e.r(642697)(e.i),
          "../icons/tokens/TokenSENATE.tsx": () => e.r(882309)(e.i),
          "../icons/tokens/TokenSEND.tsx": () => e.r(218537)(e.i),
          "../icons/tokens/TokenSENSE.tsx": () => e.r(192081)(e.i),
          "../icons/tokens/TokenSERO.tsx": () => e.r(827782)(e.i),
          "../icons/tokens/TokenSETH.tsx": () => e.r(873572)(e.i),
          "../icons/tokens/TokenSETH2.tsx": () => e.r(912902)(e.i),
          "../icons/tokens/TokenSFD.tsx": () => e.r(647701)(e.i),
          "../icons/tokens/TokenSFI.tsx": () => e.r(994388)(e.i),
          "../icons/tokens/TokenSFM.tsx": () => e.r(84778)(e.i),
          "../icons/tokens/TokenSFP.tsx": () => e.r(297976)(e.i),
          "../icons/tokens/TokenSFRXETH.tsx": () => e.r(209491)(e.i),
          "../icons/tokens/TokenSFTMX.tsx": () => e.r(244067)(e.i),
          "../icons/tokens/TokenSFUND.tsx": () => e.r(871999)(e.i),
          "../icons/tokens/TokenSHA.tsx": () => e.r(236894)(e.i),
          "../icons/tokens/TokenSHDW.tsx": () => e.r(914218)(e.i),
          "../icons/tokens/TokenSHFT.tsx": () => e.r(586294)(e.i),
          "../icons/tokens/TokenSHI.tsx": () => e.r(273868)(e.i),
          "../icons/tokens/TokenSHIA.tsx": () => e.r(178419)(e.i),
          "../icons/tokens/TokenSHIB.tsx": () => e.r(25709)(e.i),
          "../icons/tokens/TokenSHIBDOGE.tsx": () => e.r(741548)(e.i),
          "../icons/tokens/TokenSHIDO.tsx": () => e.r(258338)(e.i),
          "../icons/tokens/TokenSHIK.tsx": () => e.r(48517)(e.i),
          "../icons/tokens/TokenSHOPX.tsx": () => e.r(512241)(e.i),
          "../icons/tokens/TokenSHRAP.tsx": () => e.r(655607)(e.i),
          "../icons/tokens/TokenSHROOM.tsx": () => e.r(883555)(e.i),
          "../icons/tokens/TokenSHX.tsx": () => e.r(45222)(e.i),
          "../icons/tokens/TokenSI.tsx": () => e.r(923528)(e.i),
          "../icons/tokens/TokenSIDUS.tsx": () => e.r(526245)(e.i),
          "../icons/tokens/TokenSIGNA.tsx": () => e.r(109077)(e.i),
          "../icons/tokens/TokenSILK.tsx": () => e.r(4850)(e.i),
          "../icons/tokens/TokenSILO.tsx": () => e.r(716400)(e.i),
          "../icons/tokens/TokenSIPHER.tsx": () => e.r(419375)(e.i),
          "../icons/tokens/TokenSIS.tsx": () => e.r(707444)(e.i),
          "../icons/tokens/TokenSIX.tsx": () => e.r(585220)(e.i),
          "../icons/tokens/TokenSKEB.tsx": () => e.r(358448)(e.i),
          "../icons/tokens/TokenSKEY.tsx": () => e.r(328529)(e.i),
          "../icons/tokens/TokenSKL.tsx": () => e.r(831115)(e.i),
          "../icons/tokens/TokenSLAM.tsx": () => e.r(30828)(e.i),
          "../icons/tokens/TokenSLCL.tsx": () => e.r(173151)(e.i),
          "../icons/tokens/TokenSLG.tsx": () => e.r(15899)(e.i),
          "../icons/tokens/TokenSLIM.tsx": () => e.r(341613)(e.i),
          "../icons/tokens/TokenSLND.tsx": () => e.r(915810)(e.i),
          "../icons/tokens/TokenSLP.tsx": () => e.r(171115)(e.i),
          "../icons/tokens/TokenSLR.tsx": () => e.r(744580)(e.i),
          "../icons/tokens/TokenSMARTCREDIT.tsx": () => e.r(938545)(e.i),
          "../icons/tokens/TokenSMBR.tsx": () => e.r(987512)(e.i),
          "../icons/tokens/TokenSMI.tsx": () => e.r(714797)(e.i),
          "../icons/tokens/TokenSMT.tsx": () => e.r(960499)(e.i),
          "../icons/tokens/TokenSN.tsx": () => e.r(32213)(e.i),
          "../icons/tokens/TokenSNAIL.tsx": () => e.r(655569)(e.i),
          "../icons/tokens/TokenSNC.tsx": () => e.r(838395)(e.i),
          "../icons/tokens/TokenSNEK.tsx": () => e.r(357670)(e.i),
          "../icons/tokens/TokenSNFT.tsx": () => e.r(424174)(e.i),
          "../icons/tokens/TokenSNS.tsx": () => e.r(955323)(e.i),
          "../icons/tokens/TokenSNT.tsx": () => e.r(886747)(e.i),
          "../icons/tokens/TokenSNX.tsx": () => e.r(455377)(e.i),
          "../icons/tokens/TokenSOCKS.tsx": () => e.r(446984)(e.i),
          "../icons/tokens/TokenSOFI.tsx": () => e.r(748389)(e.i),
          "../icons/tokens/TokenSOL.tsx": () => e.r(840386)(e.i),
          "../icons/tokens/TokenSOLID.tsx": () => e.r(244157)(e.i),
          "../icons/tokens/TokenSOLO.tsx": () => e.r(209273)(e.i),
          "../icons/tokens/TokenSOLVE.tsx": () => e.r(784355)(e.i),
          "../icons/tokens/TokenSOLX.tsx": () => e.r(362261)(e.i),
          "../icons/tokens/TokenSOMM.tsx": () => e.r(56298)(e.i),
          "../icons/tokens/TokenSONNE.tsx": () => e.r(277743)(e.i),
          "../icons/tokens/TokenSOON.tsx": () => e.r(318361)(e.i),
          "../icons/tokens/TokenSOPH.tsx": () => e.r(636663)(e.i),
          "../icons/tokens/TokenSOUL.tsx": () => e.r(147983)(e.i),
          "../icons/tokens/TokenSOULS.tsx": () => e.r(585583)(e.i),
          "../icons/tokens/TokenSOURCE.tsx": () => e.r(313434)(e.i),
          "../icons/tokens/TokenSOV.tsx": () => e.r(375351)(e.i),
          "../icons/tokens/TokenSPA.tsx": () => e.r(606985)(e.i),
          "../icons/tokens/TokenSPACE.tsx": () => e.r(979075)(e.i),
          "../icons/tokens/TokenSPANK.tsx": () => e.r(590716)(e.i),
          "../icons/tokens/TokenSPARTA.tsx": () => e.r(911701)(e.i),
          "../icons/tokens/TokenSPC.tsx": () => e.r(323370)(e.i),
          "../icons/tokens/TokenSPE.tsx": () => e.r(885213)(e.i),
          "../icons/tokens/TokenSPELL.tsx": () => e.r(230742)(e.i),
          "../icons/tokens/TokenSPH.tsx": () => e.r(654691)(e.i),
          "../icons/tokens/TokenSPHERE.tsx": () => e.r(659096)(e.i),
          "../icons/tokens/TokenSPIRIT.tsx": () => e.r(285965)(e.i),
          "../icons/tokens/TokenSPOOL.tsx": () => e.r(931458)(e.i),
          "../icons/tokens/TokenSPORE.tsx": () => e.r(65814)(e.i),
          "../icons/tokens/TokenSPX.tsx": () => e.r(796155)(e.i),
          "../icons/tokens/TokenSQUAD.tsx": () => e.r(130744)(e.i),
          "../icons/tokens/TokenSQUIDGROW.tsx": () => e.r(599942)(e.i),
          "../icons/tokens/TokenSRCX.tsx": () => e.r(765960)(e.i),
          "../icons/tokens/TokenSRK.tsx": () => e.r(112714)(e.i),
          "../icons/tokens/TokenSRLTY.tsx": () => e.r(354445)(e.i),
          "../icons/tokens/TokenSRM.tsx": () => e.r(541543)(e.i),
          "../icons/tokens/TokenSRX.tsx": () => e.r(903060)(e.i),
          "../icons/tokens/TokenSSV.tsx": () => e.r(814614)(e.i),
          "../icons/tokens/TokenSSWP.tsx": () => e.r(122805)(e.i),
          "../icons/tokens/TokenSSX.tsx": () => e.r(960860)(e.i),
          "../icons/tokens/TokenSTARL.tsx": () => e.r(704932)(e.i),
          "../icons/tokens/TokenSTARS.tsx": () => e.r(174565)(e.i),
          "../icons/tokens/TokenSTAT.tsx": () => e.r(212781)(e.i),
          "../icons/tokens/TokenSTATOM.tsx": () => e.r(816211)(e.i),
          "../icons/tokens/TokenSTBU.tsx": () => e.r(963996)(e.i),
          "../icons/tokens/TokenSTEEM.tsx": () => e.r(302352)(e.i),
          "../icons/tokens/TokenSTELLA.tsx": () => e.r(796164)(e.i),
          "../icons/tokens/TokenSTEP.tsx": () => e.r(162915)(e.i),
          "../icons/tokens/TokenSTFX.tsx": () => e.r(782262)(e.i),
          "../icons/tokens/TokenSTG.tsx": () => e.r(405461)(e.i),
          "../icons/tokens/TokenSTIMA.tsx": () => e.r(659047)(e.i),
          "../icons/tokens/TokenSTJUNO.tsx": () => e.r(171798)(e.i),
          "../icons/tokens/TokenSTMX.tsx": () => e.r(858437)(e.i),
          "../icons/tokens/TokenSTORJ.tsx": () => e.r(414421)(e.i),
          "../icons/tokens/TokenSTOS.tsx": () => e.r(170397)(e.i),
          "../icons/tokens/TokenSTOSMO.tsx": () => e.r(63873)(e.i),
          "../icons/tokens/TokenSTPT.tsx": () => e.r(183524)(e.i),
          "../icons/tokens/TokenSTRAX.tsx": () => e.r(663810)(e.i),
          "../icons/tokens/TokenSTRD.tsx": () => e.r(45629)(e.i),
          "../icons/tokens/TokenSTRK.tsx": () => e.r(757610)(e.i),
          "../icons/tokens/TokenSTRONG.tsx": () => e.r(737946)(e.i),
          "../icons/tokens/TokenSTRP.tsx": () => e.r(965203)(e.i),
          "../icons/tokens/TokenSTRX.tsx": () => e.r(430373)(e.i),
          "../icons/tokens/TokenSTSOL.tsx": () => e.r(472540)(e.i),
          "../icons/tokens/TokenSTSTARS.tsx": () => e.r(375584)(e.i),
          "../icons/tokens/TokenSTX.tsx": () => e.r(135674)(e.i),
          "../icons/tokens/TokenSUB.tsx": () => e.r(348608)(e.i),
          "../icons/tokens/TokenSUDO.tsx": () => e.r(558096)(e.i),
          "../icons/tokens/TokenSUI.tsx": () => e.r(471560)(e.i),
          "../icons/tokens/TokenSUIP.tsx": () => e.r(152457)(e.i),
          "../icons/tokens/TokenSUKU.tsx": () => e.r(849417)(e.i),
          "../icons/tokens/TokenSUN.tsx": () => e.r(754476)(e.i),
          "../icons/tokens/TokenSURE.tsx": () => e.r(241948)(e.i),
          "../icons/tokens/TokenSUSD.tsx": () => e.r(57794)(e.i),
          "../icons/tokens/TokenSUSHI.tsx": () => e.r(750081)(e.i),
          "../icons/tokens/TokenSUTER.tsx": () => e.r(566508)(e.i),
          "../icons/tokens/TokenSWAP.tsx": () => e.r(385626)(e.i),
          "../icons/tokens/TokenSWASH.tsx": () => e.r(221051)(e.i),
          "../icons/tokens/TokenSWEAT.tsx": () => e.r(807217)(e.i),
          "../icons/tokens/TokenSWELL.tsx": () => e.r(700444)(e.i),
          "../icons/tokens/TokenSWETH.tsx": () => e.r(892927)(e.i),
          "../icons/tokens/TokenSWFTC.tsx": () => e.r(589692)(e.i),
          "../icons/tokens/TokenSWISE.tsx": () => e.r(288280)(e.i),
          "../icons/tokens/TokenSWTH.tsx": () => e.r(837060)(e.i),
          "../icons/tokens/TokenSXP.tsx": () => e.r(87457)(e.i),
          "../icons/tokens/TokenSYLO.tsx": () => e.r(76355)(e.i),
          "../icons/tokens/TokenSYNC.tsx": () => e.r(804668)(e.i),
          "../icons/tokens/TokenSYS.tsx": () => e.r(439385)(e.i),
          "../icons/tokens/TokenT.tsx": () => e.r(403318)(e.i),
          "../icons/tokens/TokenTABOO.tsx": () => e.r(260929)(e.i),
          "../icons/tokens/TokenTAKI.tsx": () => e.r(899641)(e.i),
          "../icons/tokens/TokenTAMA.tsx": () => e.r(542285)(e.i),
          "../icons/tokens/TokenTAO.tsx": () => e.r(599774)(e.i),
          "../icons/tokens/TokenTARA.tsx": () => e.r(248376)(e.i),
          "../icons/tokens/TokenTAROT.tsx": () => e.r(508554)(e.i),
          "../icons/tokens/TokenTBTC.tsx": () => e.r(275580)(e.i),
          "../icons/tokens/TokenTDROP.tsx": () => e.r(49750)(e.i),
          "../icons/tokens/TokenTEER.tsx": () => e.r(327078)(e.i),
          "../icons/tokens/TokenTEL.tsx": () => e.r(838591)(e.i),
          "../icons/tokens/TokenTENET.tsx": () => e.r(655591)(e.i),
          "../icons/tokens/TokenTET.tsx": () => e.r(300299)(e.i),
          "../icons/tokens/TokenTETU.tsx": () => e.r(196652)(e.i),
          "../icons/tokens/TokenTFUEL.tsx": () => e.r(137313)(e.i),
          "../icons/tokens/TokenTGT.tsx": () => e.r(817205)(e.i),
          "../icons/tokens/TokenTHALES.tsx": () => e.r(188051)(e.i),
          "../icons/tokens/TokenTHE.tsx": () => e.r(655556)(e.i),
          "../icons/tokens/TokenTHEO.tsx": () => e.r(866763)(e.i),
          "../icons/tokens/TokenTHETA.tsx": () => e.r(614073)(e.i),
          "../icons/tokens/TokenTHOL.tsx": () => e.r(432349)(e.i),
          "../icons/tokens/TokenTHOR.tsx": () => e.r(343166)(e.i),
          "../icons/tokens/TokenTHT.tsx": () => e.r(318658)(e.i),
          "../icons/tokens/TokenTIA.tsx": () => e.r(842187)(e.i),
          "../icons/tokens/TokenTIDAL.tsx": () => e.r(165735)(e.i),
          "../icons/tokens/TokenTIFI.tsx": () => e.r(341235)(e.i),
          "../icons/tokens/TokenTIG.tsx": () => e.r(829802)(e.i),
          "../icons/tokens/TokenTIME.tsx": () => e.r(739228)(e.i),
          "../icons/tokens/TokenTIN.tsx": () => e.r(17340)(e.i),
          "../icons/tokens/TokenTIPS.tsx": () => e.r(709e3)(e.i),
          "../icons/tokens/TokenTITAN.tsx": () => e.r(681091)(e.i),
          "../icons/tokens/TokenTKN.tsx": () => e.r(567973)(e.i),
          "../icons/tokens/TokenTKO.tsx": () => e.r(345396)(e.i),
          "../icons/tokens/TokenTKP.tsx": () => e.r(577235)(e.i),
          "../icons/tokens/TokenTKX.tsx": () => e.r(625905)(e.i),
          "../icons/tokens/TokenTLM.tsx": () => e.r(725427)(e.i),
          "../icons/tokens/TokenTLOS.tsx": () => e.r(704978)(e.i),
          "../icons/tokens/TokenTNT.tsx": () => e.r(395254)(e.i),
          "../icons/tokens/TokenTOKEN.tsx": () => e.r(312484)(e.i),
          "../icons/tokens/TokenTOMB.tsx": () => e.r(485251)(e.i),
          "../icons/tokens/TokenTOMI.tsx": () => e.r(791981)(e.i),
          "../icons/tokens/TokenTON.tsx": () => e.r(808424)(e.i),
          "../icons/tokens/TokenTONIC.tsx": () => e.r(470820)(e.i),
          "../icons/tokens/TokenTOP.tsx": () => e.r(839175)(e.i),
          "../icons/tokens/TokenTOPIA.tsx": () => e.r(243255)(e.i),
          "../icons/tokens/TokenTOR.tsx": () => e.r(344514)(e.i),
          "../icons/tokens/TokenTORN.tsx": () => e.r(970717)(e.i),
          "../icons/tokens/TokenTOSHI.tsx": () => e.r(646865)(e.i),
          "../icons/tokens/TokenTOWER.tsx": () => e.r(440485)(e.i),
          "../icons/tokens/TokenTPAD.tsx": () => e.r(814829)(e.i),
          "../icons/tokens/TokenTRAC.tsx": () => e.r(344119)(e.i),
          "../icons/tokens/TokenTRADE.tsx": () => e.r(202876)(e.i),
          "../icons/tokens/TokenTRAVA.tsx": () => e.r(878240)(e.i),
          "../icons/tokens/TokenTRAXX.tsx": () => e.r(394998)(e.i),
          "../icons/tokens/TokenTRB.tsx": () => e.r(56087)(e.i),
          "../icons/tokens/TokenTRC.tsx": () => e.r(381618)(e.i),
          "../icons/tokens/TokenTRCL.tsx": () => e.r(459572)(e.i),
          "../icons/tokens/TokenTREE.tsx": () => e.r(319041)(e.i),
          "../icons/tokens/TokenTREEB.tsx": () => e.r(780746)(e.i),
          "../icons/tokens/TokenTRIAS.tsx": () => e.r(448334)(e.i),
          "../icons/tokens/TokenTRIBE.tsx": () => e.r(719611)(e.i),
          "../icons/tokens/TokenTRONPAD.tsx": () => e.r(12397)(e.i),
          "../icons/tokens/TokenTROVE.tsx": () => e.r(105743)(e.i),
          "../icons/tokens/TokenTROY.tsx": () => e.r(405826)(e.i),
          "../icons/tokens/TokenTRU.tsx": () => e.r(781872)(e.i),
          "../icons/tokens/TokenTRVL.tsx": () => e.r(317350)(e.i),
          "../icons/tokens/TokenTRX.tsx": () => e.r(395522)(e.i),
          "../icons/tokens/TokenTRYB.tsx": () => e.r(614966)(e.i),
          "../icons/tokens/TokenTSUKA.tsx": () => e.r(601038)(e.i),
          "../icons/tokens/TokenTT.tsx": () => e.r(400355)(e.i),
          "../icons/tokens/TokenTTK.tsx": () => e.r(500784)(e.i),
          "../icons/tokens/TokenTULIP.tsx": () => e.r(613742)(e.i),
          "../icons/tokens/TokenTUSD.tsx": () => e.r(340994)(e.i),
          "../icons/tokens/TokenTUT.tsx": () => e.r(700644)(e.i),
          "../icons/tokens/TokenTVK.tsx": () => e.r(648306)(e.i),
          "../icons/tokens/TokenTWT.tsx": () => e.r(941426)(e.i),
          "../icons/tokens/TokenTXAU.tsx": () => e.r(611637)(e.i),
          "../icons/tokens/TokenTYRANT.tsx": () => e.r(639845)(e.i),
          "../icons/tokens/TokenU.tsx": () => e.r(433411)(e.i),
          "../icons/tokens/TokenUBSN.tsx": () => e.r(522502)(e.i),
          "../icons/tokens/TokenUBT.tsx": () => e.r(846938)(e.i),
          "../icons/tokens/TokenUBXS.tsx": () => e.r(575813)(e.i),
          "../icons/tokens/TokenUCJL.tsx": () => e.r(155279)(e.i),
          "../icons/tokens/TokenUFI.tsx": () => e.r(583330)(e.i),
          "../icons/tokens/TokenUFT.tsx": () => e.r(388033)(e.i),
          "../icons/tokens/TokenUMA.tsx": () => e.r(401977)(e.i),
          "../icons/tokens/TokenUMAMI.tsx": () => e.r(10965)(e.i),
          "../icons/tokens/TokenUMB.tsx": () => e.r(631733)(e.i),
          "../icons/tokens/TokenUNCX.tsx": () => e.r(659551)(e.i),
          "../icons/tokens/TokenUND.tsx": () => e.r(704353)(e.i),
          "../icons/tokens/TokenUNDEAD.tsx": () => e.r(649564)(e.i),
          "../icons/tokens/TokenUNFI.tsx": () => e.r(68845)(e.i),
          "../icons/tokens/TokenUNI.tsx": () => e.r(418258)(e.i),
          "../icons/tokens/TokenUNIBOT.tsx": () => e.r(927532)(e.i),
          "../icons/tokens/TokenUNIX.tsx": () => e.r(980498)(e.i),
          "../icons/tokens/TokenUNO.tsx": () => e.r(439926)(e.i),
          "../icons/tokens/TokenUOS.tsx": () => e.r(873438)(e.i),
          "../icons/tokens/TokenUPP.tsx": () => e.r(12029)(e.i),
          "../icons/tokens/TokenUQC.tsx": () => e.r(584171)(e.i),
          "../icons/tokens/TokenURUS.tsx": () => e.r(68426)(e.i),
          "../icons/tokens/TokenUSDC.tsx": () => e.r(941906)(e.i),
          "../icons/tokens/TokenUSDD.tsx": () => e.r(844774)(e.i),
          "../icons/tokens/TokenUSDT.tsx": () => e.r(179263)(e.i),
          "../icons/tokens/TokenUSDV.tsx": () => e.r(237053)(e.i),
          "../icons/tokens/TokenUSDX.tsx": () => e.r(82250)(e.i),
          "../icons/tokens/TokenUSH.tsx": () => e.r(831888)(e.i),
          "../icons/tokens/TokenUSN.tsx": () => e.r(648990)(e.i),
          "../icons/tokens/TokenUSTC.tsx": () => e.r(868734)(e.i),
          "../icons/tokens/TokenUTK.tsx": () => e.r(789863)(e.i),
          "../icons/tokens/TokenUW3S.tsx": () => e.r(168850)(e.i),
          "../icons/tokens/TokenUWU.tsx": () => e.r(828822)(e.i),
          "../icons/tokens/TokenVAB.tsx": () => e.r(228113)(e.i),
          "../icons/tokens/TokenVAI.tsx": () => e.r(31699)(e.i),
          "../icons/tokens/TokenVALOR.tsx": () => e.r(680513)(e.i),
          "../icons/tokens/TokenVARA.tsx": () => e.r(998785)(e.i),
          "../icons/tokens/TokenVC.tsx": () => e.r(478565)(e.i),
          "../icons/tokens/TokenVCF.tsx": () => e.r(227406)(e.i),
          "../icons/tokens/TokenVCORE.tsx": () => e.r(287762)(e.i),
          "../icons/tokens/TokenVEE.tsx": () => e.r(469920)(e.i),
          "../icons/tokens/TokenVEGA.tsx": () => e.r(542437)(e.i),
          "../icons/tokens/TokenVELA.tsx": () => e.r(205754)(e.i),
          "../icons/tokens/TokenVELO.tsx": () => e.r(408861)(e.i),
          "../icons/tokens/TokenVEMP.tsx": () => e.r(286745)(e.i),
          "../icons/tokens/TokenVENT.tsx": () => e.r(139762)(e.i),
          "../icons/tokens/TokenVERSA.tsx": () => e.r(225598)(e.i),
          "../icons/tokens/TokenVERSE.tsx": () => e.r(566050)(e.i),
          "../icons/tokens/TokenVET.tsx": () => e.r(484145)(e.i),
          "../icons/tokens/TokenVEUR.tsx": () => e.r(1139)(e.i),
          "../icons/tokens/TokenVEX.tsx": () => e.r(648948)(e.i),
          "../icons/tokens/TokenVEXT.tsx": () => e.r(491358)(e.i),
          "../icons/tokens/TokenVGX.tsx": () => e.r(801884)(e.i),
          "../icons/tokens/TokenVIA.tsx": () => e.r(386656)(e.i),
          "../icons/tokens/TokenVIB.tsx": () => e.r(407689)(e.i),
          "../icons/tokens/TokenVIDT.tsx": () => e.r(361710)(e.i),
          "../icons/tokens/TokenVIDYA.tsx": () => e.r(22617)(e.i),
          "../icons/tokens/TokenVINE.tsx": () => e.r(235649)(e.i),
          "../icons/tokens/TokenVINU.tsx": () => e.r(94275)(e.i),
          "../icons/tokens/TokenVIS.tsx": () => e.r(415302)(e.i),
          "../icons/tokens/TokenVITA.tsx": () => e.r(937617)(e.i),
          "../icons/tokens/TokenVITE.tsx": () => e.r(718554)(e.i),
          "../icons/tokens/TokenVIX.tsx": () => e.r(685724)(e.i),
          "../icons/tokens/TokenVLX.tsx": () => e.r(625458)(e.i),
          "../icons/tokens/TokenVLXPAD.tsx": () => e.r(807106)(e.i),
          "../icons/tokens/TokenVNO.tsx": () => e.r(878992)(e.i),
          "../icons/tokens/TokenVOICE.tsx": () => e.r(774628)(e.i),
          "../icons/tokens/TokenVOLT.tsx": () => e.r(898952)(e.i),
          "../icons/tokens/TokenVOXEL.tsx": () => e.r(775692)(e.i),
          "../icons/tokens/TokenVPAD.tsx": () => e.r(871271)(e.i),
          "../icons/tokens/TokenVR.tsx": () => e.r(932688)(e.i),
          "../icons/tokens/TokenVRA.tsx": () => e.r(696107)(e.i),
          "../icons/tokens/TokenVRSW.tsx": () => e.r(439307)(e.i),
          "../icons/tokens/TokenVSP.tsx": () => e.r(527332)(e.i),
          "../icons/tokens/TokenVSTA.tsx": () => e.r(546900)(e.i),
          "../icons/tokens/TokenVSYS.tsx": () => e.r(112760)(e.i),
          "../icons/tokens/TokenVTC.tsx": () => e.r(875127)(e.i),
          "../icons/tokens/TokenVTHO.tsx": () => e.r(591637)(e.i),
          "../icons/tokens/TokenVTX.tsx": () => e.r(357425)(e.i),
          "../icons/tokens/TokenVV.tsx": () => e.r(481930)(e.i),
          "../icons/tokens/TokenVVS.tsx": () => e.r(642379)(e.i),
          "../icons/tokens/TokenVXV.tsx": () => e.r(826675)(e.i),
          "../icons/tokens/TokenWACME.tsx": () => e.r(175594)(e.i),
          "../icons/tokens/TokenWAGMI.tsx": () => e.r(718477)(e.i),
          "../icons/tokens/TokenWAGMIGAMES.tsx": () => e.r(977938)(e.i),
          "../icons/tokens/TokenWAIT.tsx": () => e.r(302906)(e.i),
          "../icons/tokens/TokenWALLET.tsx": () => e.r(460898)(e.i),
          "../icons/tokens/TokenWALV.tsx": () => e.r(854410)(e.i),
          "../icons/tokens/TokenWAM.tsx": () => e.r(970923)(e.i),
          "../icons/tokens/TokenWAMPL.tsx": () => e.r(995655)(e.i),
          "../icons/tokens/TokenWAN.tsx": () => e.r(174532)(e.i),
          "../icons/tokens/TokenWAS.tsx": () => e.r(373092)(e.i),
          "../icons/tokens/TokenWAVES.tsx": () => e.r(465157)(e.i),
          "../icons/tokens/TokenWAXP.tsx": () => e.r(172934)(e.i),
          "../icons/tokens/TokenWBETH.tsx": () => e.r(338068)(e.i),
          "../icons/tokens/TokenWBT.tsx": () => e.r(550238)(e.i),
          "../icons/tokens/TokenWBTC.tsx": () => e.r(579851)(e.i),
          "../icons/tokens/TokenWCFG.tsx": () => e.r(84411)(e.i),
          "../icons/tokens/TokenWEFI.tsx": () => e.r(684883)(e.i),
          "../icons/tokens/TokenWELL.tsx": () => e.r(272531)(e.i),
          "../icons/tokens/TokenWELT.tsx": () => e.r(76541)(e.i),
          "../icons/tokens/TokenWEMIX.tsx": () => e.r(342226)(e.i),
          "../icons/tokens/TokenWGC.tsx": () => e.r(350724)(e.i),
          "../icons/tokens/TokenWHALE.tsx": () => e.r(892788)(e.i),
          "../icons/tokens/TokenWHALES.tsx": () => e.r(918076)(e.i),
          "../icons/tokens/TokenWHITE.tsx": () => e.r(417754)(e.i),
          "../icons/tokens/TokenWIFI.tsx": () => e.r(434667)(e.i),
          "../icons/tokens/TokenWIGO.tsx": () => e.r(911071)(e.i),
          "../icons/tokens/TokenWIKEN.tsx": () => e.r(874991)(e.i),
          "../icons/tokens/TokenWIN.tsx": () => e.r(290311)(e.i),
          "../icons/tokens/TokenWING.tsx": () => e.r(887054)(e.i),
          "../icons/tokens/TokenWINR.tsx": () => e.r(875009)(e.i),
          "../icons/tokens/TokenWISE.tsx": () => e.r(69852)(e.i),
          "../icons/tokens/TokenWITCH.tsx": () => e.r(495948)(e.i),
          "../icons/tokens/TokenWLITI.tsx": () => e.r(970304)(e.i),
          "../icons/tokens/TokenWLKN.tsx": () => e.r(824581)(e.i),
          "../icons/tokens/TokenWNDR.tsx": () => e.r(342714)(e.i),
          "../icons/tokens/TokenWNK.tsx": () => e.r(105648)(e.i),
          "../icons/tokens/TokenWNT.tsx": () => e.r(323479)(e.i),
          "../icons/tokens/TokenWNXM.tsx": () => e.r(664954)(e.i),
          "../icons/tokens/TokenWOJAK.tsx": () => e.r(886049)(e.i),
          "../icons/tokens/TokenWOM.tsx": () => e.r(734706)(e.i),
          "../icons/tokens/TokenWOMBAT.tsx": () => e.r(655371)(e.i),
          "../icons/tokens/TokenWOO.tsx": () => e.r(773704)(e.i),
          "../icons/tokens/TokenWOOF.tsx": () => e.r(83761)(e.i),
          "../icons/tokens/TokenWOW.tsx": () => e.r(319418)(e.i),
          "../icons/tokens/TokenWOZX.tsx": () => e.r(177101)(e.i),
          "../icons/tokens/TokenWRLD.tsx": () => e.r(441075)(e.i),
          "../icons/tokens/TokenWRX.tsx": () => e.r(795004)(e.i),
          "../icons/tokens/TokenWSI.tsx": () => e.r(154967)(e.i),
          "../icons/tokens/TokenWWY.tsx": () => e.r(410074)(e.i),
          "../icons/tokens/TokenWXT.tsx": () => e.r(573453)(e.i),
          "../icons/tokens/TokenX2Y2.tsx": () => e.r(147698)(e.i),
          "../icons/tokens/TokenXAUR.tsx": () => e.r(516144)(e.i),
          "../icons/tokens/TokenXAUT.tsx": () => e.r(50780)(e.i),
          "../icons/tokens/TokenXAVA.tsx": () => e.r(523239)(e.i),
          "../icons/tokens/TokenXCAD.tsx": () => e.r(160539)(e.i),
          "../icons/tokens/TokenXCFX.tsx": () => e.r(490325)(e.i),
          "../icons/tokens/TokenXCH.tsx": () => e.r(590976)(e.i),
          "../icons/tokens/TokenXCHF.tsx": () => e.r(142982)(e.i),
          "../icons/tokens/TokenXCM.tsx": () => e.r(994009)(e.i),
          "../icons/tokens/TokenXCP.tsx": () => e.r(311699)(e.i),
          "../icons/tokens/TokenXCUR.tsx": () => e.r(39842)(e.i),
          "../icons/tokens/TokenXDATA.tsx": () => e.r(311236)(e.i),
          "../icons/tokens/TokenXDB.tsx": () => e.r(701110)(e.i),
          "../icons/tokens/TokenXDC.tsx": () => e.r(279660)(e.i),
          "../icons/tokens/TokenXDEFI.tsx": () => e.r(290805)(e.i),
          "../icons/tokens/TokenXDG.tsx": () => e.r(889771)(e.i),
          "../icons/tokens/TokenXEC.tsx": () => e.r(856936)(e.i),
          "../icons/tokens/TokenXELS.tsx": () => e.r(396461)(e.i),
          "../icons/tokens/TokenXEM.tsx": () => e.r(5275)(e.i),
          "../icons/tokens/TokenXEP.tsx": () => e.r(266473)(e.i),
          "../icons/tokens/TokenXET.tsx": () => e.r(156515)(e.i),
          "../icons/tokens/TokenXETA.tsx": () => e.r(329036)(e.i),
          "../icons/tokens/TokenXFT.tsx": () => e.r(754374)(e.i),
          "../icons/tokens/TokenXFUND.tsx": () => e.r(300547)(e.i),
          "../icons/tokens/TokenXHV.tsx": () => e.r(597506)(e.i),
          "../icons/tokens/TokenXI.tsx": () => e.r(363715)(e.i),
          "../icons/tokens/TokenXIDO.tsx": () => e.r(193083)(e.i),
          "../icons/tokens/TokenXKI.tsx": () => e.r(880091)(e.i),
          "../icons/tokens/TokenXLM.tsx": () => e.r(795639)(e.i),
          "../icons/tokens/TokenXMON.tsx": () => e.r(141187)(e.i),
          "../icons/tokens/TokenXMR.tsx": () => e.r(876242)(e.i),
          "../icons/tokens/TokenXNA.tsx": () => e.r(10198)(e.i),
          "../icons/tokens/TokenXNO.tsx": () => e.r(555408)(e.i),
          "../icons/tokens/TokenXOR.tsx": () => e.r(867904)(e.i),
          "../icons/tokens/TokenXPLA.tsx": () => e.r(22993)(e.i),
          "../icons/tokens/TokenXPNET.tsx": () => e.r(377568)(e.i),
          "../icons/tokens/TokenXPR.tsx": () => e.r(112885)(e.i),
          "../icons/tokens/TokenXPRT.tsx": () => e.r(931457)(e.i),
          "../icons/tokens/TokenXPX.tsx": () => e.r(597363)(e.i),
          "../icons/tokens/TokenXRD.tsx": () => e.r(910402)(e.i),
          "../icons/tokens/TokenXRP.tsx": () => e.r(795007)(e.i),
          "../icons/tokens/TokenXRT.tsx": () => e.r(989706)(e.i),
          "../icons/tokens/TokenXRUNE.tsx": () => e.r(281999)(e.i),
          "../icons/tokens/TokenXSGD.tsx": () => e.r(131307)(e.i),
          "../icons/tokens/TokenXSP.tsx": () => e.r(238173)(e.i),
          "../icons/tokens/TokenXSUSHI.tsx": () => e.r(856896)(e.i),
          "../icons/tokens/TokenXTM.tsx": () => e.r(987638)(e.i),
          "../icons/tokens/TokenXTP.tsx": () => e.r(24510)(e.i),
          "../icons/tokens/TokenXTZ.tsx": () => e.r(477587)(e.i),
          "../icons/tokens/TokenXVG.tsx": () => e.r(825838)(e.i),
          "../icons/tokens/TokenXVS.tsx": () => e.r(489977)(e.i),
          "../icons/tokens/TokenXWG.tsx": () => e.r(706855)(e.i),
          "../icons/tokens/TokenXWIN.tsx": () => e.r(498903)(e.i),
          "../icons/tokens/TokenXY.tsx": () => e.r(3181)(e.i),
          "../icons/tokens/TokenXYO.tsx": () => e.r(954558)(e.i),
          "../icons/tokens/TokenY2K.tsx": () => e.r(330616)(e.i),
          "../icons/tokens/TokenYAK.tsx": () => e.r(535621)(e.i),
          "../icons/tokens/TokenYAM.tsx": () => e.r(666996)(e.i),
          "../icons/tokens/TokenYCC.tsx": () => e.r(881050)(e.i),
          "../icons/tokens/TokenYDF.tsx": () => e.r(487062)(e.i),
          "../icons/tokens/TokenYES.tsx": () => e.r(22889)(e.i),
          "../icons/tokens/TokenYFI.tsx": () => e.r(421986)(e.i),
          "../icons/tokens/TokenYFII.tsx": () => e.r(244004)(e.i),
          "../icons/tokens/TokenYGG.tsx": () => e.r(823018)(e.i),
          "../icons/tokens/TokenYOSHI.tsx": () => e.r(998306)(e.i),
          "../icons/tokens/TokenYOU.tsx": () => e.r(732904)(e.i),
          "../icons/tokens/TokenZANO.tsx": () => e.r(474079)(e.i),
          "../icons/tokens/TokenZAP.tsx": () => e.r(627637)(e.i),
          "../icons/tokens/TokenZAT.tsx": () => e.r(964480)(e.i),
          "../icons/tokens/TokenZBC.tsx": () => e.r(712454)(e.i),
          "../icons/tokens/TokenZCX.tsx": () => e.r(680983)(e.i),
          "../icons/tokens/TokenZEC.tsx": () => e.r(387899)(e.i),
          "../icons/tokens/TokenZEE.tsx": () => e.r(125803)(e.i),
          "../icons/tokens/TokenZEN.tsx": () => e.r(382801)(e.i),
          "../icons/tokens/TokenZERO.tsx": () => e.r(520264)(e.i),
          "../icons/tokens/TokenZIG.tsx": () => e.r(359769)(e.i),
          "../icons/tokens/TokenZIL.tsx": () => e.r(46656)(e.i),
          "../icons/tokens/TokenZKB.tsx": () => e.r(479950)(e.i),
          "../icons/tokens/TokenZKID.tsx": () => e.r(106672)(e.i),
          "../icons/tokens/TokenZKP.tsx": () => e.r(833915)(e.i),
          "../icons/tokens/TokenZLK.tsx": () => e.r(433647)(e.i),
          "../icons/tokens/TokenZMN.tsx": () => e.r(388056)(e.i),
          "../icons/tokens/TokenZNN.tsx": () => e.r(951944)(e.i),
          "../icons/tokens/TokenZOOMER.tsx": () => e.r(258891)(e.i),
          "../icons/tokens/TokenZPAY.tsx": () => e.r(539888)(e.i),
          "../icons/tokens/TokenZRX.tsx": () => e.r(888071)(e.i),
          "../icons/tokens/TokenZTG.tsx": () => e.r(522297)(e.i),
          "../icons/tokens/TokenZYN.tsx": () => e.r(543957)(e.i),
          "../icons/tokens/TokenZZ.tsx": () => e.r(886067)(e.i),
          "../icons/wallets/WalletAlfa1.tsx": () => e.r(451690)(e.i),
          "../icons/wallets/WalletAlphaWallet.tsx": () => e.r(430588)(e.i),
          "../icons/wallets/WalletArgent.tsx": () => e.r(683327)(e.i),
          "../icons/wallets/WalletBackpack.tsx": () => e.r(508227)(e.i),
          "../icons/wallets/WalletClave.tsx": () => e.r(733919)(e.i),
          "../icons/wallets/WalletCoin98.tsx": () => e.r(500043)(e.i),
          "../icons/wallets/WalletCoinbase.tsx": () => e.r(531561)(e.i),
          "../icons/wallets/WalletEnkrypt.tsx": () => e.r(403390)(e.i),
          "../icons/wallets/WalletImtoken.tsx": () => e.r(166252)(e.i),
          "../icons/wallets/WalletKraken.tsx": () => e.r(462263)(e.i),
          "../icons/wallets/WalletLedger.tsx": () => e.r(803061)(e.i),
          "../icons/wallets/WalletLit.tsx": () => e.r(216516)(e.i),
          "../icons/wallets/WalletMetamask.tsx": () => e.r(636405)(e.i),
          "../icons/wallets/WalletMultis.tsx": () => e.r(783513)(e.i),
          "../icons/wallets/WalletMyEtherWallet.tsx": () => e.r(270844)(e.i),
          "../icons/wallets/WalletObvious.tsx": () => e.r(594253)(e.i),
          "../icons/wallets/WalletOkx.tsx": () => e.r(496e3)(e.i),
          "../icons/wallets/WalletPhantom.tsx": () => e.r(249449)(e.i),
          "../icons/wallets/WalletPillar.tsx": () => e.r(853609)(e.i),
          "../icons/wallets/WalletPortal.tsx": () => e.r(165885)(e.i),
          "../icons/wallets/WalletRabby.tsx": () => e.r(50324)(e.i),
          "../icons/wallets/WalletRainbow.tsx": () => e.r(384303)(e.i),
          "../icons/wallets/WalletRonin.tsx": () => e.r(289012)(e.i),
          "../icons/wallets/WalletSafe.tsx": () => e.r(318846)(e.i),
          "../icons/wallets/WalletSender.tsx": () => e.r(869429)(e.i),
          "../icons/wallets/WalletSequence.tsx": () => e.r(921412)(e.i),
          "../icons/wallets/WalletSoul.tsx": () => e.r(651474)(e.i),
          "../icons/wallets/WalletSquads.tsx": () => e.r(643652)(e.i),
          "../icons/wallets/WalletTokenPocket.tsx": () => e.r(697161)(e.i),
          "../icons/wallets/WalletTrezor.tsx": () => e.r(356251)(e.i),
          "../icons/wallets/WalletTrust.tsx": () => e.r(917869)(e.i),
          "../icons/wallets/WalletUnipass.tsx": () => e.r(173108)(e.i),
          "../icons/wallets/WalletVenly.tsx": () => e.r(920379)(e.i),
          "../icons/wallets/WalletWallet3.tsx": () => e.r(966514)(e.i),
          "../icons/wallets/WalletWalletConnect.tsx": () => e.r(102721)(e.i),
          "../icons/wallets/WalletXdefi.tsx": () => e.r(935765)(e.i),
          "../icons/wallets/WalletZengo.tsx": () => e.r(861230)(e.i),
          "../icons/wallets/WalletZerion.tsx": () => e.r(2865)(e.i),
        }),
        l = new Map(),
        f = (0, n.forwardRef)((e, o) => {
          let {
              size: r,
              color: t,
              className: s,
              variant: d,
              fallback: c,
              metadata: b,
              type: f,
            } = e,
            [k, u] = (0, n.useState)(null);
          return ((0, n.useEffect)(() => {
            b &&
              ((e, a) => {
                let n = ((e, a) =>
                  ""
                    .concat(e.charAt(0).toUpperCase())
                    .concat(e.slice(1))
                    .concat(
                      "token" === e
                        ? a.symbol.toUpperCase()
                        : (a.id.match(/[a-z0-9]+/gi) || [])
                            .map(
                              (e) =>
                                e.charAt(0).toUpperCase() +
                                e.substring(1).toLowerCase()
                            )
                            .join("")
                    ))(e, a);
                if (!l.has(n)) {
                  let a = m("../icons/".concat(e, "s/").concat(n, ".tsx"))
                    .then((e) => e.default)
                    .catch(
                      (e) => (
                        console.warn("Failed to load icon: ".concat(n), e), null
                      )
                    );
                  l.set(n, a);
                }
                return l.get(n);
              })(f, b)
                .then((e) => {
                  u(e);
                })
                .catch(() => {
                  u(null);
                });
          }, [f, b]),
          !k && c)
            ? (0, i.jsx)(a.BaseIcon, {
                ref: o,
                size: r,
                color: t,
                className: s,
                fallback: c,
              })
            : k
            ? (0, i.jsx)(k, {
                ref: o,
                size: r,
                color: t,
                className: s,
                variant: d,
              })
            : null;
        }),
        k = (0, n.forwardRef)((e, a) => {
          let {
              symbol: n,
              size: r,
              className: t,
              variant: s = "mono",
              color: d,
              address: b,
              network: m,
              fallback: l,
            } = e,
            k = ((e) => {
              let { id: a, name: n, symbol: r, address: t, network: s } = e;
              return a
                ? c(o, { id: a })
                : n
                ? c(o, { name: n })
                : r
                ? c(o, { symbol: r })
                : t && s
                ? c(o, { addresses: { [s]: t } })
                : void 0;
            })(n ? { symbol: n } : { address: b, network: m });
          return (0, i.jsx)(f, {
            type: "token",
            metadata: k,
            className: t,
            color: d,
            fallback: l,
            ref: a,
            size: r,
            variant: s,
          });
        });
      k.displayName = "TokenIcon";
      var u = (0, n.forwardRef)((e, a) => {
        let {
            name: n,
            id: o,
            chainId: t,
            caip2id: s,
            size: b,
            className: m,
            variant: l = "mono",
            color: k,
            fallback: u,
          } = e,
          h = ((e) => {
            let { id: a, name: n, chainId: o, caip2id: t } = e;
            return n
              ? c(r, { id: d(n), name: n, shortName: n })
              : o
              ? c(r, { chainId: o })
              : t
              ? c(r, { caip2id: t })
              : a
              ? c(r, { id: d(a), name: a })
              : void 0;
          })({ name: n, id: o, caip2id: s, chainId: t });
        return (0, i.jsx)(f, {
          type: "network",
          metadata: h,
          size: b,
          className: m,
          variant: l,
          color: k,
          ref: a,
          fallback: u,
        });
      });
      (u.displayName = "NetworkIcon"),
        ((0, n.forwardRef)((e, a) => {
          let {
              id: n,
              name: o,
              size: r,
              className: s,
              variant: b = "mono",
              color: m,
              fallback: l,
            } = e,
            k = ((e) => {
              let { id: a, name: n } = e;
              return a
                ? c(t, { id: d(a), name: a })
                : n
                ? c(t, { id: d(n), name: n })
                : void 0;
            })({ id: n, name: o });
          return (0, i.jsx)(f, {
            metadata: k,
            type: "wallet",
            size: r,
            className: s,
            variant: b,
            color: m,
            ref: a,
            fallback: l,
          });
        }).displayName = "WalletIcon"),
        ((0, n.forwardRef)((e, a) => {
          let n,
            {
              id: o,
              name: r,
              size: t,
              className: s,
              variant: d = "mono",
              color: c,
              fallback: m,
            } = e;
          return (
            r ? (n = b({ name: r })) : o && (n = b({ id: o })),
            (0, i.jsx)(f, {
              metadata: n,
              type: "exchange",
              size: t,
              className: s,
              variant: d,
              color: c,
              ref: a,
              fallback: m,
            })
          );
        }).displayName = "ExchangeIcon");
    },
    939028: (e) => {
      "use strict";
      var { m: a, e: n } = e;
      function o(e) {
        let a = {};
        for (let [n, o] of e.entries()) {
          let e = a[n];
          void 0 === e
            ? (a[n] = o)
            : Array.isArray(e)
            ? e.push(o)
            : (a[n] = [e, o]);
        }
        return a;
      }
      function r(e) {
        return "string" == typeof e
          ? e
          : ("number" != typeof e || isNaN(e)) && "boolean" != typeof e
          ? ""
          : String(e);
      }
      function t(e) {
        let a = new URLSearchParams();
        for (let [n, o] of Object.entries(e))
          if (Array.isArray(o)) for (let e of o) a.append(n, r(e));
          else a.set(n, r(o));
        return a;
      }
      function s(e) {
        for (
          var a = arguments.length, n = Array(a > 1 ? a - 1 : 0), o = 1;
          o < a;
          o++
        )
          n[o - 1] = arguments[o];
        for (let a of n) {
          for (let n of a.keys()) e.delete(n);
          for (let [n, o] of a.entries()) e.append(n, o);
        }
        return e;
      }
      Object.defineProperty(n, "__esModule", { value: !0 }),
        !(function (e, a) {
          for (var n in a)
            Object.defineProperty(e, n, { enumerable: !0, get: a[n] });
        })(n, {
          assign: function () {
            return s;
          },
          searchParamsToUrlQuery: function () {
            return o;
          },
          urlQueryToSearchParams: function () {
            return t;
          },
        });
    },
    353095: (e) => {
      "use strict";
      var { m: a, e: n } = e;
      {
        Object.defineProperty(n, "__esModule", { value: !0 }),
          !(function (e, a) {
            for (var n in a)
              Object.defineProperty(e, n, { enumerable: !0, get: a[n] });
          })(n, {
            formatUrl: function () {
              return o;
            },
            formatWithValidation: function () {
              return r;
            },
            urlObjectKeys: function () {
              return s;
            },
          });
        let a = e.r(713179)._(e.r(939028)),
          t = /https?|ftp|gopher|file/;
        function o(e) {
          let { auth: n, hostname: o } = e,
            r = e.protocol || "",
            s = e.pathname || "",
            i = e.hash || "",
            d = e.query || "",
            c = !1;
          (n = n ? encodeURIComponent(n).replace(/%3A/i, ":") + "@" : ""),
            e.host
              ? (c = n + e.host)
              : o &&
                ((c = n + (~o.indexOf(":") ? "[" + o + "]" : o)),
                e.port && (c += ":" + e.port)),
            d &&
              "object" == typeof d &&
              (d = String(a.urlQueryToSearchParams(d)));
          let b = e.search || (d && "?" + d) || "";
          return (
            r && !r.endsWith(":") && (r += ":"),
            e.slashes || ((!r || t.test(r)) && !1 !== c)
              ? ((c = "//" + (c || "")), s && "/" !== s[0] && (s = "/" + s))
              : c || (c = ""),
            i && "#" !== i[0] && (i = "#" + i),
            b && "?" !== b[0] && (b = "?" + b),
            "" +
              r +
              c +
              (s = s.replace(/[?#]/g, encodeURIComponent)) +
              (b = b.replace("#", "%23")) +
              i
          );
        }
        let s = [
          "auth",
          "hash",
          "host",
          "hostname",
          "href",
          "path",
          "pathname",
          "port",
          "protocol",
          "query",
          "search",
          "slashes",
        ];
        function r(e) {
          return o(e);
        }
      }
    },
    376069: (e) => {
      "use strict";
      var { m: a, e: n } = e;
      {
        Object.defineProperty(n, "__esModule", { value: !0 }),
          !(function (e, a) {
            for (var n in a)
              Object.defineProperty(e, n, { enumerable: !0, get: a[n] });
          })(n, {
            DecodeError: function () {
              return k;
            },
            MiddlewareNotFoundError: function () {
              return x;
            },
            MissingStaticPage: function () {
              return p;
            },
            NormalizeError: function () {
              return u;
            },
            PageNotFoundError: function () {
              return h;
            },
            SP: function () {
              return l;
            },
            ST: function () {
              return f;
            },
            WEB_VITALS: function () {
              return e;
            },
            execOnce: function () {
              return o;
            },
            getDisplayName: function () {
              return s;
            },
            getLocationOrigin: function () {
              return r;
            },
            getURL: function () {
              return t;
            },
            isAbsoluteUrl: function () {
              return m;
            },
            isResSent: function () {
              return i;
            },
            loadGetInitialProps: function () {
              return c;
            },
            normalizeRepeatedSlashes: function () {
              return d;
            },
            stringifyError: function () {
              return b;
            },
          });
        let e = ["CLS", "FCP", "FID", "INP", "LCP", "TTFB"];
        function o(e) {
          let a,
            n = !1;
          return function () {
            for (var o = arguments.length, r = Array(o), t = 0; t < o; t++)
              r[t] = arguments[t];
            return n || ((n = !0), (a = e(...r))), a;
          };
        }
        let a = /^[a-zA-Z][a-zA-Z\d+\-.]*?:/,
          m = (e) => a.test(e);
        function r() {
          let { protocol: e, hostname: a, port: n } = window.location;
          return e + "//" + a + (n ? ":" + n : "");
        }
        function t() {
          let { href: e } = window.location,
            a = r();
          return e.substring(a.length);
        }
        function s(e) {
          return "string" == typeof e
            ? e
            : e.displayName || e.name || "Unknown";
        }
        function i(e) {
          return e.finished || e.headersSent;
        }
        function d(e) {
          let a = e.split("?");
          return (
            a[0].replace(/\\/g, "/").replace(/\/\/+/g, "/") +
            (a[1] ? "?" + a.slice(1).join("?") : "")
          );
        }
        async function c(e, a) {
          let n = a.res || (a.ctx && a.ctx.res);
          if (!e.getInitialProps)
            return a.ctx && a.Component
              ? { pageProps: await c(a.Component, a.ctx) }
              : {};
          let o = await e.getInitialProps(a);
          if (n && i(n)) return o;
          if (!o)
            throw Object.defineProperty(
              Error(
                '"' +
                  s(e) +
                  '.getInitialProps()" should resolve to an object. But found "' +
                  o +
                  '" instead.'
              ),
              "__NEXT_ERROR_CODE",
              { value: "E394", enumerable: !1, configurable: !0 }
            );
          return o;
        }
        let l = "undefined" != typeof performance,
          f =
            l &&
            ["mark", "measure", "getEntriesByName"].every(
              (e) => "function" == typeof performance[e]
            );
        class k extends Error {}
        class u extends Error {}
        class h extends Error {
          constructor(e) {
            super(),
              (this.code = "ENOENT"),
              (this.name = "PageNotFoundError"),
              (this.message = "Cannot find module for page: " + e);
          }
        }
        class p extends Error {
          constructor(e, a) {
            super(),
              (this.message =
                "Failed to load static file for page: " + e + " " + a);
          }
        }
        class x extends Error {
          constructor() {
            super(),
              (this.code = "ENOENT"),
              (this.message = "Cannot find the middleware module");
          }
        }
        function b(e) {
          return JSON.stringify({ message: e.message, stack: e.stack });
        }
      }
    },
    939846: (e) => {
      "use strict";
      var { m: a, e: n } = e;
      {
        Object.defineProperty(n, "__esModule", { value: !0 }),
          Object.defineProperty(n, "isLocalURL", {
            enumerable: !0,
            get: function () {
              return o;
            },
          });
        let a = e.r(376069),
          r = e.r(197991);
        function o(e) {
          if (!(0, a.isAbsoluteUrl)(e)) return !0;
          try {
            let n = (0, a.getLocationOrigin)(),
              o = new URL(e, n);
            return o.origin === n && (0, r.hasBasePath)(o.pathname);
          } catch (e) {
            return !1;
          }
        }
      }
    },
    561104: (e) => {
      "use strict";
      var { m: a, e: n } = e;
      {
        Object.defineProperty(n, "__esModule", { value: !0 }),
          Object.defineProperty(n, "errorOnce", {
            enumerable: !0,
            get: function () {
              return e;
            },
          });
        let e = (e) => {};
      }
    },
    124419: (e) => {
      "use strict";
      var { m: a, e: n } = e;
      {
        Object.defineProperty(n, "__esModule", { value: !0 }),
          !(function (e, a) {
            for (var n in a)
              Object.defineProperty(e, n, { enumerable: !0, get: a[n] });
          })(n, {
            default: function () {
              return r;
            },
            useLinkStatus: function () {
              return x;
            },
          });
        let t = e.r(713179),
          s = e.r(150840),
          i = t._(e.r(756253)),
          d = e.r(353095),
          c = e.r(451836),
          b = e.r(965471),
          m = e.r(830908),
          l = e.r(376069),
          f = e.r(585662);
        e.r(716214);
        let k = e.r(320526),
          u = e.r(939846),
          h = e.r(747060);
        function o(e) {
          return "string" == typeof e ? e : (0, d.formatUrl)(e);
        }
        function r(e) {
          let a,
            n,
            r,
            [t, d] = (0, i.useOptimistic)(k.IDLE_LINK_STATUS),
            x = (0, i.useRef)(null),
            {
              href: g,
              as: C,
              children: v,
              prefetch: y = null,
              passHref: N,
              replace: T,
              shallow: R,
              scroll: E,
              onClick: A,
              onMouseEnter: w,
              onTouchStart: S,
              legacyBehavior: I = !1,
              onNavigate: O,
              ref: P,
              unstable_dynamicOnHover: D,
              ...L
            } = e;
          (a = v),
            I &&
              ("string" == typeof a || "number" == typeof a) &&
              (a = (0, s.jsx)("a", { children: a }));
          let M = i.default.useContext(c.AppRouterContext),
            B = !1 !== y,
            U =
              null === y || "auto" === y
                ? b.PrefetchKind.AUTO
                : b.PrefetchKind.FULL,
            { href: _, as: F } = i.default.useMemo(() => {
              let e = o(g);
              return { href: e, as: C ? o(C) : e };
            }, [g, C]);
          I && (n = i.default.Children.only(a));
          let H = I ? n && "object" == typeof n && n.ref : P,
            G = i.default.useCallback(
              (e) => (
                null !== M &&
                  (x.current = (0, k.mountLinkInstance)(e, _, M, U, B, d)),
                () => {
                  x.current &&
                    ((0, k.unmountLinkForCurrentNavigation)(x.current),
                    (x.current = null)),
                    (0, k.unmountPrefetchableInstance)(e);
                }
              ),
              [B, _, M, U, d]
            ),
            X = {
              ref: (0, m.useMergedRef)(G, H),
              onClick(e) {
                I || "function" != typeof A || A(e),
                  I &&
                    n.props &&
                    "function" == typeof n.props.onClick &&
                    n.props.onClick(e),
                  M &&
                    (e.defaultPrevented ||
                      (function (e, a, n, o, r, t, s) {
                        let { nodeName: d } = e.currentTarget;
                        if (
                          !(
                            ("A" === d.toUpperCase() &&
                              (function (e) {
                                let a = e.currentTarget.getAttribute("target");
                                return (
                                  (a && "_self" !== a) ||
                                  e.metaKey ||
                                  e.ctrlKey ||
                                  e.shiftKey ||
                                  e.altKey ||
                                  (e.nativeEvent && 2 === e.nativeEvent.which)
                                );
                              })(e)) ||
                            e.currentTarget.hasAttribute("download")
                          )
                        ) {
                          if (!(0, u.isLocalURL)(a)) {
                            r && (e.preventDefault(), location.replace(a));
                            return;
                          }
                          if ((e.preventDefault(), s)) {
                            let e = !1;
                            if (
                              (s({
                                preventDefault: () => {
                                  e = !0;
                                },
                              }),
                              e)
                            )
                              return;
                          }
                          i.default.startTransition(() => {
                            (0, h.dispatchNavigateAction)(
                              n || a,
                              r ? "replace" : "push",
                              null == t || t,
                              o.current
                            );
                          });
                        }
                      })(e, _, F, x, T, E, O));
              },
              onMouseEnter(e) {
                I || "function" != typeof w || w(e),
                  I &&
                    n.props &&
                    "function" == typeof n.props.onMouseEnter &&
                    n.props.onMouseEnter(e),
                  M &&
                    B &&
                    (0, k.onNavigationIntent)(e.currentTarget, !0 === D);
              },
              onTouchStart: function (e) {
                I || "function" != typeof S || S(e),
                  I &&
                    n.props &&
                    "function" == typeof n.props.onTouchStart &&
                    n.props.onTouchStart(e),
                  M &&
                    B &&
                    (0, k.onNavigationIntent)(e.currentTarget, !0 === D);
              },
            };
          return (
            (0, l.isAbsoluteUrl)(F)
              ? (X.href = F)
              : (I && !N && ("a" !== n.type || "href" in n.props)) ||
                (X.href = (0, f.addBasePath)(F)),
            (r = I
              ? i.default.cloneElement(n, X)
              : (0, s.jsx)("a", { ...L, ...X, children: a })),
            (0, s.jsx)(p.Provider, { value: t, children: r })
          );
        }
        e.r(561104);
        let p = (0, i.createContext)(k.IDLE_LINK_STATUS),
          x = () => (0, i.useContext)(p);
        ("function" == typeof n.default ||
          ("object" == typeof n.default && null !== n.default)) &&
          void 0 === n.default.__esModule &&
          (Object.defineProperty(n.default, "__esModule", { value: !0 }),
          Object.assign(n.default, n),
          (a.exports = n.default));
      }
    },
    998319: (e) => {
      "use strict";
      e.s({ enabledLanguages: () => a });
      let a = [
        {
          code: "en",
          name: "English",
          dir: "ltr",
          nativeName: "English",
          flagCode: "us",
        },
        {
          code: "zh",
          name: "Chinese",
          dir: "ltr",
          nativeName: "中文",
          flagCode: "cn",
        },
        {
          code: "de",
          name: "German",
          dir: "ltr",
          nativeName: "Deutsch",
          flagCode: "de",
        },
        {
          code: "nl",
          name: "Dutch",
          dir: "ltr",
          nativeName: "Nederlands",
          flagCode: "nl",
        },
        {
          code: "ja",
          name: "Japanese",
          dir: "ltr",
          nativeName: "日本語",
          flagCode: "jp",
        },
        {
          code: "ko",
          name: "Korean",
          dir: "ltr",
          nativeName: "한국어",
          flagCode: "kr",
        },
        {
          code: "fr",
          name: "French",
          dir: "ltr",
          nativeName: "Français",
          flagCode: "fr",
        },
        {
          code: "es",
          name: "Spanish",
          dir: "ltr",
          nativeName: "Español",
          flagCode: "es",
        },
        {
          code: "it",
          name: "Italian",
          dir: "ltr",
          nativeName: "Italiano",
          flagCode: "it",
        },
        {
          code: "pl",
          name: "Polish",
          dir: "ltr",
          nativeName: "Polski",
          flagCode: "pl",
        },
        {
          code: "ro",
          name: "Romanian",
          dir: "ltr",
          nativeName: "Română",
          flagCode: "ro",
        },
        {
          code: "vn",
          name: "Vietnamese",
          dir: "ltr",
          nativeName: "Tiếng Việt",
          flagCode: "vn",
        },
        {
          code: "sk",
          name: "Slovak",
          dir: "ltr",
          nativeName: "Slovenčina",
          flagCode: "sk",
        },
        {
          code: "pt",
          name: "Portuguese",
          dir: "ltr",
          nativeName: "Português",
          flagCode: "pt",
        },
        {
          code: "tr",
          name: "Turkish",
          dir: "ltr",
          nativeName: "Türkçe",
          flagCode: "tr",
        },
        {
          code: "th",
          name: "Thai",
          dir: "ltr",
          nativeName: "ไทย",
          flagCode: "th",
        },
      ];
    },
    671678: [
      (e) => {
        "use strict";
        e.s({ default: () => s }, 671678);
        var a = e.i(150840);
        e.s({ default: () => r }, 908997);
        var n = e.i(699677),
          o = e.i(124419);
        let r = (e) => {
          let { href: r, asAnchor: t = !1, ...s } = e,
            i = (0, n.useLocale)(),
            d = r;
          return (i && "en" !== i && (d = "/".concat(i).concat(r)), t)
            ? (0, a.jsx)("a", { href: d, ...s })
            : (0, a.jsx)(o.default, { href: d, ...s });
        };
        var t = e.i(79401);
        let s = (e) => {
          let {
              children: n,
              variant: o = "primary",
              size: s = "md",
              className: i,
              href: d,
              target: c,
              rel: b,
              as: m,
              ...l
            } = e,
            f = (0, t.cn)(
              "group relative text-center font-bold cursor-pointer uppercase transition duration-100",
              "font-yuanmo font-black tracking-[-0.56px]",
              "border-[3px] border-black shadow-[3px_3px_0_0_#000] rounded",
              {
                "bg-primary text-black": "primary" === o,
                "bg-white text-black": "white" === o,
                "bg-blue text-black": "blue" === o,
                "bg-[#d0d0d0] text-black opacity-30": "inactive" === o,
              },
              {
                "hover:brightness-[1.05] hover:translate-x-[1.5px] hover:translate-y-[1.5px]":
                  "inactive" !== o,
                "active:shadow-none active:translate-x-[4px] active:translate-y-[4px]":
                  "inactive" !== o,
              },
              { "px-4 py-2 text-sm": "md" === s },
              { "opacity/50 cursor-not-allowed": e.disabled },
              { block: "link" === m },
              i
            );
          return "link" === m
            ? (0, a.jsx)(r, {
                href: d || "#",
                target: c,
                rel: b,
                className: f,
                ...l,
                children: n,
              })
            : (0, a.jsx)("button", {
                type: "button",
                className: f,
                ...l,
                children: n,
              });
        };
      },
      [908997],
    ],
    4718: (e) => {
      "use strict";
      e.s({
        useClickAway: () => n,
        useDebounce: () => o,
        useWindowScroll: () => r,
        useWindowSize: () => t,
      });
      var a = e.i(756253);
      function n(e) {
        let n = a.useRef(null),
          o = a.useRef(e);
        return (
          a.useLayoutEffect(() => {
            o.current = e;
          }),
          a.useEffect(() => {
            let e = (e) => {
              let a = n.current;
              a && !a.contains(e.target) && o.current(e);
            };
            return (
              document.addEventListener("mousedown", e),
              document.addEventListener("touchstart", e),
              () => {
                document.removeEventListener("mousedown", e),
                  document.removeEventListener("touchstart", e);
              }
            );
          }, []),
          n
        );
      }
      function o(e, n) {
        let [o, r] = a.useState(e);
        return (
          a.useEffect(() => {
            let a = setTimeout(() => {
              r(e);
            }, n);
            return () => {
              clearTimeout(a);
            };
          }, [e, n]),
          o
        );
      }
      function r() {
        let [e, n] = a.useState({ x: null, y: null }),
          o = a.useCallback(function () {
            for (var e = arguments.length, a = Array(e), n = 0; n < e; n++)
              a[n] = arguments[n];
            if ("object" == typeof a[0]) window.scrollTo(a[0]);
            else if ("number" == typeof a[0] && "number" == typeof a[1])
              window.scrollTo(a[0], a[1]);
            else
              throw Error(
                "Invalid arguments passed to scrollTo. See here for more info. https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollTo"
              );
          }, []);
        return (
          a.useLayoutEffect(() => {
            let e = () => {
              n({ x: window.scrollX, y: window.scrollY });
            };
            return (
              e(),
              window.addEventListener("scroll", e),
              () => {
                window.removeEventListener("scroll", e);
              }
            );
          }, []),
          [e, o]
        );
      }
      function t() {
        let [e, n] = a.useState({ width: null, height: null });
        return (
          a.useLayoutEffect(() => {
            let e = () => {
              n({ width: window.innerWidth, height: window.innerHeight });
            };
            return (
              e(),
              window.addEventListener("resize", e),
              () => {
                window.removeEventListener("resize", e);
              }
            );
          }, []),
          e
        );
      }
    },
  },
]);

//# sourceMappingURL=3c3f578c2c64aa69.js.map
